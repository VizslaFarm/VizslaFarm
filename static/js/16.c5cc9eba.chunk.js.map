{"version":3,"sources":["views/Profile/EmojiPicker.js","views/Profile/ReactionPicker.js","views/Profile/StyledComponents.tsx","views/Profile/ChatAppStyles.ts","views/Profile/index.tsx"],"names":["styles","emojiPicker","marginTop","display","flexDirection","alignItems","padding","border","borderRadius","backgroundColor","color","toggleButton","fontSize","margin","cursor","pickerContainer","flexWrap","justifyContent","gap","emojiButton","background","width","height","textAlign","imageButton","EmojiPicker","setNewMessage","newMessage","handleSendImage","useState","isEmojiMode","setIsEmojiMode","style","onClick","map","emoji","sticker","src","alt","reactionPicker","maxWidth","reactionButton","ReactionPicker","onReactionSelect","reaction","lightningAnimation","keyframes","runningLightAnimation","hoverEffect","activeEffect","borderGlow","ChatBox","styled","div","Input","input","error","theme","colors","failure","text","align","primary","isActive","Container","Title","Text","Box","container","position","overflow","deleteButton","marginLeft","languageButton","fileButton","chatBox","overflowY","marginBottom","messageContainer","emojiFileContainer","avatar","marginRight","message","flex","inputContainer","searchButton","sendButton","sentImage","maxHeight","fileInput","previewContainer","previewText","previewImage","topListBox","topList","listStyle","topListImage","inputRow","fileContainer","boxShadow","timestamp","paginationButton","lastCollectedInfo","collectButton","supabase","createClient","process","Profile","account","useWeb3React","messages","setMessages","cooldown","setCooldown","chatBoxRef","useRef","useLocation","language","setLanguage","handleLanguageChange","lang","currentPage","names","setNames","userNumbers","setUserNumbers","isSearching","searchQuery","setSearchQuery","emojiPickerVisible","setEmojiPickerVisible","image","setImage","selectedMessageId","setSelectedMessageId","enlargedImage","setEnlargedImage","contract","setContract","contract2","setContract2","setGiftContract","setTokenContract","languageBoxVisible","setLanguageBoxVisible","useTranslation","t","displayedMessages","setDisplayedMessages","contractAddress","contractAddress2","giftAddress","tokenContractAddress","fileInputRef","handleImageClick","handleModalClose","useEffect","a","provider","ethers","providers","JsonRpcProvider","signer","getSigner","Contract","contractABI","NumberPurchaseABI","GiftABI","TokenABI","initializeContracts","handleScroll","e","current","scrollTop","Math","min","length","currentScrollHeight","scrollHeight","oldestTimestamp","from","select","order","ascending","lt","limit","data","console","prevMessages","reverse","slice","prev","setTimeout","newScrollHeight","handleDeleteMessage","msg","window","confirm","delete","eq","id","filter","m","toggleReactionsVisibility","messageId","prevId","fetchMessages","channel","on","event","schema","table","payload","new","subscribe","removeChannel","userList","useMemo","usersFromMessages","sender","usersFromTopList","Array","Set","newNames","newNumbers","Promise","all","user","single","existingData","fetchError","code","name","number","getName","userPurchases","userPurchase","userNumber","toNumber","insert","log","fetchUserData","timer","clearTimeout","handleAddReaction","reactions","update","updateError","handleSend","messageText","trim","alert","getSenderName","substring","getSenderImage","formattedNumber","toString","padStart","formatTimestamp","date","Date","timeString","toLocaleTimeString","navigator","hour","minute","second","hour12","dateString","toLocaleDateString","month","day","startIndex","endIndex","filteredMessages","ceil","fontWeight","top","right","zIndex","onKeyDown","key","role","tabIndex","to","textDecoration","ref","onScroll","objectFit","Object","entries","values","reduce","acc","count","keys","toLowerCase","type","value","onChange","target","placeholder","disabled","click","variant","ml","accept","files","file","size","reader","FileReader","onload","result","readAsDataURL","imageSrc","left","bottom","ConnectWalletButton"],"mappings":"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","file":"static/js/16.c5cc9eba.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@pancakeswap/uikit';\r\n\r\nconst EmojiPicker = ({ setNewMessage, newMessage, handleSendImage }) => {\r\n  const [isEmojiMode, setIsEmojiMode] = useState(true);  // Toggle between Emoji and Sticker\r\n\r\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '🎉', '🎁', '😜', '🤔', '😇', '🙃', '😅', '🤣', '🤩', '😡', '🥳', '🤯', '😱', '🤗', '😏', '😴', '🤤', '😷', '🤒', '🤕', '🤮', '🤑', '😈', '👻', '💩', '😺', '👀', '💪', '🙏', '👏', '🙌', '👐', '✌️', '👍', '👎', '👊', '🤟'];\r\n  const stickers = [\r\n    'images/pixel/L/10.png',\r\n    'images/pixel/L/28.png',\r\n    'images/pixel/L/0.png',\r\n    'images/pixel/L/1.png',\r\n    'images/pixel/L/18.png',\r\n    'images/pixel/L/15.png',\r\n    'images/pixel/L/19.png',\r\n    'images/pixel/L/21.png',\r\n    'images/pixel/L/7.png',\r\n    'images/pixel/L/11.png',\r\n    'images/pixel/L/8.png',\r\n    'images/pixel/L/29.png',\r\n    'images/pixel/L/30.png',\r\n    'images/pixel/L/31.png',\r\n    'images/pixel/L/20.png',\r\n    'images/pixel/L/6.png',\r\n    'images/pixel/L/9.png',\r\n    'images/pixel/L/32.png',\r\n    'images/pixel/L/33.png',\r\n    'images/pixel/L/34.png',\r\n    'images/pixel/L/27.png',\r\n    'images/pixel/L/2.png',\r\n    'images/pixel/L/3.png',\r\n    'images/pixel/L/4.png',\r\n    'images/pixel/L/5.png',\r\n    'images/pixel/L/16.png',\r\n    'images/pixel/L/24.png',\r\n    'images/pixel/L/25.png',\r\n    'images/pixel/L/22.png',\r\n    'images/pixel/L/14.png',\r\n    'images/pixel/L/23.png',\r\n    'images/pixel/L/26.png',\r\n    'images/pixel/L/12.png',\r\n    'images/pixel/L/13.png',\r\n    'images/pixel/L/17.png',\r\n  ];\r\n\r\n  const handleToggleMode = () => {\r\n    setIsEmojiMode(!isEmojiMode);  // Switch between Emoji and Sticker mode\r\n  };\r\n\r\n  return (\r\n    <div style={styles.emojiPicker}>\r\n      {/* Toggle between Emoji and Sticker */}\r\n      <Button onClick={handleToggleMode} style={styles.toggleButton}>\r\n        {isEmojiMode ? 'Switch to Stickers' : 'Switch to Emojis'}\r\n      </Button>\r\n\r\n      <div style={styles.pickerContainer}>\r\n        {isEmojiMode ? (\r\n          emojis.map((emoji) => (\r\n            <Button\r\n              key={emoji}\r\n              onClick={() => setNewMessage(`${newMessage}${emoji}`)}\r\n              style={styles.emojiButton}\r\n            >\r\n              {emoji}\r\n            </Button>\r\n          ))\r\n        ) : (\r\n          stickers.map((sticker) => (\r\n            <Button\r\n              key={sticker}\r\n              onClick={() => handleSendImage(sticker)}  // Call handleSendImage with the selected sticker\r\n              style={styles.imageButton}\r\n            >\r\n              <img src={sticker} alt=\"sticker\" style={{ width: '55px', height: '55px' }} />\r\n            </Button>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  emojiPicker: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  toggleButton: {\r\n    fontSize: '14px',\r\n    margin: '10px 0',\r\n    padding: '5px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#5a9f98',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    color: '#fff',\r\n  },\r\n  pickerContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    gap: '5px',  // Space between emojis and stickers\r\n  },\r\n  emojiButton: {\r\n    fontSize: '24px',\r\n    cursor: 'pointer',\r\n    background: 'none',\r\n    border: 'none',\r\n    padding: '10px',\r\n    display: 'inline-block',\r\n    width: '45px',  // Uniform width\r\n    height: '45px',\r\n    textAlign: 'center',\r\n  },\r\n  imageButton: {\r\n    background: 'none',\r\n    border: 'none',\r\n    padding: '0',\r\n    display: 'inline-block',\r\n    width: '55px',\r\n    height: '55px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import React from 'react';\r\nimport { Button } from '@pancakeswap/uikit';\r\n\r\nconst ReactionPicker = ({ onReactionSelect }) => {\r\n    const reactions = [\r\n        '😊', '😂', '❤️', '👍', '🎉', '😢', '🤔', '🔥', '👏', '😎', \r\n        '💯', '🙏', '🥳', '😍', '😭', '🤯', '😡', '👀', '💪', '👌', \r\n        '🙌', '😘', '💔', '😴', '😅', '🤗', '🌟', '🎈', '🤞', '🎂', \r\n        '🤑', '😆', '😋', '🤩', '🥰', '🖤', '😇', '😜', '😱', '🌹', \r\n        '😝', '😏', '👋', '😤', '👑', '✌️', '🥺', '🤤', '😃', '🤝'\r\n      ];      \r\n  return (\r\n    <div style={styles.reactionPicker}>\r\n      {reactions.map((reaction) => (\r\n        <Button\r\n          key={reaction}\r\n          onClick={() => onReactionSelect(reaction)}\r\n          style={styles.reactionButton}\r\n        >\r\n          {reaction}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  reactionPicker: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    maxWidth: '200px',\r\n    margin: '10px auto',\r\n  },\r\n  reactionButton: {\r\n    fontSize: '24px',\r\n    cursor: 'pointer',\r\n    background: 'none',\r\n    border: 'none',\r\n    padding: '8px',\r\n    display: 'inline-block',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nexport default ReactionPicker;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\n/// Animáció definiálása\r\nconst lightningAnimation = keyframes`\r\n0% {\r\n  box-shadow: 0 0 1px #62d5a3, 0 0 2px #62d5a3, 0 0 3px #62d5a3, 0 0 4px #62d5a3;\r\n}\r\n25% {\r\n  box-shadow: 0 0 2px #62d5a3, 0 0 3px #62d5a3, 0 0 4px #62d5a3, 0 0 5px #62d5a3;\r\n}\r\n50% {\r\n  box-shadow: 0 0 1px #62d5a3, 0 0 1.5px #62d5a3, 0 0 2,5px #62d5a3, 0 0 3.5px #62d5a3;\r\n}\r\n75% {\r\n  box-shadow: 0 0 3px #62d5a3, 0 0 4px #62d5a3, 0 0 5px #62d5a3, 0 0 6px #62d5a3;\r\n}\r\n100% {\r\n  box-shadow: 0 0 0.5px #62d5a3, 0 0 1px #62d5a3, 0 0 1.5px #62d5a3, 0 0 2px #62d5a3;\r\n}\r\n`;\r\n\r\nconst runningLightAnimation = keyframes`\r\n  0% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n  50% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n  100% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n`;\r\nconst hoverEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(255, 255, 255, 0.7);\r\n  }\r\n`;\r\nconst activeEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(83, 178, 140, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(83, 178, 140, 0.7);\r\n  }\r\n`;\r\nconst borderGlow = keyframes`\r\n  0% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n  50% {\r\n    border-color: #4abf88;\r\n    box-shadow: 0 0 15px #4abf88;\r\n  }\r\n  100% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n`;\r\nconst ChatBox = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n    margin-top: 20px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  flex-direction: column-reverse;\r\n  animation: ${borderGlow} 2s infinite;\r\n`;\r\nconst Input = styled.input<{ error?: boolean; fontSize?: string; align?: string; isActive?: boolean }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  max-width: 400px\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: ${({ fontSize }) => fontSize || '16px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  transition: all 0.3s ease;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n\r\n  &:hover {\r\n    animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n  }\r\n\r\n  &:focus {\r\n    animation: ${activeEffect} 0.5s forwards;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 100%;\r\n   border-radius: 15px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n  margin-bottom: 300px;\r\n  color: #fff;\r\n`;\r\nconst Title = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 55px;\r\n  font-weight: bold; /* Make the text thicker */\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst Title2 = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 28px;\r\n  font-weight: bold; /* Make the text thicker */\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst Box2 = styled(Box)`\r\n    animation: ${lightningAnimation} 0.5s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst TopListTitle = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n    margin-top: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n  font-size: 28px;\r\n  margin-bottom: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\n\r\nexport { runningLightAnimation, hoverEffect,activeEffect,borderGlow,ChatBox,Input,Container,Title,TopListTitle,Title2, Box2};\r\n","// ChatAppStyles.ts\r\nimport { CSSProperties } from 'react';\r\n\r\nconst styles: { [key: string]: CSSProperties } = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxWidth: '1200px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '15px',\r\n    color: '#e5e5e5',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  deleteButton: {\r\n    marginLeft: '10px',\r\n    background: 'transparent',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n    color: '#ff0000', // Red color for the delete button\r\n  },  \r\n  languageButton: {\r\n    background: 'transparent',\r\n    border: 'none',\r\n    padding: '0',\r\n    cursor: 'pointer'\r\n  },  \r\n  fileButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontSize: '20px',\r\n  },\r\n  chatBox: {\r\n    width: '100%',\r\n    height: '300px',\r\n    overflowY: 'scroll',\r\n    marginBottom: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  messageContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '5px 0',\r\n  },\r\n  emojiFileContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  avatar: {\r\n    width: '45px',\r\n    height: '45px',\r\n    marginRight: '10px',\r\n    borderRadius: '25%',\r\n  },\r\n  message: {\r\n    flex: 1,\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    borderRadius: '4px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  searchButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  emojiButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sendButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sentImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    marginTop: '10px',\r\n    borderRadius: '8px',\r\n  },\r\n  fileInput: {\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    backgroundColor: '#000',\r\n    borderRadius: '4px',\r\n    padding: '10px',\r\n    border: 'none',\r\n  },\r\n  previewContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  previewText: {\r\n    marginRight: '10px',\r\n    color: '#fff',\r\n  },\r\n  previewImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    borderRadius: '8px',\r\n  },\r\n  topListBox: {\r\n    width: '100%',\r\n    display: 'block',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    marginTop: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  topList: {\r\n    listStyle: 'none',\r\n    display: 'block',\r\n    padding: '0',\r\n    margin: '10px 0',\r\n    width: '100%',\r\n  },\r\n  topListImage: {\r\n    width: '40px',\r\n    height: '40px',\r\n    borderRadius: '25%',\r\n    marginRight: '10px',\r\n  },\r\n  inputRow: {\r\n    display: 'block',\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n  },\r\n  fileContainer: {\r\n    alignItems: 'left',\r\n    width: '100%',\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  timestamp: {\r\n    display: 'block',\r\n    fontSize: '0.8em',\r\n    color: '#aaa',\r\n    marginTop: '5px',\r\n  },\r\n  paginationButton: {\r\n    margin: '5px',\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n  },\r\n  lastCollectedInfo: {\r\n    fontSize: '8px',\r\n    textAlign: 'right',\r\n    color: '#fff',\r\n  },\r\n  collectButton: {\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core/core/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { ButtonMenu, ButtonMenuItem, Button, Flex, Text, Box} from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { ethers } from 'ethers'; \nimport { createClient } from '@supabase/supabase-js';\nimport EmojiPicker from './EmojiPicker';\nimport ReactionPicker from './ReactionPicker';\nimport { ChatBox, Input, Container, Title,Title2 , Box2} from './StyledComponents';\nimport NumberPurchaseABI from './NumberPurchaseABI.json';\nimport contractABI from './contractABI.json';\nimport GiftABI from './GiftABI.json';\nimport TokenABI from './TokenABI.json'; \nimport styles from './ChatAppStyles';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst Profile: React.FC = () => {\n  const { account } = useWeb3React()\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(''); \n  const [cooldown, setCooldown] = useState(0);\n  const chatBoxRef = useRef(null);\n  const location = useLocation();\n  const [topList, setTopList] = useState([]);\n  const [language, setLanguage] = useState('hu'); // Alapértelmezett nyelv: magyar\n  const handleLanguageChange = (lang) => {\n    setLanguage(lang);\n  };\n  const [currentPage, setCurrentPage] = useState(1);\n  const [names, setNames] = useState({});\n  const [userNumbers, setUserNumbers] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n  const [image, setImage] = useState(null);\n  const [selectedMessageId, setSelectedMessageId] = useState(null); // Kiválasztott üzenet ID\n  const [giftBalance, setGiftBalance] = useState(0);\n  const [enlargedImage, setEnlargedImage] = useState(null);  // Kép nagyítás állapota\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n  const [contract2, setContract2] = useState<ethers.Contract | null>(null);\n  const [giftContract, setGiftContract] = useState<ethers.Contract | null>(null);\n  const [tokenContract, setTokenContract] = useState<ethers.Contract | null>(null);\n  const [languageBoxVisible, setLanguageBoxVisible] = useState(false);\n  const itemsPerPage = 25;\n  const { t } = useTranslation();\n  const [displayedMessages, setDisplayedMessages] = useState(20);\n  const contractAddress = '0x674e3eDc898Aa4b486Bd2E5aa2D1C8653677F471';  \n  const contractAddress2 = '0xBE8C7E554C89e064ED7229952036c3678cd10180';\n  const giftAddress = '0x051A79ECC8736b448C1162162F3BB87a6a41F7d4';  \n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\n  const fileInputRef = useRef(null);\n\n  const handleImageClick = (src) => {\n    setEnlargedImage(src);  // Kép forrásának tárolása a modalhoz\n  };\n  \n  const handleModalClose = () => {\n    setEnlargedImage(null);  // Modal bezárása\n  };\n  \n  const handleSendImage = (imageSrc) => {\n    setImage(imageSrc); // Set the selected image for sending\n  };\n\n  useEffect(() => {\n    const initializeContracts = async () => {\n      const provider = new ethers.providers.JsonRpcProvider('https://bsc-dataseed1.binance.org');\n      \n      // Felhasználói signer megszerzése a Web3React-ből\n      const signer = provider.getSigner(account);  // Felhasználói accountot használjuk a signer létrehozásához\n      \n      // Contractok inicializálása a signer-rel\n      setContract(new ethers.Contract(contractAddress, contractABI, provider));\n      setContract2(new ethers.Contract(contractAddress2, NumberPurchaseABI, provider));\n      setGiftContract(new ethers.Contract(giftAddress, GiftABI, signer));\n      setTokenContract(new ethers.Contract(tokenContractAddress, TokenABI, signer));\n    };\n  \n    initializeContracts();\n  }, [account]); // account változás esetén újrainicializálja a contractokat\n\n  useEffect(() => {\n    const initializeContracts = async () => {\n        const provider = new ethers.providers.JsonRpcProvider('https://bsc-dataseed1.binance.org');\n\n        // Contractok inicializálása a provider-rel\n        setContract(new ethers.Contract(contractAddress, contractABI, provider));\n        setContract2(new ethers.Contract(contractAddress2, NumberPurchaseABI, provider));\n        setGiftContract(new ethers.Contract(giftAddress, GiftABI, provider));\n        setTokenContract(new ethers.Contract(tokenContractAddress, TokenABI, provider));\n    };\n    \n    initializeContracts();\n}, []);\n\n// Külön MetaMask-alapú inicializáció a collectTokens függvényhez\nconst initializeMetaMaskContract = async () => {\n  if (window.ethereum && account) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum); // MetaMask provider\n    const signer = provider.getSigner(); // Signer megszerzése a MetaMask-ból\n\n    return new ethers.Contract(giftAddress, GiftABI, signer); // Contract signer-rel\n  } \n\n  console.log('MetaMask is not available');\n  return null;\n};\n\n  const handleScroll = async (e) => {\n    const chatBox = chatBoxRef.current;\n  \n    // Ha már betöltöttük a 100 üzenetet, ne töltsön be többet\n    if (displayedMessages >= 100) {\n      return;\n    }\n  \n    // Check if the user has scrolled to the top\n    if (chatBox.scrollTop === 0 && displayedMessages < Math.min(100, messages.length)) {\n      const currentScrollHeight = chatBox.scrollHeight;\n      const oldestTimestamp = messages[0]?.timestamp;\n  \n      const { data, error } = await supabase\n        .from('messages')\n        .select('*')\n        .order('timestamp', { ascending: false })\n        .lt('timestamp', oldestTimestamp)\n        .limit(20); // Load 20 more messages\n  \n      if (error) {\n        console.error('Error fetching older messages:', error);\n      } else {\n        setMessages((prevMessages) => [...data.reverse(), ...prevMessages].slice(-100)); // Keep only the latest 60 messages\n        setDisplayedMessages((prev) => Math.min(prev + 20, Math.min(100, messages.length)));\n  \n        setTimeout(() => {\n          const newScrollHeight = chatBox.scrollHeight;\n          chatBox.scrollTop = newScrollHeight - currentScrollHeight;\n        }, 0);\n      }\n    }\n  };  \n   \n  \n  const handleDeleteMessage = async (msg) => {\n    if (!window.confirm('Are you sure you want to delete this message?')) {\n      return;\n    }\n  \n    try {\n      const { error } = await supabase\n        .from('messages')\n        .delete()\n        .eq('id', msg.id) // Feltételezve, hogy az üzenetnek van egyedi azonosítója\n        .eq('sender', account); // Csak a saját üzenetedet tudod törölni\n  \n      if (error) {\n        console.error('Error deleting message:', error.message);\n        return;\n      }\n  \n      // Töröljük az üzenetet a helyi állapotból is\n      setMessages(prevMessages => prevMessages.filter(m => m.id !== msg.id));\n    } catch (error) {\n      console.error('Unexpected error deleting message:', error);\n    }\n  };\n  const toggleReactionsVisibility = (messageId) => {\n    // Toggle the message ID; if the same message is clicked, it will hide reactions\n    setSelectedMessageId((prevId) => (prevId === messageId ? null : messageId));\n  };\n\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [account, messages,language]); \n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data, error } = await supabase\n        .from('messages')\n        .select('*, reactions')\n        .order('timestamp', { ascending: false })\n        .limit(100); // Limit the initial fetch to 100 messages\n    \n      if (error) {\n        console.error('Error fetching messages:', error);\n      } else {\n        setMessages(data.reverse().slice(-100));  // Limit to 100 messages\n      }\n    };\n  \n    fetchMessages();\n  }, []);\n  \n  \n  useEffect(() => {\n    const channel = supabase\n      .channel('public:messages')\n      .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, payload => {\n        const newMessage = payload.new;\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, newMessage];\n          return updatedMessages;\n        });\n      })\n      .subscribe();\n    \n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n  \n  const userList = useMemo(() => {\n    const usersFromMessages = messages.map(msg => msg.sender);\n    const usersFromTopList = topList.map(([user]) => user);\n    return Array.from(new Set([...usersFromMessages, ...usersFromTopList])); // Egyedi felhasználók összegyűjtése\n  }, [messages, topList]);\n\n  useEffect(() => {\n    if (!account || userList.length === 0) return;\n    \n    const fetchUserData = async () => {\n      const newNames = {};\n      const newNumbers = {};\n    \n      await Promise.all(userList.map(async (user) => {\n        try {\n          const { data: existingData, error: fetchError } = await supabase\n            .from('user_data')\n            .select('*')\n            .eq('account', user)\n            .single();\n    \n          if (fetchError && fetchError.code !== 'PGRST116') {\n            console.error(`Error fetching data from Supabase for ${user}:`, fetchError);\n            return;\n          }\n    \n          if (existingData) {\n            newNames[user] = existingData.name;\n            newNumbers[user] = existingData.number;\n          } else {\n            const name = await contract.getName(user);\n            const userPurchase = await contract2.userPurchases(user);\n            const userNumber = userPurchase.number.toNumber();\n    \n            newNames[user] = name;\n            newNumbers[user] = userNumber;\n    \n            const { error } = await supabase.from('user_data').insert([{ account: user, name, number: userNumber }]);\n            if (error) {\n              console.error(`Error inserting data to Supabase for ${user}:`, error);\n            } else {\n              console.log(`User data inserted to Supabase for ${user} successfully`);\n            }\n          }\n        } catch (error) {\n          console.error(`Error fetching data for ${user}:`, error);\n        }\n      }));\n    \n      setNames(newNames);\n      setUserNumbers(newNumbers);\n    };\n    \n    fetchUserData();\n  }, [account, userList, contract, contract2]);\n    \n  useEffect(() => {\n    if (cooldown > 0) {\n      const timer = setTimeout(() => setCooldown(cooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    return undefined; // Hozzáadunk egy visszatérési értéket akkor is, ha cooldown <= 0\n  }, [cooldown]);\n  \n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  \n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n    \n      if (file.size > 1048576) {\n        alert('The file size must be less than 1 MB.');\n        return;\n      }\n    \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAddReaction = async (messageId, emoji) => {\n    const { data, error } = await supabase\n      .from('messages')\n      .select('reactions')\n      .eq('id', messageId)\n      .single();\n  \n    if (error) {\n      console.error('Error fetching reactions:', error);\n      return;\n    }\n  \n    const reactions = data.reactions || {};\n  \n    // Ellenőrizzük, hogy a felhasználó ugyanazt az emojit választja-e (ez esetben töröljük a reakciót)\n    if (reactions[account] === emoji) {\n      delete reactions[account]; // Reakció törlése\n    } else {\n      reactions[account] = emoji; // Reakció hozzáadása vagy frissítése\n    }\n  \n    const { error: updateError } = await supabase\n      .from('messages')\n      .update({ reactions })\n      .eq('id', messageId);\n  \n    if (updateError) {\n      console.error('Error updating reactions:', updateError);\n    } else {\n      // Helyi állapot frissítése az új reakciókkal\n      setMessages(prevMessages =>\n        prevMessages.map(msg =>\n          msg.id === messageId ? { ...msg, reactions } : msg\n        )\n      );\n    }\n  };\n  \n  \n  const handleSend = async () => {\n    if (cooldown > 0 || !account) return;  // Ensure there is a logged-in user\n  \n    // If there's no text but there is an image, add a zero-width space\n    const messageText = newMessage.trim() || (image ? '\\u200B' : '');\n  \n    if (!messageText && !image) return;  // Ensure that we have either text or an image\n   \n    const message = {\n      text: messageText,  // Use the modified messageText\n      sender: account,\n      image,\n      language, // Hozzáadjuk a nyelvet az üzenethez\n    };\n  \n    const { data, error } = await supabase\n      .from('messages')\n      .insert([message]);\n  \n    if (error) {\n      console.error('Error sending message:', error);\n      alert(`Failed to send message: ${error.message}`);\n    } else {\n      setNewMessage('');\n      setImage(null);\n      setCooldown(20);\n    }\n  };\n\n  const getSenderName = (sender) => {\n    if (!sender) {\n      return 'Unknown';\n    }\n    \n    if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n      return 'Admin';\n    }\n    \n    return names[sender] || `${sender.substring(0, 5)}...${sender.substring(sender.length - 5)}`;\n  };\n  \n  const getSenderStyle = (sender) => {\n    // Admin és egyéb meghatározott címek színei\n    if (\n      sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1' || // Admin cím\n      sender === '0xde6c77ac73661e5df07b6ed464d21c41d3d6d94b'      // Új arany cím\n    ) {\n      return { color: 'gold' };\n    }\n  \n    if (sender === '0x024887Ddd168caDf24e582F85bf952b0dF47E815') {\n      return { color: '#4169e1' }; // Királykék szín\n    }\n  \n    if (sender === '0x533E4503572A01FEED9ABa72761555D7f62998c3') {\n      return { color: '#BFFF00' }; // Uranium szín (fluoreszkáló zöld)\n    }\n  \n    // Minden más felhasználónak ezüst szín\n    return { color: '#E5E4E2' };\n  };\n  \n\n  const getSenderImage = (sender) => {\n    const userNumber = userNumbers[sender];\n    \n    if (userNumber) {\n      let formattedNumber;\n  \n      if (userNumber < 10) {\n        // Kétjegyűre formázzuk, ha a szám kisebb, mint 10\n        formattedNumber = userNumber.toString().padStart(2, '0');\n      } else {\n        // Háromjegyűre formázzuk, ha a szám 10 vagy nagyobb\n        formattedNumber = userNumber.toString().padStart(3, '0');\n      }\n  \n      return `images/pixel/${formattedNumber}.jpg`;\n    }\n  \n    return 'images/pixel/200.png';  // Alapértelmezett kép, ha nincs szám\n  };\n  \n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp); // Eredeti UTC idő\n    const timeString = date.toLocaleTimeString(navigator.language, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false,\n    });\n    const dateString = date.toLocaleDateString(navigator.language, {\n      month: 'long',     // Hónap neve\n      day: 'numeric',    // Nap\n    });\n    return `${timeString}, ${dateString}`;\n  };\n  \n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentItems = topList.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(topList.length / itemsPerPage);\n  \n\n  const filteredMessages = messages.filter((msg) => msg.language === language);\n\n  return (\n    <>\n   {account ? (\n    <Container>\n     \n                    <Flex\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      style={{\n        padding: '10px',\n        backgroundColor: '#000',\n        borderRadius: '10px', // Border radius hozzáadása\n      }}\n    >\n      {/* VizslaChat cím középre igazítva a bal oldalon */}\n      <Title style={{ fontSize: '28px', fontWeight: 'bold', color: '#fff', textAlign: 'center' }}>\n        VizslaChat\n      </Title>\n\n      {/* Nyelvválasztó és privát chat/setting gombok egy sorban */}\n      <Flex alignItems=\"center\">\n        {/* Nyelvválasztó nyitható box, csak zászlókkal és lefelé mutató nyíl */}\n        <div style={{ position: 'relative', marginRight: '10px' }}>\n          <Button\n            onClick={() => setLanguageBoxVisible(!languageBoxVisible)}\n            style={{\n              backgroundColor: 'transparent',\n              color: '#fff',\n              border: '1px solid #fff',\n              padding: '5px 10px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <img\n              src={language === 'hu' ? 'images/pixel/777.png' : 'images/pixel/776.png'}\n              alt={language === 'hu' ? 'Hungarian Flag' : 'English Flag'}\n              style={{ width: '20px' }}\n            />\n            {/* Lefelé mutató nyíl */}\n            <span style={{ marginLeft: '8px' }}>{languageBoxVisible ? '▲' : '▼'}</span>\n          </Button>\n\n          {languageBoxVisible && (\n            <div\n              style={{\n                position: 'absolute',\n                top: '100%',\n                right: 0,\n                backgroundColor: '#000', // Fekete belső\n                padding: '10px',\n                border: '1px solid #ddd',\n                borderRadius: '5px',\n                zIndex: 1000,\n              }}\n            >\n              {/* Csak a másik nyelv jelenik meg */}\n              {language === 'hu' ? (\n                <div\n                  style={{ cursor: 'pointer', color: '#fff' }}\n                  onClick={() => handleLanguageChange('en')}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                      handleLanguageChange('en');\n                    }\n                  }}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <img\n                    src=\"images/pixel/776.png\"\n                    alt=\"English Flag\"\n                    style={{ width: '20px', marginRight: '5px' }}\n                  />\n                </div>\n              ) : (\n                <div\n                  style={{ cursor: 'pointer', color: '#fff' }}\n                  onClick={() => handleLanguageChange('hu')}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                      handleLanguageChange('hu');\n                    }\n                  }}\n                  role=\"button\"\n                  tabIndex={0}\n                >\n                  <img\n                    src=\"images/pixel/777.png\"\n                    alt=\"Hungarian Flag\"\n                    style={{ width: '20px', marginRight: '5px' }}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n\n        {/* Private Chat gomb (átnevezve PrivateChat-re) */}\n        <Link to=\"/privatechat\" style={{ textDecoration: 'none' }}>\n          <Button\n            style={{ \n              backgroundColor: 'transparent',\n              color: '#fff',\n              border: '1px solid gold', \n              padding: '5px 10px',\n              marginRight: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            PrivateChat\n          </Button>\n        </Link>\n\n        {/* Settings felirat (fogaskerék helyett) */}\n        <Link to=\"/settings\" style={{ textDecoration: 'none' }}>\n          <Button\n            style={{\n              backgroundColor: 'transparent',\n              color: 'gold',\n              border: 'none',\n              padding: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            ⚙️\n          </Button>\n        </Link>\n      </Flex>\n    </Flex>\n\n        <ChatBox ref={chatBoxRef} onScroll={handleScroll}>\n  {filteredMessages.slice(-displayedMessages).map((msg) => (\n    \n    <div\n    key={msg.id}\n    style={{\n      ...styles.messageContainer,\n      backgroundColor: selectedMessageId === msg.id ? '#000000' : '#111111', // Black on selection, dark gray otherwise\n      borderRadius: '20px',\n      padding: '10px',\n      marginBottom: '10px'\n    }}\n    onClick={() => toggleReactionsVisibility(msg.id)}\n    onKeyDown={(e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        toggleReactionsVisibility(msg.id);\n      }\n    }}\n    role=\"button\"\n    tabIndex={0}\n  >\n      {/* Feladó képe */}\n      <img src={getSenderImage(msg.sender)} alt=\"sender\" style={styles.avatar} />\n      {/* Üzenet szövege és szemetes ikon flexbox-szal elrendezve */}\n      <div style={{ ...styles.message, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        {/* Bal oldalon az üzenet és az időbélyeg */}\n        <div>\n          <b style={getSenderStyle(msg.sender)}>{getSenderName(msg.sender)}:</b> {msg.text}\n          {msg.image && (\n            <Button\n              style={{ background: 'none', border: 'none', padding: '0', cursor: 'pointer' }}\n              onClick={() => handleImageClick(msg.image)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  handleImageClick(msg.image);\n                }\n              }}\n            >\n              <img\n                src={msg.image}\n                alt=\"sent\"\n                style={{\n                  maxWidth: '100px',\n                  maxHeight: '100px',\n                  objectFit: 'contain',\n                  marginTop: '40px',\n                }}\n              />\n            </Button>\n          )}\n          {/* Timestamp az üzenet alatt */}\n          <span style={styles.timestamp}>{formatTimestamp(msg.timestamp)}</span>\n          <div style={{ display: 'flex', marginTop: '5px' }}>\n  {Object.entries(\n    msg.reactions\n      ? Object.values(msg.reactions).reduce((acc, reaction) => {\n          return {\n            ...acc,\n            [reaction]: (acc[reaction] || 0) + 1,\n          };\n        }, {})\n      : {}\n  )\n    .slice(0, 3)\n    .map(([reaction, count]) => (\n      <span \n        key={reaction} \n        style={{ \n          marginRight: '2px', \n          fontSize: '12px' // Set a smaller font size for reactions\n        }}\n      >\n        {count} {reaction}\n      </span>\n    ))}\n  {Object.keys(msg.reactions || {}).length > 3 && (\n    <span style={{ fontSize: '12px' }}>+{Object.keys(msg.reactions).length - 3}</span>\n  )}\n</div>\n\n        </div>\n        {/* Szemetes ikon csak a saját üzenetekhez */}\n        {msg.sender.toLowerCase() === account.toLowerCase() && (\n          <Button\n            onClick={() => handleDeleteMessage(msg)}\n            style={{\n              background: 'none',\n              border: 'none',\n              cursor: 'pointer',\n              padding: '0',\n              marginLeft: '10px', // Kis térköz a szemetes ikon előtt\n              fontSize: styles.timestamp.fontSize, // Ugyanakkora méretű lesz, mint a timestamp\n              display: 'inline-flex', // Inline marad a szöveggel\n              alignItems: 'center', // Középre igazítás\n            }}\n          >\n            🗑️\n          </Button>\n        )}\n      </div>\n    </div>\n  ))}\n</ChatBox>\n\n   \n          <div style={styles.inputRow}>\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <Input\n                type=\"text\"\n                value={isSearching ? searchQuery : newMessage}\n                onChange={isSearching ? handleSearchInputChange : (e) => setNewMessage(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !isSearching && cooldown === 0) {\n                    handleSend();\n                  }\n                }}\n                style={styles.input}\n                placeholder={isSearching ? 'Search in chatbox...' : (cooldown > 0 ? `Cooldown: ${cooldown}s` : 'Type a message')}\n                disabled={cooldown > 0 && !isSearching}\n              />\n              <Button onClick={handleSend} style={styles.sendButton} disabled={cooldown > 0}>\n                Send\n              </Button>\n              <Button onClick={() => setEmojiPickerVisible(!emojiPickerVisible)} style={styles.emojiButton}>\n                😊\n              </Button>\n              <Button \n                onClick={() => fileInputRef.current.click()} \n                style={styles.fileButton}>\n                📤\n              </Button>\n              <Link to=\"/toplist\" >\n    <Button variant='gold' ml=\"5px\" width=\"15px\" >\n    🏆 {/* Trófea ikon */}\n    </Button>\n  </Link> \n            </Flex>\n            {image && (\n  <div style={styles.previewContainer}> \n    <Text style={styles.previewText}>Image selected:</Text>\n    <img src={image} alt=\"Preview\" style={styles.previewImage} />\n    <Button onClick={() => setImage(null)} style={styles.deleteButton}>\n      ❌ \n    </Button>\n  </div>\n)}\n\n          </div>\n  \n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleImageChange}\n          />\n\n          {emojiPickerVisible && (\n            <EmojiPicker \n              setNewMessage={setNewMessage} \n              newMessage={newMessage} \n              handleSendImage={handleSendImage}  // Pass handleSendImage\n            /> \n          )}\n\n{selectedMessageId && (\n  <ReactionPicker\n    onReactionSelect={(emoji) => {\n      handleAddReaction(selectedMessageId, emoji); // Add or remove the reaction\n      setSelectedMessageId(null); // Close the picker\n    }}\n  />\n)}\n\n{enlargedImage && (\n  <div\n    style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.8)',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      zIndex: 1000,\n    }}\n    onClick={handleModalClose}\n    role=\"button\"\n    tabIndex=\"0\"\n    onKeyDown={(e) => {\n      if (e.key === 'Enter' || e.key === ' ') {\n        handleModalClose();\n      }\n    }}\n  >\n    <img\n      src={enlargedImage}\n      alt=\"Enlarged\"\n      style={{ maxWidth: '90%', maxHeight: '90%', cursor: 'pointer' }}\n    />\n  </div>\n)}\n\n    </Container>\n          ) : (\n            <ConnectWalletButton />\n          )}\n                     </>\n\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}