{"version":3,"sources":["state/teams/hooks.ts","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/ComingSoon.tsx","views/Teams/components/NoProfileCard.tsx","views/Teams/components/TeamHeader.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Teams/components/TeamCard.tsx","views/Teams/Team.tsx"],"names":["useTeam","id","team","useSelector","state","teams","data","dispatch","useAppDispatch","useEffect","fetchTeam","useTeams","isInitialized","isLoading","fetchTeams","HeaderWrapper","styled","div","theme","colors","textSubtle","ComingSoon","children","t","useTranslation","flexDirection","alignItems","justifyContent","p","width","height","as","scale","color","NoProfileCard","mb","isActive","Link","to","mt","TeamHeader","useProfile","profile","showProfileCallout","bold","SecondaryCard","Text","tertiary","defaultProps","StatBox","Icon","icon","title","subtitle","isDisabled","props","mr","textTransform","fontSize","Wrapper","mediaQueries","md","Avatar","img","AvatarWrap","StyledCard","Card","StyledCardHeader","CardHeader","bg","TeamName","Heading","attrs","StatRow","TeamCard","background","src","images","alt","textColor","name","description","CommunityIcon","users","PrizeIcon","Team","idStr","useParams","Number","isValidTeamId","findIndex","Page","PageLoader"],"mappings":"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","file":"static/js/10.79646c2c.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import React from 'react'\nimport { Button, Card, CardBody, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Link } from 'react-router-dom'\n\nconst NoProfileCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card mb=\"32px\" isActive>\n      <CardBody>\n        <Flex\n          alignItems={['start', null, 'center']}\n          justifyContent={['start', null, 'space-between']}\n          flexDirection={['column', null, 'row']}\n        >\n          <div>\n            <Heading scale=\"lg\" mb=\"8px\">\n              {t('You havenâ€™t set up your profile yet!')}\n            </Heading>\n            <Text>{t('You can do this at any time by clicking on your profile picture in the menu')}</Text>\n          </div>\n          <Button as={Link} to=\"/profile\" id=\"teamsPageSetUpProfile\" mt={['16px', null, 0]}>\n            {t('Set up now')}\n          </Button>\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default NoProfileCard\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport HeaderWrapper from 'views/Profile/components/HeaderWrapper'\nimport NoProfileCard from './NoProfileCard'\n\nconst TeamHeader = () => {\n  const { t } = useTranslation()\n  const { isInitialized, profile } = useProfile()\n  const showProfileCallout = isInitialized && !profile\n\n  return (\n    <>\n      {showProfileCallout && <NoProfileCard />}\n      <HeaderWrapper>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\">\n          {t('Teams & Profiles')}\n        </Heading>\n        <Text bold>\n          {t('Show off your stats and collectibles with your unique profile. Team features will be revealed soon!')}\n        </Text>\n      </HeaderWrapper>\n    </>\n  )\n}\n\nexport default TeamHeader\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardHeader, CardBody, CommunityIcon, Heading, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Team } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport ComingSoon from 'views/Profile/components/ComingSoon'\nimport StatBox from 'views/Profile/components/StatBox'\n\ninterface TeamCardProps {\n  team: Team\n}\n\nconst Wrapper = styled.div`\n  padding-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-top: 24px;\n  }\n`\n\nconst Avatar = styled.img`\n  border-radius: 50%;\n  height: 64px;\n  margin-top: -12px;\n  width: 64px;\n  border: solid 2px white;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    height: 128px;\n    margin-top: -24px;\n    width: 128px;\n  }\n`\n\nconst AvatarWrap = styled.div`\n  margin-bottom: 8px;\n  text-align: center;\n`\n\nconst StyledCard = styled(Card)`\n  overflow: visible;\n`\n\nconst StyledCardHeader = styled(CardHeader)<{ bg: string }>`\n  position: relative;\n  background: url(${({ bg }) => bg});\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  padding-top: 0;\n  text-align: center;\n`\n\nconst TeamName = styled(Heading).attrs({ as: 'h2' })`\n  font-size: 24px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n  }\n`\n\nconst StatRow = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-gap: 32px;\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 32px;\n  }\n`\n\nconst TeamCard: React.FC<TeamCardProps> = ({ team }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <StyledCard>\n        <StyledCardHeader bg={`/images/teams/${team.background}`}>\n          <AvatarWrap>\n            <Avatar src={`/images/teams/${team.images.md}`} alt=\"team avatar\" />\n          </AvatarWrap>\n          <TeamName color={team.textColor}>{team.name}</TeamName>\n          <Text as=\"p\" color={team.textColor}>\n            {t(team.description)}\n          </Text>\n        </StyledCardHeader>\n        <CardBody>\n          <StatRow>\n            <StatBox icon={CommunityIcon} title={team.users} subtitle={t('Active Members')} />\n            <StatBox icon={PrizeIcon} title={t('Coming Soon')} subtitle={t('Team Points')} isDisabled />\n          </StatRow>\n          <Heading as=\"h3\">{t('Team Achievements')}</Heading>\n          <ComingSoon />\n        </CardBody>\n      </StyledCard>\n    </Wrapper>\n  )\n}\n\nexport default TeamCard\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport { Link, Redirect, useParams } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text } from '@pancakeswap/uikit'\nimport PageLoader from 'components/Loader/PageLoader'\nimport teams from 'config/constants/teams'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTeam } from 'state/teams/hooks'\nimport TeamCard from './components/TeamCard'\nimport TeamHeader from './components/TeamHeader'\n\nconst Team = () => {\n  const { id: idStr }: { id: string } = useParams()\n  const id = Number(idStr)\n  const { t } = useTranslation()\n  const isValidTeamId = teams.findIndex((team) => team.id === id) !== -1\n  const team = useTeam(id)\n\n  if (!isValidTeamId) {\n    return <Redirect to=\"/404\" />\n  }\n\n  if (!team) {\n    return <PageLoader />\n  }\n\n  return (\n    <Page>\n      <TeamHeader />\n      <Flex mb=\"24px\">\n        <Link to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </Link>\n      </Flex>\n      <TeamCard team={team} />\n    </Page>\n  )\n}\n\nexport default Team\n"],"sourceRoot":""}