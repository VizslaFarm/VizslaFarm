{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","state/mint/actions.ts","utils/formatBalance.ts","hooks/useActiveWeb3React.ts","utils/addressHelpers.ts","components/Layout/Column.tsx","config/constants/tokens.ts","state/swap/actions.ts","utils/bigNumber.ts","components/Balance.tsx","hooks/useTokenBalance.ts","config/constants/types.ts","state/farms/hooks.ts","utils/contractHelpers.ts","state/multicall/hooks.ts","config/constants/multicall/index.ts","hooks/useContract.ts","components/SearchModal/types.ts","state/user/actions.ts","utils/index.ts","config/constants/index.ts","config/constants/contracts.ts","hooks/useRefresh.ts","views/Pools/helpers.tsx","state/lists/actions.ts","components/Logo/DoubleLogo.tsx","config/constants/lists.ts","hooks/useTheme.ts","components/Card/index.tsx","components/QuestionHelper/index.tsx","utils/multicall.ts","utils/index4.ts","config/constants/index3.ts","config/constants/index4.ts","config/constants/index5.ts","state/user/hooks/index.tsx","utils/index3.ts","utils/index5.ts","state/pools/hooks.ts","hooks/useToast.ts","config/index.ts","components/ConnectWalletButton.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/Tokens.ts","config/constants/pools.ts","utils/wrappedCurrency.ts","state/swap/actions3.ts","state/swap/actions4.ts","state/swap/actions5.ts","utils/wrappedCurrency3.ts","utils/wrappedCurrency4.ts","utils/wrappedCurrency5.ts","config/constants/tokens3.ts","config/constants/tokens4.ts","config/constants/tokens5.ts","hooks/Tokens3.ts","hooks/Tokens4.ts","hooks/Tokens5.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance4.ts","hooks/useApproveCallback4.ts","hooks/useTokenAllowance5.ts","hooks/useApproveCallback5.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/providers.ts","state/block/hooks.ts","components/Tags.tsx","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","state/lists/hooks.ts","utils/addressHelpers2.ts","utils/addressHelpers4.ts","utils/addressHelpers5.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/Logo/DoubleLogo4.tsx","components/Logo/DoubleLogo5.tsx","utils/prices3.ts","utils/prices.ts","utils/prices4.ts","utils/prices5.ts","config/index3.ts","state/multicall/actions.ts","components/Loader/Dots.tsx","utils/wallet.ts","state/lists/hooks3.ts","state/lists/hooks4.ts","state/lists/hooks5.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/Loader/CircleLoader.tsx","utils/isZero.ts","config/constants/farms.ts","hooks/useDebounce.ts","config/abi/erc20.ts","components/Logo/DoubleLogo2.tsx","state/user/hooks/index4.tsx","state/user/hooks/index5.tsx","state/user/hooks/index3.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","state/wallet/hooks4.ts","state/wallet/hooks5.ts","config/constants/endpoints.ts","utils/compoundApyHelpers.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","state/transactions/hooks.tsx","utils/uriToHttp.ts","state/transactions/actions.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/constants/multicall/index4.ts","hooks/useContract4.ts","config/constants/multicall/index5.ts","hooks/useContract5.ts","config/localization/languages.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Logo/CurrencyLogo.tsx","state/swap/hooks.ts","utils/getTokenLogoURL.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/constants/ifo.ts","hooks/usePreviousValue.ts","state/swap/hooks4.ts","state/swap/hooks5.ts","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","hooks/usePairs4.ts","hooks/usePairs5.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Logo/CurrencyLogo4.tsx","components/Logo/CurrencyLogo5.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","utils/latinise.ts","state/transactions/hooks4.tsx","state/transactions/hooks5.tsx","state/transactions/hooks3.tsx","contexts/Localization/helpers.ts","components/Logo/ListLogo.tsx","config/constants/nfts.ts","hooks/useAuth.ts","hooks/useDelayedUnmount.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","components/Logo/CurrencyLogo2.tsx","hooks/useParsedQueryString.ts","utils/currencyId.ts","utils/currencyId3.ts","utils/currencyId4.ts","utils/currencyId5.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/user/hooks/helpers4.ts","state/user/hooks/helpers5.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","utils/trades4.ts","hooks/Trades4.ts","utils/wallet4.ts","components/TransactionConfirmationModal4/index.tsx","utils/trades5.ts","hooks/Trades5.ts","utils/wallet5.ts","components/TransactionConfirmationModal5/index.tsx","state/profile/hooks.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/web3React.ts","hooks/useLastUpdated.ts","hooks/usePersistState.ts","state/block/index.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel4/NumericalInput.tsx","components/CurrencyInputPanel4/index.tsx","components/CurrencyInputPanel5/NumericalInput.tsx","components/CurrencyInputPanel5/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","components/SearchModal/filtering4.ts","config/index4.ts","components/SearchModal/filtering5.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","hooks/useTotalSupply4.ts","hooks/useTotalSupply5.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens3.ts","state/user/hooks/useUserAddedTokens4.ts","state/user/hooks/useUserAddedTokens5.ts","components/Layout/Container.tsx","utils/getTimePeriods.ts","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav4.tsx","views/Page4.tsx","components/Menu/SubNav5.tsx","views/Page5.tsx","components/Menu/SubNav.tsx","views/Page.tsx","components/PageHeader/PageHeader.tsx","components/Layout/Flex.tsx","components/Loading.tsx","components/SearchInput/SearchInput.tsx","state/application/actions.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/SearchModal/ImportToken3.tsx","utils/maxAmountSpend3.ts","components/SearchModal/ImportToken4.tsx","utils/maxAmountSpend4.ts","components/SearchModal/ImportToken5.tsx","utils/maxAmountSpend5.ts","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","state/burn/actions.ts","utils/achievements.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","components/UnsupportedCurrencyFooter4.tsx","state/mint/hooks4.ts","views/AddLiquidity4/ConfirmAddModalBottom4.tsx","views/AddLiquidity4/PoolPriceBar4.tsx","views/AddLiquidity4/index.tsx","components/UnsupportedCurrencyFooter5.tsx","state/mint/hooks5.ts","views/AddLiquidity5/ConfirmAddModalBottom5.tsx","views/AddLiquidity5/PoolPriceBar5.tsx","views/AddLiquidity5/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/App/AppBody.tsx","state/predictions/index.ts","components/App/Settings/TransactionSettings.tsx","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","state/transactions/actions4.ts","state/transactions/actions5.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","components/PositionCard4/index.tsx","components/PositionCard5/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ManageLists3.tsx","components/SearchModal/ManageTokens3.tsx","components/SearchModal/Manage3.tsx","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/ImportRow4.tsx","components/SearchModal/CurrencyList4.tsx","components/SearchModal/sorting4.ts","components/SearchModal/CurrencySearch4.tsx","hooks/useFetchListCallback4.ts","components/SearchModal/ManageLists4.tsx","components/SearchModal/ManageTokens4.tsx","components/SearchModal/Manage4.tsx","components/SearchModal/ImportList4.tsx","components/SearchModal/CurrencySearchModal4.tsx","components/SearchModal/ImportRow5.tsx","components/SearchModal/CurrencyList5.tsx","components/SearchModal/sorting5.ts","components/SearchModal/CurrencySearch5.tsx","hooks/useFetchListCallback5.ts","components/SearchModal/ManageLists5.tsx","components/SearchModal/ManageTokens5.tsx","components/SearchModal/Manage5.tsx","components/SearchModal/ImportList5.tsx","components/SearchModal/CurrencySearchModal5.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","hooks/useTransactionDeadline3.ts","hooks/useCurrentBlockTimestamp3.ts","hooks/useTransactionDeadline4.ts","hooks/useCurrentBlockTimestamp4.ts","hooks/useTransactionDeadline5.ts","hooks/useCurrentBlockTimestamp5.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/FarmPools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","utils/apr2.ts","state/pools2/fetchPools.ts","state/pools2/fetchPoolsUser.ts","state/pools2/fetchVaultPublic.ts","state/pools2/fetchVaultUser.ts","state/pools2/helpers.ts","state/pools2/index.ts","state/pools2/hooks.ts","views/Pools/components/ModalInfo.tsx","views/Pools/components/InfoCard.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","views/FarmPools/helpers.tsx","views/FarmPools/components/PoolCard/AprRow.tsx","views/FarmPools/components/PoolCard/StyledCard.tsx","views/FarmPools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard/CardFooter/index.tsx","views/FarmPools/components/PoolCard/StyledCardHeader.tsx","views/FarmPools/hooks/useApprove.ts","views/FarmPools/components/PoolCard/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard/Modals/PercentageButton.tsx","views/FarmPools/hooks/useStakePool.ts","views/FarmPools/hooks/useUnstakePool.ts","views/FarmPools/components/PoolCard/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard/CardActions/StakeActions.tsx","views/FarmPools/hooks/useHarvestPool.ts","views/FarmPools/components/PoolCard/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard/CardActions/index.tsx","views/FarmPools/components/PoolCard/index.tsx","views/FarmPools/components/PoolCard2/AprRow.tsx","views/FarmPools/components/PoolCard2/StyledCard.tsx","views/FarmPools/components/PoolCard2/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard2/CardFooter/index.tsx","views/FarmPools/components/PoolCard2/StyledCardHeader.tsx","views/FarmPools/components/PoolCard2/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard2/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard2/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard2/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard2/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard2/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard2/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard2/CardActions/index.tsx","views/FarmPools/components/PoolCard2/index.tsx","views/FarmPools/components/PoolCard3/AprRow.tsx","views/FarmPools/components/PoolCard3/StyledCard.tsx","views/FarmPools/components/PoolCard3/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard3/CardFooter/index.tsx","views/FarmPools/components/PoolCard3/StyledCardHeader.tsx","views/FarmPools/components/PoolCard3/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard3/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard3/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard3/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard3/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard3/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard3/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard3/CardActions/index.tsx","views/FarmPools/components/PoolCard3/index.tsx","views/FarmPools/components/PoolTabButtons.tsx","views/FarmPools/components/BountyModal.tsx","views/FarmPools/components/BountyCard.tsx","views/FarmPools/components/HelpButton.tsx","views/FarmPools/components/ModalInfo.tsx","views/FarmPools/components/InfoCard.tsx","views/FarmPools/components/PoolsTable/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable/Apr.tsx","views/FarmPools/components/PoolsTable/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable/ActionPanel/styles.ts","views/FarmPools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/FarmPools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Harvest.tsx","views/FarmPools/components/CakeVaultCard/FeeSummary.tsx","views/FarmPools/components/CakeVaultCard/VaultStakeModal.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable/PoolRow.tsx","views/FarmPools/components/PoolsTable2/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable2/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable2/Apr.tsx","views/FarmPools/components/PoolsTable2/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable2/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable2/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable2/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable2/PoolRow.tsx","views/FarmPools/components/PoolsTable3/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable3/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable3/Apr.tsx","views/FarmPools/components/PoolsTable3/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable3/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable3/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable3/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable3/PoolRow.tsx","views/FarmPools/components/PoolsTable/PoolsTable.tsx","views/FarmPools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal3.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/RadioShack/components/AddressInputPanel4.tsx","views/RadioShack/components/styleds.tsx","views/RadioShack/components/FormattedPriceImpact4.tsx","views/RadioShack/components/SwapModalFooter4.tsx","views/RadioShack/components/SwapModalHeader4.tsx","views/RadioShack/components/ConfirmSwapModal4.tsx","views/RadioShack/components/SwapRoute4.tsx","views/RadioShack/components/AdvancedSwapDetails4.tsx","views/RadioShack/components/AdvancedSwapDetailsDropdown4.tsx","views/RadioShack/components/TradePrice4.tsx","views/RadioShack/components/ImportTokenWarningModal4.tsx","views/RadioShack/components/ProgressSteps.tsx","hooks/useSwapCallback4.ts","hooks/useWrapCallback4.ts","views/RadioShack/components/SwapWarningModal/SafemoonWarning.tsx","views/RadioShack/components/SwapWarningModal/BondlyWarning.tsx","views/RadioShack/components/SwapWarningModal/Acknowledgement.tsx","views/RadioShack/components/SwapWarningModal/index.tsx","views/RadioShack/index.tsx","views/RadioShack/components/confirmPriceImpactWithoutFee4.ts","views/Biswap/components/AddressInputPanel5.tsx","views/Biswap/components/styleds.tsx","views/Biswap/components/FormattedPriceImpact5.tsx","views/Biswap/components/SwapModalFooter5.tsx","views/Biswap/components/SwapModalHeader5.tsx","views/Biswap/components/ConfirmSwapModal5.tsx","views/Biswap/components/SwapRoute5.tsx","views/Biswap/components/AdvancedSwapDetails5.tsx","views/Biswap/components/AdvancedSwapDetailsDropdown5.tsx","views/Biswap/components/TradePrice5.tsx","views/Biswap/components/ImportTokenWarningModal5.tsx","views/Biswap/components/ProgressSteps.tsx","hooks/useSwapCallback5.ts","hooks/useWrapCallback5.ts","views/Biswap/components/SwapWarningModal/SafemoonWarning.tsx","views/Biswap/components/SwapWarningModal/BondlyWarning.tsx","views/Biswap/components/SwapWarningModal/Acknowledgement.tsx","views/Biswap/components/SwapWarningModal/index.tsx","views/Biswap/index.tsx","views/Biswap/components/confirmPriceImpactWithoutFee5.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/AddLiquidity4/redirects.tsx","views/AddLiquidity5/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/RemoveLiquidity4/redirects.tsx","views/RemoveLiquidity5/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","getAddress","address","ChainId","MAINNET","getCakeAddress","tokens","cake","getVIZSLAHVIAddress","lp","getLAMEAAddress","lamea","getHVIBNBAddress","lp2","getVIZSLASWAPLAMEAAddress","lp3","getHVIAddress","hvi","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","wbnb","getethAddress","eth","getetcAddress","etc","getltcAddress","ltc","getbvcAddress","bvc","getbabyvizslaAddress","babyvizsla","getataliraAddress","atalira","getexzoAddress","exzo","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","Column","ColumnCenter","AutoColumn","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","build","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","btnty","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","beth","mamzn","mgoogl","mnflx","mtsla","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","vizslaswap","trip","shib","stake","test1","ample","skeleton","ace","hank","fps","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BIG_ONE","BIG_NINE","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FetchStatus","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useTotalSupplyVIZSLAHVI","getVIZSLAHVIContract","useTotalSupplyHVIBNB","getHVIBNBContract","useTotalSupplyVIZSLASWAPLAMEA","getVIZSLASWAPLAMEAContract","useTotalSupply2","getHVIContract","useBurnedBalance","tokenAddress","setBalance","contract","getBep20Contract","balanceOf","res","fetchBalance","useVizslaLameaLPBalance","useVizslaLPBalance","useLAMEALPBalance","useHVILPBalance","useHVILPBalance2","useWBNBLPBalance","usePool1","usePool2","usePool3","usePool4","usePool5","usePool6","usePool7","usePool8","usePool9","usePool10","usePool11","usePool12","usePool13","usePool14","usePool15","usePool16","usePool17","usePool18","usePool19","usePool20","usePool21","usePool22","usePool23","usePool24","usePool25","usePool26","usePool27","usePool28","usePool29","usePool30","usePool31","usePool32","usePool33","usePool34","usePool35","usePool36","usePool37","usePool38","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","account","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","SUCCESS","FAILED","refresh","useTokenBalance","balanceState","setBalanceState","fastRefresh","console","error","prev","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","usePollFarmsData","includeArchive","dispatch","useAppDispatch","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useSelector","farms","useFarmFromPid","find","f","useFarmFromLpSymbol","lpSymbol","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","useBusdPriceFromPid","token","busdPrice","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useMemo","usePriceLameaBusd","usePriceETHBusd","usePriceETCBusd","usePriceLTCBusd","usePriceATALIRABusd","usePriceEXZOBusd","usePriceBVCBusd","usePriceBABYVIZSLABusd","usePriceHVIBusd","getContract","abi","signer","signerOrProvider","Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","multicall","useDispatch","serializedCallKeys","JSON","stringify","filter","c","Boolean","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","MULTICALL_NETWORKS","useIfoV1Contract","getSigner","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","ABI","withSignerIfPossible","useTokenContract","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","CurrencyModalView","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","RefreshContext","fast","slow","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","useTheme","useThemeManager","isDark","theme","StyledThemeContext","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","i","multicallv2","requireSuccess","tryAggregate","getRouterContract2","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useFetchPublicPoolsData","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","cakeAtLastUserActionAsString","lastDepositedTime","lastUserActionTime","useToast","toastContext","ToastsContext","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT2","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","isBNB","toUpperCase","stakingToken","earningToken","tokensymbol2","tokensymbol3","tokensymbol4","tokensymbol5","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","tokenPerBlock","sortOrder","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","RPC_URL","getRpcUrl","providers","JsonRpcProvider","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","CoreTag","variant","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","mb","window","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","status","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","as","Link","to","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","getPoolApr","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","Dots","span","setupNetwork","ethereum","request","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","hexNumberString","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","ERC20_INTERFACE","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","anyLoading","some","callState","useTokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","uriToHttp","uri","code","languageList","getNodeUrl","sample","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","usePreviousValue","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","DetailsFooter","invertedContrast","UnsupportedModal","unsupportedTokens","external","small","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","Latinise","latin_map","τ","Τ","latinise","input","getItem","StyledListLogo","ListLogo","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","search","useLocation","parseArrays","ignoreQueryPrefix","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","textAlign","TransactionSubmittedContent","currencyToAdd","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","tokenIn","tokenOut","useFetchProfile","hasProfile","DEFAULT_META","StyledPage","Container","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","setStateLastUpdated","previousLastUpdated","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","CurrencySearchModal","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","Outer","Inner","PageHeader","FlexLayout","Loading","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","onBlur","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","userSelect","disabled","maxAmountSpend","greaterThan","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","component","endIcon","height","App","toExact","minWidth","marginTop","showUnwrapped","AddLiquidity4","AddLiquidity5","AddLiquidity","BodyWrapper","AppBody","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","isWarning","isSuccess","paddingTop","pl","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","ModalInfo","VIZSLAPRICE0","HVIPRICE","VIZSLAPRICE","WBNBPRICE","ETHPRICE","ETCPRICE","LTCPRICE","LAMEAPRICE","ATALIRAPRICE","EXZOPRICE","BVCPRICE","BABYVIZSLAPRICE","POOL4","POOL5","POOL6","POOL7","POOL8","POOL9","POOL10","POOL11","POOL12","POOL13","POOL14","POOL15","POOL16","POOL17","POOL18","POOL19","POOL20","POOL21","POOL22","POOL23","POOL24","POOL25","POOL26","POOL27","POOL28","POOL29","POOL30","POOL31","POOL32","POOL33","POOL34","POOL35","POOL36","POOL37","POOL38","MAJDNEM","MAJDNEM2","FULL1","FULL2","MAJDNEM3","FULL4","MAJDNEM4","FULL5","MAJDNEM5","FULL6","MAJDNEM6","FULL7","MAJDNEM7","FULL8","MAJDNEM8","FULL9","MAJDNEM9","FULL10","MAJDNEM10","FULL11","MAJDNEM11","FULL12","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","FULL3","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyAllPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","showall","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","InfoCard","vizslalpbalance","cakeSupply2","vizslaprice","hvilpbalance","hviprice","vizslahvisupply","full4","bnblpbalance","bnbprice2","PoolCard2","PoolCard3","VÉGE","VÉGE1","PoolRow2","PoolRow3","pools2","pools3","FarmPools","chosenPoolsLength3","chosenPoolsLength2","pool2","all2","all3","finished","stakedOnlyAl2lPools","stakedOnlyAl3lPools","chosenPools2","chosenPools3","showallpools","showall2pools","showall3pools","showfinished","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RadioShack","isTopPosition","Biswap","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectToAddLiquidity3","RedirectOldAddLiquidityPathStructure3","RedirectDuplicateTokenIds3","RedirectToAddLiquidity4","RedirectOldAddLiquidityPathStructure4","RedirectDuplicateTokenIds4","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectOldRemoveLiquidityPathStructure4","RedirectOldRemoveLiquidityPathStructure5","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","Liquidity4","Liquidity5","PoolFinder","PoolFinder2","PoolFinder4","PoolFinder5","RemoveLiquidity","RemoveLiquidity2","RemoveLiquidity4","RemoveLiquidity5","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"sRAOMA,EAA8B,CAClCC,YAAY,EACZC,gBAAiBC,KAINC,EAAc,IAAIC,IAC/BD,EAAYE,IAAIH,IAAGI,OAAQC,GAEpB,IAAMC,EAAkBC,6BAA0BC,GAE5CC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,oBAAwB,WAChD,IAAMC,EAAkBC,cAExB,OAAO,2BACFhB,GADL,IAEEE,gBAAiBe,IAAUF,QAL/B,mBAAOG,EAAP,KAAcC,EAAd,KAQQjB,EAAoBgB,EAApBhB,gBAERkB,qBAAU,YACiB,uCAAG,gCAAAC,EAAA,0DACpBN,EAAkBC,iBAEAb,IAAGI,OAHD,uBAIlBe,EAAWlB,EAAYmB,IAAIpB,IAAGI,QAJZ,SAKIiB,YAAYT,GALhB,OAKlBU,EALkB,OAMxBrB,EAAYE,IAAIS,EAAhB,2BAAsCO,GAAaG,IAN3B,OAS1BN,GAAS,SAACO,GAAD,mBAAC,eACLA,GADI,IAEPzB,YAAY,OAXY,2CAAH,qDAezB0B,KACC,CAACR,IAEJ,IAAMS,EAAW,uCAAG,WAAOC,GAAP,iBAAAR,EAAA,yDACbjB,EAAY0B,IAAID,EAAStB,QADZ,wBAEhBY,GAAS,SAACO,GAAD,mBAAC,eACLA,GADI,IAEPzB,YAAY,OAJE,SAOKuB,YAAYK,EAAStB,QAP1B,OAOVA,EAPU,OAQVe,EAAWlB,EAAYmB,IAAIpB,IAAGI,QAGpCH,EAAYE,IAAIuB,EAAStB,OAAzB,2BAAsCe,GAAaf,IACnDwB,aAAaC,QAAQC,IAAQJ,EAAStB,QAEtCY,GAAS,SAACO,GAAD,mBAAC,eACLA,GADI,IAEPzB,YAAY,EACZC,gBAAiB2B,OAjBH,wBAoBhBE,aAAaC,QAAQC,IAAQJ,EAAStB,QACtCY,GAAS,SAACO,GAAD,mBAAC,eACLA,GADI,IAEPzB,YAAY,EACZC,gBAAiB2B,OAxBH,4CAAH,sDA6BXK,EAAYC,uBAChB,SAACC,EAAaC,GACZ,IAGMC,GAHiBlC,EAAY0B,IAAI5B,EAAgBK,QACnDH,EAAYmB,IAAIrB,EAAgBK,QAChCH,EAAYmB,IAAIpB,IAAGI,SACe6B,IAAQA,EAK9C,GAFyBE,EAAeC,MAAM,aAEtBF,EAAM,CAC5B,IAAIG,EAAmBF,EAMvB,OALAG,OAAOC,KAAKL,GAAMM,SAAQ,SAACC,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CJ,EAAmBA,EAAiBO,QAAQF,EAAaR,EAAKO,GAASI,eAGlER,EAGT,OAAOF,IAET,CAACpC,IAGH,OAAO,cAACO,EAAgBwC,SAAjB,CAA0BC,MAAK,2BAAOhC,GAAP,IAAcU,cAAauB,EAAGjB,IAA7D,SAA2ErB,KCzFrEuC,EAVQ,WACrB,IAAMC,EAAkBC,qBAAW7C,GAEnC,QAAwBE,IAApB0C,EACF,MAAM,IAAIE,MAAM,iCAGlB,OAAOF,I,uKCPHG,EAAMC,YAAOC,IAAPD,CAAH,kLAQE,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGlB,gBAAGC,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,YACpB,gBAAGC,EAAH,EAAGA,QAAH,cAAiBA,QAAjB,IAAiBA,IAAW,gBACpC,qBAAGC,WACJ,qBAAGC,UACI,qBAAGC,gBAGTC,EAAaR,YAAOD,EAAPC,CAAH,+DASVS,GALUT,IAAOU,IAAV,wEAKGV,YAAOD,EAAPC,CAAH,wIAER,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MACf,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGnC,qBAAGO,QAIJC,EAAWZ,YAAOD,EAAPC,CAAH,mEAET,gBAAGW,EAAH,EAAGA,IAAH,OAAaA,GAAG,WAAQA,MAGrBZ,O,6BC7Cf,0GAEYc,EAFZ,S,SAEYA,K,wBAAAA,E,yBAAAA,M,KAKL,IAAMC,EAAYC,YAAyE,sBACrFC,EAAiBD,YAAmB,wB,2WCCpCE,EAAmB,SAACC,GAAsC,IAAnBC,EAAkB,uDAAP,GAC7D,OAAO,IAAIC,IAAUF,GAAQG,MAAMC,IAAQC,IAAIJ,KAGpCK,EAAmB,SAACN,GAAsC,IAAnBC,EAAkB,uDAAP,GAC7D,OAAO,IAAIC,IAAUF,GAAQO,UAAUH,IAAQC,IAAIJ,KAMxCO,EAAmB,SAACC,GAAuC,IAAnBR,EAAkB,uDAAP,GAC9D,OAAOK,EAAiBG,EAASR,GAAUS,YAGhCC,EAAwB,SAACF,GAAiE,IAA7CR,EAA4C,uDAAjC,GAAIW,EAA6B,uCACpG,OAAON,EAAiBG,EAASR,GAAUY,QAAQD,IAGxCE,EAAe,SAACC,GAAwD,IAAxCC,EAAuC,uDAAxB,EAAGC,EAAqB,uDAAN,EACtEC,EAAU,CACdC,sBAAuBH,EACvBI,sBAAuBH,GAEzB,OAAOF,EAAOM,oBAAerF,EAAWkF,IAO7BI,EAAkB,SAACP,GAAmE,IAAzCH,EAAwC,uDAAtB,GAAIX,EAAkB,uDAAP,GACnFsB,EAAYR,EAAOS,IAAIC,IAAOvB,UAAUwB,KAAK,IAAIrB,IAAIJ,EAAWW,IACtE,OAAOe,sBAAYZ,EAAOa,IAAIL,GAAYtB,IAO/B4B,EAAyB,SAACd,GAAmE,IAAzCH,EAAwC,uDAAtB,GAAIX,EAAkB,uDAAP,GAC1F6B,EAAkBH,sBAAYZ,EAAQd,GAC5C,QAAS6B,GAAiBjB,QAAQD,IAOvBmB,EAAoB,SAAChB,GAAqE,IAAzCH,EAAwC,uDAAtB,GAAIX,EAAkB,uDAAP,GAE7F,EAAmBc,EAAO1C,WAAW2D,MAAM,KAA3C,mBAAOC,EAAP,KACA,OAAOX,EAAgBG,IAAOvB,UAAUwB,KAAKO,GAAWrB,EAAiBX,K,wGCnC5DiC,IAfY,WACzB,MAA2CC,cAAnCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAAYC,EAA7B,iBACMC,EAASC,iBAAOJ,GACtB,EAAgCjG,mBAASiG,GAAWK,KAApD,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAlG,qBAAU,WACJ2F,IAAYG,EAAOK,UACrBD,EAAYP,GAAWK,KACvBF,EAAOK,QAAUR,KAElB,CAACA,IAEG,aAAEA,QAASM,EAAUL,QAAO,OAAEA,QAAF,IAAEA,IAAWQ,SAASC,KAAgC,KAAQR,K,iCCvBnG,4lCAKaS,EAAa,SAACC,GAEzB,OAAOA,EADSF,IACUE,EADVF,IAC6BE,EAAQC,IAAQC,UAGlDC,EAAiB,WAC5B,OAAOJ,EAAWK,IAAOC,KAAKL,UAEnBM,EAAsB,WACjC,OAAOP,EAAWK,IAAOG,GAAGP,UAEjBQ,EAAkB,WAC7B,OAAOT,EAAWK,IAAOK,MAAMT,UAEpBU,EAAmB,WAC9B,OAAOX,EAAWK,IAAOO,IAAIX,UAElBY,EAA4B,WACvC,OAAOb,EAAWK,IAAOS,IAAIb,UAElBc,EAAgB,WAC3B,OAAOf,EAAWK,IAAOW,IAAIf,UAElBgB,EAAuB,WAClC,OAAOjB,EAAWkB,IAAUC,aAEjBC,EAAsB,WACjC,OAAOpB,EAAWkB,IAAUG,YAEjBC,EAAiB,WAC5B,OAAOtB,EAAWK,IAAOkB,KAAKtB,UAEnBuB,EAAgB,WAC3B,OAAOxB,EAAWK,IAAOoB,IAAIxB,UAElByB,EAAgB,WAC3B,OAAO1B,EAAWK,IAAOsB,IAAI1B,UAElB2B,EAAgB,WAC3B,OAAO5B,EAAWK,IAAOwB,IAAI5B,UAElB6B,EAAgB,WAC3B,OAAO9B,EAAWK,IAAO0B,IAAI9B,UAElB+B,EAAuB,WAClC,OAAOhC,EAAWK,IAAO4B,WAAWhC,UAEzBiC,EAAoB,WAC/B,OAAOlC,EAAWK,IAAO8B,QAAQlC,UAEtBmC,EAAiB,WAC5B,OAAOpC,EAAWK,IAAOgC,KAAKpC,UAEnBqC,EAAsB,WACjC,OAAOtC,EAAWkB,IAAUqB,YAEjBC,EAA2B,WACtC,OAAOxC,EAAWkB,IAAUuB,iBAEjBC,EAA2B,WACtC,OAAO1C,EAAWkB,IAAUyB,iBAEjBC,EAAyB,WACpC,OAAO5C,EAAWkB,IAAU2B,eAEjBC,EAAwB,WACnC,OAAO9C,EAAWkB,IAAU6B,cAEjBC,EAA2B,WACtC,OAAOhD,EAAWkB,IAAU+B,iBAEjBC,EAAyB,WACpC,OAAOlD,EAAWkB,IAAUiC,eAEjBC,EAA+B,WAC1C,OAAOpD,EAAWkB,IAAUmC,qBAEjBC,EAAsB,WACjC,OAAOtD,EAAWkB,IAAUqC,YAEjBC,EAAsB,WACjC,OAAOxD,EAAWkB,IAAUuC,YAEjBC,EAAwB,WACnC,OAAO1D,EAAWkB,IAAUyC,cAEjBC,EAA4B,WACvC,OAAO5D,EAAWkB,IAAU2C,kBAEjBC,EAAkC,WAC7C,OAAO9D,EAAWkB,IAAU6C,wBAEjBC,EAAmC,WAC9C,OAAOhE,EAAWkB,IAAU+C,yBAEjBC,EAAwB,WACnC,OAAOlE,EAAWkB,IAAUiD,e,yHCnGxBC,EAASrI,IAAOU,IAAV,yGAKC4H,EAAetI,YAAOqI,EAAPrI,CAAH,oEAKZuI,EAAavI,IAAOU,IAAV,oHAML,gBAAGC,EAAH,EAAGA,IAAH,OAAsB,OAARA,EAAgB,MAAmB,OAARA,GAAgB,SAAoB,OAARA,GAAgB,QAAWA,KAC/F,gBAAGP,EAAH,EAAGA,QAAH,OAAiBA,GAAWA,KAGhCiI,O,6WCpBFG,GAAkC,mBAC5CrE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,sBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,sBAb2C,GAgBlCC,GAAkC,mBAC5CxE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,gBAb2C,GAiBlCE,EAAO,IAAIH,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FyE,EAAM,IAAIJ,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F0E,EAAO,IAAIL,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5F2E,EAAO,IAAIN,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F4E,EAAM,IAAIP,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,qBAEW6E,EAAM,IAAIR,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,8BAEW8E,EAAO,IAAIT,IACtBtE,IAAQC,QACR,6CACA,GACA,OACA,wBAw9DaE,IAr9DA,CACb6E,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEf9E,KAAM,CACJ6E,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfC,SAAU,CACRF,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfE,KAAM,CACJH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfG,KAAM,CACJJ,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfI,IAAK,CACHL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mBAEfK,KAAM,CACJN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfM,KAAM,CACJP,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfO,MAAO,CACLR,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfQ,GAAI,CACFT,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfS,IAAK,CACHV,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfU,MAAO,CACLX,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfW,MAAO,CACLZ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfY,QAAS,CACPb,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfa,KAAM,CACJd,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfc,IAAK,CACHf,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfe,IAAK,CACHhB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfgB,OAAQ,CACNjB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfiB,OAAQ,CACNlB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfkB,KAAM,CACJnB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmB,IAAK,CACHpB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoB,KAAM,CACJrB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqB,IAAK,CACHtB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsB,MAAO,CACLvB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfuB,MAAO,CACLxB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oCAEfwB,IAAK,CACHzB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfyB,IAAK,CACH1B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf0B,KAAM,CACJ3B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf2B,KAAM,CACJ5B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf4B,KAAM,CACJ7B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6B,MAAO,CACL9B,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEf8B,IAAK,CACH/B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+B,KAAM,CACJhC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgC,IAAK,CACHjC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfiC,IAAK,CACHlC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,gCAEfkC,MAAO,CACLnC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmC,MAAO,CACLpC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sCAEfoC,KAAM,CACJrC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqC,KAAM,CACJtC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfsC,IAAK,CACHvC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfuC,MAAO,CACLxC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfwC,KAAM,CACJzC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfyC,QAAS,CACP1C,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf0C,IAAK,CACH3C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf2C,IAAK,CACH5C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf4C,KAAM,CACJ7C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6C,IAAK,CACH9C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf8C,IAAK,CACH/C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf+C,KAAM,CACJhD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgD,IAAK,CACHjD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfiD,KAAM,CACJlD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfkD,IAAK,CACHnD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfmD,KAAM,CACJpD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoD,IAAK,CACHrD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqD,MAAO,CACLtD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfsD,MAAO,CACLvD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuD,OAAQ,CACNxD,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfwD,MAAO,CACLzD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfyD,KAAM,CACJ1D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0D,IAAK,CACH3D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2D,MAAO,CACL5D,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf4D,IAAK,CACH7D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf6D,IAAK,CACH9D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf8D,GAAI,CACF/D,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf+D,KAAM,CACJhE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgE,MAAO,CACLjE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfiE,IAAK,CACHlE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfkE,IAAK,CACHnE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfmE,IAAK,CACHpE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf7D,KAAM,CACJ4D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEf5E,GAAI,CACF2E,OAAQ,mBACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfxE,IAAK,CACHuE,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEftE,IAAK,CACHqE,OAAQ,qBACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfjD,QAAS,CACPgD,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfoE,MAAO,CACLrE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf/C,KAAM,CACJ8C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfqE,MAAO,CACLtE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfsE,KAAM,CACJvE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfuE,IAAK,CACHxE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwE,KAAM,CACJzE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfyE,QAAS,CACP1E,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0E,KAAM,CACJ3E,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2E,IAAK,CACH5E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4E,IAAK,CACH7E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6E,IAAK,CACH9E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,kCAEf8E,IAAK,CACH/E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf+E,IAAK,CACHhF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfgF,MAAO,CACLjF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfiF,IAAK,CACHlF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfkF,MAAO,CACLnF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfmF,KAAM,CACJpF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoF,MAAO,CACLrF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfqF,KAAM,CACJtF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfsF,KAAM,CACJvF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuF,KAAM,CACJxF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf3D,IAAK,CACH0D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwF,KAAM,CACJzF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8CAEfyF,MAAO,CACL1F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0F,OAAQ,CACN3F,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2F,MAAO,CACL5F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4F,MAAO,CACL7F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfvD,IAAK,CACHsD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6F,KAAM,CACJ9F,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf8F,IAAK,CACH/F,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf+F,IAAK,CACHhG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,4BAEfgG,KAAM,CACJjG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfiG,IAAK,CACHlG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfkG,IAAK,CACHnG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,mBAEfmG,KAAM,CACJpG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,uBAEfoG,KAAM,CACJrG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,sBAEfqG,KAAM,CACJtG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfsG,IAAK,CACHvG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfuG,KAAM,CACJxG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfwG,KAAM,CACJzG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfyG,IAAK,CACH1G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf0G,IAAK,CACH3G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,qBAEf2G,IAAK,CACH5G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf4G,IAAK,CACH7G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf6G,IAAK,CACH9G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf8G,KAAM,CACJ/G,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf+G,OAAQ,CACNhH,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfgH,MAAO,CACLjH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfiH,QAAS,CACPlH,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkH,MAAO,CACLnH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmH,IAAK,CACHpH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoH,IAAK,CACHrH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqH,KAAM,CACJtH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfsH,IAAK,CACHvH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfuH,KAAM,CACJxH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfwH,IAAK,CACHzH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfyH,KAAM,CACJ1H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEf0H,KAAM,CACJ3H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,6BAEf2H,IAAK,CACH5H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf4H,IAAK,CACH7H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf6H,KAAM,CACJ9H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf8H,IAAK,CACH/H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+H,KAAM,CACJhI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgI,KAAM,CACJjI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfiI,IAAK,CACHlI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oBAEfkI,KAAM,CACJnI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmI,OAAQ,CACNpI,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfoI,IAAK,CACHrI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqI,KAAM,CACJtI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsI,KAAM,CACJvI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuI,IAAK,CACHxI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfwI,IAAK,CACHzI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfyI,IAAK,CACH1I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEf0I,KAAM,CACJ3I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2I,KAAM,CACJ5I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4I,IAAK,CACH7I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf6I,MAAO,CACL9I,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8I,IAAK,CACH/I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+I,IAAK,CACHhJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfgJ,MAAO,CACLjJ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiJ,IAAK,CACHlJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfkJ,YAAM,CACJnJ,OAAQ,YACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfmJ,OAAQ,CACNpJ,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfoJ,IAAK,CACHrJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqJ,IAAK,CACHtJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsJ,IAAK,CACHvJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfuJ,IAAK,CACHxJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfwJ,IAAK,CACHzJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfyJ,MAAO,CACL1J,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0J,KAAM,CACJ3J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2J,IAAK,CACH5J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf4J,IAAK,CACH7J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6J,KAAM,CACJ9J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf8J,IAAK,CACH/J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf+J,KAAM,CACJhK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfgK,KAAM,CACJjK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiK,IAAK,CACHlK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkK,KAAM,CACJnK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmK,SAAU,CACRpK,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoK,aAAO,CACLrK,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfqK,IAAK,CACHtK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfsK,KAAM,CACJvK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuK,MAAO,CACLxK,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfwK,KAAM,CACJzK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfyK,KAAM,CACJ1K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf0K,IAAK,CACH3K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf2K,IAAK,CACH5K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf4K,KAAM,CACJ7K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf6K,KAAM,CACJ9K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf8K,KAAM,CACJ/K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+K,IAAK,CACHhL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfgL,OAAQ,CACNjL,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiL,MAAO,CACLlL,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfkL,GAAI,CACFnL,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmL,IAAK,CACHpL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoL,KAAM,CACJrL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfqL,KAAM,CACJtL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsL,IAAK,CACHvL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuL,IAAK,CACHxL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfwL,KAAM,CACJzL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEfyL,GAAI,CACF1L,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf0L,IAAK,CACH3L,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2L,KAAM,CACJ5L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4L,OAAQ,CACN7L,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf6L,MAAO,CACL9L,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf8L,KAAM,CACJ/L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,+BAEf+L,GAAI,CACFhM,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfgM,IAAK,CACHjM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sBAEfiM,IAAK,CACHlM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfkM,IAAK,CACHnM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmM,IAAK,CACHpM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfoM,SAAU,CACRrM,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfqM,IAAK,CACHtM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsM,IAAK,CACHvM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfnD,WAAY,CACVkD,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEbuM,WAAY,CACVxM,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfwM,KAAM,CACJzM,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfyM,KAAM,CACJ1M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0M,MAAO,CACL3M,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf1E,MAAO,CACLyE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf2M,MAAO,CACL5M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf4M,MAAO,CACL7M,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6M,SAAU,CACR9M,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfpE,IAAK,CACHmE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfrD,IAAK,CACHoD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8M,IAAK,CACH/M,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfzD,IAAK,CACHwD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf+M,KAAM,CACJhN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,4BAEfgN,IAAK,CACHjN,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4B,6BC9gEnB,gNAEYxI,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKL,IAAMyV,EAAiBvV,YAAmD,uBACpEwV,EAAmBxV,YAAmB,yBACtCD,EAAYC,YAAmD,kBAC/DyV,EAAmBzV,YAM7B,yBACU0V,EAAe1V,YAA2C,sB,8BCjBvE,iOAIa2V,EAAW,IAAItV,IAAU,GACzBuV,EAAU,IAAIvV,IAAU,GACxBwV,EAAW,IAAIxV,IAAU,GACzBE,EAAU,IAAIF,IAAU,IAExByV,EAA8B,SAACC,GAAD,OACzCC,EAAkBD,GAAUE,UAEjBD,EAAoB,SAACD,GAAD,OAA2C,IAAI1V,IAAU0V,EAASvX,c,6JCyBpF0X,IAxByB,SAAC,GASlC,IARLxX,EAQI,EARJA,MAQI,IAPJyX,aAOI,MAPI,OAOJ,MANJ/V,gBAMI,MANO,EAMP,MALJgW,kBAKI,SAJJC,EAII,EAJJA,KACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,QACGC,EACC,iBACEC,EAAgB9T,iBAAO,GAK7B,OAHA/F,qBAAU,WACR6Z,EAAc1T,QAAUrE,IACvB,CAACA,IAEF,eAAC,KAAD,yBAAMyX,MAAOC,EAAa,eAAiBD,EAAOI,QAASA,GAAaC,GAAxE,cACGF,GAAU,+BAAOA,IAClB,cAAC,IAAD,CAASI,MAAOD,EAAc1T,QAAS4T,IAAKjY,EAAO0B,SAAUA,EAAUwW,SAAU,EAAGC,UAAU,MAC7FR,GAAQ,+BAAOA,U,yxDClBVS,E,0HAAAA,K,0BAAAA,E,kBAAAA,E,iBAAAA,M,KAMZ,IAgCaC,EAAiB,WAC5B,IAAQC,EAAgBC,cAAhBD,YACR,EAAsC1a,qBAAtC,mBAAO4a,EAAP,KAAoBC,EAApB,KAYA,OAVAva,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQua,EAAeC,cADvB,SAEuBD,EAAaF,cAFpC,OAEQI,EAFR,OAGEH,EAAe,IAAI9W,IAAUiX,EAAO9Y,aAHtC,4CADc,uBAAC,WAAD,wBAOd+Y,KACC,CAACP,IAEGE,GAEIM,EAA0B,WACrC,IAAQR,EAAgBC,cAAhBD,YACR,EAAsC1a,qBAAtC,mBAAO4a,EAAP,KAAoBC,EAApB,KAYA,OAVAva,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQua,EAAeK,cADvB,SAEuBL,EAAaF,cAFpC,OAEQI,EAFR,OAGEH,EAAe,IAAI9W,IAAUiX,EAAO9Y,aAHtC,4CADc,uBAAC,WAAD,wBAOd+Y,KACC,CAACP,IAEGE,GAEIQ,EAAuB,WAClC,IAAQV,EAAgBC,cAAhBD,YACR,EAAsC1a,qBAAtC,mBAAO4a,EAAP,KAAoBC,EAApB,KAYA,OAVAva,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQua,EAAeO,cADvB,SAEuBP,EAAaF,cAFpC,OAEQI,EAFR,OAGEH,EAAe,IAAI9W,IAAUiX,EAAO9Y,aAHtC,4CADc,uBAAC,WAAD,wBAOd+Y,KACC,CAACP,IAEGE,GAEIU,EAAgC,WAC3C,IAAQZ,EAAgBC,cAAhBD,YACR,EAAsC1a,qBAAtC,mBAAO4a,EAAP,KAAoBC,EAApB,KAYA,OAVAva,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQua,EAAeS,cADvB,SAEuBT,EAAaF,cAFpC,OAEQI,EAFR,OAGEH,EAAe,IAAI9W,IAAUiX,EAAO9Y,aAHtC,4CADc,uBAAC,WAAD,wBAOd+Y,KACC,CAACP,IAEGE,GAEIY,EAAkB,WAC7B,IAAQd,EAAgBC,cAAhBD,YACR,EAAsC1a,qBAAtC,mBAAO4a,EAAP,KAAoBC,EAApB,KAYA,OAVAva,qBAAU,WAAM,4CACd,8BAAAC,EAAA,6DACQua,EAAeW,cADvB,SAEuBX,EAAaF,cAFpC,OAEQI,EAFR,OAGEH,EAAe,IAAI9W,IAAUiX,EAAO9Y,aAHtC,4CADc,uBAAC,WAAD,wBAOd+Y,KACC,CAACP,IAEGE,GAGIc,EAAmB,SAACC,GAC/B,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAGI4X,EAA0B,SAACP,GACtC,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI6X,EAAqB,SAACR,GACjC,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI8X,EAAoB,SAACT,GAChC,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAGI+X,EAAkB,SAACV,GAC9B,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIgY,EAAmB,SAACX,GAC/B,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIiY,EAAmB,SAACZ,GAC/B,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAGIkY,EAAW,SAACb,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEImY,EAAW,SAACd,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIoY,EAAW,SAACf,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIqY,EAAW,SAAChB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIsY,EAAW,SAACjB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIuY,EAAW,SAAClB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIwY,EAAW,SAACnB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIyY,EAAW,SAACpB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI0Y,EAAW,SAACrB,GACvB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI2Y,EAAY,SAACtB,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI4Y,EAAY,SAACvB,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI6Y,EAAY,SAACxB,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI8Y,EAAY,SAACzB,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI+Y,EAAY,SAAC1B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIgZ,EAAY,SAAC3B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIiZ,EAAY,SAAC5B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIkZ,EAAY,SAAC7B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEImZ,EAAY,SAAC9B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIoZ,EAAY,SAAC/B,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIqZ,EAAY,SAAChC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIsZ,EAAY,SAACjC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIuZ,EAAY,SAAClC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIwZ,EAAY,SAACnC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIyZ,EAAY,SAACpC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI0Z,GAAY,SAACrC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI2Z,GAAY,SAACtC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI4Z,GAAY,SAACvC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI6Z,GAAY,SAACxC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI8Z,GAAY,SAACzC,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEI+Z,GAAY,SAAC1C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIga,GAAY,SAAC3C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIia,GAAY,SAAC5C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIka,GAAY,SAAC7C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIma,GAAY,SAAC9C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIoa,GAAY,SAAC/C,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIqa,GAAY,SAAChD,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIsa,GAAY,SAACjD,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIua,GAAY,SAAClD,GACxB,MAA8B3b,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQlB,EAAgBC,cAAhBD,YAYR,OAVApa,qBAAU,YACU,uCAAG,8BAAAC,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,SAEDE,EAASE,UAAU,8CAFlB,OAEbC,EAFa,OAGnBJ,EAAW,IAAI7X,IAAUiY,EAAI9Z,aAHV,2CAAH,qDAMlB+Z,KACC,CAACN,EAAcjB,IAEXpW,GAEIwa,GAAmB,WAC9B,MAAsC9e,mBAASwa,EAAYuE,aAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8Bjf,mBAASqZ,KAAvC,mBAAO/U,EAAP,KAAgBsX,EAAhB,KACQsD,EAAYlZ,cAAZkZ,QACR,EAAwCC,cAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAkBrB,OAhBA/e,qBAAU,WAWJ4e,GAVc,uCAAG,4BAAA3e,EAAA,+EAEW+F,IAAkBgZ,WAAWJ,GAFxC,OAEXK,EAFW,OAGjB3D,EAAW,IAAI7X,IAAUwb,EAAcrd,aACvC+c,EAAezE,EAAYgF,SAJV,gDAMjBP,EAAezE,EAAYiF,QANV,yDAAH,oDAWhBxD,KAED,CAACiD,EAASE,EAAaxD,EAAYqD,IAE/B,CAAE3a,UAAS0a,cAAaU,QAASL,IAG3BM,IA71BS,SAAChE,GACvB,IAAQoD,EAAiCvE,EAAjCuE,YAAaS,EAAoBhF,EAApBgF,QAASC,EAAWjF,EAAXiF,OAC9B,EAAwCzf,mBAA+B,CACrEsE,QAAS+U,IACT2F,YAAaD,IAFf,mBAAOa,EAAP,KAAqBC,EAArB,KAIQX,EAAYlZ,cAAZkZ,QACAY,EAAgBnF,cAAhBmF,YAsBR,OApBAxf,qBAAU,WAeJ4e,GAdc,uCAAG,8BAAA3e,EAAA,6DACbsb,EAAWC,YAAiBH,GADf,kBAGCE,EAASE,UAAUmD,GAHpB,OAGXlD,EAHW,OAIjB6D,EAAgB,CAAEvb,QAAS,IAAIP,IAAUiY,EAAI9Z,YAAa8c,YAAaQ,IAJtD,gDAMjBO,QAAQC,MAAR,MACAH,GAAgB,SAACI,GAAD,mBAAC,eACZA,GADW,IAEdjB,YAAaS,OATE,yDAAH,oDAehBxD,KAED,CAACiD,EAASvD,EAAcmE,EAAaN,EAASC,IAE1CG,I,oCCjCF,IAAKM,EA8BAC,EA4FAC,EAqDAC,EAoCAC,EAnNZ,0K,SAAYJ,K,sBAAAA,E,+BAAAA,M,cA8BAC,K,sBAAAA,E,YAAAA,E,kBAAAA,E,aAAAA,M,cA4FAC,K,kBAAAA,E,eAAAA,M,cAqDAC,K,kBAAAA,E,YAAAA,E,cAAAA,E,uBAAAA,M,cAoCAC,O,iCAAAA,I,qBAAAA,I,eAAAA,I,uBAAAA,I,oBAAAA,M,qCCnOZ,6nBAYaC,EAAmB,WAA6B,IAA5BC,EAA2B,wDACpDC,EAAWC,cACjB,EAAwB/F,cAAhBD,EAAR,EAAQA,YACR,EAAoB1U,cAAZkZ,EAAR,EAAQA,QAER5e,qBAAU,WACR,IACMqgB,GADeH,EAAiBI,IAAcC,KAC1BC,KAAI,SAACC,GAAD,OAAiBA,EAAYC,OAE3DP,EAASQ,YAA0BN,IAE/BzB,GACFuB,EAASS,YAAuB,CAAEhC,UAASyB,YAE5C,CAACH,EAAgBC,EAAU/F,EAAawE,KAQhCiC,EAAsB,WACjC,IAAMV,EAAWC,cACTZ,EAAgBnF,cAAhBmF,YAERxf,qBAAU,WACRmgB,EAASQ,YAA0B,CAAC,EAAE,EAAG,OACxC,CAACR,EAAUX,KAGHsB,EAAW,WAEtB,OADcC,aAAY,SAACjhB,GAAD,OAAkBA,EAAMkhB,UAIvCC,EAAiB,SAACP,GAE7B,OADaK,aAAY,SAACjhB,GAAD,OAAkBA,EAAMkhB,MAAM/f,KAAKigB,MAAK,SAACC,GAAD,OAAOA,EAAET,MAAQA,SAIvEU,EAAsB,SAACC,GAElC,OADaN,aAAY,SAACjhB,GAAD,OAAkBA,EAAMkhB,MAAM/f,KAAKigB,MAAK,SAACC,GAAD,OAAOA,EAAEE,WAAaA,SAI5EC,EAAc,SAACZ,GAC1B,IAAMa,EAAON,EAAeP,GAE5B,MAAO,CACLc,UAAWD,EAAKE,SAAW,IAAIhe,IAAU8d,EAAKE,SAASD,WAAazI,IACpE2I,aAAcH,EAAKE,SAAW,IAAIhe,IAAU8d,EAAKE,SAASC,cAAgB3I,IAC1E4I,cAAeJ,EAAKE,SAAW,IAAIhe,IAAU8d,EAAKE,SAASE,eAAiB5I,IAC5E6I,SAAUL,EAAKE,SAAW,IAAIhe,IAAU8d,EAAKE,SAASG,UAAY7I,MAKzD8I,EAAsB,SAACnB,GAClC,IAAMa,EAAON,EAAeP,GAC5B,OAAOa,GAAQ,IAAI9d,IAAU8d,EAAKO,MAAMC,YAG7BC,EAAkB,SAACvW,GAC9B,IAAM8V,EAAOH,EAAoB3V,GAC3BwW,EAAsBJ,EAAoBN,EAAKb,KACjDwB,EAAenJ,IAEnB,GAAIwI,EAAKY,eAAiBZ,EAAKa,oBAAqB,CAElD,IAEMC,EAFyBJ,EAAoBve,MAAM6d,EAAKe,kBAED5e,MAAM,GAE7D6e,EAAgB1e,YAAiB,IAAIJ,IAAU8d,EAAKY,gBAC1DD,EAAeG,EAA8Btf,IAAIwf,GAGnD,OAAOL,GAwBIM,EAAkB,WAC7B,IAAMC,EAAcxB,EAAe,GACnC,OAAO,IAAIxd,IAAUgf,EAAYC,WAAWX,YAGjCY,EAAmB,WAC9B,IAEMC,EAFc3B,EAAe,GAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAKOE,EAAoB,WAC/B,IAEMF,EAFc3B,EAAe,IAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOG,EAAkB,WAC7B,IAEMH,EAFc3B,EAAe,GAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOI,EAAkB,WAC7B,IAEMJ,EAFc3B,EAAe,IAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOK,EAAkB,WAC7B,IAEML,EAFc3B,EAAe,IAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOM,EAAsB,WACjC,IAEMN,EAFc3B,EAAe,IAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOO,EAAmB,WAC9B,IAEMP,EAFc3B,EAAe,IAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOQ,EAAkB,WAC7B,IAEMR,EAFc3B,EAAe,GAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAIOS,EAAyB,WACpC,IAEMT,EAFc3B,EAAe,GAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,KAKOU,EAAkB,WAC7B,IAEMV,EAFc3B,EAAe,GAEOa,MAAMC,UAMhD,OAJsBc,mBAAQ,WAC5B,OAAO,IAAIpf,IAAUmf,KACpB,CAACA,M,6BCnON,stCA6DMW,EAAc,SAACC,EAAUjd,EAAiBkd,GAC9C,IAAMC,EAAgB,OAAGD,QAAH,IAAGA,IAAUzd,IACnC,OAAO,IAAIhB,IAAO2e,SAASpd,EAASid,EAAKE,IAG9BlI,EAAmB,SAACjV,EAAiBkd,GAChD,OAAOF,EAAYK,EAAUrd,EAASkd,IAE3BI,EAAoB,SAACtd,EAAiBkd,GACjD,OAAOF,EAAYO,EAAWvd,EAASkd,IAK5BM,EAAmB,SAACxd,EAAiBkd,GAChD,OAAOF,EAAYS,EAAUzd,EAASkd,IAE3BQ,EAAmB,SAAC1d,EAAiBkd,GAChD,OAAOF,EAAYW,EAAU3d,EAASkd,IAE3BU,EAAsB,SAACC,EAAYX,GAC9C,IAAMY,EAASC,IAAYpD,MAAK,SAACqD,GAAD,OAAUA,EAAKC,SAAWJ,KACpDZ,EAAMa,EAAOI,eAAiB5E,IAAa6E,QAAUC,EAAcC,EACzE,OAAOrB,EAAYC,EAAKld,YAAW+d,EAAOQ,iBAAkBpB,IAEjDqB,EAAwB,SAACV,EAAYX,GAChD,IAAMY,EAASC,IAAYpD,MAAK,SAACqD,GAAD,OAAUA,EAAKC,SAAWJ,KAC1D,OAAOb,EAAYwB,EAAYze,YAAW+d,EAAOQ,iBAAkBpB,IAExDuB,EAA4B,SAACvB,GACxC,OAAOF,EAAYha,EAAgBD,cAA4Bma,IAEpDhJ,EAAkB,SAACgJ,GAC9B,OAAOF,EAAY0B,EAASve,cAAkB+c,IAEnC5I,EAAuB,SAAC4I,GACnC,OAAOF,EAAY0B,EAASpe,cAAuB4c,IAExC1I,EAAoB,SAAC0I,GAChC,OAAOF,EAAY0B,EAAShe,cAAoBwc,IAErCxI,EAA6B,SAACwI,GACzC,OAAOF,EAAY0B,EAAS9d,cAA6Bsc,IAE9CtI,EAAiB,SAACsI,GAC7B,OAAOF,EAAY0B,EAAS5d,cAAiBoc,IAElCyB,EAAqB,SAACzB,GACjC,OAAOF,EAAY4B,EAAYrc,cAA4B2a,IAEhD2B,EAA2B,SAAC3B,GACvC,OAAOF,EAAY8B,EAAmBrc,cAA4Bya,IAEvD6B,EAA0B,SAAC7B,GACtC,OAAOF,EAAYgC,EAAiBrc,cAA0Bua,IAEnD+B,EAA0B,SAAC/B,GACtC,OAAOF,EAAYkC,EAAiBjc,cAA0Bia,IAEnDiC,EAAuB,SAACjC,GACnC,OAAOF,EAAYoC,EAAc/c,cAAuB6a,IAE7CmC,EAAwB,SAACnC,GACpC,OAAOF,EAAY9b,EAAYF,cAAwBkc,IAE5CoC,EAAyB,SAACpC,GACrC,OAAOF,EAAYuC,EAAgB1c,cAAyBqa,IAEjDsC,EAAgC,SAACtC,GAC5C,OAAOF,EAAYyC,EAAuBtc,cAAgC+Z,IAE/DwC,GAAuB,SAACxC,GACnC,OAAOF,EAAY2C,EAActc,cAAuB6Z,IAE7C0C,GAAuB,SAAC1C,GACnC,OAAOF,EAAY6C,EAActc,cAAuB2Z,IAG7C4C,GAAyB,SAAC5C,GACrC,OAAOF,EAAY+C,EAAgBtc,cAAyByZ,IAGjD8C,GAA6B,SAAC9C,GACzC,OAAOF,EAAYiD,EAAoBtc,cAA6BuZ,IAEzDgD,GAAuB,SAAChD,GACnC,OAAOF,EAAYmD,EAAchf,cAAuB+b,IAE7CkD,GAAmC,SAAClD,GAC/C,OAAOF,EAAYqD,EAA0Bxc,cAAmCqZ,IAErEoD,GAAoC,SAACpD,GAChD,OAAOF,EAAYuD,EAA2Bxc,cAAoCmZ,IAEvEsD,GAAyB,SAACtD,GACrC,OAAOF,EAAYyD,EAAgBxc,cAAyBiZ,K,6BCzJ9D,qLAuBA,SAASwD,EAAYC,GACnB,OAAmD,IAA5C,CAAC,SAAU,UAAUC,eAAeD,GAG7C,SAASE,EAAkBF,GACzB,YACQ3nB,IAAN2nB,GACCG,MAAMC,QAAQJ,IAAMA,EAAEK,OAAM,SAACC,GAAD,OAAQP,EAAYO,IAAQH,MAAMC,QAAQE,IAAOA,EAAGD,MAAMN,MAU3F,IAAMQ,EAA6B,CAAEC,OAAO,EAAOC,iBAAapoB,EAAW0B,UAAM1B,GAGpEqoB,EAAgC,CAC3CC,eAAgBC,KAIlB,SAASC,EAAaC,EAA6BvjB,GACjD,IAAQmB,EAAYH,cAAZG,QACFqiB,EAAclH,aAClB,SAACjhB,GAAD,OAAWA,EAAMooB,UAAUD,eAEvB9H,EAAWgI,cAEXC,EAA6BvF,mBACjC,4BACEwF,KAAKC,UAAL,iBACEN,QADF,IACEA,GADF,UACEA,EACIO,QAAO,SAACC,GAAD,OAAkBC,QAAQD,aAFvC,iBACE,EAEIhI,IAAIkI,YAHV,aACE,EAGIC,cAJN,QAIgB,MAElB,CAACX,IA4BH,OAxBAhoB,qBAAU,WACR,IAAM4oB,EAAqBP,KAAKQ,MAAMT,GACtC,GAAKxiB,GAA+B,IAApBgjB,EAASE,OAAzB,CAEA,IAAMd,EAAQY,EAASpI,KAAI,SAACxf,GAAD,OAAS+nB,YAAa/nB,MASjD,OARAmf,EACE6I,YAAsB,CACpBpjB,UACAoiB,QACAvjB,aAIG,WACL0b,EACE8I,YAAyB,CACvBrjB,UACAoiB,QACAvjB,iBAIL,CAACmB,EAASua,EAAU1b,EAAS2jB,IAEzBvF,mBACL,kBACEmF,EAAMxH,KAAgB,SAAC0I,GAAU,IAAD,EAC9B,IAAKtjB,IAAYsjB,EAAM,OAAOzB,EAE9B,IACIxmB,EADEkoB,EAAM,UAAGlB,EAAYriB,UAAf,aAAG,EAAuB8iB,YAAUQ,IAOhD,OALU,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQloB,OAAyB,QAAX,OAANkoB,QAAM,IAANA,OAAA,EAAAA,EAAQloB,QAE1BA,EAAOkoB,EAAOloB,MAGT,CAAEymB,OAAO,EAAMzmB,OAAM0mB,YAAW,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAQxB,kBAErD,CAACM,EAAaD,EAAOpiB,IAgBzB,IAAMwjB,EAAgC,CAAE1B,OAAO,EAAOyB,YAAQ5pB,EAAW8pB,SAAS,EAAOC,SAAS,EAAO5J,OAAO,GAC1G6J,EAAgC,CAAE7B,OAAO,EAAMyB,YAAQ5pB,EAAW8pB,SAAS,EAAMC,SAAS,EAAM5J,OAAO,GAE7G,SAAS8J,EACPC,EACAC,EACAC,EACAC,GAEA,IAAKH,EAAY,OAAOL,EACxB,IAAQ1B,EAA6B+B,EAA7B/B,MAAOzmB,EAAsBwoB,EAAtBxoB,KAAM0mB,EAAgB8B,EAAhB9B,YACrB,IAAKD,EAAO,OAAO0B,EACnB,GAAI1B,IAAUC,EAAa,OAAO4B,EAClC,IAAKG,IAAsBC,IAAaC,EAAmB,OAAOL,EAClE,IAEIJ,EAFEU,EAAU5oB,GAAQA,EAAK6nB,OAAS,EAChCQ,GAAU,OAAC3B,QAAD,IAACA,IAAe,GAAKiC,EAErC,GAAIC,GAAW5oB,EACb,IACEkoB,EAASO,EAAkBI,qBAAqBH,EAAU1oB,GAC1D,MAAOye,GAEP,OADAD,QAAQsK,MAAM,6BAA8BJ,EAAU1oB,GAC/C,CACLymB,OAAO,EACP2B,SAAS,EACT3J,OAAO,EACP4J,UACAH,UAIN,MAAO,CACLzB,OAAO,EACP2B,SAAS,EACTC,UACAH,SACAzJ,OAAQmK,GAIL,SAASG,EACdzO,EACA0O,EACAC,EACAzlB,GAEA,IAAMklB,EAAW9G,mBAAQ,+BAAMtH,QAAN,IAAMA,GAAN,UAAMA,EAAU4O,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAAC1O,EAAU0O,IAelFI,EAAUtC,EAbFlF,mBACZ,kBACEtH,GAAYoO,GAAYO,GAAcA,EAAWpB,OAAS,EACtDoB,EAAW1J,KAAU,SAAC8J,GACpB,MAAO,CACL/jB,QAASgV,EAAShV,QAClBgkB,SAAUhP,EAAS4O,UAAUK,mBAAmBb,EAAUW,OAG9D,KACN,CAACJ,EAAY3O,EAAUoO,IAGWllB,GAE9BmlB,EAAoBa,cAE1B,OAAO5H,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,GAAD,OAAYK,EAAYL,EAAD,OAAS5N,QAAT,IAASA,OAAT,EAASA,EAAU4O,UAAWR,EAAUC,QACjF,CAACD,EAAUpO,EAAU8O,EAAST,IAG5B,SAASc,EACdljB,EACAkiB,EACAO,EACAC,EACAzlB,GAEA,IAAMklB,EAAW9G,mBAAQ,kBAAM6G,EAAkBU,YAAYH,KAAa,CAACP,EAAmBO,IACxFM,EAA+B1H,mBACnC,kBACE8G,GAAYvC,EAAkB8C,GAC1BR,EAAkBc,mBAAmBb,EAAUO,QAC/C3qB,IACN,CAAC2qB,EAAYR,EAAmBC,IAkB5BU,EAAUtC,EAfFlF,mBACZ,kBACE8G,GAAYniB,GAAaA,EAAUshB,OAAS,GAAKyB,EAC7C/iB,EAAUgZ,KAAsB,SAACja,GAC/B,OAAOA,GAAWgkB,EACd,CACEhkB,UACAgkB,iBAEFhrB,KAEN,KACN,CAACiI,EAAW+iB,EAAUZ,IAGYllB,GAE9BmlB,EAAoBa,cAE1B,OAAO5H,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,GAAD,OAAYK,EAAYL,EAAQO,EAAmBC,EAAUC,QAC/E,CAACD,EAAUU,EAASX,EAAmBE,IAGrC,SAASe,EACdpP,EACA0O,EACAK,EACA7lB,GAEA,IAAMklB,EAAW9G,mBAAQ,+BAAMtH,QAAN,IAAMA,GAAN,UAAMA,EAAU4O,iBAAhB,aAAM,EAAqBC,YAAYH,KAAa,CAAC1O,EAAU0O,IAalFd,EAASpB,EAXDlF,mBAAgB,WAC5B,OAAOtH,GAAYoO,GAAYvC,EAAkBkD,GAC7C,CACE,CACE/jB,QAASgV,EAAShV,QAClBgkB,SAAUhP,EAAS4O,UAAUK,mBAAmBb,EAAUW,KAG9D,KACH,CAAC/O,EAAUoO,EAAUW,IAEW7lB,GAAS,GACtCmlB,EAAoBa,cAE1B,OAAO5H,mBAAQ,WACb,OAAO2G,EAAYL,EAAD,OAAS5N,QAAT,IAASA,OAAT,EAASA,EAAU4O,UAAWR,EAAUC,KACzD,CAACT,EAAQ5N,EAAUoO,EAAUC,M,y7BC/P5BgB,GAAoD,mBACvDpkB,IAAQC,QAAU,8CADqC,cAEvDD,IAAQuE,QAAU,8CAFqC,G,QCyC7C8f,EAAmB,SAACtkB,GAC/B,IAAQZ,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMkB,YAAiBxd,EAASZ,EAAQmlB,eAAc,CAACvkB,EAASZ,KAGpEolB,EAAmB,SAACxkB,GAC/B,IAAQZ,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMoB,YAAiB1d,EAASZ,EAAQmlB,eAAc,CAACvkB,EAASZ,KAGpEqlB,EAAW,SAACzkB,GACvB,IAAQZ,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMrH,YAAiBjV,EAASZ,EAAQmlB,eAAc,CAACvkB,EAASZ,KAMpEslB,EAAY,SAAC1kB,GACxB,IAAQZ,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMgB,YAAkBtd,EAASZ,EAAQmlB,eAAc,CAACvkB,EAASZ,KAGrEulB,EAAU,WACrB,IAAQvlB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMpI,YAAgB9U,EAAQmlB,eAAc,CAACnlB,KAGjDwlB,EAAkB,WAC7B,IAAQxlB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMyC,YAAwB3f,EAAQmlB,eAAc,CAACnlB,KAQzDylB,EAAa,WACxB,IAAQzlB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMqC,YAAmBvf,EAAQmlB,eAAc,CAACnlB,KAGpD0lB,EAAuB,WAClC,IAAQ1lB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAM6C,YAAqB/f,EAAQmlB,eAAc,CAACnlB,KAGtD2lB,EAAgB,WAC3B,IAAQ3lB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAM+C,YAAsBjgB,EAAQmlB,eAAc,CAACnlB,KAGvD4lB,EAAc,SAACnH,GAC1B,IAAQze,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMsB,YAAoBC,EAAIze,EAAQmlB,eAAc,CAAC1G,EAAIze,KAQ7D6lB,EAA4B,WACvC,IAAQ7lB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMmC,YAA0Brf,EAAQmlB,eAAc,CAACnlB,KAQ3D8lB,EAAyB,WACpC,IAAQ9lB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMgD,YAAuBlgB,EAAQmlB,eAAc,CAACnlB,KAGxD+lB,EAAgC,WAC3C,IAAQ/lB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMkD,YAA8BpgB,EAAQmlB,eAAc,CAACnlB,KAG/DgmB,EAAuB,WAClC,IAAQhmB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMoD,YAAqBtgB,EAAQmlB,eAAc,CAACnlB,KAGtDimB,EAAuB,WAClC,IAAQjmB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMsD,YAAqBxgB,EAAQmlB,eAAc,CAACnlB,KAGtDkmB,EAAyB,WACpC,IAAQlmB,EAAYF,cAAZE,QACR,OAAOkd,mBAAQ,kBAAMwD,YAAuB1gB,EAAQmlB,eAAc,CAACnlB,KAkBxDmmB,EAAyB,WACpC,MAA6BrmB,cAArBmZ,EAAR,EAAQA,QAASjZ,EAAjB,EAAiBA,QAYjB,OAAOkd,mBAAQ,kBAAMkE,YAAuBnI,EAAUjZ,EAAQmlB,YAAcnlB,KAAU,CAACA,EAASiZ,KAMlG,SAASmN,EAAYxlB,EAA6BylB,GAAyD,IAA/CC,IAA8C,yDACxG,EAA6BxmB,cAArBE,EAAR,EAAQA,QAASiZ,EAAjB,EAAiBA,QAEjB,OAAOiE,mBAAQ,WACb,IAAKtc,IAAYylB,IAAQrmB,EAAS,OAAO,KACzC,IACE,OAAO4d,YAAYhd,EAASylB,EAAKrmB,EAASsmB,GAAwBrN,EAAUA,OAAUrf,GACtF,MAAOmgB,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACnZ,EAASylB,EAAKrmB,EAASsmB,EAAsBrN,IAG5C,SAASsN,EAAiB7Q,EAAuB4Q,GACtD,OAAOF,EAAY1Q,EAAc8Q,EAAWF,GAGvC,SAASG,EAAgBH,GAC9B,IAAQrmB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,EAAUymB,IAAKzmB,GAASW,aAAUhH,EAAW+sB,EAAUL,GAGrE,SAASM,EAAwBN,GACtC,IACI1lB,EADIX,EAAYH,cAAZG,QAER,GAAIA,EAEF,OAAQA,GACN,KAAKY,IAAQC,QACb,KAAKD,IAAQuE,QACXxE,EAAU,6CAIhB,OAAOwlB,EAAYxlB,EAASimB,EAASP,GAGhC,SAASQ,EAAuBlmB,EAA6B0lB,GAClE,OAAOF,EAAYxlB,EAASmmB,EAAyBT,GAGhD,SAASU,EAAwBtR,EAAuB4Q,GAC7D,OAAOF,EAAY1Q,EAAcuR,IAAmBX,GAG/C,SAASY,EAAgBC,EAAsBb,GACpD,OAAOF,EAAYe,EAAaC,IAAmBd,GAG9C,SAASe,IACd,IAAQpnB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,GAAWglB,EAAmBhlB,GAAUqnB,GAAe,K,8BCpOrE,IAAKC,EAAZ,kC,SAAYA,O,mBAAAA,I,mBAAAA,I,6BAAAA,I,4BAAAA,M,mCCAZ,8bAeYC,EAfZ,S,SAeYA,K,yBAAAA,E,YAAAA,E,eAAAA,M,KAML,IAAMC,EAAuBhqB,YAA0C,6BACjEiqB,EAA0BjqB,YAA6C,gCACvEkqB,EAA8BlqB,YACzC,oCAEWmqB,EAAqBnqB,YAAuC,2BAC5DoqB,EAAqBpqB,YAAmD,2BACxEqqB,EAAwBrqB,YAAmD,8BAC3EsqB,EAAoBtqB,YAAiD,0BACrEuqB,EACXvqB,YAAgF,6BAErEwqB,EAAYxqB,YAAmB,kBAC/ByqB,EAAczqB,YAAmB,oBACjC0qB,EAAc1qB,YAAmB,oBACjC2qB,EAA2B3qB,YACtC,kC,8BCrCF,2ZAYO,SAAS4qB,EAAUlsB,GACxB,IACE,OAAOwE,qBAAWxE,GAClB,SACA,OAAO,GAIJ,SAASmsB,EACdhtB,EACAitB,GAES,IADTtoB,EACQ,uDADWY,IAAQC,QAE3B,OAAQynB,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmBvoB,GAA7B,eAA4C3E,GAE9C,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,4BAAyD3E,GAE3D,QACE,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,oBAAiD3E,IAMhD,SAASmtB,EAAe7nB,GAAqC,IAApB8nB,EAAmB,uDAAX,EAChDC,EAASN,EAAUznB,GACzB,IAAK+nB,EACH,MAAMnsB,MAAM,gCAAD,OAAiCoE,EAAjC,OAEb,MAAM,GAAN,OAAU+nB,EAAOC,UAAU,EAAGF,EAAQ,GAAtC,cAA8CC,EAAOC,UAAU,GAAKF,IAI/D,SAASG,EAAmB1sB,GACjC,OAAOA,EAAM2sB,IAAIhrB,IAAUwB,KAAK,KAAOypB,IAAIjrB,IAAUwB,KAAK,OAAQlC,IAAIU,IAAUwB,KAAK,MAIhF,SAAS0pB,EAAqBC,GACnC,OAAO,IAAIC,IAAQC,IAAKC,OAAOH,GAAME,IAAKC,OAAO,MAG5C,SAASC,EAAwBltB,EAAuBmtB,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM9sB,MAAM,8BAAD,OAA+B8sB,IAE5C,MAAO,CACLH,IAAKI,OAAOJ,IAAKK,SAASrtB,EAAMstB,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,MACjFD,IAAKI,OAAOJ,IAAKK,SAASrtB,EAAMstB,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,OAe9E,SAASxL,EAAYhd,EAAiBylB,EAAUrmB,EAAuBiZ,GAC5E,IAAKoP,EAAUznB,IAAYA,IAAY8oB,IACrC,MAAMltB,MAAM,gCAAD,OAAiCoE,EAAjC,OAGb,OAAO,IAAIod,WAASpd,EAASylB,EAVxB,SAA6BrmB,EAAuBiZ,GACzD,OAAOA,EANF,SAAmBjZ,EAAuBiZ,GAC/C,OAAOjZ,EAAQmlB,UAAUlM,GAAS0Q,mBAKjBxE,CAAUnlB,EAASiZ,GAAWjZ,EASb4pB,CAAoB5pB,EAASiZ,IAI1D,SAAS4Q,EAAkBC,EAAW9pB,EAAuBiZ,GAClE,OAAO2E,EAAYmM,IAAgBC,IAAuBhqB,EAASiZ,GAO9D,SAASgR,EAAaC,GAC3B,OAAOA,EAAOluB,QAAQ,sBAAuB,QAGxC,SAASmuB,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,KACVxH,QAAQuH,aAAoBllB,MAApB,UAA6BilB,EAAcC,EAASpqB,gBAApD,aAA6B,EAAkCoqB,EAASzpB,a,07BCxGlF,IAAMmpB,EAAiB,6CACjBQ,EAAkB,6CAQlBC,GAA6C,mBACvD3pB,IAAQC,QAAU,CAAC4lB,IAAK7lB,IAAQC,SAAUoE,IAAKrE,IAAQC,SAAUuE,IAAKxE,IAAQC,SAAU0E,IAAMC,IAAMC,IAAKC,IAAKC,MADvD,cAEvD/E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAFvB,GAS7CqlB,EAAgF,eAC1F5pB,IAAQC,QAAU,IAQR4pB,EAA4E,eACtF7pB,IAAQC,QAAU,IAUR6pB,GAN+B,mBACzC9pB,IAAQC,QAAU,CAACuE,IAAKxE,IAAQC,SAAUoE,IAAKrE,IAAQC,SAAU2E,MADxB,cAEzC5E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAIxB,mBACtDvE,IAAQC,QAAU,CAAC4lB,IAAK7lB,IAAQC,SAAUyE,IAAKF,IAAKxE,IAAQC,SAAU0E,MADhB,cAEtD3E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAFxB,GAK5CwlB,EAAkE,eAC5E/pB,IAAQC,QAAU,CACjB,CAACoE,IAAKrE,IAAQC,SAAUwE,KACxB,CAACD,IAAKxE,IAAQC,SAAU0E,KACxB,CAACD,IAAKC,OAOGqlB,EAA2B,GAE3BC,EAA4B,KAE5BC,EAAe5B,IAAKC,OAAO,GAG3B4B,EAAW,IAAI9B,IAAQC,IAAKC,OAAO,GAAID,IAAKC,OAAO,MACnD6B,EAAY9B,IAAKC,OAAO,KAExB8B,EAAoC,IAAIhC,IAAQC,IAAKC,OAAO,KAAM6B,GAClEE,EAAuC,IAAIjC,IAAQC,IAAKC,OAAO,KAAM6B,GACrEG,EAAqC,IAAIlC,IAAQC,IAAKC,OAAO,KAAM6B,GAEnEI,EAAgD,IAAInC,IAAQC,IAAKC,OAAO,KAAO6B,GAE/EK,EAA2C,IAAIpC,IAAQC,IAAKC,OAAO,MAAO6B,GAG1EM,EAAgBpC,IAAKqC,aAAarC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAC/DqC,EAAmC,IAAIvC,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAE5EsC,EAAe,IAAIxC,IAAQ,KAC3ByC,EAAsB,IAAIzC,IAAQ,KAGlC0C,EAA8B,CACzC,6CACA,6CACA,6CACA,6CACA,+C,6BCxFa,KACb9pB,WAAY,CACV,GAAI,GACJ,GAAI,8CAENmd,SAAU,CACR,GAAI,6CACJ,GAAI,8CAEN/b,UAAW,CACT,GAAI,6CACJ,GAAI,8CAENlB,UAAW,CACT,GAAI,6CACJ,GAAI,8CAENoB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENE,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENE,aAAc,CACZ,GAAI,6CACJ,GAAI,8CAENE,YAAa,CACX,GAAI,6CACJ,GAAI,IAENE,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENE,aAAc,CACZ,GAAI,6CACJ,GAAI,8CAENE,mBAAoB,CAClB,GAAI,6CACJ,GAAI,8CAENE,UAAW,CACT,GAAI,6CACJ,GAAI,8CAENE,UAAW,CACT,GAAI,6CACJ,GAAI,IAENE,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENE,gBAAiB,CACf,GAAI,6CACJ,GAAI,IAENE,sBAAuB,CACrB,GAAI,6CACJ,GAAI,IAENE,uBAAwB,CACtB,GAAI,6CACJ,GAAI,IAENE,YAAa,CACX,GAAI,6CACJ,GAAI,gD,6BCvER,oBAQe4P,IALI,WACjB,MAAuBnY,qBAAWsvB,KAClC,MAAO,CAAEhS,YADT,EAAQiS,KACoBrX,YAD5B,EAAcsX,Q,6BCJhB,gNAKaC,EAAsB,SACjCC,EACAC,GAGI,IAFJruB,EAEG,uDAFQ,GACXsuB,EACG,uDADe,EAEZC,EAAmBhuB,YAAiB8tB,EAAkBruB,GACtDwuB,EAAe,IAAIvuB,IAAUmuB,EAAOK,aAAaF,IACjDG,EAAsBnuB,YAAiBiuB,EAAcxuB,GACrD2uB,EAAkB7uB,YAAiB,IAAIG,IAAUyuB,GAAsB1uB,GACvE4uB,EAAuBluB,YAAsB8tB,EAAcxuB,EAAUsuB,GAC3E,MAAO,CAAEI,sBAAqBC,kBAAiBC,yBAGpCC,EAAsB,SACjCzrB,EACAirB,GAGI,IAFJruB,EAEG,uDAFQ,GACXsuB,EACG,uDADe,EAEZC,EAAmBhuB,YAAiB8tB,EAAkBruB,GACtD8uB,EAAiB,IAAI7uB,IAAUmD,EAAK9C,UAAUiuB,IAC9CQ,EAAwBxuB,YAAiBuuB,EAAgB9uB,GACzDgvB,EAAoBlvB,YAAiB,IAAIG,IAAU8uB,GAAwB/uB,GAC3EivB,EAAyBvuB,YAAsBouB,EAAgB9uB,EAAUsuB,GAC/E,MAAO,CAAES,wBAAuBC,oBAAmBC,2BAMxCC,EAAa,SAACnO,EAAYoO,GACrC,IAAQC,EAAwCrO,EAAxCqO,YAAaC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAElCC,EAAmBC,KAAKC,MAAMJ,EAAoB,KAAQ,EAC1DK,EAAmBH,EAAmB,EAAI,EAG1CI,EAAoBP,EAVU,IACC,EAWrC,GAAIA,EAAa,CACf,IAAMQ,EAAiC,IAAOP,EACxCQ,EAA6BC,YAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTW,WAAYZ,EACZK,mBACAC,oBACAR,mBAMF,MAAO,CAAEG,IAJOY,YAAO,CACrBC,aAAcN,EACdO,eAAgBR,IAEKL,mBAAkBG,mBAAkBC,qBAE7D,MAAO,CAAEL,MAAKC,mBAAkBG,mBAAkBC,sBAGvCU,EAAuB,SAClCjV,EACAkV,EACAC,EACAC,EACAnB,GAEA,IAAMoB,EACJrV,GAAWkV,GAAwBA,EAAqBI,GAAG,IAAMH,GAAcA,EAAWG,GAAG,GAEzFC,EADsBxC,EAAoBoC,EAAYC,GAApD7B,gBAC+BiC,MAAMN,GACvCO,EAAoBF,EAAeG,IAAI,GAAKvwB,YAAiBowB,EAAgB,IAAM,EAEnFI,EAAgBJ,EAAezwB,MAAMmvB,GAE3C,MAAO,CAAEoB,kBAAiBI,oBAAmBG,iBADpBD,EAAcD,IAAI,GAAKvwB,YAAiBwwB,EAAe,IAAM,IAI3EE,EAAmB,SAAClQ,EAAYmQ,GAC3C,IAAQC,EAAqCpQ,EAArCoQ,WAAYC,EAAyBrQ,EAAzBqQ,SAAUC,EAAetQ,EAAfsQ,WACxBC,EAA2BrM,SAASoM,GAAcF,GAAcC,GAChEG,EAAmB/B,KAAKgC,IAAIL,EAAaD,EAAc,GACvDO,EAAkBjC,KAAKgC,IAAIJ,EAAWF,EAAc,GACpDQ,EAAsC,IAArBH,GAA0BE,EAAkB,EAEnE,MAAO,CAAEH,2BAA0BC,mBAAkBE,kBAAiBC,iBAAgBC,gBAD9DD,EAAiBD,EAAkBF,K,6BCxF7D,wNAGaK,EAIR,CACHC,QAASjyB,YAAa,gCACtBkyB,UAAWlyB,YAAa,kCACxBmyB,SAAUnyB,YAAa,kCAGZoyB,EAAUpyB,YAAqB,iBAC/BqyB,EAAaryB,YAAqB,oBAGlCsyB,EAAatyB,YAAqB,oBAClCuyB,EAAcvyB,YAAqB,qBAGnCwyB,EAAmBxyB,YAAqB,0BAClBA,YAAsB,8B,mLCjBnDyyB,EAAUxzB,IAAOU,IAAV,4FAGK,qBAAG+yB,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAACG,EAAA,EAAD,CAAcnG,SAAUgG,EAAWE,KAAI,UAAKA,EAAKt0B,WAAV,MAA0Bw0B,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAACE,EAAA,EAAD,CAAcnG,SAAUiG,EAAWC,KAAI,UAAKA,EAAKt0B,WAAV,W,4CC3B3D,0GAGa00B,EAAkC,GAGlCC,EAA+B,CALrB,8DADE,gEAMmB,OAGvCD,GAIQE,EAAqC,I,8DCHnCC,IANE,WACf,MAA8BC,cAA9B,mBAAOC,EAAP,KAAe7I,EAAf,KAEA,MAAO,CAAE6I,SAAQC,MADH10B,qBAAW20B,KACD/I,iB,oKCJpBgJ,EAAOz0B,YAAOC,IAAPD,CAAH,0KAMC,gBAAGE,EAAH,EAAGA,MAAH,cAAeA,QAAf,IAAeA,IAAS,UAGtB,qBAAGG,WACJ,qBAAGC,UACI,qBAAGC,gBACA,qBAAGg0B,MAAkBG,OAAOC,cAEnCF,MAER,IAAMG,EAAY50B,YAAOy0B,EAAPz0B,CAAH,gFACA,qBAAGu0B,MAAkBG,OAAOC,cAC5B,qBAAGJ,MAAkBG,OAAOG,iBAGrCC,EAAgB90B,YAAOy0B,EAAPz0B,CAAH,gFACJ,qBAAGu0B,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGrCK,EAAWh1B,YAAOy0B,EAAPz0B,CAAH,sDACC,qBAAGu0B,MAAkBG,OAAOO,a,gGCtB5CC,EAAkBl1B,IAAOU,IAAV,2EAoBNy0B,IAbyB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAS7d,EAAY,iBAC9D,EAA+C8d,aAAWD,EAAM,CAAEE,UAAW,YAAaC,QAAS,UAA3FC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,OACE,eAAC,IAAD,2BAASne,GAAT,cACGme,GAAkBD,EACnB,cAACP,EAAD,CAAiBS,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUte,MAAM,aAAahX,MAAM,iB,kHCRrC2lB,EAAS,uCAAG,WAAgB1E,EAAYwE,GAA5B,yBAAA/nB,EAAA,sEAERg4B,EAAQxR,cACRyR,EAAM,IAAIlzB,IAAOmzB,MAAMC,UAAU5U,GAEjC6U,EAAWrQ,EAAMxH,KAAI,SAAC0I,GAAD,MAAU,CAACA,EAAK3iB,QAAQ+xB,cAAeJ,EAAI1N,mBAAmBtB,EAAKqP,KAAMrP,EAAKsP,YAL3F,SAMeP,EAAMQ,UAAUJ,GAN/B,uBAMNK,EANM,EAMNA,WAEFhd,EAAMgd,EAAWlY,KAAI,SAAC0I,EAAMyP,GAAP,OAAaT,EAAIpO,qBAAqB9B,EAAM2Q,GAAGJ,KAAMrP,MARlE,kBAUPxN,GAVO,wCAYR,IAAIvZ,MAAJ,MAZQ,0DAAH,wDAsBFy2B,EAAW,uCAAG,WACzBpV,EACAwE,GAFyB,uCAAA/nB,EAAA,6DAGzBwE,EAHyB,+BAGG,CAAEo0B,gBAAgB,GAEtCA,EAAmBp0B,EAAnBo0B,eACFZ,EAAQxR,cACRyR,EAAM,IAAIlzB,IAAOmzB,MAAMC,UAAU5U,GAEjC6U,EAAWrQ,EAAMxH,KAAI,SAAC0I,GAAD,MAAU,CAACA,EAAK3iB,QAAQ+xB,cAAeJ,EAAI1N,mBAAmBtB,EAAKqP,KAAMrP,EAAKsP,YAThF,SAUAP,EAAMa,aAAaD,EAAgBR,GAVnC,cAUnBK,EAVmB,OAWnBhd,EAAMgd,EAAWlY,KAAI,SAAC0I,EAAMyP,GAChC,kBAAuBzP,EAAvB,GAAOC,EAAP,KAAeloB,EAAf,KACA,OAAOkoB,EAAS+O,EAAIpO,qBAAqB9B,EAAM2Q,GAAGJ,KAAMt3B,GAAQ,QAbzC,kBAgBlBya,GAhBkB,4CAAH,wDAmBTwM,O,6BCvDf,4ZAYO,SAAS8F,EAAUlsB,GACxB,IACE,OAAOwE,qBAAWxE,GAClB,SACA,OAAO,GAIJ,SAASmsB,EACdhtB,EACAitB,GAES,IADTtoB,EACQ,uDADWY,UAAQC,QAE3B,OAAQynB,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmBvoB,GAA7B,eAA4C3E,GAE9C,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,4BAAyD3E,GAE3D,QACE,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,oBAAiD3E,IAMhD,SAASmtB,EAAe7nB,GAAqC,IAApB8nB,EAAmB,uDAAX,EAChDC,EAASN,EAAUznB,GACzB,IAAK+nB,EACH,MAAMnsB,MAAM,gCAAD,OAAiCoE,EAAjC,OAEb,MAAM,GAAN,OAAU+nB,EAAOC,UAAU,EAAGF,EAAQ,GAAtC,cAA8CC,EAAOC,UAAU,GAAKF,IAI/D,SAASG,EAAmB1sB,GACjC,OAAOA,EAAM2sB,IAAIhrB,IAAUwB,KAAK,KAAOypB,IAAIjrB,IAAUwB,KAAK,OAAQlC,IAAIU,IAAUwB,KAAK,MAIhF,SAAS0pB,EAAqBC,GACnC,OAAO,IAAIC,UAAQC,OAAKC,OAAOH,GAAME,OAAKC,OAAO,MAG5C,SAASC,EAAwBltB,EAAuBmtB,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM9sB,MAAM,8BAAD,OAA+B8sB,IAE5C,MAAO,CACLH,OAAKI,OAAOJ,OAAKK,SAASrtB,EAAMstB,IAAKN,OAAKC,OAAO,IAAQE,IAAYH,OAAKC,OAAO,MACjFD,OAAKI,OAAOJ,OAAKK,SAASrtB,EAAMstB,IAAKN,OAAKC,OAAO,IAAQE,IAAYH,OAAKC,OAAO,OAe9E,SAASxL,EAAYhd,EAAiBylB,EAAUrmB,EAAuBiZ,GAC5E,IAAKoP,EAAUznB,IAAYA,IAAY8oB,IACrC,MAAMltB,MAAM,gCAAD,OAAiCoE,EAAjC,OAGb,OAAO,IAAIod,WAASpd,EAASylB,EAVxB,SAA6BrmB,EAAuBiZ,GACzD,OAAOA,EANF,SAAmBjZ,EAAuBiZ,GAC/C,OAAOjZ,EAAQmlB,UAAUlM,GAAS0Q,mBAKjBxE,CAAUnlB,EAASiZ,GAAWjZ,EASb4pB,CAAoB5pB,EAASiZ,IAQ1D,SAASma,EAAmBtJ,EAAW9pB,EAAuBiZ,GACnE,OAAO2E,EAAY2M,IAAiBP,IAAuBhqB,EAASiZ,GAG/D,SAASgR,EAAaC,GAC3B,OAAOA,EAAOluB,QAAQ,sBAAuB,QAGxC,SAASmuB,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,SACVxH,QAAQuH,aAAoBllB,UAApB,UAA6BilB,EAAcC,EAASpqB,gBAApD,aAA6B,EAAkCoqB,EAASzpB,a,uuBCxG5EmpB,G,oBAAiB,8CACjBQ,EAAkB,6CAQlBC,GAA6C,mBACvD3pB,IAAQC,QAAU,CAAC4lB,IAAK7lB,IAAQC,SAAUoE,IAAKrE,IAAQC,SAAUuE,IAAKxE,IAAQC,SAAU0E,IAAMC,IAAMC,IAAKC,IAAKC,MADvD,cAEvD/E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAFvB,GAS7CqlB,EAAgF,eAC1F5pB,IAAQC,QAAU,IAQR4pB,EAA4E,eACtF7pB,IAAQC,QAAU,IAUR6pB,GAN+B,mBACzC9pB,IAAQC,QAAU,CAACuE,IAAKxE,IAAQC,SAAUoE,IAAKrE,IAAQC,SAAU2E,MADxB,cAEzC5E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAIxB,mBACtDvE,IAAQC,QAAU,CAAC4lB,IAAK7lB,IAAQC,SAAUyE,IAAKF,IAAKxE,IAAQC,SAAU0E,MADhB,cAEtD3E,IAAQuE,QAAU,CAACshB,IAAK7lB,IAAQuE,SAAUF,IAAKrE,IAAQuE,SAAUC,IAAKxE,IAAQuE,WAFxB,GAK5CwlB,EAAkE,eAC5E/pB,IAAQC,QAAU,CACjB,CAACoE,IAAKrE,IAAQC,SAAUwE,KACxB,CAACD,IAAKxE,IAAQC,SAAU0E,KACxB,CAACD,IAAKC,OAOGqlB,EAA2B,GAI3BE,EAAe5B,IAAKC,OAAO,GAG3B4B,EAAW,IAAI9B,IAAQC,IAAKC,OAAO,GAAID,IAAKC,OAAO,MACnD6B,EAAY9B,IAAKC,OAAO,KAExB8B,EAAoC,IAAIhC,IAAQC,IAAKC,OAAO,KAAM6B,GAClEE,EAAuC,IAAIjC,IAAQC,IAAKC,OAAO,KAAM6B,GACrEG,EAAqC,IAAIlC,IAAQC,IAAKC,OAAO,KAAM6B,GAEnEI,EAAgD,IAAInC,IAAQC,IAAKC,OAAO,KAAO6B,GAE/EK,EAA2C,IAAIpC,IAAQC,IAAKC,OAAO,MAAO6B,GAG1EM,EAAgBpC,IAAKqC,aAAarC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,KAC/DqC,EAAmC,IAAIvC,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MAE5EsC,EAAe,IAAIxC,IAAQ,KAC3ByC,EAAsB,IAAIzC,IAAQ,M,uuBC7ElCa,G,oBAAiB,8CACjBQ,EAAkB,6CAQlBC,GAA6C,mBACvD3pB,UAAQC,QAAU,CAAC4lB,OAAK7lB,UAAQC,SAAUoE,IAAKrE,UAAQC,SAAUuE,IAAKxE,UAAQC,SAAU0E,IAAMC,IAAMC,IAAKC,IAAKC,MADvD,cAEvD/E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAFvB,GAS7CqlB,EAAgF,eAC1F5pB,UAAQC,QAAU,IAQR4pB,EAA4E,eACtF7pB,UAAQC,QAAU,IAUR6pB,GAN+B,mBACzC9pB,UAAQC,QAAU,CAACuE,IAAKxE,UAAQC,SAAUoE,IAAKrE,UAAQC,SAAU2E,MADxB,cAEzC5E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAIxB,mBACtDvE,UAAQC,QAAU,CAAC4lB,OAAK7lB,UAAQC,SAAUyE,IAAKF,IAAKxE,UAAQC,SAAU0E,MADhB,cAEtD3E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAFxB,GAK5CwlB,EAAkE,eAC5E/pB,UAAQC,QAAU,CACjB,CAACoE,IAAKrE,UAAQC,SAAUwE,KACxB,CAACD,IAAKxE,UAAQC,SAAU0E,KACxB,CAACD,IAAKC,OAOGqlB,EAA2B,GAI3BE,EAAe5B,OAAKC,OAAO,GAG3B4B,EAAW,IAAI9B,UAAQC,OAAKC,OAAO,GAAID,OAAKC,OAAO,MACnD6B,EAAY9B,OAAKC,OAAO,KAExB8B,EAAoC,IAAIhC,UAAQC,OAAKC,OAAO,KAAM6B,GAClEE,EAAuC,IAAIjC,UAAQC,OAAKC,OAAO,KAAM6B,GACrEG,EAAqC,IAAIlC,UAAQC,OAAKC,OAAO,KAAM6B,GAEnEI,EAAgD,IAAInC,UAAQC,OAAKC,OAAO,KAAO6B,GAE/EK,EAA2C,IAAIpC,UAAQC,OAAKC,OAAO,MAAO6B,GAG1EM,EAAgBpC,OAAKqC,aAAarC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,KAC/DqC,EAAmC,IAAIvC,UAAQC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,MAE5EsC,EAAe,IAAIxC,UAAQ,KAC3ByC,EAAsB,IAAIzC,UAAQ,M,wuBC7ElCa,G,oBAAiB,8CACjBQ,EAAkB,6CAQlBC,GAA6C,mBACvD3pB,UAAQC,QAAU,CAAC4lB,OAAK7lB,UAAQC,SAAUoE,IAAKrE,UAAQC,SAAUuE,IAAKxE,UAAQC,SAAU0E,IAAMC,IAAMC,IAAKC,IAAKC,MADvD,cAEvD/E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAFvB,GAS7CqlB,EAAgF,eAC1F5pB,UAAQC,QAAU,IAQR4pB,EAA4E,eACtF7pB,UAAQC,QAAU,IAUR6pB,GAN+B,mBACzC9pB,UAAQC,QAAU,CAACuE,IAAKxE,UAAQC,SAAUoE,IAAKrE,UAAQC,SAAU2E,MADxB,cAEzC5E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAIxB,mBACtDvE,UAAQC,QAAU,CAAC4lB,OAAK7lB,UAAQC,SAAUyE,IAAKF,IAAKxE,UAAQC,SAAU0E,MADhB,cAEtD3E,UAAQuE,QAAU,CAACshB,OAAK7lB,UAAQuE,SAAUF,IAAKrE,UAAQuE,SAAUC,IAAKxE,UAAQuE,WAFxB,GAK5CwlB,EAAkE,eAC5E/pB,UAAQC,QAAU,CACjB,CAACoE,IAAKrE,UAAQC,SAAUwE,KACxB,CAACD,IAAKxE,UAAQC,SAAU0E,KACxB,CAACD,IAAKC,OAOGqlB,EAA2B,GAI3BE,EAAe5B,OAAKC,OAAO,GAG3B4B,EAAW,IAAI9B,UAAQC,OAAKC,OAAO,GAAID,OAAKC,OAAO,MACnD6B,EAAY9B,OAAKC,OAAO,KAExB8B,EAAoC,IAAIhC,UAAQC,OAAKC,OAAO,KAAM6B,GAClEE,EAAuC,IAAIjC,UAAQC,OAAKC,OAAO,KAAM6B,GACrEG,EAAqC,IAAIlC,UAAQC,OAAKC,OAAO,KAAM6B,GAEnEI,EAAgD,IAAInC,UAAQC,OAAKC,OAAO,KAAO6B,GAE/EK,EAA2C,IAAIpC,UAAQC,OAAKC,OAAO,MAAO6B,GAG1EM,EAAgBpC,OAAKqC,aAAarC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,KAC/DqC,EAAmC,IAAIvC,UAAQC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,MAE5EsC,EAAe,IAAIxC,UAAQ,KAC3ByC,EAAsB,IAAIzC,UAAQ,M,ojBCvDxC,SAASmK,IACd,IAAM7Y,EAAWgI,cACX8Q,EAAYlY,aAAqD,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKD,aAEvFE,EAAqBp4B,uBAAY,WAEnCof,EADE8Y,EACOrL,cAEAC,iBAEV,CAACoL,EAAW9Y,IAEf,MAAO,CAAC8Y,EAAWE,GAGd,SAASC,IACd,OAAOrY,aAA0D,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKG,kBAGlF,SAASC,IACd,IAAMnZ,EAAWgI,cACXoR,EAAaH,IAEbI,EAAsBz4B,uBAAY,WACtCof,EAASiN,YAAqB,CAAEiM,gBAAiBE,OAChD,CAACA,EAAYpZ,IAEhB,MAAO,CAACoZ,EAAYC,GAGf,SAAS9C,IACd,IAAMvW,EAAWgI,cAOjB,MAAO,CANQpH,aAAkD,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKvC,UAEnE51B,uBAAY,WAC9Bof,EAASsZ,iBACR,CAACtZ,KAKC,SAASuZ,IACd,IAAMvZ,EAAWgI,cAajB,MAAO,CAXepH,aACpB,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKS,qBAGC54B,uBACvB,SAAC64B,GACCzZ,EAASkN,YAAwB,CAAEsM,kBAAmBC,OAExD,CAACzZ,KAME,SAAS0Z,IACd,IAAM1Z,EAAWgI,cAYjB,MAAO,CAXuBpH,aAAiE,SAACjhB,GAC9F,OAAOA,EAAMo5B,KAAKY,yBAGa/4B,uBAC/B,SAACkuB,GACC9O,EAASmN,YAA4B,CAAEwM,sBAAuB7K,OAEhE,CAAC9O,KAME,SAAS4Z,EAAsBC,GACpC,IAAM7Z,EAAWgI,cACX8R,EAAqBlZ,aAA8D,SAACjhB,GACxF,OAAOA,EAAMo5B,KAAKe,sBAGdC,EAAwBn5B,uBAC5B,SAACo5B,GACC,IAAMC,EAAiBD,EAAahN,IAAekN,KAAOlN,IAAemN,MACzEna,EAAS4N,YAAyB,CAAEkM,mBAAoBG,OAE1D,CAACja,IAGH,MAAO,CACL8Z,IAAuB9M,IAAeoN,aAAeP,EAAWC,IAAuB9M,IAAekN,KACtGH,GAIG,SAASM,IACd,IAAMra,EAAWgI,cAYjB,MAAO,CAXcpH,aAAwD,SAACjhB,GAC5E,OAAOA,EAAMo5B,KAAKuB,gBAGI15B,uBACtB,SAAC25B,GACCva,EAASoN,YAAmB,CAAEkN,aAAcC,OAE9C,CAACva,KAME,SAASwa,IACd,IAAMxa,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC+gB,GACC3B,EAASqN,YAAmB,CAAEoN,gBAAiBC,YAAe/Y,QAEhE,CAAC3B,IAIE,SAAS2a,IACd,IAAM3a,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC6E,EAAiBW,GAChB4Z,EAASsN,YAAsB,CAAE7nB,UAASW,eAE5C,CAAC4Z,IAIL,SAAS4a,EAAcC,GACrB,MAAO,CACLC,OAAQJ,YAAeG,EAAKC,QAC5BC,OAAQL,YAAeG,EAAKE,SAIzB,SAASC,IACd,IAAMhb,EAAWgI,cAEjB,OAAOpnB,uBACL,SAACi6B,GACC7a,EAASuN,YAAkB,CAAE0N,eAAgBL,EAAcC,QAE7D,CAAC7a,IASE,SAASkb,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAIzwB,IAAMwwB,EAAO11B,QAAS41B,IAAKl1B,WAAWg1B,EAAQC,GAAS,GAAI,UAAW,eAM5E,SAASE,IACd,IAAQ71B,EAAYH,cAAZG,QACFe,EAAS+0B,cAGTC,EAAc9Y,mBAAQ,wBAAOjd,GAAO,UAAG2qB,IAAa3qB,UAAhB,QAAiC,KAAK,CAACA,IAG3Eg2B,EAAmC/Y,mBACvC,kBACEjd,EACIi2B,IAAQx6B,OAAOC,KAAKqF,IAAS,SAAC0U,GAAkB,IAAD,EACvCyG,EAAQnb,EAAO0U,GAErB,OAEE,UAACiV,IAA6B1qB,UAA9B,QAA0C,IAEvC4a,KAAI,SAACsb,GACJ,OAAIA,EAAKv1B,UAAYub,EAAMvb,QAClB,KAEF,CAACu1B,EAAMha,MAEfyG,QAAO,SAACwT,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACp1B,EAAQf,IAILo2B,EAAuBjb,aAAiD,qBAAGmY,KAAQ+C,SAEnFC,EAA8BrZ,mBAAQ,WAC1C,IAAKjd,IAAYo2B,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBp2B,GACtC,OAAKu2B,EAEE96B,OAAOC,KAAK66B,GAAU3b,KAAI,SAAC4b,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQnB,QAASoB,YAAiBF,EAASC,GAAQlB,YAHjE,KAKrB,CAACc,EAAsBp2B,IAEpB02B,EAAezZ,mBACnB,kBAAMqZ,EAAUK,OAAOX,GAAgBW,OAAOZ,KAC9C,CAACC,EAAgBD,EAAaO,IAGhC,OAAOrZ,mBAAQ,WAEb,IAAM2Z,EAAQF,EAAaG,QAA0C,SAACC,EAAD,GAA6B,IAAD,mBAApBpB,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5Bv6B,EAAM27B,EAAM,UAAMrB,EAAO/0B,QAAb,YAAwBg1B,EAAOh1B,SAA/B,UAA8Cg1B,EAAOh1B,QAArD,YAAgE+0B,EAAO/0B,SACzF,OAAIm2B,EAAK17B,KACT07B,EAAK17B,GAAO27B,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BoB,IAGrB,IAEH,OAAOr7B,OAAOC,KAAKk7B,GAAOhc,KAAI,SAACxf,GAAD,OAASw7B,EAAMx7B,QAC5C,CAACs7B,M,6BCrPN,4ZAYO,SAAStO,EAAUlsB,GACxB,IACE,OAAOwE,qBAAWxE,GAClB,SACA,OAAO,GAIJ,SAASmsB,EACdhtB,EACAitB,GAES,IADTtoB,EACQ,uDADWY,IAAQC,QAE3B,OAAQynB,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmBvoB,GAA7B,eAA4C3E,GAE9C,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,4BAAyD3E,GAE3D,QACE,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,oBAAiD3E,IAMhD,SAASmtB,EAAe7nB,GAAqC,IAApB8nB,EAAmB,uDAAX,EAChDC,EAASN,EAAUznB,GACzB,IAAK+nB,EACH,MAAMnsB,MAAM,gCAAD,OAAiCoE,EAAjC,OAEb,MAAM,GAAN,OAAU+nB,EAAOC,UAAU,EAAGF,EAAQ,GAAtC,cAA8CC,EAAOC,UAAU,GAAKF,IAI/D,SAASG,EAAmB1sB,GACjC,OAAOA,EAAM2sB,IAAIhrB,IAAUwB,KAAK,KAAOypB,IAAIjrB,IAAUwB,KAAK,OAAQlC,IAAIU,IAAUwB,KAAK,MAIhF,SAAS0pB,EAAqBC,GACnC,OAAO,IAAIC,IAAQC,IAAKC,OAAOH,GAAME,IAAKC,OAAO,MAG5C,SAASC,EAAwBltB,EAAuBmtB,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM9sB,MAAM,8BAAD,OAA+B8sB,IAE5C,MAAO,CACLH,IAAKI,OAAOJ,IAAKK,SAASrtB,EAAMstB,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,MACjFD,IAAKI,OAAOJ,IAAKK,SAASrtB,EAAMstB,IAAKN,IAAKC,OAAO,IAAQE,IAAYH,IAAKC,OAAO,OAe9E,SAASxL,EAAYhd,EAAiBylB,EAAUrmB,EAAuBiZ,GAC5E,IAAKoP,EAAUznB,IAAYA,IAAY8oB,IACrC,MAAMltB,MAAM,gCAAD,OAAiCoE,EAAjC,OAGb,OAAO,IAAIod,WAASpd,EAASylB,EAVxB,SAA6BrmB,EAAuBiZ,GACzD,OAAOA,EANF,SAAmBjZ,EAAuBiZ,GAC/C,OAAOjZ,EAAQmlB,UAAUlM,GAAS0Q,mBAKjBxE,CAAUnlB,EAASiZ,GAAWjZ,EASb4pB,CAAoB5pB,EAASiZ,IAQ1D,SAASma,EAAmBtJ,EAAW9pB,EAAuBiZ,GACnE,OAAO2E,EAAY2M,IAAiBP,IAAuBhqB,EAASiZ,GAG/D,SAASgR,EAAaC,GAC3B,OAAOA,EAAOluB,QAAQ,sBAAuB,QAGxC,SAASmuB,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,KACVxH,QAAQuH,aAAoBllB,MAApB,UAA6BilB,EAAcC,EAASpqB,gBAApD,aAA6B,EAAkCoqB,EAASzpB,a,8BC3GzF,0XAYO,SAASynB,EAAUlsB,GACxB,IACE,OAAOwE,qBAAWxE,GAClB,SACA,OAAO,GAIJ,SAASmsB,EACdhtB,EACAitB,GAES,IADTtoB,EACQ,uDADWY,UAAQC,QAE3B,OAAQynB,GACN,IAAK,cACH,MAAM,GAAN,OAAUC,IAAmBvoB,GAA7B,eAA4C3E,GAE9C,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,QACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,kBAA+C3E,GAEjD,IAAK,YACH,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,4BAAyD3E,GAE3D,QACE,MAAM,GAAN,OAAUktB,IAAmBvoB,GAA7B,oBAAiD3E,IAMhD,SAASmtB,EAAe7nB,GAAqC,IAApB8nB,EAAmB,uDAAX,EAChDC,EAASN,EAAUznB,GACzB,IAAK+nB,EACH,MAAMnsB,MAAM,gCAAD,OAAiCoE,EAAjC,OAEb,MAAM,GAAN,OAAU+nB,EAAOC,UAAU,EAAGF,EAAQ,GAAtC,cAA8CC,EAAOC,UAAU,GAAKF,IAI/D,SAASG,EAAmB1sB,GACjC,OAAOA,EAAM2sB,IAAIhrB,IAAUwB,KAAK,KAAOypB,IAAIjrB,IAAUwB,KAAK,OAAQlC,IAAIU,IAAUwB,KAAK,MAIhF,SAAS0pB,EAAqBC,GACnC,OAAO,IAAIC,UAAQC,OAAKC,OAAOH,GAAME,OAAKC,OAAO,MAG5C,SAASC,EAAwBltB,EAAuBmtB,GAC7D,GAAIA,EAAW,GAAKA,EAAW,IAC7B,MAAM9sB,MAAM,8BAAD,OAA+B8sB,IAE5C,MAAO,CACLH,OAAKI,OAAOJ,OAAKK,SAASrtB,EAAMstB,IAAKN,OAAKC,OAAO,IAAQE,IAAYH,OAAKC,OAAO,MACjFD,OAAKI,OAAOJ,OAAKK,SAASrtB,EAAMstB,IAAKN,OAAKC,OAAO,IAAQE,IAAYH,OAAKC,OAAO,OAe9E,SAASxL,EAAYhd,EAAiBylB,EAAUrmB,EAAuBiZ,GAC5E,IAAKoP,EAAUznB,IAAYA,IAAY8oB,IACrC,MAAMltB,MAAM,gCAAD,OAAiCoE,EAAjC,OAGb,OAAO,IAAIod,WAASpd,EAASylB,EAVxB,SAA6BrmB,EAAuBiZ,GACzD,OAAOA,EANF,SAAmBjZ,EAAuBiZ,GAC/C,OAAOjZ,EAAQmlB,UAAUlM,GAAS0Q,mBAKjBxE,CAAUnlB,EAASiZ,GAAWjZ,EASb4pB,CAAoB5pB,EAASiZ,IAQ1D,SAASma,EAAmBtJ,EAAW9pB,EAAuBiZ,GACnE,OAAO2E,EAAY2M,IAAiBP,IAAuBhqB,EAASiZ,GAO/D,SAASkR,EAAcC,EAAgCC,GAA+B,IAAD,EAC1F,OAAIA,IAAaC,SACVxH,QAAQuH,aAAoBllB,UAApB,UAA6BilB,EAAcC,EAASpqB,gBAApD,aAA6B,EAAkCoqB,EAASzpB,a,sRCzF5Es2B,EAA0B,WACrC,IAAM1c,EAAWC,cACThG,EAAgBC,cAAhBD,YAERpa,qBAAU,YACkB,uCAAG,4BAAAC,EAAA,sEACD+F,IAAkB82B,iBADjB,OACrBnV,EADqB,OAE3BxH,EAAS4c,YAA0BpV,IAFR,2CAAH,qDAK1BqV,GACA7c,EAAS8c,iBACR,CAAC9c,EAAU/F,KAGH8iB,EAAW,SAACte,GACvB,IAAQY,EAAgBnF,cAAhBmF,YACFW,EAAWC,cACjBpgB,qBAAU,WACJ4e,GACFuB,EAASgd,YAAwBve,MAElC,CAACA,EAASuB,EAAUX,IAEvB,MAAkCuB,aAAY,SAACjhB,GAAD,MAAmB,CAC/Ds9B,MAAOt9B,EAAMs9B,MAAMn8B,KACnBo8B,eAAgBv9B,EAAMs9B,MAAMC,mBAFtBD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eAIf,MAAO,CAAED,MAAOA,EAAM5c,IAAI8c,KAAgBD,mBAG/BE,EAAoB,WAC/B,IAAQ3e,EAAYlZ,cAAZkZ,QACAY,EAAgBnF,cAAhBmF,YACFW,EAAWC,cAEjBpgB,qBAAU,WACRmgB,EAASqd,iBACR,CAACrd,EAAUX,IAEdxf,qBAAU,WACRmgB,EAASsd,YAAuB,CAAE7e,eACjC,CAACuB,EAAUX,EAAaZ,IAE3B5e,qBAAU,WACRmgB,EAASud,iBACR,CAACvd,KAGOwd,EAAe,WAC1B,MAcI5c,aAAY,SAACjhB,GAAD,OAAkBA,EAAMs9B,MAAMrzB,aAb/B6zB,EADf,EACEC,YACmBC,EAFrB,EAEE9J,kBACkB+J,EAHpB,EAGEC,iBAC2BC,EAJ7B,EAIEC,0BACyBC,EAL3B,EAKEC,wBALF,IAMEC,KAAQ1L,EANV,EAMUA,eAAgB2L,EAN1B,EAM0BA,QAASC,EANnC,EAMmCA,cAAeC,EANlD,EAMkDA,oBANlD,IAOE/c,SACEgd,EARJ,EAQIA,UACYC,EAThB,EASI3K,WACsB4K,EAV1B,EAUI7K,qBACA8K,EAXJ,EAWIA,kBACAC,EAZJ,EAYIA,mBAIEX,EAA4Brb,mBAAQ,WACxC,OAAO,IAAIpf,IAAUw6B,KACpB,CAACA,IAEEG,EAA0Bvb,mBAAQ,WACtC,OAAO,IAAIpf,IAAU06B,KACpB,CAACA,IAsBJ,MAAO,CACLN,YArBkBhb,mBAAQ,WAC1B,OAAO,IAAIpf,IAAUm6B,KACpB,CAACA,IAoBF5J,kBAlBwBnR,mBAAQ,WAChC,OAAO,IAAIpf,IAAUq6B,KACpB,CAACA,IAiBFE,iBAfuBnb,mBAAQ,WAC/B,OAAO,IAAIpf,IAAUs6B,KACpB,CAACA,IAcFG,4BACAE,0BACAC,KAAM,CACJ1L,iBACA2L,UACAC,gBACAC,uBAEF/c,SAAU,CACRgd,YACA1K,WAtBelR,mBAAQ,WACzB,OAAO,IAAIpf,IAAUi7B,KACpB,CAACA,IAqBA5K,qBAnByBjR,mBAAQ,WACnC,OAAO,IAAIpf,IAAUk7B,KACpB,CAACA,IAkBAC,oBACAC,yB,8BCjIN,oBAaeC,IAVE,WACf,IAAMC,EAAe78B,qBAAW88B,KAEhC,QAAqBz/B,IAAjBw/B,EACF,MAAM,IAAI58B,MAAM,4BAGlB,OAAO48B,I,4dCNTt7B,IAAU4gB,OAAO,CACf4a,eAAgB,IAChBC,eAAgB,KAGX,IAAMC,EAAiB,EAEjBhR,GAAkB,mBAC5B3nB,IAAQC,QAAU,uBADU,cAE5BD,IAAQuE,QAAU,+BAFU,GAYlBq0B,EAAiB,IAAI37B,IAAU,GAC/B47B,EAAkB,IAAI57B,IAAW,GAAK07B,EAAkB,GAAK,GAAK,KAClEG,EAAgBF,EAAe17B,MAAM27B,GACrCE,EAAW,6BACXC,EAAsB,UAAMD,EAAN,QACtBE,EAAoBtR,EAAmB3nB,IAAQC,SAG/Ci5B,EAAwB/7B,IAAQC,IAAI,IAEpC+7B,EAAqB,IAErBC,EAA2B,IAC3BC,EAA4B,IAC5BC,EAAuC,K,6ECpBrCC,IAZa,SAACnmB,GAC3B,IAAQ7X,EAAMC,cAAND,EACR,EAA0Bi+B,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,aAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQxmB,QAASwmB,GAA2BvmB,GAA5C,aACG7X,EAAE,gB,uMCDMs+B,cAJwB,CACrC1Y,YAAa,KAG4B,SAAC2Y,GAAD,OACzCA,EAAQC,QAAQC,KAAmB,SAAC1gC,EAAO2gC,GACzC,MAAiCA,EAAOC,QAAhC96B,EAAR,EAAQA,QAAS+hB,EAAjB,EAAiBA,YACyB,kBAA/B7nB,EAAM6nB,YAAY/hB,GAC3B9F,EAAM6nB,YAAY/hB,GAAW+hB,EAE7B7nB,EAAM6nB,YAAY/hB,GAAWotB,KAAKgC,IAAIrN,EAAa7nB,EAAM6nB,YAAY/hB,UCb9D+6B,EAAgBv9B,YAAmB,wB,gBCiB1Cw9B,EAAmB,kBAAM,IAAIC,MAAOC,WAoC1C,SAASC,EAAQC,EAAuBC,GACtC,MAAM,GAAN,OAAUD,EAAV,YAA2BC,GAGtB,I,EAAMriC,EAA0B,CACrCy6B,gBAAgB,EAChBM,mBAAmB,EACnBG,sBAAuBtJ,IACvBiK,aAAchK,IACd9pB,OAAQ,GACRs1B,MAAO,GACPiF,UAAWN,IACX3H,WAAW,EACXtC,QAAQ,EACRsD,mBAAoB9M,IAAeoN,aAGtB8F,cAAczhC,GAAc,SAAC0hC,GAAD,OACzCA,EACGC,QAAQI,GAAe,SAAC7gC,GAGoB,kBAAhCA,EAAMg6B,wBACfh6B,EAAMg6B,sBAAwBtJ,KAKE,kBAAvB1wB,EAAM26B,eACf36B,EAAM26B,aAAehK,KAGvB3wB,EAAMqhC,2BAA6BP,OAEpCL,QAAQnT,KAAsB,SAACttB,EAAO2gC,GACrC3gC,EAAMu5B,eAAiBoH,EAAOC,QAAQrH,eACtCv5B,EAAMohC,UAAYN,OAEnBL,QAAQjT,KAA6B,SAACxtB,EAAO2gC,GAC5C3gC,EAAMg6B,sBAAwB2G,EAAOC,QAAQ5G,sBAC7Ch6B,EAAMohC,UAAYN,OAEnBL,QAAQhT,KAAoB,SAACztB,EAAO2gC,GACnC3gC,EAAM26B,aAAegG,EAAOC,QAAQjG,aACpC36B,EAAMohC,UAAYN,OAEnBL,QAAQlT,KAAyB,SAACvtB,EAAO2gC,GACxC3gC,EAAM65B,kBAAoB8G,EAAOC,QAAQ/G,qBAE1C4G,QAAQ/S,KAAoB,SAAC1tB,EAAD,GAA8C,IAAzB86B,EAAwB,EAAnC8F,QAAW9F,gBAC3C96B,EAAM6G,SACT7G,EAAM6G,OAAS,IAEjB7G,EAAM6G,OAAOi0B,EAAgBh1B,SAAW9F,EAAM6G,OAAOi0B,EAAgBh1B,UAAY,GACjF9F,EAAM6G,OAAOi0B,EAAgBh1B,SAASg1B,EAAgBr0B,SAAWq0B,EACjE96B,EAAMohC,UAAYN,OAEnBL,QAAQ9S,KAAuB,SAAC3tB,EAAD,GAA+C,IAAD,IAApC4gC,QAAWn6B,EAAyB,EAAzBA,QAASX,EAAgB,EAAhBA,QACvD9F,EAAM6G,SACT7G,EAAM6G,OAAS,IAEjB7G,EAAM6G,OAAOf,GAAW9F,EAAM6G,OAAOf,IAAY,UAC1C9F,EAAM6G,OAAOf,GAASW,GAC7BzG,EAAMohC,UAAYN,OAEnBL,QAAQ7S,KAAmB,SAAC5tB,EAAD,GAA6C,IAAxBs7B,EAAuB,EAAlCsF,QAAWtF,eAC/C,GACEA,EAAeH,OAAOr1B,UAAYw1B,EAAeF,OAAOt1B,SACxDw1B,EAAeH,OAAO10B,UAAY60B,EAAeF,OAAO30B,QACxD,CACA,IAAQX,EAAYw1B,EAAeH,OAA3Br1B,QACR9F,EAAMm8B,MAAMr2B,GAAW9F,EAAMm8B,MAAMr2B,IAAY,GAC/C9F,EAAMm8B,MAAMr2B,GAASm7B,EAAQ3F,EAAeH,OAAO10B,QAAS60B,EAAeF,OAAO30B,UAAY60B,EAEhGt7B,EAAMohC,UAAYN,OAEnBL,QAAQ5S,KAAsB,SAAC7tB,EAAD,GAAoE,IAAD,IAAzD4gC,QAAW96B,EAA8C,EAA9CA,QAASw7B,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,cACtEvhC,EAAMm8B,MAAMr2B,YAEP9F,EAAMm8B,MAAMr2B,GAASm7B,EAAQK,EAAeC,WAC5CvhC,EAAMm8B,MAAMr2B,GAASm7B,EAAQM,EAAeD,KAErDthC,EAAMohC,UAAYN,OAEnBL,QAAQ3S,KAAW,SAAC9tB,GACnBA,EAAMm5B,WAAY,KAEnBsH,QAAQ1S,KAAa,SAAC/tB,GACrBA,EAAMm5B,WAAY,KAEnBsH,QAAQzS,KAAa,SAAChuB,GACrBA,EAAM62B,QAAU72B,EAAM62B,UAEvB4J,QAAQxS,KAA0B,SAACjuB,EAAD,GAAiD,IAA5Bm6B,EAA2B,EAAtCyG,QAAWzG,mBACtDn6B,EAAMm6B,mBAAqBA,Q,SC7I3BqH,EAAM,kBAAM,IAAIT,MAAOC,WAsBdT,cAF+B,IAEH,SAACC,GAAD,OACzCA,EACGC,QAAQgB,KAAgB,SAACC,EAAD,GAAmF,IAAD,QAAjEd,QAAW96B,EAAsD,EAAtDA,QAASX,EAA6C,EAA7CA,KAAMw8B,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,MAC3F,aAAIJ,EAAa57B,UAAjB,aAAI,EAAwB67B,GAC1B,MAAMt/B,MAAM,0CAEd,IAAM0/B,EAAG,UAAGL,EAAa57B,UAAhB,QAA4B,GACrCi8B,EAAIJ,GAAQ,CAAEA,OAAMC,WAAUC,UAASC,QAAO38B,OAAM68B,UAAWR,KAC/DE,EAAa57B,GAAWi8B,KAEzBtB,QAAQwB,KAAsB,SAACP,EAAD,GAA6C,IAAjB57B,EAAgB,EAA3B86B,QAAW96B,QACpD47B,EAAa57B,KAClB47B,EAAa57B,GAAW,OAEzB26B,QAAQyB,KAAoB,SAACR,EAAD,GAAgE,IAAD,MAA9Cd,QAAW96B,EAAmC,EAAnCA,QAAS67B,EAA0B,EAA1BA,KAAM9Z,EAAoB,EAApBA,YAChEsa,EAAE,UAAGT,EAAa57B,UAAhB,aAAG,EAAwB67B,GAC9BQ,IAGAA,EAAGC,uBAGND,EAAGC,uBAAyBlP,KAAKgC,IAAIrN,EAAasa,EAAGC,wBAFrDD,EAAGC,uBAAyBva,MAK/B4Y,QAAQ4B,KAAqB,SAACX,EAAD,GAA4D,IAAD,MAA1Cd,QAAWe,EAA+B,EAA/BA,KAAM77B,EAAyB,EAAzBA,QAASw8B,EAAgB,EAAhBA,QACjEH,EAAE,UAAGT,EAAa57B,UAAhB,aAAG,EAAwB67B,GAC9BQ,IAGLA,EAAGG,QAAUA,EACbH,EAAGI,cAAgBf,W,uBC/CnB1iC,GAAuB,GAC3B0jC,iBAAkBp/B,IAAMq/B,MACxBC,WAAY,IAFe,cAG1Bt/B,IAAMq/B,MAAQ,CACbE,WAAY,KAJa,cAM1Bv/B,IAAMw/B,OAAS,CACdD,WAAY,KAPa,0BAShB,MATgB,GAYdpC,cAAyBzhC,GAAc,SAAC0hC,GAAD,OACpDA,EACGC,QACC1nB,KACA,SAAC/Y,EAAD,GAA8F,IAAD,MAAnF4gC,QAAW8B,EAAwE,EAAxEA,WAAYG,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,gBAAiBC,EAAyB,EAAzBA,iBAClE,OAAO,EAAP,iBACG5/B,IAAMq/B,MAAQ,CACbE,WAAYI,IAFhB,cAIG3/B,IAAMw/B,OAAS,CACdD,WAAYK,IALhB,iCAOoBF,GAPpB,2BAQEJ,GARF,0BASEG,GATF,KAaHpC,QAAQ5nB,KAAgB,SAAC7Y,EAAD,GAAgD,IAEtB,EAFqB,IAArC4gC,QAAW+B,EAA0B,EAA1BA,WAAYG,EAAc,EAAdA,MAClDG,EAAaH,IAAU1/B,IAAMq/B,MAAQr/B,IAAMw/B,OAASx/B,IAAMq/B,MAChE,OAAIE,IAAe3iC,EAAMijC,GAAYN,WAE5B,2BACF3iC,GADL,OAEEwiC,iBAAkBxiC,EAAMwiC,mBAAqBp/B,IAAMq/B,MAAQr/B,IAAMw/B,OAASx/B,IAAMq/B,OAFlF,cAGGK,EAAQ,CAAEH,eAHb,cAIGM,EAAa,CAAEN,WAAY3iC,EAAM8iC,GAAOH,aAJ3C,IAQK,2BACF3iC,GADL,kBAEG8iC,EAAQ,CAAEH,mBAGdlC,QAAQ3nB,KAAkB,SAAC9Y,GAAW,IAAD,EACpC,OAAO,2BACFA,GADL,OAEEwiC,iBAAkBxiC,EAAMwiC,mBAAqBp/B,IAAMq/B,MAAQr/B,IAAMw/B,OAASx/B,IAAMq/B,OAFlF,cAGGr/B,IAAMq/B,MAAQ,CAAEE,WAAY3iC,EAAMoD,IAAMw/B,QAAQD,aAHnD,cAIGv/B,IAAMw/B,OAAS,CAAED,WAAY3iC,EAAMoD,IAAMq/B,OAAOE,aAJnD,OAODlC,QAAQp9B,KAAW,SAACrD,EAAD,GAAgD,IAAD,IAArC4gC,QAAWkC,EAA0B,EAA1BA,MAAOJ,EAAmB,EAAnBA,WAC9C,OAAO,2BACF1iC,GADL,IAEEwiC,iBAAkBM,EAClBJ,kBAGHjC,QAAQznB,KAAc,SAAChZ,EAAD,GAAwC,IAAnB6iC,EAAkB,EAA7BjC,QAAWiC,UAC1C7iC,EAAM6iC,UAAYA,Q,QCtElB/jC,EAA0B,CAC9B0jC,iBAAkBp/B,IAAM8/B,WACxBR,WAAY,GACZS,gBAAiB,IAGJ5C,cAAyBzhC,GAAc,SAAC0hC,GAAD,OACpDA,EACGC,QAAQl9B,KAAgB,kBAAMzE,KAC9B2hC,QAAQp9B,KAAW,SAACrD,EAAD,GAA6D,IAAD,IAAlD4gC,QAAWkC,EAAuC,EAAvCA,MAAOJ,EAAgC,EAAhCA,WAC9C,OAD8E,EAApBU,YAGpDN,IAAU9iC,EAAMwiC,iBACX,2BACFxiC,GADL,IAEEwiC,iBAAkBM,EAClBJ,eAKG,2BACF1iC,GADL,IAEEwiC,iBAAkBM,EAClBJ,aACAS,gBAAiBnjC,EAAM0iC,aAGpB,2BACF1iC,GADL,IAEEwiC,iBAAkBM,EAClBJ,aACAS,gBAAiB,W,yBCdnBE,EAA4B,CAChCzjB,MAAO,KACPvZ,QAAS,KACTi9B,iBAAkB,KAClBC,cAAe,MAKXzkC,EAA2B,CAC/B0kC,kCAAmC/M,IACnCgN,MAAM,eACDhN,IAAsBgG,OAAtB,MAAAhG,IAAqB,YAAWD,MAAuBmG,QAAqC,SAACC,EAAM8G,GAEpG,OADA9G,EAAK8G,GAAWL,EACTzG,IACN,KAEL+G,eAAgBjN,KAGH6J,cAAczhC,GAAc,SAAC0hC,GAAD,OACzCA,EACGC,QAAQnL,IAAeC,SAAS,SAACv1B,EAAD,GAA6C,IAAD,IAAlC4gC,QAAWgD,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,IAC/D7jC,EAAMyjC,MAAMI,GAAZ,yBACEx9B,QAAS,KACTk9B,cAAe,MACZvjC,EAAMyjC,MAAMI,IAHjB,IAIEP,iBAAkBM,EAClBhkB,MAAO,UAGV6gB,QAAQnL,IAAeE,WAAW,SAACx1B,EAAD,GAAwD,IAAD,QAA7C4gC,QAAWgD,EAAkC,EAAlCA,UAAWE,EAAuB,EAAvBA,UAAWD,EAAY,EAAZA,IACtEx9B,EAAO,UAAGrG,EAAMyjC,MAAMI,UAAf,aAAG,EAAkBx9B,QAC5Bi9B,EAAgB,UAAGtjC,EAAMyjC,MAAMI,UAAf,aAAG,EAAkBP,iBAG3C,GAAIj9B,EAAS,CAGX,GAFoB09B,YAAkB19B,EAAQ29B,QAASF,EAAUE,WAE7CC,IAAeC,KAAM,OAChB,OAArBZ,GAA6BA,IAAqBM,IACpD5jC,EAAMyjC,MAAMI,GAAZ,2BACK7jC,EAAMyjC,MAAMI,IADjB,IAEEP,iBAAkB,KAClB1jB,MAAO,KACPvZ,UACAk9B,cAAeO,SAGd,CAEwC,IAAD,EAA5C,GAAIpN,IAAyByN,SAASN,GACpC,UAAA7jC,EAAM2jC,sBAAN,SAAsBS,KAAKP,GAG7B7jC,EAAMyjC,MAAMI,GAAZ,2BACK7jC,EAAMyjC,MAAMI,IADjB,IAEEP,iBAAkB,KAClB1jB,MAAO,KACPvZ,QAASy9B,EACTP,cAAe,WAIpB9C,QAAQnL,IAAeG,UAAU,SAACz1B,EAAD,GAA2D,IAAD,MAAhD4gC,QAAWiD,EAAqC,EAArCA,IAAKD,EAAgC,EAAhCA,UAAWS,EAAqB,EAArBA,cACjE,UAAArkC,EAAMyjC,MAAMI,UAAZ,eAAkBP,oBAAqBM,IAK3C5jC,EAAMyjC,MAAMI,GAAZ,2BACK7jC,EAAMyjC,MAAMI,IADjB,IAEEP,iBAAkB,KAClB1jB,MAAOykB,EACPh+B,QAAS,KACTk9B,cAAe,WAGlB9C,QAAQ/K,KAAS,SAAC11B,EAAD,GAA8B,IAAX6jC,EAAU,EAAnBjD,QACrB5gC,EAAMyjC,MAAMI,KACf7jC,EAAMyjC,MAAMI,GAAOR,MAGtB5C,QAAQ9K,KAAY,SAAC31B,EAAD,GAA8B,IAAX6jC,EAAU,EAAnBjD,QACzB5gC,EAAMyjC,MAAMI,WACP7jC,EAAMyjC,MAAMI,GAGjB7jC,EAAM2jC,gBAAkB3jC,EAAM2jC,eAAeQ,SAASN,KACxD7jC,EAAM2jC,eAAiB3jC,EAAM2jC,eAAelb,QAAO,SAAC6b,GAAD,OAAOA,IAAMT,SAGnEpD,QAAQ7K,KAAY,SAAC51B,EAAD,GAA8B,IAAX6jC,EAAU,EAAnBjD,QACxB5gC,EAAMyjC,MAAMI,KACf7jC,EAAMyjC,MAAMI,GAAOR,GAGjBrjC,EAAM2jC,iBAAmB3jC,EAAM2jC,eAAeQ,SAASN,IACzD7jC,EAAM2jC,eAAeS,KAAKP,GAGvB7jC,EAAM2jC,iBACT3jC,EAAM2jC,eAAiB,CAACE,OAG3BpD,QAAQ5K,KAAa,SAAC71B,EAAD,GAA8B,IAAX6jC,EAAU,EAAnBjD,QAC1B5gC,EAAM2jC,gBAAkB3jC,EAAM2jC,eAAeQ,SAASN,KACxD7jC,EAAM2jC,eAAiB3jC,EAAM2jC,eAAelb,QAAO,SAAC6b,GAAD,OAAOA,IAAMT,SAGnEpD,QAAQ3K,KAAkB,SAAC91B,EAAD,GAA8B,IAAD,EAAV6jC,EAAU,EAAnBjD,QACnC,KAAI,UAAC5gC,EAAMyjC,MAAMI,UAAb,aAAC,EAAkBN,eACrB,MAAM,IAAIlhC,MAAM,oDAElBrC,EAAMyjC,MAAMI,GAAZ,2BACK7jC,EAAMyjC,MAAMI,IADjB,IAEEN,cAAe,KACfl9B,QAASrG,EAAMyjC,MAAMI,GAAKN,mBAG7B9C,QAAQI,GAAe,SAAC7gC,GAEvB,GAAKA,EAAMwjC,mCAGJ,GAAIxjC,EAAMwjC,kCAAmC,CAClD,IAAMe,EAAqBvkC,EAAMwjC,kCAAkC7G,QACjE,SAAC6H,EAAGC,GAAJ,OAAUD,EAAE5V,IAAI6V,KAChB,IAAIC,KAEAC,EAAoBlO,IAAsBkG,QAAoB,SAAC6H,EAAGC,GAAJ,OAAUD,EAAE5V,IAAI6V,KAAI,IAAIC,KAE5FjO,IAAsBh1B,SAAQ,SAACiiC,GACxBa,EAAmB3jC,IAAI8iC,KAC1B1jC,EAAMyjC,MAAMC,GAAWL,MAI3BrjC,EAAMwjC,kCAAkC/hC,SAAQ,SAACiiC,GAC1CiB,EAAkB/jC,IAAI8iC,WAClB1jC,EAAMyjC,MAAMC,YAjBvB1jC,EAAMyjC,MAAQ3kC,EAAa2kC,MAC3BzjC,EAAM2jC,eAAiB7kC,EAAa6kC,eAqBtC3jC,EAAMwjC,kCAAoC/M,IAGrCz2B,EAAM2jC,iBACT3jC,EAAM2jC,eAAiBjN,IAGvBA,IAAyBhW,KAAI,SAACgjB,GAI5B,OAHK1jC,EAAMyjC,MAAMC,KACf1jC,EAAMyjC,MAAMC,GAAWL,IAElB,Y,SC/KXvkC,EAA0B,CAC9B0jC,iBAAkBp/B,IAAMwhC,kBACxBlC,WAAY,KAGCnC,cAAyBzhC,GAAc,SAAC0hC,GAAD,OACpDA,EAAQC,QAAQp9B,KAAW,SAACrD,EAAD,GAAgD,IAAD,IAArC4gC,QAAWkC,EAA0B,EAA1BA,MAAOJ,EAAmB,EAAnBA,WACrD,OAAO,2BACF1iC,GADL,IAEEwiC,iBAAkBM,EAClBJ,qB,SCmBSnC,cAJsB,CACnCpY,YAAa,KAG4B,SAACqY,GAAD,OACzCA,EACGC,QAAQvX,KAAuB,SAAClpB,EAAD,GAAmF,IAAD,MAAxE4gC,QAAW1Y,EAA6D,EAA7DA,MAAOpiB,EAAsD,EAAtDA,QAAsD,IAA7CnB,QAA6C,gBAAX,GAAW,GAAlCojB,sBAAkC,MAAjB,EAAiB,EAC1G8c,EAA6C7kC,EAAM8kC,cACrD9kC,EAAM8kC,cACL9kC,EAAM8kC,cAAgB,GAC3BD,EAAU/+B,GAAV,UAAqB++B,EAAU/+B,UAA/B,QAA2C,GAC3CoiB,EAAMzmB,SAAQ,SAAC2nB,GAAU,IAAD,IAChB2b,EAAUnc,YAAUQ,GAC1Byb,EAAU/+B,GAASi/B,GAAnB,UAA8BF,EAAU/+B,GAASi/B,UAAjD,QAA6D,GAC7DF,EAAU/+B,GAASi/B,GAAShd,IAAkB,UAAC8c,EAAU/+B,GAASi/B,GAAShd,UAA7B,QAAgD,GAAK,QAGtG0Y,QACCtX,KACA,SAACnpB,EAAD,GAAmF,IAAD,IAAxE4gC,QAAW96B,EAA6D,EAA7DA,QAASoiB,EAAoD,EAApDA,MAAoD,IAA7CvjB,QAA6C,gBAAX,GAAW,GAAlCojB,sBAAkC,MAAjB,EAAiB,EAC1E8c,EAA6C7kC,EAAM8kC,cACrD9kC,EAAM8kC,cACL9kC,EAAM8kC,cAAgB,GAEtBD,EAAU/+B,IACfoiB,EAAMzmB,SAAQ,SAAC2nB,GACb,IAAM2b,EAAUnc,YAAUQ,GACrByb,EAAU/+B,GAASi/B,IACnBF,EAAU/+B,GAASi/B,GAAShd,KAEmB,IAAhD8c,EAAU/+B,GAASi/B,GAAShd,UACvB8c,EAAU/+B,GAASi/B,GAAShd,GAEnC8c,EAAU/+B,GAASi/B,GAAShd,YAKnC0Y,QAAQuE,KAA0B,SAAChlC,EAAD,GAAkE,IAAD,MAAvD4gC,QAAW96B,EAA4C,EAA5CA,QAASm/B,EAAmC,EAAnCA,oBAAqB/c,EAAc,EAAdA,MACpFloB,EAAMmoB,YAAYriB,GAAlB,UAA6B9F,EAAMmoB,YAAYriB,UAA/C,QAA2D,GAC3DoiB,EAAMzmB,SAAQ,SAAC2nB,GACb,IAAM2b,EAAUnc,YAAUQ,GACpB/iB,EAAUrG,EAAMmoB,YAAYriB,GAASi/B,GAC3C,GAAK1+B,EAIE,CAAC,IAAD,EACL,IAAI,UAACA,EAAQ4+B,2BAAT,QAAgC,IAAMA,EAAqB,OAC/DjlC,EAAMmoB,YAAYriB,GAASi/B,GAASE,oBAAsBA,OAL1DjlC,EAAMmoB,YAAYriB,GAASi/B,GAAW,CACpCE,6BAQPxE,QAAQyE,KAA+B,SAACllC,EAAD,GAAkE,IAAD,MAAvD4gC,QAAWqE,EAA4C,EAA5CA,oBAAqBn/B,EAAuB,EAAvBA,QAASoiB,EAAc,EAAdA,MACzFloB,EAAMmoB,YAAYriB,GAAlB,UAA6B9F,EAAMmoB,YAAYriB,UAA/C,QAA2D,GAC3DoiB,EAAMzmB,SAAQ,SAAC2nB,GACb,IAAM2b,EAAUnc,YAAUQ,GACpB/iB,EAAUrG,EAAMmoB,YAAYriB,GAASi/B,GACtC1+B,GACDA,EAAQ4+B,sBAAwBA,WAC3B5+B,EAAQ4+B,oBACf5+B,EAAQlF,KAAO,KACfkF,EAAQwhB,YAAcod,SAI3BxE,QAAQ0E,KAAwB,SAACnlC,EAAD,GAA4D,IAAD,MAAjD4gC,QAAW96B,EAAsC,EAAtCA,QAASykB,EAA6B,EAA7BA,QAAS1C,EAAoB,EAApBA,YACtE7nB,EAAMmoB,YAAYriB,GAAlB,UAA6B9F,EAAMmoB,YAAYriB,UAA/C,QAA2D,GAC3DvE,OAAOC,KAAK+oB,GAAS9oB,SAAQ,SAACsjC,GAAa,IAAD,EAClC1+B,EAAUrG,EAAMmoB,YAAYriB,GAASi/B,IACvC,iBAAC1+B,QAAD,IAACA,OAAD,EAACA,EAASwhB,mBAAV,QAAyB,GAAKA,IAClC7nB,EAAMmoB,YAAYriB,GAASi/B,GAAW,CACpC5jC,KAAMopB,EAAQwa,GACdld,yBCnFJud,EAA2B,CAAC,OAAQ,eAAgB,SAEpDC,EAAQC,YAAe,CAC3BC,UAAUh/B,EACVi/B,QAAS,CACPC,aAAcC,IACdC,MAAOC,IACP1kB,MAAO2kB,IACPvI,MAAOwI,IACP37B,YAAa47B,IACbC,QAASC,IACTC,MAAOC,IACPC,aAAcC,IACdC,OAAQC,IACRC,QAASC,IAGTC,cACAtN,OACAsI,eACAiF,OACAC,OACAC,OACAze,YACA0e,SAEFC,WAAW,GAAD,mBAAMC,YAAqB,CAAEC,OAAO,KAApC,CAA6CC,eAAK,CAAEC,OAAQ/B,MACtEgC,eAAgBC,eAAK,CAAEF,OAAQ/B,MAGjCC,EAAMhlB,SAASwgB,KAOR,IAAMvgB,EAAiB,kBAAM+H,eAErBgd,O,oZCxCf,SAASiC,EAAiBC,EAA2BC,GACnD,IAAQ1hC,EAAYH,cAAZG,QACF2hC,EAAkBC,cAExB,OAAO3kB,mBAAQ,WACb,IAAKjd,EAAS,MAAO,GAGrB,IAAM6hC,EAAiBpmC,OAAOC,KAAK+lC,EAASzhC,IAAU62B,QAAqC,SAACiL,EAAQnhC,GAElG,OADAmhC,EAAOnhC,GAAW8gC,EAASzhC,GAASW,GAASub,MACtC4lB,IACN,IAEH,OAAIJ,EAEAC,EAEG9K,QACC,SAACkL,EAAW7lB,GAEV,OADA6lB,EAAU7lB,EAAMvb,SAAWub,EACpB6lB,IALb,eASSF,IAKNA,IACN,CAAC7hC,EAAS2hC,EAAiBF,EAAUC,IAQnC,SAAS5L,IAEd,OAAO0L,EADWQ,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBV,EADGW,eACiC,GAGrDC,EAAwB3mC,OAAOC,KAAKo6B,KAU1C,OATyBsM,EACrB3mC,OAAOC,KAAKwmC,GAAgBrL,QAAqC,SAACiL,EAAQnhC,GAIxE,OAHKyhC,EAAsB/D,SAAS19B,KAClCmhC,EAAOnhC,GAAWuhC,EAAevhC,IAE5BmhC,IACN,IACHI,EAKC,SAASG,IAEd,OAAOb,EADsBc,eACiB,GAGzC,SAASC,EAAiBrmB,GAC/B,IAAMsmB,EAAe1M,IAErB,SAAK0M,IAAiBtmB,MAIbsmB,EAAatmB,EAAMvb,SAIvB,SAAS8hC,EAAuBC,GACrC,IAAQ1iC,EAAYH,cAAZG,QACFkiC,EAAiBD,IAEvB,OAAOhlB,mBAAQ,WACb,GAAKjd,GAA2B,KAAhB0iC,EAIhB,OADeC,YAAalnC,OAAOmnC,OAAOV,GAAiBQ,KAE1D,CAAC1iC,EAASkiC,EAAgBQ,IAIxB,SAASG,EAAoBzY,GAClC,IAAMuX,EAAkBC,cAExB,QAAKxX,KAIIuX,EAAgBrmB,MAAK,SAACY,GAAD,OAAW4mB,YAAe1Y,EAAUlO,MAIpE,IAAM6mB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAI/f,OAAS,EACvB+f,EAEFC,GAAWH,EAAcK,KAAKF,IAAsC,IAA1BG,mBAASH,GAAS,IAC1DI,YAAmBJ,GACnBC,EAMC,SAASI,EAAS9tB,GACvB,IAAQzV,EAAYH,cAAZG,QACFe,EAAS+0B,IAETn1B,EAAUynB,YAAU3S,GAEpB+tB,EAAgBld,YAAiB3lB,QAAWhH,GAAW,GACvD8pC,EAAuB1c,YAAwBpmB,QAAWhH,GAAW,GACrEuiB,EAA2Bvb,EAAUI,EAAOJ,QAAWhH,EAEvD+pC,EAAY3e,YAAoB7I,OAAQviB,EAAY6pC,EAAe,YAAQ7pC,EAAWqoB,KACtF2hB,EAAmB5e,YACvB7I,OAAQviB,EAAY8pC,EACpB,YACA9pC,EACAqoB,KAEInc,EAASkf,YAAoB7I,OAAQviB,EAAY6pC,EAAe,cAAU7pC,EAAWqoB,KACrF4hB,EAAgB7e,YAAoB7I,OAAQviB,EAAY8pC,EAAsB,cAAU9pC,EAAWqoB,KACnGpkB,EAAWmnB,YAAoB7I,OAAQviB,EAAY6pC,EAAe,gBAAY7pC,EAAWqoB,KAE/F,OAAO/E,mBAAQ,WACb,GAAIf,EAAO,OAAOA,EAClB,GAAKlc,GAAYW,EAAjB,CACA,GAAI/C,EAAS6lB,SAAW5d,EAAO4d,SAAWigB,EAAUjgB,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI7lB,EAAS2lB,OACX,OAAO,IAAIre,IACTlF,EACAW,EACA/C,EAAS2lB,OAAO,GAChByf,EAAoB,UAACn9B,EAAO0d,cAAR,aAAC,EAAgB,GAAjB,UAAqBqgB,EAAcrgB,cAAnC,aAAqB,EAAuB,GAAI,WACpEyf,EAAoB,UAACU,EAAUngB,cAAX,aAAC,EAAmB,GAApB,UAAwBogB,EAAiBpgB,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACD5iB,EACAX,EACApC,EAAS6lB,QACT7lB,EAAS2lB,OACT1d,EAAO4d,QACP5d,EAAO0d,OACPqgB,EAAcrgB,OACdrH,EACAwnB,EAAUjgB,QACVigB,EAAUngB,OACVogB,EAAiBpgB,SAId,SAASsgB,EAAYhH,GAC1B,IAAMiH,EAAsC,SAApB,OAAVjH,QAAU,IAAVA,OAAA,EAAAA,EAAYkH,eACpB7nB,EAAQqnB,EAASO,OAAQnqC,EAAYkjC,GAC3C,OAAOiH,EAAQzZ,IAAQnO,I,8BChMzB,oBAGMsb,EAAsB,CAC1B,CACE5Y,OAAQ,EACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOsR,WACrB3T,OAAO,IACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,EACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAOsR,WACrB3T,OAAO,KACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEV,CACFrQ,OAAQ,IACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOG,GACrBxC,OAAO,MACPwlC,aAAc,OACdC,aAAc,cACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,IACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOO,IACrB5C,OAAO,MACPwlC,aAAc,OACdC,aAAc,cACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,eACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,IACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOS,IACrB9C,OAAO,MACPwlC,aAAc,OACdC,aAAc,cACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOW,IACrBhD,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,aACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOkB,KACrBgiC,aAAcljC,IAAOsR,WACrB3T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOoB,IACrB8hC,aAAcljC,IAAOsR,WACrB3T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsB,IACrB4hC,aAAcljC,IAAOsR,WACrB3T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOwB,IACrB0hC,aAAcljC,IAAOsR,WACrB3T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOK,MACrB6iC,aAAcljC,IAAOK,MACrB1C,OAAO,KACPwlC,aAAc,OACdC,aAAc,QACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOK,MACrB1C,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAOK,MACrB1C,OAAO,KACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOuR,KACrB5T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOmJ,MACrBxL,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO4G,MACrBjJ,OAAO,KACPwlC,aAAc,OACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAO8B,QACrBohC,aAAcljC,IAAO8B,QACrBnE,OAAO,KACPwlC,aAAc,OACdC,aAAc,UACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,SACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO8B,QACrBnE,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,MACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAO8B,QACrBnE,OAAO,KACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,MACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOgC,KACrBkhC,aAAcljC,IAAOgC,KACrBrE,OAAO,KACPwlC,aAAc,OACdC,aAAc,OACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOgC,KACrBrE,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAOgC,KACrBrE,OAAO,KACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAOsB,IACrB3D,OAAO,KACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,eACfC,UAAW,IACX5V,YAAY,GAEZ,CACErQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOsB,IACrB3D,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,eACfC,UAAW,IACX5V,YAAY,GAEf,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO6R,IACrBlU,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,MACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO8R,KACrBnU,OAAO,KACPwlC,aAAc,OACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,UACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOwR,KACrB7T,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,YACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,OACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO4R,SACrBjU,OAAO,KACPwlC,aAAc,OACdC,aAAc,GACdC,aAAc,GACdC,aAAc,GACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,UACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOwB,IACrB7D,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,eACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAOoB,IACrBzD,OAAO,IACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,eACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAO0B,IACrBwhC,aAAcljC,IAAO0B,IACrB/D,OAAO,IACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO0B,IACrB/D,OAAO,IACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAO0B,IACrB/D,OAAO,IACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,QACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAOW,IACrBhD,OAAO,IACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,aACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAO4B,WACrBshC,aAAcljC,IAAO4B,WACrBjE,OAAO,IACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,SACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO4B,WACrBjE,OAAO,IACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,SACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,EACRolB,aAAcjjC,IAAOW,IACrBuiC,aAAcljC,IAAO4B,WACrBjE,OAAO,IACPwlC,aAAc,OACdC,aAAc,MACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,SACfC,UAAW,IACX5V,YAAY,GAEb,CACCrQ,OAAQ,GACRolB,aAAcjjC,IAAOsR,WACrB4xB,aAAcljC,IAAO+R,IACrBpU,OAAO,KACPwlC,aAAc,OACdC,aAAc,aACdC,aAAc,GACdC,aAAc,OACdC,aAAc,iBACdC,cAAe,KACfC,cAAe,GACfC,cAAe,GACfxlB,gBAAiB,CACf,GAAI,GACJ,GAAI,8CAENJ,aAAc5E,IAAayqB,KAC3BC,SAAS,EACTC,cAAe,MACfC,UAAW,IACX5V,YAAY,IAKDuI,O,6BCj3Bf,kHAEO,SAASsN,EAAgB1a,EAAgCpqB,GAC9D,OAAOA,GAAWoqB,IAAaC,IAAQ5D,IAAKzmB,GAAWoqB,aAAoBllB,IAAQklB,OAAWzwB,EAGzF,SAASorC,EACdC,EACAhlC,GAEA,IAAMkc,EAAQ8oB,GAAkBhlC,EAAU8kC,EAAgBE,EAAe5a,SAAUpqB,QAAWrG,EAC9F,OAAOuiB,GAAS8oB,EAAiB,IAAIC,IAAY/oB,EAAO8oB,EAAexb,UAAO7vB,EAGzE,SAASurC,EAAehpB,GAC7B,OAAIA,EAAMipB,OAAO1e,IAAKvK,EAAMlc,UAAkBqqB,IACvCnO,I,gCChBT,sCAEY5e,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKkBE,YAAmD,0BACjDA,YAAmB,4BAC1BA,YAAmD,qBAC5CA,YAM7B,4BACyBA,YAA2C,yB,6BCjBvE,sCAEYF,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKkBE,YAAmD,6BACjDA,YAAmB,+BAC1BA,YAAmD,wBAC5CA,YAM7B,+BACyBA,YAA2C,4B,6BCjBvE,sCAEYF,EAFZ,S,SAEYA,K,cAAAA,E,iBAAAA,M,KAKkBE,YAAmD,yBACjDA,YAAmB,2BAC1BA,YAAmD,oBAC5CA,YAM7B,2BACyBA,YAA2C,wB,ssECjBvE,kHAEO,SAASsnC,EAAgB1a,EAAgCpqB,GAC9D,OAAOA,GAAWoqB,IAAaC,IAAQ5D,IAAKzmB,GAAWoqB,aAAoBllB,IAAQklB,OAAWzwB,EAGzF,SAASorC,EACdC,EACAhlC,GAEA,IAAMkc,EAAQ8oB,GAAkBhlC,EAAU8kC,EAAgBE,EAAe5a,SAAUpqB,QAAWrG,EAC9F,OAAOuiB,GAAS8oB,EAAiB,IAAIC,IAAY/oB,EAAO8oB,EAAexb,UAAO7vB,EAGzE,SAASurC,EAAehpB,GAC7B,OAAIA,EAAMipB,OAAO1e,IAAKvK,EAAMlc,UAAkBqqB,IACvCnO,I,6BChBT,kHAEO,SAAS4oB,EAAgB1a,EAAgCpqB,GAC9D,OAAOA,GAAWoqB,IAAaC,QAAQ5D,OAAKzmB,GAAWoqB,aAAoBllB,QAAQklB,OAAWzwB,EAGzF,SAASorC,EACdC,EACAhlC,GAEA,IAAMkc,EAAQ8oB,GAAkBhlC,EAAU8kC,EAAgBE,EAAe5a,SAAUpqB,QAAWrG,EAC9F,OAAOuiB,GAAS8oB,EAAiB,IAAIC,cAAY/oB,EAAO8oB,EAAexb,UAAO7vB,EAGzE,SAASurC,EAAehpB,GAC7B,OAAIA,EAAMipB,OAAO1e,OAAKvK,EAAMlc,UAAkBqqB,QACvCnO,I,6BChBT,kHAEO,SAAS4oB,EAAgB1a,EAAgCpqB,GAC9D,OAAOA,GAAWoqB,IAAaC,QAAQ5D,OAAKzmB,GAAWoqB,aAAoBllB,QAAQklB,OAAWzwB,EAGzF,SAASorC,EACdC,EACAhlC,GAEA,IAAMkc,EAAQ8oB,GAAkBhlC,EAAU8kC,EAAgBE,EAAe5a,SAAUpqB,QAAWrG,EAC9F,OAAOuiB,GAAS8oB,EAAiB,IAAIC,cAAY/oB,EAAO8oB,EAAexb,UAAO7vB,EAGzE,SAASurC,EAAehpB,GAC7B,OAAIA,EAAMipB,OAAO1e,OAAKvK,EAAMlc,UAAkBqqB,QACvCnO,I,uWCdIjX,GAAkC,mBAC5CrE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,sBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,sBAb2C,GAgBlCC,GAAkC,mBAC5CxE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,gBAb2C,GAiBlCE,EAAO,IAAIH,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FyE,EAAM,IAAIJ,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F0E,EAAO,IAAIL,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5F2E,EAAO,IAAIN,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F4E,EAAM,IAAIP,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,qBAEW6E,EAAM,IAAIR,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,8BAEW8E,EAAO,IAAIT,IACtBtE,IAAQC,QACR,6CACA,GACA,OACA,wBA26DaE,IAx6DA,CACb6E,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEf9E,KAAM,CACJ6E,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfC,SAAU,CACRF,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfE,KAAM,CACJH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfG,KAAM,CACJJ,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfI,IAAK,CACHL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mBAEfK,KAAM,CACJN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfM,KAAM,CACJP,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfO,MAAO,CACLR,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfQ,GAAI,CACFT,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfS,IAAK,CACHV,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfU,MAAO,CACLX,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfW,MAAO,CACLZ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfY,QAAS,CACPb,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfa,KAAM,CACJd,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfc,IAAK,CACHf,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfe,IAAK,CACHhB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfgB,OAAQ,CACNjB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfiB,OAAQ,CACNlB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfkB,KAAM,CACJnB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmB,IAAK,CACHpB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoB,KAAM,CACJrB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqB,IAAK,CACHtB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsB,MAAO,CACLvB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfuB,MAAO,CACLxB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oCAEfwB,IAAK,CACHzB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfyB,IAAK,CACH1B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf0B,KAAM,CACJ3B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf2B,KAAM,CACJ5B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf4B,KAAM,CACJ7B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6B,MAAO,CACL9B,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEf8B,IAAK,CACH/B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+B,KAAM,CACJhC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgC,IAAK,CACHjC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfiC,IAAK,CACHlC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,gCAEfkC,MAAO,CACLnC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmC,MAAO,CACLpC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sCAEfoC,KAAM,CACJrC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqC,KAAM,CACJtC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfsC,IAAK,CACHvC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfuC,MAAO,CACLxC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfwC,KAAM,CACJzC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfyC,QAAS,CACP1C,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf0C,IAAK,CACH3C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf2C,IAAK,CACH5C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf4C,KAAM,CACJ7C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6C,IAAK,CACH9C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf8C,IAAK,CACH/C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf+C,KAAM,CACJhD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgD,IAAK,CACHjD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfiD,KAAM,CACJlD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfkD,IAAK,CACHnD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfmD,KAAM,CACJpD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoD,IAAK,CACHrD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqD,MAAO,CACLtD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfsD,MAAO,CACLvD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuD,OAAQ,CACNxD,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfwD,MAAO,CACLzD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfyD,KAAM,CACJ1D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0D,IAAK,CACH3D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2D,MAAO,CACL5D,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf4D,IAAK,CACH7D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf6D,IAAK,CACH9D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf8D,GAAI,CACF/D,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf+D,KAAM,CACJhE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgE,MAAO,CACLjE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfiE,IAAK,CACHlE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfkE,IAAK,CACHnE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfmE,IAAK,CACHpE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf7D,KAAM,CACJ4D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfjD,QAAS,CACPgD,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfoE,MAAO,CACLrE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf/C,KAAM,CACJ8C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfqE,MAAO,CACLtE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfsE,KAAM,CACJvE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfuE,IAAK,CACHxE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwE,KAAM,CACJzE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfyE,QAAS,CACP1E,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0E,KAAM,CACJ3E,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2E,IAAK,CACH5E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4E,IAAK,CACH7E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6E,IAAK,CACH9E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,kCAEf8E,IAAK,CACH/E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf+E,IAAK,CACHhF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfgF,MAAO,CACLjF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfiF,IAAK,CACHlF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfkF,MAAO,CACLnF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfmF,KAAM,CACJpF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoF,MAAO,CACLrF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfqF,KAAM,CACJtF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfsF,KAAM,CACJvF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuF,KAAM,CACJxF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf3D,IAAK,CACH0D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwF,KAAM,CACJzF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8CAEfyF,MAAO,CACL1F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0F,OAAQ,CACN3F,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2F,MAAO,CACL5F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4F,MAAO,CACL7F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfvD,IAAK,CACHsD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6F,KAAM,CACJ9F,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf8F,IAAK,CACH/F,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf+F,IAAK,CACHhG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,4BAEfgG,KAAM,CACJjG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfiG,IAAK,CACHlG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfkG,IAAK,CACHnG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,mBAEfmG,KAAM,CACJpG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,uBAEfoG,KAAM,CACJrG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,sBAEfqG,KAAM,CACJtG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfsG,IAAK,CACHvG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfuG,KAAM,CACJxG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfwG,KAAM,CACJzG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfyG,IAAK,CACH1G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf0G,IAAK,CACH3G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,qBAEf2G,IAAK,CACH5G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf4G,IAAK,CACH7G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf6G,IAAK,CACH9G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf8G,KAAM,CACJ/G,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf+G,OAAQ,CACNhH,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfgH,MAAO,CACLjH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfiH,QAAS,CACPlH,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkH,MAAO,CACLnH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmH,IAAK,CACHpH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoH,IAAK,CACHrH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqH,KAAM,CACJtH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfsH,IAAK,CACHvH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfuH,KAAM,CACJxH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfwH,IAAK,CACHzH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfyH,KAAM,CACJ1H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEf0H,KAAM,CACJ3H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,6BAEf2H,IAAK,CACH5H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf4H,IAAK,CACH7H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf6H,KAAM,CACJ9H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf8H,IAAK,CACH/H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+H,KAAM,CACJhI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgI,KAAM,CACJjI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfiI,IAAK,CACHlI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oBAEfkI,KAAM,CACJnI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmI,OAAQ,CACNpI,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfoI,IAAK,CACHrI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqI,KAAM,CACJtI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsI,KAAM,CACJvI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuI,IAAK,CACHxI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfwI,IAAK,CACHzI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfyI,IAAK,CACH1I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEf0I,KAAM,CACJ3I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2I,KAAM,CACJ5I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4I,IAAK,CACH7I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf6I,MAAO,CACL9I,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8I,IAAK,CACH/I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+I,IAAK,CACHhJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfgJ,MAAO,CACLjJ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiJ,IAAK,CACHlJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfkJ,YAAM,CACJnJ,OAAQ,YACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfmJ,OAAQ,CACNpJ,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfoJ,IAAK,CACHrJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqJ,IAAK,CACHtJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsJ,IAAK,CACHvJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfuJ,IAAK,CACHxJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfwJ,IAAK,CACHzJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfyJ,MAAO,CACL1J,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0J,KAAM,CACJ3J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2J,IAAK,CACH5J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf4J,IAAK,CACH7J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6J,KAAM,CACJ9J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf8J,IAAK,CACH/J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf+J,KAAM,CACJhK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfgK,KAAM,CACJjK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiK,IAAK,CACHlK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkK,KAAM,CACJnK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmK,SAAU,CACRpK,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoK,aAAO,CACLrK,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfqK,IAAK,CACHtK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfsK,KAAM,CACJvK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuK,MAAO,CACLxK,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfwK,KAAM,CACJzK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfyK,KAAM,CACJ1K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf0K,IAAK,CACH3K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf2K,IAAK,CACH5K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf4K,KAAM,CACJ7K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf6K,KAAM,CACJ9K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf8K,KAAM,CACJ/K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+K,IAAK,CACHhL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfgL,OAAQ,CACNjL,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiL,MAAO,CACLlL,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfkL,GAAI,CACFnL,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmL,IAAK,CACHpL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoL,KAAM,CACJrL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfqL,KAAM,CACJtL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsL,IAAK,CACHvL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuL,IAAK,CACHxL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfwL,KAAM,CACJzL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEfyL,GAAI,CACF1L,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf0L,IAAK,CACH3L,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2L,KAAM,CACJ5L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4L,OAAQ,CACN7L,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf6L,MAAO,CACL9L,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf8L,KAAM,CACJ/L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,+BAEf+L,GAAI,CACFhM,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfgM,IAAK,CACHjM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sBAEfiM,IAAK,CACHlM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfkM,IAAK,CACHnM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmM,IAAK,CACHpM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfoM,SAAU,CACRrM,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfqM,IAAK,CACHtM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsM,IAAK,CACHvM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfnD,WAAY,CACVkD,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEbuM,WAAY,CACVxM,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfyM,KAAM,CACJ1M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf1E,MAAO,CACLyE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf2M,MAAO,CACL5M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf4M,MAAO,CACL7M,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6M,SAAU,CACR9M,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfpE,IAAK,CACHmE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfrD,IAAK,CACHoD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8M,IAAK,CACH/M,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfzD,IAAK,CACHwD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf+M,KAAM,CACJhN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,4BAEfgN,IAAK,CACHjN,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4B,uWC/9DNb,GAAkC,mBAC5CrE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,sBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,sBAb2C,GAgBlCC,GAAkC,mBAC5CxE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,gBAb2C,GAiBlCE,EAAO,IAAIH,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FyE,EAAM,IAAIJ,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F0E,EAAO,IAAIL,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5F2E,EAAO,IAAIN,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F4E,EAAM,IAAIP,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,qBAEW6E,EAAM,IAAIR,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,8BAEW8E,EAAO,IAAIT,IACtBtE,IAAQC,QACR,6CACA,GACA,OACA,wBA26DaE,IAx6DA,CACb6E,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEf9E,KAAM,CACJ6E,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfC,SAAU,CACRF,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfE,KAAM,CACJH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfG,KAAM,CACJJ,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfI,IAAK,CACHL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mBAEfK,KAAM,CACJN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfM,KAAM,CACJP,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfO,MAAO,CACLR,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfQ,GAAI,CACFT,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfS,IAAK,CACHV,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfU,MAAO,CACLX,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfW,MAAO,CACLZ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfY,QAAS,CACPb,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfa,KAAM,CACJd,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfc,IAAK,CACHf,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfe,IAAK,CACHhB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfgB,OAAQ,CACNjB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfiB,OAAQ,CACNlB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfkB,KAAM,CACJnB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmB,IAAK,CACHpB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoB,KAAM,CACJrB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqB,IAAK,CACHtB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsB,MAAO,CACLvB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfuB,MAAO,CACLxB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oCAEfwB,IAAK,CACHzB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfyB,IAAK,CACH1B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf0B,KAAM,CACJ3B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf2B,KAAM,CACJ5B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf4B,KAAM,CACJ7B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6B,MAAO,CACL9B,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEf8B,IAAK,CACH/B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+B,KAAM,CACJhC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgC,IAAK,CACHjC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfiC,IAAK,CACHlC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,gCAEfkC,MAAO,CACLnC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmC,MAAO,CACLpC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sCAEfoC,KAAM,CACJrC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqC,KAAM,CACJtC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfsC,IAAK,CACHvC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfuC,MAAO,CACLxC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfwC,KAAM,CACJzC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfyC,QAAS,CACP1C,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf0C,IAAK,CACH3C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf2C,IAAK,CACH5C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf4C,KAAM,CACJ7C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6C,IAAK,CACH9C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf8C,IAAK,CACH/C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf+C,KAAM,CACJhD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgD,IAAK,CACHjD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfiD,KAAM,CACJlD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfkD,IAAK,CACHnD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfmD,KAAM,CACJpD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoD,IAAK,CACHrD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqD,MAAO,CACLtD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfsD,MAAO,CACLvD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuD,OAAQ,CACNxD,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfwD,MAAO,CACLzD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfyD,KAAM,CACJ1D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0D,IAAK,CACH3D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2D,MAAO,CACL5D,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf4D,IAAK,CACH7D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf6D,IAAK,CACH9D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf8D,GAAI,CACF/D,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf+D,KAAM,CACJhE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgE,MAAO,CACLjE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfiE,IAAK,CACHlE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfkE,IAAK,CACHnE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfmE,IAAK,CACHpE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf7D,KAAM,CACJ4D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfjD,QAAS,CACPgD,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfoE,MAAO,CACLrE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf/C,KAAM,CACJ8C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfqE,MAAO,CACLtE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfsE,KAAM,CACJvE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfuE,IAAK,CACHxE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwE,KAAM,CACJzE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfyE,QAAS,CACP1E,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0E,KAAM,CACJ3E,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2E,IAAK,CACH5E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4E,IAAK,CACH7E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6E,IAAK,CACH9E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,kCAEf8E,IAAK,CACH/E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf+E,IAAK,CACHhF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfgF,MAAO,CACLjF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfiF,IAAK,CACHlF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfkF,MAAO,CACLnF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfmF,KAAM,CACJpF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoF,MAAO,CACLrF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfqF,KAAM,CACJtF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfsF,KAAM,CACJvF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuF,KAAM,CACJxF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf3D,IAAK,CACH0D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwF,KAAM,CACJzF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8CAEfyF,MAAO,CACL1F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0F,OAAQ,CACN3F,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2F,MAAO,CACL5F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4F,MAAO,CACL7F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfvD,IAAK,CACHsD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6F,KAAM,CACJ9F,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf8F,IAAK,CACH/F,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf+F,IAAK,CACHhG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,4BAEfgG,KAAM,CACJjG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfiG,IAAK,CACHlG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfkG,IAAK,CACHnG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,mBAEfmG,KAAM,CACJpG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,uBAEfoG,KAAM,CACJrG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,sBAEfqG,KAAM,CACJtG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfsG,IAAK,CACHvG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfuG,KAAM,CACJxG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfwG,KAAM,CACJzG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfyG,IAAK,CACH1G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf0G,IAAK,CACH3G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,qBAEf2G,IAAK,CACH5G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf4G,IAAK,CACH7G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf6G,IAAK,CACH9G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf8G,KAAM,CACJ/G,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf+G,OAAQ,CACNhH,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfgH,MAAO,CACLjH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfiH,QAAS,CACPlH,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkH,MAAO,CACLnH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmH,IAAK,CACHpH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoH,IAAK,CACHrH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqH,KAAM,CACJtH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfsH,IAAK,CACHvH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfuH,KAAM,CACJxH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfwH,IAAK,CACHzH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfyH,KAAM,CACJ1H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEf0H,KAAM,CACJ3H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,6BAEf2H,IAAK,CACH5H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf4H,IAAK,CACH7H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf6H,KAAM,CACJ9H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf8H,IAAK,CACH/H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+H,KAAM,CACJhI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgI,KAAM,CACJjI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfiI,IAAK,CACHlI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oBAEfkI,KAAM,CACJnI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmI,OAAQ,CACNpI,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfoI,IAAK,CACHrI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqI,KAAM,CACJtI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsI,KAAM,CACJvI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuI,IAAK,CACHxI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfwI,IAAK,CACHzI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfyI,IAAK,CACH1I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEf0I,KAAM,CACJ3I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2I,KAAM,CACJ5I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4I,IAAK,CACH7I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf6I,MAAO,CACL9I,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8I,IAAK,CACH/I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+I,IAAK,CACHhJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfgJ,MAAO,CACLjJ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiJ,IAAK,CACHlJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfkJ,YAAM,CACJnJ,OAAQ,YACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfmJ,OAAQ,CACNpJ,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfoJ,IAAK,CACHrJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqJ,IAAK,CACHtJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsJ,IAAK,CACHvJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfuJ,IAAK,CACHxJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfwJ,IAAK,CACHzJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfyJ,MAAO,CACL1J,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0J,KAAM,CACJ3J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2J,IAAK,CACH5J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf4J,IAAK,CACH7J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6J,KAAM,CACJ9J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf8J,IAAK,CACH/J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf+J,KAAM,CACJhK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfgK,KAAM,CACJjK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiK,IAAK,CACHlK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkK,KAAM,CACJnK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmK,SAAU,CACRpK,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoK,aAAO,CACLrK,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfqK,IAAK,CACHtK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfsK,KAAM,CACJvK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuK,MAAO,CACLxK,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfwK,KAAM,CACJzK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfyK,KAAM,CACJ1K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf0K,IAAK,CACH3K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf2K,IAAK,CACH5K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf4K,KAAM,CACJ7K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf6K,KAAM,CACJ9K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf8K,KAAM,CACJ/K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+K,IAAK,CACHhL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfgL,OAAQ,CACNjL,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiL,MAAO,CACLlL,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfkL,GAAI,CACFnL,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmL,IAAK,CACHpL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoL,KAAM,CACJrL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfqL,KAAM,CACJtL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsL,IAAK,CACHvL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuL,IAAK,CACHxL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfwL,KAAM,CACJzL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEfyL,GAAI,CACF1L,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf0L,IAAK,CACH3L,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2L,KAAM,CACJ5L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4L,OAAQ,CACN7L,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf6L,MAAO,CACL9L,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf8L,KAAM,CACJ/L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,+BAEf+L,GAAI,CACFhM,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfgM,IAAK,CACHjM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sBAEfiM,IAAK,CACHlM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfkM,IAAK,CACHnM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmM,IAAK,CACHpM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfoM,SAAU,CACRrM,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfqM,IAAK,CACHtM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsM,IAAK,CACHvM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfnD,WAAY,CACVkD,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEbuM,WAAY,CACVxM,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfyM,KAAM,CACJ1M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf1E,MAAO,CACLyE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf2M,MAAO,CACL5M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf4M,MAAO,CACL7M,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6M,SAAU,CACR9M,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfpE,IAAK,CACHmE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfrD,IAAK,CACHoD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8M,IAAK,CACH/M,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfzD,IAAK,CACHwD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf+M,KAAM,CACJhN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,4BAEfgN,IAAK,CACHjN,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4B,uWC/9DNb,GAAkC,mBAC5CrE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,sBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,sBAb2C,GAgBlCC,GAAkC,mBAC5CxE,IAAQC,QAAU,IAAIqE,IACrBtE,IAAQC,QACR,6CACA,GACA,OACA,gBAN2C,cAQ5CD,IAAQuE,QAAU,IAAID,IACrBtE,IAAQuE,QACR,6CACA,GACA,OACA,gBAb2C,GAiBlCE,EAAO,IAAIH,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5FyE,EAAM,IAAIJ,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,MAAO,kBAC1F0E,EAAO,IAAIL,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,cAC5F2E,EAAO,IAAIN,IAAMtE,IAAQC,QAAS,6CAA8C,GAAI,OAAQ,eAC5F4E,EAAM,IAAIP,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,qBAEW6E,EAAM,IAAIR,IACrBtE,IAAQC,QACR,6CACA,GACA,MACA,8BAEW8E,EAAO,IAAIT,IACtBtE,IAAQC,QACR,6CACA,GACA,OACA,wBA26DaE,IAx6DA,CACb6E,IAAK,CACHC,OAAQ,MACRC,YAAa,4BAEf9E,KAAM,CACJ6E,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfC,SAAU,CACRF,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfE,KAAM,CACJH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfG,KAAM,CACJJ,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfI,IAAK,CACHL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mBAEfK,KAAM,CACJN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfM,KAAM,CACJP,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfO,MAAO,CACLR,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfQ,GAAI,CACFT,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfS,IAAK,CACHV,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfU,MAAO,CACLX,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfW,MAAO,CACLZ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfY,QAAS,CACPb,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfa,KAAM,CACJd,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfc,IAAK,CACHf,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfe,IAAK,CACHhB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfgB,OAAQ,CACNjB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfiB,OAAQ,CACNlB,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfkB,KAAM,CACJnB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmB,IAAK,CACHpB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoB,KAAM,CACJrB,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqB,IAAK,CACHtB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsB,MAAO,CACLvB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEfuB,MAAO,CACLxB,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oCAEfwB,IAAK,CACHzB,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfyB,IAAK,CACH1B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf0B,KAAM,CACJ3B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf2B,KAAM,CACJ5B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf4B,KAAM,CACJ7B,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6B,MAAO,CACL9B,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEf8B,IAAK,CACH/B,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+B,KAAM,CACJhC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgC,IAAK,CACHjC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfiC,IAAK,CACHlC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,gCAEfkC,MAAO,CACLnC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmC,MAAO,CACLpC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sCAEfoC,KAAM,CACJrC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqC,KAAM,CACJtC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfsC,IAAK,CACHvC,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfuC,MAAO,CACLxC,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfwC,KAAM,CACJzC,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfyC,QAAS,CACP1C,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf0C,IAAK,CACH3C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf2C,IAAK,CACH5C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf4C,KAAM,CACJ7C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6C,IAAK,CACH9C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf8C,IAAK,CACH/C,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf+C,KAAM,CACJhD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgD,IAAK,CACHjD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfiD,KAAM,CACJlD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfkD,IAAK,CACHnD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfmD,KAAM,CACJpD,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoD,IAAK,CACHrD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqD,MAAO,CACLtD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfsD,MAAO,CACLvD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuD,OAAQ,CACNxD,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfwD,MAAO,CACLzD,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfyD,KAAM,CACJ1D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0D,IAAK,CACH3D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2D,MAAO,CACL5D,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf4D,IAAK,CACH7D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf6D,IAAK,CACH9D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf8D,GAAI,CACF/D,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEf+D,KAAM,CACJhE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfgE,MAAO,CACLjE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfiE,IAAK,CACHlE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfkE,IAAK,CACHnE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfmE,IAAK,CACHpE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf7D,KAAM,CACJ4D,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,gCAEfjD,QAAS,CACPgD,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfoE,MAAO,CACLrE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf/C,KAAM,CACJ8C,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfqE,MAAO,CACLtE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfsE,KAAM,CACJvE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfuE,IAAK,CACHxE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwE,KAAM,CACJzE,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEfyE,QAAS,CACP1E,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf0E,KAAM,CACJ3E,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2E,IAAK,CACH5E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4E,IAAK,CACH7E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6E,IAAK,CACH9E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,kCAEf8E,IAAK,CACH/E,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEf+E,IAAK,CACHhF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfgF,MAAO,CACLjF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfiF,IAAK,CACHlF,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfkF,MAAO,CACLnF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEfmF,KAAM,CACJpF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoF,MAAO,CACLrF,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEfqF,KAAM,CACJtF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfsF,KAAM,CACJvF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuF,KAAM,CACJxF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf3D,IAAK,CACH0D,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfwF,KAAM,CACJzF,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8CAEfyF,MAAO,CACL1F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0F,OAAQ,CACN3F,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2F,MAAO,CACL5F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4F,MAAO,CACL7F,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfvD,IAAK,CACHsD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf6F,KAAM,CACJ9F,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf8F,IAAK,CACH/F,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf+F,IAAK,CACHhG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,4BAEfgG,KAAM,CACJjG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfiG,IAAK,CACHlG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,6BAEfkG,IAAK,CACHnG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,mBAEfmG,KAAM,CACJpG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,uBAEfoG,KAAM,CACJrG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,sBAEfqG,KAAM,CACJtG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfsG,IAAK,CACHvG,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfuG,KAAM,CACJxG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfwG,KAAM,CACJzG,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEfyG,IAAK,CACH1G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf0G,IAAK,CACH3G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,qBAEf2G,IAAK,CACH5G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,0BAEf4G,IAAK,CACH7G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf6G,IAAK,CACH9G,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,wBAEf8G,KAAM,CACJ/G,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf+G,OAAQ,CACNhH,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,8CAEN/C,SAAU,GACVkI,YAAa,2BAEfgH,MAAO,CACLjH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfiH,QAAS,CACPlH,OAAQ,UACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkH,MAAO,CACLnH,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmH,IAAK,CACHpH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfoH,IAAK,CACHrH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfqH,KAAM,CACJtH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfsH,IAAK,CACHvH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfuH,KAAM,CACJxH,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfwH,IAAK,CACHzH,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfyH,KAAM,CACJ1H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEf0H,KAAM,CACJ3H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,6BAEf2H,IAAK,CACH5H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf4H,IAAK,CACH7H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEf6H,KAAM,CACJ9H,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf8H,IAAK,CACH/H,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEf+H,KAAM,CACJhI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfgI,KAAM,CACJjI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oBAEfiI,IAAK,CACHlI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,oBAEfkI,KAAM,CACJnI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmI,OAAQ,CACNpI,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfoI,IAAK,CACHrI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfqI,KAAM,CACJtI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsI,KAAM,CACJvI,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfuI,IAAK,CACHxI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfwI,IAAK,CACHzI,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfyI,IAAK,CACH1I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEf0I,KAAM,CACJ3I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2I,KAAM,CACJ5I,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf4I,IAAK,CACH7I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf6I,MAAO,CACL9I,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8I,IAAK,CACH/I,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+I,IAAK,CACHhJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,oCAEfgJ,MAAO,CACLjJ,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiJ,IAAK,CACHlJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfkJ,YAAM,CACJnJ,OAAQ,YACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfmJ,OAAQ,CACNpJ,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,kCAEfoJ,IAAK,CACHrJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfqJ,IAAK,CACHtJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsJ,IAAK,CACHvJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEfuJ,IAAK,CACHxJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfwJ,IAAK,CACHzJ,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfyJ,MAAO,CACL1J,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf0J,KAAM,CACJ3J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf2J,IAAK,CACH5J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf4J,IAAK,CACH7J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6J,KAAM,CACJ9J,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEf8J,IAAK,CACH/J,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf+J,KAAM,CACJhK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfgK,KAAM,CACJjK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiK,IAAK,CACHlK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfkK,KAAM,CACJnK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfmK,SAAU,CACRpK,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfoK,aAAO,CACLrK,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,8BAEfqK,IAAK,CACHtK,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfsK,KAAM,CACJvK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuK,MAAO,CACLxK,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,2BAEfwK,KAAM,CACJzK,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEfyK,KAAM,CACJ1K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf0K,IAAK,CACH3K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf2K,IAAK,CACH5K,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,wBAEf4K,KAAM,CACJ7K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,sBAEf6K,KAAM,CACJ9K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf8K,KAAM,CACJ/K,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf+K,IAAK,CACHhL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfgL,OAAQ,CACNjL,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfiL,MAAO,CACLlL,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfkL,GAAI,CACFnL,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEfmL,IAAK,CACHpL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,qBAEfoL,KAAM,CACJrL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfqL,KAAM,CACJtL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEfsL,IAAK,CACHvL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfuL,IAAK,CACHxL,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfwL,KAAM,CACJzL,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,mCAEfyL,GAAI,CACF1L,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEf0L,IAAK,CACH3L,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEf2L,KAAM,CACJ5L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf4L,OAAQ,CACN7L,OAAQ,SACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,8BAEf6L,MAAO,CACL9L,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,yBAEf8L,KAAM,CACJ/L,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,+BAEf+L,GAAI,CACFhM,OAAQ,KACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfgM,IAAK,CACHjM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,sBAEfiM,IAAK,CACHlM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfkM,IAAK,CACHnM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,wBAEfmM,IAAK,CACHpM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfoM,SAAU,CACRrM,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,yBAEfqM,IAAK,CACHtM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfsM,IAAK,CACHvM,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,uBAEfnD,WAAY,CACVkD,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEbuM,WAAY,CACVxM,OAAQ,aACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEfyM,KAAM,CACJ1M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,2BAEf1E,MAAO,CACLyE,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf2M,MAAO,CACL5M,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,iCAEf4M,MAAO,CACL7M,OAAQ,QACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,0BAEf6M,SAAU,CACR9M,OAAQ,WACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,6BAEfpE,IAAK,CACHmE,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,0BAEfrD,IAAK,CACHoD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,+BAEf8M,IAAK,CACH/M,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4BAEfzD,IAAK,CACHwD,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,gCAEf+M,KAAM,CACJhN,OAAQ,OACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,EACVkI,YAAa,4BAEfgN,IAAK,CACHjN,OAAQ,MACRlF,QAAS,CACP,GAAI,6CACJ,GAAI,IAEN/C,SAAU,GACVkI,YAAa,4B,qZC38DnB,SAAS07B,EAAiBC,EAA2BC,GACnD,IAAQ1hC,EAAYH,cAAZG,QACF2hC,EAAkBC,cAExB,OAAO3kB,mBAAQ,WACb,IAAKjd,EAAS,MAAO,GAGrB,IAAM6hC,EAAiBpmC,OAAOC,KAAK+lC,EAASzhC,IAAU62B,QAAqC,SAACiL,EAAQnhC,GAElG,OADAmhC,EAAOnhC,GAAW8gC,EAASzhC,GAASW,GAASub,MACtC4lB,IACN,IAEH,OAAIJ,EAEAC,EAEG9K,QACC,SAACkL,EAAW7lB,GAEV,OADA6lB,EAAU7lB,EAAMvb,SAAWub,EACpB6lB,IALb,eASSF,IAKNA,IACN,CAAC7hC,EAAS2hC,EAAiBF,EAAUC,IAQnC,SAAS5L,IAEd,OAAO0L,EADWQ,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBV,EADGW,eACiC,GAGrDC,EAAwB3mC,OAAOC,KAAKo6B,KAU1C,OATyBsM,EACrB3mC,OAAOC,KAAKwmC,GAAgBrL,QAAqC,SAACiL,EAAQnhC,GAIxE,OAHKyhC,EAAsB/D,SAAS19B,KAClCmhC,EAAOnhC,GAAWuhC,EAAevhC,IAE5BmhC,IACN,IACHI,EAKC,SAASG,IAEd,OAAOb,EADsBc,eACiB,GAGzC,SAASC,EAAiBrmB,GAC/B,IAAMsmB,EAAe1M,IAErB,SAAK0M,IAAiBtmB,MAIbsmB,EAAatmB,EAAMvb,SAIvB,SAAS8hC,EAAuBC,GACrC,IAAQ1iC,EAAYH,cAAZG,QACFkiC,EAAiBD,IAEvB,OAAOhlB,mBAAQ,WACb,GAAKjd,GAA2B,KAAhB0iC,EAIhB,OADeC,YAAalnC,OAAOmnC,OAAOV,GAAiBQ,KAE1D,CAAC1iC,EAASkiC,EAAgBQ,IAIxB,SAASG,EAAoBzY,GAClC,IAAMuX,EAAkBC,cAExB,QAAKxX,KAIIuX,EAAgBrmB,MAAK,SAACY,GAAD,OAAW4mB,YAAe1Y,EAAUlO,MAIpE,IAAM6mB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAI/f,OAAS,EACvB+f,EAEFC,GAAWH,EAAcK,KAAKF,IAAsC,IAA1BG,mBAASH,GAAS,IAC1DI,YAAmBJ,GACnBC,EAMC,SAASI,EAAS9tB,GACvB,IAAQzV,EAAYH,cAAZG,QACFe,EAAS+0B,IAETn1B,EAAUynB,YAAU3S,GAEpB+tB,EAAgBld,YAAiB3lB,QAAWhH,GAAW,GACvD8pC,EAAuB1c,YAAwBpmB,QAAWhH,GAAW,GACrEuiB,EAA2Bvb,EAAUI,EAAOJ,QAAWhH,EAEvD+pC,EAAY3e,YAAoB7I,OAAQviB,EAAY6pC,EAAe,YAAQ7pC,EAAWqoB,KACtF2hB,EAAmB5e,YACvB7I,OAAQviB,EAAY8pC,EACpB,YACA9pC,EACAqoB,KAEInc,EAASkf,YAAoB7I,OAAQviB,EAAY6pC,EAAe,cAAU7pC,EAAWqoB,KACrF4hB,EAAgB7e,YAAoB7I,OAAQviB,EAAY8pC,EAAsB,cAAU9pC,EAAWqoB,KACnGpkB,EAAWmnB,YAAoB7I,OAAQviB,EAAY6pC,EAAe,gBAAY7pC,EAAWqoB,KAE/F,OAAO/E,mBAAQ,WACb,GAAIf,EAAO,OAAOA,EAClB,GAAKlc,GAAYW,EAAjB,CACA,GAAI/C,EAAS6lB,SAAW5d,EAAO4d,SAAWigB,EAAUjgB,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI7lB,EAAS2lB,OACX,OAAO,IAAIre,IACTlF,EACAW,EACA/C,EAAS2lB,OAAO,GAChByf,EAAoB,UAACn9B,EAAO0d,cAAR,aAAC,EAAgB,GAAjB,UAAqBqgB,EAAcrgB,cAAnC,aAAqB,EAAuB,GAAI,WACpEyf,EAAoB,UAACU,EAAUngB,cAAX,aAAC,EAAmB,GAApB,UAAwBogB,EAAiBpgB,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACD5iB,EACAX,EACApC,EAAS6lB,QACT7lB,EAAS2lB,OACT1d,EAAO4d,QACP5d,EAAO0d,OACPqgB,EAAcrgB,OACdrH,EACAwnB,EAAUjgB,QACVigB,EAAUngB,OACVogB,EAAiBpgB,SAId,SAASsgB,EAAYhH,GAC1B,IAAMiH,EAAsC,SAApB,OAAVjH,QAAU,IAAVA,OAAA,EAAAA,EAAYkH,eACpB7nB,EAAQqnB,EAASO,OAAQnqC,EAAYkjC,GAC3C,OAAOiH,EAAQzZ,IAAQnO,I,qZC1KzB,SAASslB,EAAiBC,EAA2BC,GACnD,IAAQ1hC,EAAYH,cAAZG,QACF2hC,EAAkBC,cAExB,OAAO3kB,mBAAQ,WACb,IAAKjd,EAAS,MAAO,GAGrB,IAAM6hC,EAAiBpmC,OAAOC,KAAK+lC,EAASzhC,IAAU62B,QAAqC,SAACiL,EAAQnhC,GAElG,OADAmhC,EAAOnhC,GAAW8gC,EAASzhC,GAASW,GAASub,MACtC4lB,IACN,IAEH,OAAIJ,EAEAC,EAEG9K,QACC,SAACkL,EAAW7lB,GAEV,OADA6lB,EAAU7lB,EAAMvb,SAAWub,EACpB6lB,IALb,eASSF,IAKNA,IACN,CAAC7hC,EAAS2hC,EAAiBF,EAAUC,IAQnC,SAAS5L,IAEd,OAAO0L,EADWQ,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBV,EADGW,eACiC,GAGrDC,EAAwB3mC,OAAOC,KAAKo6B,KAU1C,OATyBsM,EACrB3mC,OAAOC,KAAKwmC,GAAgBrL,QAAqC,SAACiL,EAAQnhC,GAIxE,OAHKyhC,EAAsB/D,SAAS19B,KAClCmhC,EAAOnhC,GAAWuhC,EAAevhC,IAE5BmhC,IACN,IACHI,EAKC,SAASG,IAEd,OAAOb,EADsBc,eACiB,GAGzC,SAASC,EAAiBrmB,GAC/B,IAAMsmB,EAAe1M,IAErB,SAAK0M,IAAiBtmB,MAIbsmB,EAAatmB,EAAMvb,SAIvB,SAAS8hC,EAAuBC,GACrC,IAAQ1iC,EAAYH,cAAZG,QACFkiC,EAAiBD,IAEvB,OAAOhlB,mBAAQ,WACb,GAAKjd,GAA2B,KAAhB0iC,EAIhB,OADeC,YAAalnC,OAAOmnC,OAAOV,GAAiBQ,KAE1D,CAAC1iC,EAASkiC,EAAgBQ,IAIxB,SAASG,EAAoBzY,GAClC,IAAMuX,EAAkBC,cAExB,QAAKxX,KAIIuX,EAAgBrmB,MAAK,SAACY,GAAD,OAAW4mB,yBAAe1Y,EAAUlO,MAIpE,IAAM6mB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAI/f,OAAS,EACvB+f,EAEFC,GAAWH,EAAcK,KAAKF,IAAsC,IAA1BG,mBAASH,GAAS,IAC1DI,YAAmBJ,GACnBC,EAMC,SAASI,EAAS9tB,GACvB,IAAQzV,EAAYH,cAAZG,QACFe,EAAS+0B,IAETn1B,EAAUynB,YAAU3S,GAEpB+tB,EAAgBld,YAAiB3lB,QAAWhH,GAAW,GACvD8pC,EAAuB1c,YAAwBpmB,QAAWhH,GAAW,GACrEuiB,EAA2Bvb,EAAUI,EAAOJ,QAAWhH,EAEvD+pC,EAAY3e,YAAoB7I,OAAQviB,EAAY6pC,EAAe,YAAQ7pC,EAAWqoB,KACtF2hB,EAAmB5e,YACvB7I,OAAQviB,EAAY8pC,EACpB,YACA9pC,EACAqoB,KAEInc,EAASkf,YAAoB7I,OAAQviB,EAAY6pC,EAAe,cAAU7pC,EAAWqoB,KACrF4hB,EAAgB7e,YAAoB7I,OAAQviB,EAAY8pC,EAAsB,cAAU9pC,EAAWqoB,KACnGpkB,EAAWmnB,YAAoB7I,OAAQviB,EAAY6pC,EAAe,gBAAY7pC,EAAWqoB,KAE/F,OAAO/E,mBAAQ,WACb,GAAIf,EAAO,OAAOA,EAClB,GAAKlc,GAAYW,EAAjB,CACA,GAAI/C,EAAS6lB,SAAW5d,EAAO4d,SAAWigB,EAAUjgB,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI7lB,EAAS2lB,OACX,OAAO,IAAIre,QACTlF,EACAW,EACA/C,EAAS2lB,OAAO,GAChByf,EAAoB,UAACn9B,EAAO0d,cAAR,aAAC,EAAgB,GAAjB,UAAqBqgB,EAAcrgB,cAAnC,aAAqB,EAAuB,GAAI,WACpEyf,EAAoB,UAACU,EAAUngB,cAAX,aAAC,EAAmB,GAApB,UAAwBogB,EAAiBpgB,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACD5iB,EACAX,EACApC,EAAS6lB,QACT7lB,EAAS2lB,OACT1d,EAAO4d,QACP5d,EAAO0d,OACPqgB,EAAcrgB,OACdrH,EACAwnB,EAAUjgB,QACVigB,EAAUngB,OACVogB,EAAiBpgB,SAId,SAASsgB,EAAYhH,GAC1B,IAAMiH,EAAsC,SAApB,OAAVjH,QAAU,IAAVA,OAAA,EAAAA,EAAYkH,eACpB7nB,EAAQqnB,EAASO,OAAQnqC,EAAYkjC,GAC3C,OAAOiH,EAAQzZ,QAAQnO,I,qZC1KzB,SAASslB,EAAiBC,EAA2BC,GACnD,IAAQ1hC,EAAYH,cAAZG,QACF2hC,EAAkBC,cAExB,OAAO3kB,mBAAQ,WACb,IAAKjd,EAAS,MAAO,GAGrB,IAAM6hC,EAAiBpmC,OAAOC,KAAK+lC,EAASzhC,IAAU62B,QAAqC,SAACiL,EAAQnhC,GAElG,OADAmhC,EAAOnhC,GAAW8gC,EAASzhC,GAASW,GAASub,MACtC4lB,IACN,IAEH,OAAIJ,EAEAC,EAEG9K,QACC,SAACkL,EAAW7lB,GAEV,OADA6lB,EAAU7lB,EAAMvb,SAAWub,EACpB6lB,IALb,eASSF,IAKNA,IACN,CAAC7hC,EAAS2hC,EAAiBF,EAAUC,IAQnC,SAAS5L,IAEd,OAAO0L,EADWQ,eACiB,GAG9B,SAASC,IAEd,IACMC,EAAiBV,EADGW,eACiC,GAGrDC,EAAwB3mC,OAAOC,KAAKo6B,KAU1C,OATyBsM,EACrB3mC,OAAOC,KAAKwmC,GAAgBrL,QAAqC,SAACiL,EAAQnhC,GAIxE,OAHKyhC,EAAsB/D,SAAS19B,KAClCmhC,EAAOnhC,GAAWuhC,EAAevhC,IAE5BmhC,IACN,IACHI,EAKC,SAASG,IAEd,OAAOb,EADsBc,eACiB,GAGzC,SAASC,EAAiBrmB,GAC/B,IAAMsmB,EAAe1M,IAErB,SAAK0M,IAAiBtmB,MAIbsmB,EAAatmB,EAAMvb,SAIvB,SAAS8hC,EAAuBC,GACrC,IAAQ1iC,EAAYH,cAAZG,QACFkiC,EAAiBD,IAEvB,OAAOhlB,mBAAQ,WACb,GAAKjd,GAA2B,KAAhB0iC,EAIhB,OADeC,YAAalnC,OAAOmnC,OAAOV,GAAiBQ,KAE1D,CAAC1iC,EAASkiC,EAAgBQ,IAIxB,SAASG,EAAoBzY,GAClC,IAAMuX,EAAkBC,cAExB,QAAKxX,KAIIuX,EAAgBrmB,MAAK,SAACY,GAAD,OAAW4mB,yBAAe1Y,EAAUlO,MAIpE,IAAM6mB,EAAgB,sBAEtB,SAASC,EAAqBC,EAAyBC,EAA6BC,GAClF,OAAOF,GAAOA,EAAI/f,OAAS,EACvB+f,EAEFC,GAAWH,EAAcK,KAAKF,IAAsC,IAA1BG,mBAASH,GAAS,IAC1DI,YAAmBJ,GACnBC,EAMC,SAASI,EAAS9tB,GACvB,IAAQzV,EAAYH,cAAZG,QACFe,EAAS+0B,IAETn1B,EAAUynB,YAAU3S,GAEpB+tB,EAAgBld,YAAiB3lB,QAAWhH,GAAW,GACvD8pC,EAAuB1c,YAAwBpmB,QAAWhH,GAAW,GACrEuiB,EAA2Bvb,EAAUI,EAAOJ,QAAWhH,EAEvD+pC,EAAY3e,YAAoB7I,OAAQviB,EAAY6pC,EAAe,YAAQ7pC,EAAWqoB,KACtF2hB,EAAmB5e,YACvB7I,OAAQviB,EAAY8pC,EACpB,YACA9pC,EACAqoB,KAEInc,EAASkf,YAAoB7I,OAAQviB,EAAY6pC,EAAe,cAAU7pC,EAAWqoB,KACrF4hB,EAAgB7e,YAAoB7I,OAAQviB,EAAY8pC,EAAsB,cAAU9pC,EAAWqoB,KACnGpkB,EAAWmnB,YAAoB7I,OAAQviB,EAAY6pC,EAAe,gBAAY7pC,EAAWqoB,KAE/F,OAAO/E,mBAAQ,WACb,GAAIf,EAAO,OAAOA,EAClB,GAAKlc,GAAYW,EAAjB,CACA,GAAI/C,EAAS6lB,SAAW5d,EAAO4d,SAAWigB,EAAUjgB,QAAS,OAAO,KAC9C,IAAD,QAArB,GAAI7lB,EAAS2lB,OACX,OAAO,IAAIre,QACTlF,EACAW,EACA/C,EAAS2lB,OAAO,GAChByf,EAAoB,UAACn9B,EAAO0d,cAAR,aAAC,EAAgB,GAAjB,UAAqBqgB,EAAcrgB,cAAnC,aAAqB,EAAuB,GAAI,WACpEyf,EAAoB,UAACU,EAAUngB,cAAX,aAAC,EAAmB,GAApB,UAAwBogB,EAAiBpgB,cAAzC,aAAwB,EAA0B,GAAI,qBAI7E,CACD5iB,EACAX,EACApC,EAAS6lB,QACT7lB,EAAS2lB,OACT1d,EAAO4d,QACP5d,EAAO0d,OACPqgB,EAAcrgB,OACdrH,EACAwnB,EAAUjgB,QACVigB,EAAUngB,OACVogB,EAAiBpgB,SAId,SAASsgB,EAAYhH,GAC1B,IAAMiH,EAAsC,SAApB,OAAVjH,QAAU,IAAVA,OAAA,EAAAA,EAAYkH,eACpB7nB,EAAQqnB,EAASO,OAAQnqC,EAAYkjC,GAC3C,OAAOiH,EAAQzZ,QAAQnO,I,uNC9KVkpB,ICLHC,EDKGD,EAZf,SAA2BlpB,EAAeopB,EAAgBC,GACxD,IAAM5vB,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+jB,EAASzH,mBAAQ,iBAAM,CAACqoB,EAAOC,KAAU,CAACD,EAAOC,IACjD3pB,EAAYmJ,YAAoBpP,EAAU,YAAa+O,GAAQnB,OAErE,OAAOtG,mBACL,kBAAOf,GAASN,EAAY,IAAIqpB,IAAY/oB,EAAON,EAAU5f,iBAAcrC,IAC3E,CAACuiB,EAAON,K,2CCOL,SAAS4pB,EACdC,EACAF,GAEA,IAAQvsB,EAAYnZ,cAAZmZ,QACFkD,EAAQupB,aAA2BR,IAAcQ,EAAgBvpB,WAAQviB,EACzE+rC,EAAmBN,EAAkBlpB,EAAD,OAAQlD,QAAR,IAAQA,SAAWrf,EAAW4rC,GAClEI,EAAkBC,YAAqB,OAAC1pB,QAAD,IAACA,OAAD,EAACA,EAAOvb,QAAS4kC,GAGxDM,EAA+B5oB,mBAAQ,WAC3C,OAAKwoB,GAAoBF,EACrBE,EAAgBrb,WAAaC,IAAcgb,EAAcS,SAExDJ,EAGEA,EAAiBK,SAASN,GAC7BE,EACEN,EAAcW,QACdX,EAAcY,aAChBZ,EAAcS,SAPYT,EAAca,QAHHb,EAAca,UAWtD,CAACT,EAAiBC,EAAkBC,EAAiBJ,IAElD/B,EAAgBld,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SACxCg7B,EAAiBwK,cAEjBC,EAAUjrC,sBAAW,sBAAC,8BAAAd,EAAA,yDACtBwrC,IAAkBR,EAAcY,aADV,uBAExBpsB,QAAQC,MAAM,oCAFU,6BAKrBoC,EALqB,uBAMxBrC,QAAQC,MAAM,YANU,6BAUrB0pB,EAVqB,uBAWxB3pB,QAAQC,MAAM,yBAXU,6BAerB2rB,EAfqB,wBAgBxB5rB,QAAQC,MAAM,6BAhBU,8BAoBrByrB,EApBqB,wBAqBxB1rB,QAAQC,MAAM,cArBU,kCAyBtBusB,GAAW,EAzBW,UA0BC7C,EAAc8C,YAAYF,QAAQb,EAASgB,KAAYC,OAAM,WAGtF,OADAH,GAAW,EACJ7C,EAAc8C,YAAYF,QAAQb,EAASE,EAAgBjc,IAAIxtB,eA7B9C,eA0BpByqC,EA1BoB,yBAiCnBjD,EACJ4C,QAAQb,EAASc,EAAWZ,EAAgBjc,IAAIxtB,WAAauqC,IAAY,CACxEG,SAAU9d,YAAmB6d,KAE9BE,MAAK,SAACC,GACLjL,EAAeiL,EAAU,CACvB7K,QAAQ,WAAD,OAAa0J,EAAgBrb,SAASvkB,QAC7Ci2B,SAAU,CAAErmB,aAAcyG,EAAMvb,QAAS4kC,gBAG5CiB,OAAM,SAAC1sB,GAEN,MADAD,QAAQC,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAAC+rB,EAAe3pB,EAAOsnB,EAAeiC,EAAiBF,EAAS5J,IAEnE,MAAO,CAACkK,EAAeO,GAIlB,SAASS,EAA4B75B,GAAqC,IAAtB85B,EAAqB,uDAAH,EACrErB,EAAkBxoB,mBACtB,kBAAOjQ,EAAQ+5B,YAA+B/5B,EAAO85B,GAAiBxpC,IAAMq/B,YAAShjC,IACrF,CAACqT,EAAO85B,IAGV,OAAOtB,EAAmBC,EAAiB3b,M,SA9FjCub,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,6NCKGD,ICLHC,EDKGD,EAZf,SAA2BlpB,EAAeopB,EAAgBC,GACxD,IAAM5vB,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+jB,EAASzH,mBAAQ,iBAAM,CAACqoB,EAAOC,KAAU,CAACD,EAAOC,IACjD3pB,EAAYmJ,YAAoBpP,EAAU,YAAa+O,GAAQnB,OAErE,OAAOtG,mBACL,kBAAOf,GAASN,EAAY,IAAIqpB,cAAY/oB,EAAON,EAAU5f,iBAAcrC,IAC3E,CAACuiB,EAAON,K,2CCOL,SAAS4pB,EACdC,EACAF,GAEA,IAAQvsB,EAAYnZ,cAAZmZ,QACFkD,EAAQupB,aAA2BR,cAAcQ,EAAgBvpB,WAAQviB,EACzE+rC,EAAmBN,EAAkBlpB,EAAD,OAAQlD,QAAR,IAAQA,SAAWrf,EAAW4rC,GAClEI,EAAkBC,YAAqB,OAAC1pB,QAAD,IAACA,OAAD,EAACA,EAAOvb,QAAS4kC,GAGxDM,EAA+B5oB,mBAAQ,WAC3C,OAAKwoB,GAAoBF,EACrBE,EAAgBrb,WAAaC,QAAcgb,EAAcS,SAExDJ,EAGEA,EAAiBK,SAASN,GAC7BE,EACEN,EAAcW,QACdX,EAAcY,aAChBZ,EAAcS,SAPYT,EAAca,QAHHb,EAAca,UAWtD,CAACT,EAAiBC,EAAkBC,EAAiBJ,IAElD/B,EAAgBld,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SACxCg7B,EAAiBwK,cAEjBC,EAAUjrC,sBAAW,sBAAC,8BAAAd,EAAA,yDACtBwrC,IAAkBR,EAAcY,aADV,uBAExBpsB,QAAQC,MAAM,oCAFU,6BAKrBoC,EALqB,uBAMxBrC,QAAQC,MAAM,YANU,6BAUrB0pB,EAVqB,uBAWxB3pB,QAAQC,MAAM,yBAXU,6BAerB2rB,EAfqB,wBAgBxB5rB,QAAQC,MAAM,6BAhBU,8BAoBrByrB,EApBqB,wBAqBxB1rB,QAAQC,MAAM,cArBU,kCAyBtBusB,GAAW,EAzBW,UA0BC7C,EAAc8C,YAAYF,QAAQb,EAASgB,KAAYC,OAAM,WAGtF,OADAH,GAAW,EACJ7C,EAAc8C,YAAYF,QAAQb,EAASE,EAAgBjc,IAAIxtB,eA7B9C,eA0BpByqC,EA1BoB,yBAiCnBjD,EACJ4C,QAAQb,EAASc,EAAWZ,EAAgBjc,IAAIxtB,WAAauqC,IAAY,CACxEG,SAAU9d,YAAmB6d,KAE9BE,MAAK,SAACC,GACLjL,EAAeiL,EAAU,CACvB7K,QAAQ,WAAD,OAAa0J,EAAgBrb,SAASvkB,QAC7Ci2B,SAAU,CAAErmB,aAAcyG,EAAMvb,QAAS4kC,gBAG5CiB,OAAM,SAAC1sB,GAEN,MADAD,QAAQC,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAAC+rB,EAAe3pB,EAAOsnB,EAAeiC,EAAiBF,EAAS5J,IAEnE,MAAO,CAACkK,EAAeO,GAIlB,SAASS,EAA4B75B,GAAqC,IAAtB85B,EAAqB,uDAAH,EACrErB,EAAkBxoB,mBACtB,kBAAOjQ,EAAQ+5B,YAA+B/5B,EAAO85B,GAAiBxpC,IAAMq/B,YAAShjC,IACrF,CAACqT,EAAO85B,IAGV,OAAOtB,EAAmBC,EAAiB3b,M,SA9FjCub,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,6NCKGD,ICLHC,EDKGD,EAZf,SAA2BlpB,EAAeopB,EAAgBC,GACxD,IAAM5vB,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+jB,EAASzH,mBAAQ,iBAAM,CAACqoB,EAAOC,KAAU,CAACD,EAAOC,IACjD3pB,EAAYmJ,YAAoBpP,EAAU,YAAa+O,GAAQnB,OAErE,OAAOtG,mBACL,kBAAOf,GAASN,EAAY,IAAIqpB,cAAY/oB,EAAON,EAAU5f,iBAAcrC,IAC3E,CAACuiB,EAAON,K,2CCOL,SAAS4pB,EACdC,EACAF,GAEA,IAAQvsB,EAAYnZ,cAAZmZ,QACFkD,EAAQupB,aAA2BR,cAAcQ,EAAgBvpB,WAAQviB,EACzE+rC,EAAmBN,EAAkBlpB,EAAD,OAAQlD,QAAR,IAAQA,SAAWrf,EAAW4rC,GAClEI,EAAkBC,YAAqB,OAAC1pB,QAAD,IAACA,OAAD,EAACA,EAAOvb,QAAS4kC,GAGxDM,EAA+B5oB,mBAAQ,WAC3C,OAAKwoB,GAAoBF,EACrBE,EAAgBrb,WAAaC,QAAcgb,EAAcS,SAExDJ,EAGEA,EAAiBK,SAASN,GAC7BE,EACEN,EAAcW,QACdX,EAAcY,aAChBZ,EAAcS,SAPYT,EAAca,QAHHb,EAAca,UAWtD,CAACT,EAAiBC,EAAkBC,EAAiBJ,IAElD/B,EAAgBld,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SACxCg7B,EAAiBwK,cAEjBC,EAAUjrC,sBAAW,sBAAC,8BAAAd,EAAA,yDACtBwrC,IAAkBR,EAAcY,aADV,uBAExBpsB,QAAQC,MAAM,oCAFU,6BAKrBoC,EALqB,uBAMxBrC,QAAQC,MAAM,YANU,6BAUrB0pB,EAVqB,uBAWxB3pB,QAAQC,MAAM,yBAXU,6BAerB2rB,EAfqB,wBAgBxB5rB,QAAQC,MAAM,6BAhBU,8BAoBrByrB,EApBqB,wBAqBxB1rB,QAAQC,MAAM,cArBU,kCAyBtBusB,GAAW,EAzBW,UA0BC7C,EAAc8C,YAAYF,QAAQb,EAASgB,KAAYC,OAAM,WAGtF,OADAH,GAAW,EACJ7C,EAAc8C,YAAYF,QAAQb,EAASE,EAAgBjc,IAAIxtB,eA7B9C,eA0BpByqC,EA1BoB,yBAiCnBjD,EACJ4C,QAAQb,EAASc,EAAWZ,EAAgBjc,IAAIxtB,WAAauqC,IAAY,CACxEG,SAAU9d,YAAmB6d,KAE9BE,MAAK,SAACC,GACLjL,EAAeiL,EAAU,CACvB7K,QAAQ,WAAD,OAAa0J,EAAgBrb,SAASvkB,QAC7Ci2B,SAAU,CAAErmB,aAAcyG,EAAMvb,QAAS4kC,gBAG5CiB,OAAM,SAAC1sB,GAEN,MADAD,QAAQC,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAAC+rB,EAAe3pB,EAAOsnB,EAAeiC,EAAiBF,EAAS5J,IAEnE,MAAO,CAACkK,EAAeO,GAIlB,SAASS,EAA4B75B,GAAqC,IAAtB85B,EAAqB,uDAAH,EACrErB,EAAkBxoB,mBACtB,kBAAOjQ,EAAQ+5B,YAA+B/5B,EAAO85B,GAAiBxpC,IAAMq/B,YAAShjC,IACrF,CAACqT,EAAO85B,IAGV,OAAOtB,EAAmBC,EAAiB3b,M,SA9FjCub,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,6NCKGD,ICLHC,EDKGD,EAZf,SAA2BlpB,EAAeopB,EAAgBC,GACxD,IAAM5vB,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+jB,EAASzH,mBAAQ,iBAAM,CAACqoB,EAAOC,KAAU,CAACD,EAAOC,IACjD3pB,EAAYmJ,YAAoBpP,EAAU,YAAa+O,GAAQnB,OAErE,OAAOtG,mBACL,kBAAOf,GAASN,EAAY,IAAIqpB,IAAY/oB,EAAON,EAAU5f,iBAAcrC,IAC3E,CAACuiB,EAAON,K,kCCOL,SAAS4pB,EACdC,EACAF,GAEA,IAAQvsB,EAAYnZ,cAAZmZ,QACFkD,EAAQupB,aAA2BR,IAAcQ,EAAgBvpB,WAAQviB,EACzE+rC,EAAmBN,EAAkBlpB,EAAD,OAAQlD,QAAR,IAAQA,SAAWrf,EAAW4rC,GAClEI,EAAkBC,YAAqB,OAAC1pB,QAAD,IAACA,OAAD,EAACA,EAAOvb,QAAS4kC,GAGxDM,EAA+B5oB,mBAAQ,WAC3C,OAAKwoB,GAAoBF,EACrBE,EAAgBrb,WAAaC,IAAcgb,EAAcS,SAExDJ,EAGEA,EAAiBK,SAASN,GAC7BE,EACEN,EAAcW,QACdX,EAAcY,aAChBZ,EAAcS,SAPYT,EAAca,QAHHb,EAAca,UAWtD,CAACT,EAAiBC,EAAkBC,EAAiBJ,IAElD/B,EAAgBld,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SACxCg7B,EAAiBwK,cAEjBC,EAAUjrC,sBAAW,sBAAC,8BAAAd,EAAA,yDACtBwrC,IAAkBR,EAAcY,aADV,uBAExBpsB,QAAQC,MAAM,oCAFU,6BAKrBoC,EALqB,uBAMxBrC,QAAQC,MAAM,YANU,6BAUrB0pB,EAVqB,uBAWxB3pB,QAAQC,MAAM,yBAXU,6BAerB2rB,EAfqB,wBAgBxB5rB,QAAQC,MAAM,6BAhBU,8BAoBrByrB,EApBqB,wBAqBxB1rB,QAAQC,MAAM,cArBU,kCAyBtBusB,GAAW,EAzBW,UA0BC7C,EAAc8C,YAAYF,QAAQb,EAASgB,KAAYC,OAAM,WAGtF,OADAH,GAAW,EACJ7C,EAAc8C,YAAYF,QAAQb,EAASE,EAAgBjc,IAAIxtB,eA7B9C,eA0BpByqC,EA1BoB,yBAiCnBjD,EACJ4C,QAAQb,EAASc,EAAWZ,EAAgBjc,IAAIxtB,WAAauqC,IAAY,CACxEG,SAAU9d,YAAmB6d,KAE9BE,MAAK,SAACC,GACLjL,EAAeiL,EAAU,CACvB7K,QAAQ,WAAD,OAAa0J,EAAgBrb,SAASvkB,QAC7Ci2B,SAAU,CAAErmB,aAAcyG,EAAMvb,QAAS4kC,gBAG5CiB,OAAM,SAAC1sB,GAEN,MADAD,QAAQC,MAAM,0BAA2BA,GACnCA,MA7CgB,4CA+CzB,CAAC+rB,EAAe3pB,EAAOsnB,EAAeiC,EAAiBF,EAAS5J,IAEnE,MAAO,CAACkK,EAAeO,GAIlB,SAASS,EAA4B75B,GAAqC,IAAtB85B,EAAqB,uDAAH,EACrErB,EAAkBxoB,mBACtB,kBAAOjQ,EAAQ+5B,YAA+B/5B,EAAO85B,GAAiBxpC,IAAMq/B,YAAShjC,IACrF,CAACqT,EAAO85B,IAGV,OAAOtB,EAAmBC,EAAiB3b,M,SA9FjCub,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,mCC0JL,IAAK2B,EAMAC,EAwDAC,EA+FAC,EAKAC,EAMAC,EAwCAC,EAhTZ,8O,SAgGYN,K,YAAAA,E,YAAAA,E,eAAAA,M,cAMAC,K,kBAAAA,E,YAAAA,E,gBAAAA,E,eAAAA,M,cAwDAC,K,UAAAA,E,sBAAAA,E,2BAAAA,M,cA+FAC,K,oBAAAA,E,aAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,uBAAAA,M,cAMAC,K,gBAAAA,E,kBAAAA,E,iBAAAA,M,cAwCAC,K,kBAAAA,E,YAAAA,E,kBAAAA,E,eAAAA,M,oIC/WG,SAASC,EAAOC,GAK7B,IAAMC,EAAYrf,YAAUof,GACtBE,ECFO,SAAoB/mC,GAAiE,IAAD,MAC3FgnC,EAAmBC,YAAYjnC,EAAS,KACxCknC,EAAkB5qB,mBAAQ,WAC9B,IAAK0qB,IAAqBvf,YAAUuf,GAAmB,MAAO,MAAChuC,GAC/D,IACE,OAAOguC,EAAmB,CAACG,mBAAS,GAAD,OAAIH,EAAiBjV,cAAcqV,OAAO,GAA1C,mBAAgE,MAACpuC,GACpG,MAAOmgB,GACP,MAAO,MAACngB,MAET,CAACguC,IACEK,EAAoBrhB,aAAwB,GAC5CshB,EAAkBljB,YAAoBijB,EAAmB,WAAYH,GACrEK,EAAqB,UAAGD,EAAgB1kB,cAAnB,aAAG,EAAyB,GACjD4kB,EAAmBthB,YACvBqhB,IAA0BE,YAAOF,GAAyBA,OAAwBvuC,GAClF,GAEIg5B,EAAO5N,YAAoBojB,EAAkB,OAAQN,GAErDQ,EAAUV,IAAqBhnC,EACrC,MAAO,CACL2nC,QAASD,EAAU,KAAH,oBAAU1V,EAAKpP,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CE,QAAS4kB,GAAWJ,EAAgBxkB,SAAWkP,EAAKlP,SDpBhC8kB,CAAWd,QAAa9tC,GACxC6uC,EELO,SAAuBC,GAAwE,IAAD,MACrGC,EAAgBd,YAAYa,EAAS,KACrCZ,EAAkB5qB,mBAAQ,WAC9B,IAAKyrB,EAAe,MAAO,MAAC/uC,GAC5B,IACE,OAAO+uC,EAAgB,CAACZ,mBAASY,IAAkB,MAAC/uC,GACpD,MAAOmgB,GACP,MAAO,MAACngB,MAET,CAAC+uC,IACEV,EAAoBrhB,aAAwB,GAC5CshB,EAAkBljB,YAAoBijB,EAAmB,WAAYH,GACrEK,EAAqB,UAAGD,EAAgB1kB,cAAnB,aAAG,EAAyB,GACjD4kB,EAAmBthB,YACvBqhB,IAA0BE,YAAOF,GAAyBA,OAAwBvuC,GAClF,GAEIgvC,EAAO5jB,YAAoBojB,EAAkB,OAAQN,GAErDQ,EAAUK,IAAkBD,EAClC,MAAO,CACL9nC,QAAS0nC,EAAU,KAAH,oBAAUM,EAAKplB,cAAf,aAAU,EAAc,UAAxB,QAA8B,KAC9CE,QAAS4kB,GAAWJ,EAAgBxkB,SAAWklB,EAAKllB,SFjBvCmlB,CAAcpB,GAE7B,MAAO,CACL/jB,QAASikB,EAAcjkB,SAAW+kB,EAAO/kB,QACzC9iB,QAAS8mC,GAAae,EAAO7nC,QAC7BgyB,KAAM+U,EAAcY,QAAUZ,EAAcY,SAAWb,GAAae,EAAO7nC,SAAU6mC,GAAwB,Q,6BGpBjH,uDAGMqB,EAAUC,cAEH1oC,EAAoB,IAAIhB,IAAO2pC,UAAUC,gBAAgBH,I,yMCEzDI,EAAqB,WAChC,IAAM1uB,EAAWC,cAEjBpgB,qBAAU,WACR,IAAM8uC,EAAWC,YAAW,sBAAC,4BAAA9uC,EAAA,sEACD+F,IAAkB82B,iBADjB,OACrBnV,EADqB,OAE3BxH,EAAS6uB,YAASrnB,IAFS,2CAG1B,KAEH,OAAO,kBAAMsnB,cAAcH,MAC1B,CAAC3uB,KAGO+uB,EAAW,WACtB,OAAOnuB,aAAY,SAACjhB,GAAD,OAAkBA,EAAM2lC,UAGhC0J,EAAkB,WAC7B,OAAOpuB,aAAY,SAACjhB,GAAD,OAAkBA,EAAM2lC,MAAM2J,kB,uVCX7CC,EAA8B,SAACz1B,GACnC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,YAAYC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAcjtC,MAAM,OAAOgX,MAAM,YAAYk2B,GAAG,SAAc71B,GAA1G,aACG7X,EAAE,YAKH2tC,EAAmC,SAAC91B,GACxC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAejtC,MAAM,OAAOgX,MAAM,UAAUk2B,GAAG,SAAc71B,GAAvG,aACG7X,EAAE,iBAKH4tC,EAA8B,SAAC/1B,GACnC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,aAAaC,SAAO,GAAK31B,GAAtC,aACG7X,EAAE,YAKH6tC,EAAoC,SAACh2B,GACzC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,YAAYC,SAAO,EAACC,UAAW,cAAC,KAAD,CAAajtC,MAAM,OAAOgX,MAAM,YAAYk2B,GAAG,SAAc71B,GAAzG,aACG7X,EAAE,cAKH8tC,EAAyC,SAACj2B,GAC9C,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,UAAUC,SAAO,EAACC,UAAW,cAAC,IAAD,CAAejtC,MAAM,OAAOgX,MAAM,UAAUk2B,GAAG,SAAc71B,GAAvG,aACG7X,EAAE,YAKH+tC,EAAiC,SAACl2B,GACtC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,UAAUE,UAAW,cAAC,KAAD,CAAUjtC,MAAM,OAAOgX,MAAM,UAAUk2B,GAAG,SAAc71B,GAA1F,aACG7X,EAAE,gBAKHguC,EAA8B,SAACn2B,GACnC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,UAAUE,UAAW,cAAC,KAAD,CAAWjtC,MAAM,OAAOgX,MAAM,UAAUk2B,GAAG,SAAc71B,GAA3F,aACG7X,EAAE,YAKHiuC,EAAgC,SAACp2B,GACrC,IAAQ7X,EAAMC,cAAND,EACR,OACE,cAAC,KAAD,yBAAKutC,QAAQ,eAAeE,UAAW,cAAC,IAAD,CAAWjtC,MAAM,OAAOgX,MAAM,eAAek2B,GAAG,SAAc71B,GAArG,aACG7X,EAAE,e,iNCsCMkuC,EAtGqC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACrD,EAA4DxwC,oBAAS,GAArE,mBAAOywC,EAAP,KAA+BC,EAA/B,KACA,EAA0DvW,cAA1D,mBAAOC,EAAP,KAA8BuW,EAA9B,KACA,EAAsB7V,cAAtB,mBAAO8V,EAAP,KAAYC,EAAZ,KACA,EAAuCjX,cAAvC,mBAAOC,EAAP,KAAmBiX,EAAnB,KACA,EAA0C9W,cAA1C,mBAAO+W,EAAP,KAAsBC,EAAtB,KACA,EAAwC1X,cAAxC,mBACQ2X,GADR,UAC8BC,cAAtBD,mBAEA5uC,EAAMC,cAAND,EAER,OAAIouC,EAEA,cAAC,KAAD,CACEU,MAAO9uC,EAAE,iBACT+uC,OAAQ,kBAAMV,GAA0B,IACxCF,UAAWA,EACX9Z,MAAO,CAAE2a,SAAU,SAJrB,SAME,eAAC,KAAD,WACE,cAAC,KAAD,CAASzB,QAAQ,UAAU0B,GAAG,OAA9B,SACE,cAAC,KAAD,UACGjvC,EACC,8IAIN,cAAC,KAAD,CAAMivC,GAAG,OAAT,SAAiBjvC,EAAE,4DACnB,cAAC,IAAD,CACEutC,QAAQ,SACRlrB,GAAG,sBACHzK,QAAS,WAEwE,YAA3Es3B,OAAOC,OAAP,2DACFV,IACAJ,GAA0B,KAPhC,SAWGruC,EAAE,8BAQX,cAAC,KAAD,CAAO8uC,MAAO9uC,EAAE,YAAcmuC,UAAWA,EAAzC,SACE,cAAC,KAAD,UACE,eAAC,IAAD,CAAYltC,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,QAAvC,UACE,cAAC,KAAD,CAAMyuC,MAAI,EAACC,SAAS,OAApB,SACGrvC,EAAE,0BAEL,cAACsvC,EAAA,EAAD,CACEC,YAAaxX,EACbyX,eAAgBlB,EAChB3V,SAAU4V,EACVkB,YAAajB,IAEf,cAAC,KAAD,CAAMY,MAAI,EAACC,SAAS,OAAOK,GAAG,OAA9B,SACG1vC,EAAE,wBAEL,eAACK,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuBrvC,EAAE,wBACzB,cAACy1B,EAAA,EAAD,CACEC,KAAM11B,EAAE,uFACR2vC,GAAG,WAGP,cAAC,KAAD,CACEttB,GAAG,4BACHutB,QAASpY,EACTqY,SACErY,EACI,WACEoX,EAAkB,MAClBH,KAEF,kBAAMJ,GAA0B,SAI1C,eAAChuC,EAAA,EAAD,WACE,eAACA,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuBrvC,EAAE,uBACzB,cAACy1B,EAAA,EAAD,CAAgBC,KAAM11B,EAAE,yCAA0C2vC,GAAG,WAEvE,cAAC,KAAD,CACEttB,GAAG,iCACHutB,QAASlB,EACTmB,SAAU,WACRlB,GAAkBD,iBCxGnB,SAASoB,IACtB,MAAiCC,aAAS,cAAC,EAAD,KAAnCC,EAAP,oBACA,EAAqBzY,cAAdC,EAAP,oBAEA,OACE,cAAC,KAAD,CAAiByY,KAAMzY,EAAvB,SACE,cAAC,IAAD,CAAQ+V,QAAQ,OAAOvT,EAAG,EAAGpiB,QAASo4B,EAAwB3tB,GAAG,8BAAjE,SACE,cAAC,KAAD,CAAU7K,MAAM,UAAUhX,MAAM,a,2DCJlC0vC,EAAmB5vC,IAAOU,IAAV,8PASX,qBAAG6zB,MAAkBG,OAAOmb,WAGjCC,EAAc9vC,IAAOU,IAAV,2CACN,gBAAGsyB,EAAH,EAAGA,QAASxL,EAAZ,EAAYA,QAAS+M,EAArB,EAAqBA,MAArB,OACPvB,EAAUuB,EAAMG,OAAOmb,QAAUroB,EAAU+M,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOqb,WAGpE,SAASC,EAAT,GAA0D,IAAD,IAAlCpQ,EAAkC,EAAlCA,GAC5Br8B,EAAYH,cAAZG,QAEF+7B,EAAO,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAAIN,QACdtM,IAAU,OAAC4M,QAAD,IAACA,OAAD,EAACA,EAAIG,SACfvY,GAAWwL,GAAW4M,IAA8B,KAAvB,UAAAA,EAAGG,eAAH,eAAYkQ,SAA8C,qBAA9B,UAAOrQ,EAAGG,eAAV,aAAO,EAAYkQ,SAElF,OAAK1sC,EAGH,eAACqsC,EAAD,CAAkB5c,QAASA,EAASxL,QAASA,EAA7C,UACE,cAAC,KAAD,CAAc0oB,KAAMtkB,YAAegU,EAAGR,KAAM,cAAe77B,GAA3D,gBAAsE+7B,QAAtE,IAAsEA,IAAWM,EAAGR,OACpF,cAAC0Q,EAAD,CAAa9c,QAASA,EAASxL,QAASA,EAAxC,SACGwL,EAAU,cAACmd,EAAA,EAAD,IAAmB3oB,EAAU,cAAC,IAAD,CAAetQ,MAAM,YAAe,cAAC,IAAD,CAAWA,MAAM,iBAN9E,KCnBvB,SAASk5B,EAAqBxyC,EAAuByyC,GACnD,OAAOA,EAAE5Q,UAAY7hC,EAAE6hC,UAGzB,SAAS6Q,EAAmBnR,GAC1B,OACE,cAAC,IAAD,CAAMoR,cAAc,SAApB,SACGpR,EAAahhB,KAAI,SAACyhB,GACjB,OAAO,cAACoQ,EAAD,CAA0CpQ,GAAIA,GAA5BA,EAAGR,KAAOQ,EAAGH,gBAM9C,I,EA2Ce+Q,EA3CyC,SAAC,GAAmB,IAAjB3C,EAAgB,EAAhBA,UACzD,EAA6BzqC,cAArBmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QACXua,EAAWgI,cACX2qB,EAAkBC,cAEhBhxC,EAAMC,cAAND,EAEFixC,EAA2BnwB,mBAAQ,WAEvC,OADYxhB,OAAOmnC,OAAOsK,GACfvqB,OAAO0qB,KAAqBtqB,KAAK8pB,KAC3C,CAACK,IAEEzd,EAAU2d,EAAyBzqB,QAAO,SAAC0Z,GAAD,OAASA,EAAGG,WACtD8Q,EAAYF,EAAyBzqB,QAAO,SAAC0Z,GAAD,OAAQA,EAAGG,WAEvD+Q,EAA+BpyC,uBAAY,WAC3C6E,GAASua,EAAS4hB,YAAqB,CAAEn8B,eAC5C,CAACua,EAAUva,IAEd,OACE,cAAC,KAAD,CAAOirC,MAAO9uC,EAAE,uBAAyBmuC,UAAWA,EAApD,SACGtxB,GACC,cAAC,KAAD,UACKyW,EAAQvM,QAAYoqB,EAAUpqB,OAC/B,qCACE,eAAC,IAAD,CAASkoB,GAAG,OAAO5a,MAAO,CAAEgd,eAAgB,iBAA5C,UACE,cAAC,KAAD,UAAOrxC,EAAE,yBACT,cAAC,IAAD,CAAQutC,QAAQ,WAAW+D,MAAM,KAAK15B,QAASw5B,EAA/C,SACGpxC,EAAE,kBAGN4wC,EAAmBtd,GACnBsd,EAAmBO,MAGtB,cAAC,KAAD,UAAOnxC,EAAE,iCC/CNuxC,EAXM,WACnB,MAAqCxB,aAAS,cAAC,EAAD,KAAvCyB,EAAP,oBACA,OACE,mCACE,cAAC,IAAD,CAAQjE,QAAQ,OAAOvT,EAAG,EAAGpiB,QAAS45B,EAA4B7B,GAAG,OAArE,SACE,cAAC,KAAD,CAAan4B,MAAM,UAAUhX,MAAM,cCOrCixC,EAAqBnxC,YAAOoxC,IAAPpxC,CAAH,0JAKK,qBAAGu0B,MAAkBG,OAAOK,cAkC1Csc,EA/BoB,SAAC,GAA2D,IAAzD7C,EAAwD,EAAxDA,MAAO8C,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,OAA+B,IAAvBC,gBAAuB,SAC5F,OACE,eAACN,EAAD,WACE,eAAC,IAAD,CAAMO,WAAW,SAAStE,GAAIqE,EAAW,EAAI,OAA7C,UACGD,GACC,cAAC,KAAD,CAAYG,GAAIC,IAAMC,GAAIL,EAA1B,SACE,cAAC,IAAD,CAAetxC,MAAM,WAGzB,eAAC,IAAD,CAAMqwC,cAAc,SAApB,UACE,cAAC,IAAD,CAASoB,GAAG,KAAKhD,GAAG,MAApB,SACGH,IAEH,eAAC,IAAD,CAAMkD,WAAW,SAAjB,UACGH,GAAU,cAACpc,EAAA,EAAD,CAAgBC,KAAMmc,EAAQnE,GAAG,QAC5C,cAAC,KAAD,CAAMl2B,MAAM,aAAa63B,SAAS,OAAlC,SACGuC,cAKPG,GACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,W,6ZChCV,SAASK,EAAmBC,EAAcC,GACxC,IAAMC,EAAQ/d,IAAsB0N,SAASmQ,GAAQ7d,IAAsBpP,QAAQitB,GAAQG,OAAOC,iBAC5FC,EAASle,IAAsB0N,SAASoQ,GAAQ9d,IAAsBpP,QAAQktB,GAAQE,OAAOC,iBAGnG,OAAIF,EAAQG,EAAe,EACvBH,EAAQG,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAU/uC,QAAS+uC,EAAUpuC,QAASouC,EAAUnxC,SAAUmxC,EAAUlpC,OAAQkpC,EAAUpc,OAL9Eoc,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUG,YAZ1B,GAAsChqC,KAuBhCiqC,GAA2B,mBAC9BvuC,IAAQC,QAAU,IADY,cAE9BD,IAAQuE,QAAU,IAFY,GAK3BiqC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMhsB,EAAM,OAAG6rB,QAAH,IAAGA,OAAH,EAAGA,EAAW70C,IAAIg1C,GAC9B,GAAIhsB,EAAQ,OAAOA,EAEnB,IAAM3I,EAAM20B,EAAKxuC,OAAO81B,QACtB,SAAC4K,EAAUsN,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIp0B,KAAI,SAAC40B,GAAW,IAAD,EACf,GAAI,UAACD,EAAKP,YAAN,aAAC,EAAYQ,GACjB,OAAO,2BAAKD,EAAKP,KAAKQ,IAAtB,IAA8BhxB,GAAIgxB,cAJnB,aACnB,EAKI7sB,QAAO,SAACrB,GAAD,OAAqBuB,QAAQvB,aANrB,QAM4B,GAC3CpF,EAAQ,IAAI4yB,EAAiBC,EAAWC,GAC9C,QAA+Cr1C,IAA3C8nC,EAASvlB,EAAMlc,SAASkc,EAAMvb,SAAwB,MAAMpE,MAAM,qBACtE,OAAO,2BACFklC,GADL,kBAEGvlB,EAAMlc,QAFT,2BAGOyhC,EAASvlB,EAAMlc,UAHtB,kBAIKkc,EAAMvb,QAAU,CACfub,QACAqzB,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAW91C,IAAIi2C,EAAM30B,GACdA,EAGF,SAAS60B,IAQd,OAAOt0B,aAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SAGlF,SAAS+R,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGhvC,IAAQC,QADX,2BAC0B8uC,EAAK/uC,IAAQC,UAAa+uC,EAAKhvC,IAAQC,WADjE,cAEGD,IAAQuE,QAFX,2BAE0BwqC,EAAK/uC,IAAQuE,UAAayqC,EAAKhvC,IAAQuE,WAFjE,EAOF,SAAS0qC,EAA4BC,GACnC,IAAM9O,EAAQyO,IAEd,OAAOxyB,mBAAQ,WACb,OAAK6yB,EAGHA,EACGC,QAEAhtB,KAAKwrB,GACL1X,QAAO,SAACmZ,EAAWC,GAAgB,IAAD,EAC3B1vC,EAAO,UAAGygC,EAAMiP,UAAT,aAAG,EAAmB1vC,QACnC,IAAKA,EAAS,OAAOyvC,EACrB,IAEE,OAAON,EAAYM,EADDv0C,OAAOy0C,OAAOZ,EAAe/uC,KAE/C,MAAOuZ,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDk2B,KAERb,GAjBWA,IAmBjB,CAACnO,EAAO8O,IAIN,SAASK,IAA2C,IAAD,EACxD,iBAAOh1B,aAA2D,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMnD,yBAAzF,aAAO,EAAmGlb,QACxG,SAACob,GAAD,OAAUrN,IAAsB2N,SAASN,MAWtC,SAASiE,IAId,OAAO0N,EAFcG,EADEM,KAECb,EAAec,IAKlC,SAASjO,IAEd,OAAO0N,EAjBF,WACL,IAAM7O,EAAQyO,IACRY,EAAoBF,IAC1B,OAAO10C,OAAOC,KAAKslC,GAAOre,QAAO,SAACob,GAAD,QAAS,OAACsS,QAAD,IAACA,OAAD,EAACA,EAAmBhS,SAASN,MAASrN,IAAsB2N,SAASN,MAazEuS,IAKjC,SAASC,IACd,OAAOjB,EAAec,GAIjB,SAAS9N,IAQd,OAAOoN,EANyBJ,EAAekB,GAGdX,EAA4Bnf,MAMxD,SAAS+f,EAAgB1S,GAC9B,IAAMF,EAAiBsS,IACvB,OAAOttB,QAAO,OAACgb,QAAD,IAACA,OAAD,EAACA,EAAgBQ,SAASN,M,6BCvL1C,osBAKar9B,EAAa,SAACC,GAEzB,OAAOA,EADSF,IACUE,EADVF,IAC6BE,EAAQC,IAAQC,UAGlDC,EAAiB,WAC5B,OAAOJ,EAAWK,IAAOC,KAAKL,UAEnBc,EAAgB,WAC3B,OAAOf,EAAWK,IAAOW,IAAIf,UAElBgB,EAAuB,WAClC,OAAOjB,EAAWkB,IAAUC,aAEjBC,EAAsB,WACjC,OAAOpB,EAAWkB,IAAUG,YAKjBiB,EAAsB,WACjC,OAAOtC,EAAWkB,IAAUqB,YAEjBC,EAA2B,WACtC,OAAOxC,EAAWkB,IAAUuB,iBAEjBC,EAA2B,WACtC,OAAO1C,EAAWkB,IAAUyB,iBAEjBC,EAAyB,WACpC,OAAO5C,EAAWkB,IAAU2B,eAEjBC,EAAwB,WACnC,OAAO9C,EAAWkB,IAAU6B,cAEjBC,EAA2B,WACtC,OAAOhD,EAAWkB,IAAU+B,iBAEjBC,EAAyB,WACpC,OAAOlD,EAAWkB,IAAUiC,eAEjBC,EAA+B,WAC1C,OAAOpD,EAAWkB,IAAUmC,qBAEjBC,EAAsB,WACjC,OAAOtD,EAAWkB,IAAUqC,YAEjBC,EAAsB,WACjC,OAAOxD,EAAWkB,IAAUuC,YAEjBC,EAAwB,WACnC,OAAO1D,EAAWkB,IAAUyC,cAEjBC,EAA4B,WACvC,OAAO5D,EAAWkB,IAAU2C,kBAEjBC,EAAkC,WAC7C,OAAO9D,EAAWkB,IAAU6C,wBAEjBC,EAAmC,WAC9C,OAAOhE,EAAWkB,IAAU+C,yBAEjBC,EAAwB,WACnC,OAAOlE,EAAWkB,IAAUiD,e,6BCpE9B,osBAKanE,EAAa,SAACC,GAEzB,OAAOA,EADSF,IACUE,EADVF,IAC6BE,EAAQC,UAAQC,UAGlDC,EAAiB,WAC5B,OAAOJ,EAAWK,IAAOC,KAAKL,UAEnBc,EAAgB,WAC3B,OAAOf,EAAWK,IAAOW,IAAIf,UAElBgB,EAAuB,WAClC,OAAOjB,EAAWkB,IAAUC,aAEjBC,EAAsB,WACjC,OAAOpB,EAAWkB,IAAUG,YAKjBiB,EAAsB,WACjC,OAAOtC,EAAWkB,IAAUqB,YAEjBC,EAA2B,WACtC,OAAOxC,EAAWkB,IAAUuB,iBAEjBC,EAA2B,WACtC,OAAO1C,EAAWkB,IAAUyB,iBAEjBC,EAAyB,WACpC,OAAO5C,EAAWkB,IAAU2B,eAEjBC,EAAwB,WACnC,OAAO9C,EAAWkB,IAAU6B,cAEjBC,EAA2B,WACtC,OAAOhD,EAAWkB,IAAU+B,iBAEjBC,EAAyB,WACpC,OAAOlD,EAAWkB,IAAUiC,eAEjBC,EAA+B,WAC1C,OAAOpD,EAAWkB,IAAUmC,qBAEjBC,EAAsB,WACjC,OAAOtD,EAAWkB,IAAUqC,YAEjBC,EAAsB,WACjC,OAAOxD,EAAWkB,IAAUuC,YAEjBC,EAAwB,WACnC,OAAO1D,EAAWkB,IAAUyC,cAEjBC,EAA4B,WACvC,OAAO5D,EAAWkB,IAAU2C,kBAEjBC,EAAkC,WAC7C,OAAO9D,EAAWkB,IAAU6C,wBAEjBC,EAAmC,WAC9C,OAAOhE,EAAWkB,IAAU+C,yBAEjBC,EAAwB,WACnC,OAAOlE,EAAWkB,IAAUiD,e,6BCpE9B,qsBAKanE,EAAa,SAACC,GAEzB,OAAOA,EADSF,IACUE,EADVF,IAC6BE,EAAQC,UAAQC,UAGlDC,EAAiB,WAC5B,OAAOJ,EAAWK,IAAOC,KAAKL,UAEnBc,EAAgB,WAC3B,OAAOf,EAAWK,IAAOW,IAAIf,UAElBgB,EAAuB,WAClC,OAAOjB,EAAWkB,IAAUC,aAEjBC,EAAsB,WACjC,OAAOpB,EAAWkB,IAAUG,YAKjBiB,EAAsB,WACjC,OAAOtC,EAAWkB,IAAUqB,YAEjBC,EAA2B,WACtC,OAAOxC,EAAWkB,IAAUuB,iBAEjBC,EAA2B,WACtC,OAAO1C,EAAWkB,IAAUyB,iBAEjBC,EAAyB,WACpC,OAAO5C,EAAWkB,IAAU2B,eAEjBC,EAAwB,WACnC,OAAO9C,EAAWkB,IAAU6B,cAEjBC,EAA2B,WACtC,OAAOhD,EAAWkB,IAAU+B,iBAEjBC,EAAyB,WACpC,OAAOlD,EAAWkB,IAAUiC,eAEjBC,EAA+B,WAC1C,OAAOpD,EAAWkB,IAAUmC,qBAEjBC,EAAsB,WACjC,OAAOtD,EAAWkB,IAAUqC,YAEjBC,EAAsB,WACjC,OAAOxD,EAAWkB,IAAUuC,YAEjBC,EAAwB,WACnC,OAAO1D,EAAWkB,IAAUyC,cAEjBC,EAA4B,WACvC,OAAO5D,EAAWkB,IAAU2C,kBAEjBC,EAAkC,WAC7C,OAAO9D,EAAWkB,IAAU6C,wBAEjBC,EAAmC,WAC9C,OAAOhE,EAAWkB,IAAU+C,yBAEjBC,EAAwB,WACnC,OAAOlE,EAAWkB,IAAUiD,e,khBC1DjB6rC,EAAqB,uCAAG,oCAAAr2C,EAAA,6DAC7Bs2C,EAAejyB,IAAYiE,QAAO,SAACwT,GAAD,OAAoB,IAAbA,EAAEvX,UAC3CgyB,EAAkBD,EAAa/1B,KAAI,SAACi2B,GACxC,MAAO,CACLlwC,QAASD,YAAWmwC,EAAW5xB,iBAC/B0T,KAAM,iBAGJme,EAAgBH,EAAa/1B,KAAI,SAACi2B,GACtC,MAAO,CACLlwC,QAASD,YAAWmwC,EAAW5xB,iBAC/B0T,KAAM,oBAXyB,SAedrQ,YAAUyuB,EAAaH,GAfT,cAe7BI,EAf6B,gBAgBhB1uB,YAAUyuB,EAAaD,GAhBP,cAgB7BG,EAhB6B,yBAkB5BN,EAAa/1B,KAAI,SAACs2B,EAAgBC,GACvC,IAAMpiB,EAAaiiB,EAAOG,GACpBniB,EAAWiiB,EAAKE,GACtB,MAAO,CACLvyB,OAAQsyB,EAAetyB,OACvBmQ,WAAY,IAAIlxB,IAAUkxB,GAAYtb,SACtCub,SAAU,IAAInxB,IAAUmxB,GAAUvb,cAxBH,4CAAH,qDA6BrB29B,EAAsB,uCAAG,sCAAA/2C,EAAA,6DAC9Bg3C,EAAc3yB,IAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACvDyrC,EAAU5yB,IAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UAEnD0rC,EAAmBF,EAAYz2B,KAAI,SAACi2B,GACxC,MAAO,CACLlwC,QAASD,YAAWmwC,EAAW7M,aAAarjC,SAC5CgyB,KAAM,YACNC,OAAQ,CAAClyB,YAAWmwC,EAAW5xB,sBAI7BuyB,EAAgBF,EAAQ12B,KAAI,SAACi2B,GACjC,MAAO,CACLlwC,QAASqB,cACT2wB,KAAM,YACNC,OAAQ,CAAClyB,YAAWmwC,EAAW5xB,sBAhBC,SAoBCqD,YAAUmvB,EAASF,GApBpB,cAoB9BG,EApB8B,gBAqBFpvB,YAAUqvB,EAASH,GArBjB,cAqB9BI,EArB8B,+CAwB/BP,EAAYz2B,KAAI,SAACub,EAAGgb,GAAJ,MAAe,CAChCvyB,OAAQuX,EAAEvX,OACVizB,YAAa,IAAIh0C,IAAU6zC,EAAuBP,IAAQ19B,cA1B1B,YA4B/B69B,EAAQ12B,KAAI,SAACub,EAAGgb,GAAJ,MAAe,CAC5BvyB,OAAQuX,EAAEvX,OACVizB,YAAa,IAAIh0C,IAAU+zC,EAAoBT,IAAQ19B,gBA9BvB,4CAAH,qDAmCtBq+B,EAAqB,uCAAG,WAAOlzB,GAAP,iBAAAvkB,EAAA,sEAE3B03C,EAAe7yB,YAAsBN,GAFV,SAGNmzB,EAAaC,mBAHP,cAG3BC,EAH2B,yBAI1B,IAAIp0C,IAAUo0C,EAAaj2C,aAJD,yDAM1BmX,KAN0B,yDAAH,sDAUrB++B,EAAuB,uCAAG,WACrCC,GADqC,mBAAA93C,EAAA,6DAG/B+3C,EAAa1zB,IAChBiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,SAAqBswB,EAAElH,cACpDtM,QAAO,SAACwT,GAAD,OAAQgc,EAAsB9T,SAASlI,EAAEvX,WAI7CyzB,EAAuBD,EAAWx3B,KAAI,SAAC03B,GAAD,OAAeR,EAAsBQ,EAAU1zB,WATtD,SAUT2zB,QAAQC,IAAIH,GAVH,cAU/BI,EAV+B,yBAY9BA,EAAc5b,QAAO,SAAC6b,EAAOT,EAAcd,GAChD,OAAO,2BACFuB,GADL,kBAEGN,EAAWjB,GAAOvyB,OAASqzB,MAE7B,KAjBkC,2CAAH,sD,iBCzE9BZ,EAAc3yB,IAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACvD8sC,EAAWj0B,IAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACpD+sC,EAAiBl0B,IAAYiE,QAAO,SAACwT,GAAD,OAAoB,IAAbA,EAAEvX,UAC7Ci0B,EAAqB7yB,cAEd8yB,EAAmB,uCAAG,WAAO95B,GAAP,iBAAA3e,EAAA,6DAC3B+nB,EAAQivB,EAAYz2B,KAAI,SAACub,GAAD,MAAQ,CACpCx1B,QAASD,YAAWy1B,EAAE6N,aAAarjC,SACnCgyB,KAAM,YACNC,OAAQ,CAAC5Z,EAAStY,YAAWy1B,EAAElX,sBAJA,SAORqD,YAAUywB,EAAU3wB,GAPZ,cAO3B4wB,EAP2B,yBAQ1B3B,EAAYxa,QACjB,SAACoc,EAAKt0B,EAAMwyB,GAAZ,mBAAC,eAA2B8B,GAA5B,kBAAkCt0B,EAAKC,OAAS,IAAI/gB,IAAUm1C,EAAW7B,IAAQ19B,aACjF,KAV+B,2CAAH,sDAcnBy/B,EAAiB,uCAAG,WAAOl6B,GAAP,uBAAA3e,EAAA,6DAEzB+nB,EAAQivB,EAAYz2B,KAAI,SAACub,GAAD,MAAQ,CACpCx1B,QAASD,YAAWy1B,EAAE6N,aAAarjC,SACnCgyB,KAAM,YACNC,OAAQ,CAAC5Z,OALoB,SAOAsJ,YAAUywB,EAAU3wB,GAPpB,cAOzB+wB,EAPyB,OAQzBC,EAAgB/B,EAAYxa,QAChC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,mBAAC,eAA2B8B,GAA5B,kBAAkCt0B,EAAKC,OAAS,IAAI/gB,IAAUs1C,EAAiBhC,IAAQ19B,aACvF,IAV6B,SAcNrT,IAAkBgZ,WAAWJ,GAdvB,cAczBq6B,EAdyB,OAezBC,EAAcX,EAAS9b,QAC3B,SAACoc,EAAKt0B,GAAN,mBAAC,eAAoBs0B,GAArB,kBAA2Bt0B,EAAKC,OAAS,IAAI/gB,IAAUw1C,EAAWr3C,YAAYyX,aAC9E,IAjB6B,6CAoBnB2/B,GAAkBE,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAOv6B,GAAP,uBAAA3e,EAAA,6DAC9B+nB,EAAQwwB,EAAeh4B,KAAI,SAACub,GAAD,MAAQ,CACvCx1B,QAASD,YAAWy1B,EAAElX,iBACtB0T,KAAM,WACNC,OAAQ,CAAC5Z,OAJyB,SAMbsJ,YAAUyuB,EAAa3uB,GANV,cAM9BoxB,EAN8B,OAO9BC,EAAiBb,EAAe/b,QACpC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,mBAAC,eACI8B,GADL,kBAEGt0B,EAAKC,OAAS,IAAI/gB,IAAU21C,EAASrC,GAAOxzC,OAAO+1C,MAAMjgC,aAE5D,IAZkC,SAgBOo/B,EAAmBW,SAAS,IAAKx6B,GAhBxC,uBAgBpB26B,EAhBoB,EAgB5Bh2C,OAhB4B,6CAkBxB81C,GAlBwB,IAkBR,EAAG,IAAI51C,IAAU81C,EAAiB33C,YAAYyX,YAlBtC,4CAAH,sDAqBtBmgC,EAAuB,uCAAG,WAAO56B,GAAP,qBAAA3e,EAAA,6DAC/B+nB,EAAQwwB,EAAeh4B,KAAI,SAACub,GAAD,MAAQ,CACvCx1B,QAASD,YAAWy1B,EAAElX,iBACtB0T,KAAM,gBACNC,OAAQ,CAAC5Z,OAJ0B,SAMnBsJ,YAAUyuB,EAAa3uB,GANJ,cAM/BtM,EAN+B,OAO/B+9B,EAAiBjB,EAAe/b,QACpC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,mBAAC,eACI8B,GADL,kBAEGt0B,EAAKC,OAAS,IAAI/gB,IAAUiY,EAAIq7B,IAAQ19B,aAE3C,IAZmC,SAgBTo/B,EAAmBiB,YAAY,IAAK96B,GAhB3B,cAgB/B+6B,EAhB+B,oDAkBzBF,GAlByB,IAkBT,EAAG,IAAIh2C,IAAUk2C,EAAc/3C,YAAYyX,YAlBlC,2CAAH,sD,wBCnEvBugC,EAAoB,uCAAG,sDAAA35C,EAAA,sEAE1B+nB,EAAQ,CACZ,uBACA,cACA,8BACA,oCACAxH,KAAI,SAACq5B,GAAD,MAAa,CACjBtzC,QAASuD,cACTyuB,KAAMshB,MATwB,SAY+DjhB,YAC7FxS,EACA4B,GAd8B,gEAYxB8xB,EAZwB,2BAYVloB,EAZU,2BAYAsM,EAZA,2BAY6BE,EAZ7B,KAiB1B2b,EAAyBnoB,EAAS,IAAInuB,IAAUmuB,EAAOhwB,YAAcmX,IACrEihC,EAAwBF,EAAa,IAAIr2C,IAAUq2C,EAAWl4C,YAAcmX,IAC5EkhC,EAA2BtoB,YAAoBooB,EAAwBC,GAnB7C,kBAoBzB,CACLnc,YAAakc,EAAuB1gC,SACpC2a,kBAAmBgmB,EAAsB3gC,SACzC2kB,iBAAkBic,EAAyB9nB,gBAAgB9Y,SAC3D6kB,0BAA2B,IAAIz6B,IAAUy6B,EAA0Bt8B,YAAYyX,SAC/E+kB,wBAAyB,IAAI36B,IAAU26B,EAAwBx8B,YAAYyX,WAzB7C,2DA4BzB,CACLwkB,YAAa,KACb7J,kBAAmB,KACnBgK,iBAAkB,KAClBE,0BAA2B,KAC3BE,wBAAyB,OAjCK,0DAAH,qDAsCpB8b,EAAc,uCAAG,gDAAAj6C,EAAA,sEAEpB+nB,EAAQ,CAAC,iBAAkB,UAAW,cAAe,qBAAqBxH,KAAI,SAACq5B,GAAD,MAAa,CAC/FtzC,QAASuD,cACTyuB,KAAMshB,MAJkB,SAO0DjhB,YAAYxS,EAAc4B,GAPpF,gEAOlB2K,EAPkB,2BAOA2L,EAPA,2BAOWC,EAPX,2BAO4BC,EAP5B,uBASnB,CACL7L,eAAgBA,EAAe1uB,WAC/Bq6B,QAASA,EAAQr6B,WACjBs6B,cAAeA,EAAct6B,WAC7Bu6B,oBAAqBA,EAAoBv6B,aAbjB,2DAgBnB,CACL0uB,eAAgB,KAChB2L,QAAS,KACTC,cAAe,KACfC,oBAAqB,OApBG,0DAAH,qDC1CrB2b,EAAoBh0B,cAuBXi0B,EArBK,uCAAG,WAAOx7B,GAAP,eAAA3e,EAAA,+EAEgBk6C,EAAkBf,SAASx6B,GAF3C,cAEby7B,EAFa,yBAGZ,CACL5b,WAAW,EACX1K,WAAY,IAAItwB,IAAU42C,EAAqBzoB,OAAOhwB,YAAYyX,SAClEulB,kBAAmByb,EAAqBzb,kBAAkBh9B,WAC1Di9B,mBAAoBwb,EAAqBxb,mBAAmBj9B,WAC5DkyB,qBAAsB,IAAIrwB,IAAU42C,EAAqBvmB,qBAAqBlyB,YAAYyX,WARzE,yDAWZ,CACLolB,WAAW,EACX1K,WAAY,KACZ6K,kBAAmB,KACnBC,mBAAoB,KACpB/K,qBAAsB,OAhBL,yDAAH,sD,SCcdl1B,EAA2B,CAC/BqC,KAAK,YAAKqjB,KACV+Y,gBAAgB,EAChBtzB,UAAW,CACT8zB,YAAa,KACb7J,kBAAmB,KACnBgK,iBAAkB,KAClBE,0BAA2B,KAC3BE,wBAAyB,KACzBC,KAAM,CACJ1L,eAAgB,KAChB2L,QAAS,KACTC,cAAe,KACfC,oBAAqB,MAEvB/c,SAAU,CACRgd,WAAW,EACX1K,WAAY,KACZD,qBAAsB,KACtB8K,kBAAmB,KACnBC,mBAAoB,QAMb9B,EAA4B,SAACrI,GAAD,8CAA0B,WAAOvU,EAAUm6B,GAAjB,qBAAAr6C,EAAA,sEACvCq2C,IADuC,cAC3DiE,EAD2D,gBAErCvD,IAFqC,OAE3DwD,EAF2D,OAI3DC,EAASC,YAAuBJ,IAAWt5B,MAAM/f,MAEjD05C,EAAWr2B,IAAY9D,KAAI,SAAC+D,GAChC,IAAMq2B,EAAaL,EAAYr5B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UAC/Ds2B,EAAeN,EAAct5B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACnEu2B,KAAyBrmB,EAAe,GAAKkmB,IAAalmB,EAAe6f,OAAOqG,EAAWhmB,UAC3FomB,EAAiBz2B,EAAKsQ,YAAckmB,EAEpCE,EAAsB12B,EAAKqlB,aAAarjC,QAAUD,YAAWie,EAAKqlB,aAAarjC,SAAS+xB,cAAgB,KACxG4iB,EAAoBD,EAAsBR,EAAOQ,GAAuB,EAExEE,EAAsB52B,EAAKslB,aAAatjC,QAAUD,YAAWie,EAAKslB,aAAatjC,SAAS+xB,cAAgB,KACxGzF,EAAoBsoB,EAAsBV,EAAOU,GAAwB,EACzEroB,EAAOkoB,EAOT,EANAI,YACEF,EACAroB,EACA9uB,YAAiB,IAAIN,IAAUq3C,EAAarD,aAAclzB,EAAKqlB,aAAapmC,UAC5E63C,WAAW92B,EAAKimB,gBAItB,OAAO,uCACFoQ,GACAE,GAFL,IAGEI,oBACAroB,oBACAC,MACA+B,WAAYmmB,OAIhB76B,EAASm7B,GAAmBX,IApCqC,2CAA1B,yDAuC5B1d,EAA+B,yDAAM,WAAO9c,EAAUm6B,GAAjB,mBAAAr6C,EAAA,6DAC1C83C,EAAwBuC,IAC3Bld,MAAMn8B,KAAKsnB,QAAO,gBAAGsvB,EAAH,EAAGA,aAAH,OAAuC,OAAjBA,QAA0Ct4C,IAAjBs4C,KACjEr3B,KAAI,SAAC+D,GAAD,OAAUA,EAAKC,UAH0B,SAKpBszB,EAAwBC,GALJ,OAK1CM,EAL0C,OAO1CkD,EAAmBj3B,IAAY9D,KAAI,SAAC+D,GACxC,GAAIwzB,EAAsB9T,SAAS1f,EAAKC,QACtC,MAAO,CAAEA,OAAQD,EAAKC,QAExB,IAAMqzB,EAAeQ,EAAc9zB,EAAKC,SAAWzL,IACnD,MAAO,CACLyL,OAAQD,EAAKC,OACbqzB,aAAcA,EAAax+B,aAI/B8G,EAASm7B,GAAmBC,IAlBoB,2CAAN,yDAqB/Bpe,EACX,SAACve,GAAD,8CACA,WAAOuB,GAAP,uBAAAlgB,EAAA,sEAC2By4C,EAAoB95B,GAD/C,cACQg6B,EADR,gBAEqCE,EAAkBl6B,GAFvD,cAEQ48B,EAFR,gBAG+BrC,EAAuBv6B,GAHtD,cAGQy6B,EAHR,iBAI+BG,EAAwB56B,GAJvD,QAIQ66B,EAJR,OAMQh4B,EAAW6C,IAAY9D,KAAI,SAAC+D,GAAD,MAAW,CAC1CC,OAAQD,EAAKC,OACbhD,UAAWo3B,EAAWr0B,EAAKC,QAC3Bi3B,oBAAqBD,EAAqBj3B,EAAKC,QAC/C7C,cAAe03B,EAAe90B,EAAKC,QACnCm1B,cAAeF,EAAel1B,EAAKC,YAGrCrE,EAASu7B,GAAiBj6B,IAd5B,4CADA,uDAkBWk6B,EACX,SAACn3B,EAAgB5F,GAAjB,8CACA,WAAOuB,GAAP,eAAAlgB,EAAA,sEAC2By4C,EAAoB95B,GAD/C,OACQg6B,EADR,OAEEz4B,EAASy7B,GAAoB,CAAEp3B,SAAQoe,MAAO,YAAa9gC,MAAO82C,EAAWp0B,MAF/E,2CADA,uDAMWq3B,EACX,SAACr3B,EAAgB5F,GAAjB,8CACA,WAAOuB,GAAP,eAAAlgB,EAAA,sEAC8B64C,EAAkBl6B,GADhD,OACQo6B,EADR,OAEE74B,EAASy7B,GAAoB,CAAEp3B,SAAQoe,MAAO,sBAAuB9gC,MAAOk3C,EAAcx0B,MAF5F,2CADA,uDAMWs3B,EACX,SAACt3B,EAAgB5F,GAAjB,8CACA,WAAOuB,GAAP,eAAAlgB,EAAA,sEAC+Bk5C,EAAuBv6B,GADtD,OACQy6B,EADR,OAEEl5B,EAASy7B,GAAoB,CAAEp3B,SAAQoe,MAAO,gBAAiB9gC,MAAOu3C,EAAe70B,MAFvF,2CADA,uDAMWu3B,EACX,SAACv3B,EAAgB5F,GAAjB,8CACA,WAAOuB,GAAP,eAAAlgB,EAAA,sEAC+Bu5C,EAAwB56B,GADvD,OACQ66B,EADR,OAEEt5B,EAASy7B,GAAoB,CAAEp3B,SAAQoe,MAAO,gBAAiB9gC,MAAO23C,EAAej1B,MAFvF,2CADA,uDAMWgZ,EAA2Bwe,YAA4B,4BAAZ,sBAAyC,4BAAA/7C,EAAA,sEACjE25C,IADiE,cACzFqC,EADyF,yBAExFA,GAFwF,4CAKpFve,EAAqBse,YAA4B,sBAAZ,sBAAmC,4BAAA/7C,EAAA,sEAC3Di6C,IAD2D,cAC7EgC,EAD6E,yBAE5EA,GAF4E,4CAKxEze,GAAyBue,YACpC,sBADoD,uCAEpD,+BAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAAT,SACyBw7B,EAAex7B,GADxC,cACQ6C,EADR,yBAESA,GAFT,2CAFoD,uDAQzC06B,GAAaC,YAAY,CACpC7jB,KAAM,QACN35B,eACAy9C,SAAU,CACRf,mBAAoB,SAACx7C,EAAO2gC,GAC1B,IAAM6b,EAAwB7b,EAAOC,QACrC5gC,EAAMmB,KAAOnB,EAAMmB,KAAKuf,KAAI,SAAC+D,GAC3B,IAAMg4B,EAAeD,EAAcp7B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACzE,OAAO,2BAAKD,GAASg4B,OAGzBb,iBAAkB,SAAC57C,EAAO2gC,GACxB,IAAMhf,EAAWgf,EAAOC,QACxB5gC,EAAMmB,KAAOnB,EAAMmB,KAAKuf,KAAI,SAAC+D,GAC3B,IAAMi4B,EAAe/6B,EAASP,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACpE,OAAO,2BAAKD,GAAZ,IAAkB9C,SAAU+6B,OAE9B18C,EAAMu9B,gBAAiB,GAEzBue,oBAAqB,SAAC97C,EAAO2gC,GAC3B,MAAiCA,EAAOC,QAAhCkC,EAAR,EAAQA,MAAO9gC,EAAf,EAAeA,MAAO0iB,EAAtB,EAAsBA,OAChBuyB,EAAQj3C,EAAMmB,KAAKw7C,WAAU,SAAC1gB,GAAD,OAAOA,EAAEvX,SAAWA,KAEnDuyB,GAAS,IACXj3C,EAAMmB,KAAK81C,GAAX,2BAAyBj3C,EAAMmB,KAAK81C,IAApC,IAA4Ct1B,SAAS,2BAAM3hB,EAAMmB,KAAK81C,GAAOt1B,UAAzB,kBAAoCmhB,EAAQ9gC,SAItG46C,cAAe,SAACpc,GAEdA,EAAQC,QAAQ/C,EAAyBlI,WAAW,SAACx1B,EAAO2gC,GAC1D3gC,EAAMiK,UAAN,2BAAuBjK,EAAMiK,WAAc02B,EAAOC,YAGpDJ,EAAQC,QAAQ7C,EAAmBpI,WAAW,SAACx1B,EAAO2gC,GACpD,IAAMpC,EAAOoC,EAAOC,QACpB5gC,EAAMiK,UAAN,2BAAuBjK,EAAMiK,WAA7B,IAAwCs0B,YAG1CiC,EAAQC,QAAQ9C,GAAuBnI,WAAW,SAACx1B,EAAO2gC,GACxD,IAAMhf,EAAWgf,EAAOC,QACxBjf,EAASgd,WAAY,EACrB3+B,EAAMiK,UAAN,2BAAuBjK,EAAMiK,WAA7B,IAAwC0X,mBAMvC,GAAsE06B,GAAWQ,QAAzErB,GAAR,GAAQA,mBAAoBI,GAA5B,GAA4BA,iBAAkBE,GAA9C,GAA8CA,oBAEtCO,OAAf,S,mLCvNMtmB,EAAUxzB,IAAOU,IAAV,4FAGK,qBAAG+yB,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAAC,IAAD,CAAchG,SAAUgG,EAAWE,KAAI,UAAKA,EAAKt0B,WAAV,MAA0Bw0B,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAAC,IAAD,CAAcjG,SAAUiG,EAAWC,KAAI,UAAKA,EAAKt0B,WAAV,W,gMCtBrDi0B,EAAUxzB,IAAOU,IAAV,4FAGK,qBAAG+yB,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAAC,IAAD,CAAchG,SAAUgG,EAAWE,KAAI,UAAKA,EAAKt0B,WAAV,MAA0Bw0B,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAAC,IAAD,CAAcjG,SAAUiG,EAAWC,KAAI,UAAKA,EAAKt0B,WAAV,W,qOChBrDg7C,EAAW,IAAI/tB,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MACpDuC,EAAsB,IAAIzC,IAAQC,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MAClE8tB,EAA2BvrB,EAAoBwrB,SAASF,GAGvD,SAASG,EAA2BnqC,GAMzC,IAAMoqC,EAAiBpqC,EAEnB0e,EAAoBwrB,SAClBlqC,EAAMqqC,MAAMhhB,MAAMQ,QAChB,SAACygB,GAAD,OAAoCA,EAAW/tB,SAAS0tB,KACxDvrB,SAJJ/xB,EASE49C,EAAgCvqC,GAASoqC,EAAgBpqC,EAAMwqC,YAAYN,SAASE,QAAiBz9C,EAe3G,MAAO,CAAE89C,sBAZ4BF,EACjC,IAAItuB,IAAJ,OAAYsuB,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrFh+C,EAU0Dy9C,cAN5DA,GACApqC,IACCA,EAAM4qC,uBAAuB3S,IAC1B,IAAIA,IAAYj4B,EAAM4qC,YAAY17B,MAAOk7B,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,UACvFC,IAAeC,MAAMX,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,YAMpE,SAAS9Q,EACd/5B,EACA85B,GACwC,IAAD,EACjCkR,EAAMjvB,YAAqB+d,GACjC,OAAO,EAAP,iBACGxpC,IAAMq/B,MADT,OACiB3vB,QADjB,IACiBA,OADjB,EACiBA,EAAOirC,gBAAgBD,IADxC,cAEG16C,IAAMw/B,OAFT,OAEkB9vB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOkrC,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS1a,OACvB,OAACmsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS5a,OACvB,OAACqsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS7a,OACvB,OAACssB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS9a,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASmtB,EAAqBprC,EAAeqrC,GAClD,OAAKrrC,EAGEqrC,EAAQ,UACRrrC,EAAMsrC,eAAeC,SAASC,cAAc,GADpC,YAC0CxrC,EAAM4qC,YAAYxtB,SAASvkB,OADrE,cAETmH,EAAMyrC,aAAaruB,SAASvkB,QAFnB,UAIRmH,EAAMsrC,eAAeE,cAAc,GAJ3B,YAIiCxrC,EAAMyrC,aAAaruB,SAASvkB,OAJ7D,cAKTmH,EAAM4qC,YAAYxtB,SAASvkB,QAPxB,K,iNC7DLmxC,EAAW,IAAI/tB,IAAQC,IAAKC,OAAO,IAAKD,IAAKC,OAAO,MACpDuC,EAAsB,IAAIzC,IAAQC,IAAKC,OAAO,KAAQD,IAAKC,OAAO,MAClE8tB,EAA2BvrB,EAAoBwrB,SAASF,GAGvD,SAASG,EAA2BnqC,GAMzC,IAAMoqC,EAAiBpqC,EAEnB0e,EAAoBwrB,SAClBlqC,EAAMqqC,MAAMhhB,MAAMQ,QAChB,SAACygB,GAAD,OAAoCA,EAAW/tB,SAAS0tB,KACxDvrB,SAJJ/xB,EASE49C,EAAgCvqC,GAASoqC,EAAgBpqC,EAAMwqC,YAAYN,SAASE,QAAiBz9C,EAe3G,MAAO,CAAE89C,sBAZ4BF,EACjC,IAAItuB,IAAJ,OAAYsuB,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrFh+C,EAU0Dy9C,cAN5DA,GACApqC,IACCA,EAAM4qC,uBAAuB3S,IAC1B,IAAIA,IAAYj4B,EAAM4qC,YAAY17B,MAAOk7B,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,UACvFC,IAAeC,MAAMX,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,YAMpE,SAAS9Q,EACd/5B,EACA85B,GACwC,IAAD,EACjCkR,EAAMjvB,YAAqB+d,GACjC,OAAO,EAAP,iBACGxpC,IAAMq/B,MADT,OACiB3vB,QADjB,IACiBA,OADjB,EACiBA,EAAOirC,gBAAgBD,IADxC,cAEG16C,IAAMw/B,OAFT,OAEkB9vB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOkrC,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS1a,OACvB,OAACmsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS5a,OACvB,OAACqsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS7a,OACvB,OAACssB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS9a,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASmtB,EAAqBprC,EAAeqrC,GAClD,OAAKrrC,EAGEqrC,EAAQ,UACRrrC,EAAMsrC,eAAeC,SAASC,cAAc,GADpC,YAC0CxrC,EAAM4qC,YAAYxtB,SAASvkB,OADrE,cAETmH,EAAMyrC,aAAaruB,SAASvkB,QAFnB,UAIRmH,EAAMsrC,eAAeE,cAAc,GAJ3B,YAIiCxrC,EAAMyrC,aAAaruB,SAASvkB,OAJ7D,cAKTmH,EAAM4qC,YAAYxtB,SAASvkB,QAPxB,K,iNC7DLmxC,EAAW,IAAI/tB,UAAQC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,MACpDuC,EAAsB,IAAIzC,UAAQC,OAAKC,OAAO,KAAQD,OAAKC,OAAO,MAClE8tB,EAA2BvrB,EAAoBwrB,SAASF,GAGvD,SAASG,EAA2BnqC,GAMzC,IAAMoqC,EAAiBpqC,EAEnB0e,EAAoBwrB,SAClBlqC,EAAMqqC,MAAMhhB,MAAMQ,QAChB,SAACygB,GAAD,OAAoCA,EAAW/tB,SAAS0tB,KACxDvrB,SAJJ/xB,EASE49C,EAAgCvqC,GAASoqC,EAAgBpqC,EAAMwqC,YAAYN,SAASE,QAAiBz9C,EAe3G,MAAO,CAAE89C,sBAZ4BF,EACjC,IAAItuB,UAAJ,OAAYsuB,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrFh+C,EAU0Dy9C,cAN5DA,GACApqC,IACCA,EAAM4qC,uBAAuB3S,cAC1B,IAAIA,cAAYj4B,EAAM4qC,YAAY17B,MAAOk7B,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,UACvFC,iBAAeC,MAAMX,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,YAMpE,SAAS9Q,EACd/5B,EACA85B,GACwC,IAAD,EACjCkR,EAAMjvB,YAAqB+d,GACjC,OAAO,EAAP,iBACGxpC,IAAMq/B,MADT,OACiB3vB,QADjB,IACiBA,OADjB,EACiBA,EAAOirC,gBAAgBD,IADxC,cAEG16C,IAAMw/B,OAFT,OAEkB9vB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOkrC,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS1a,OACvB,OAACmsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS5a,OACvB,OAACqsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS7a,OACvB,OAACssB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS9a,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASmtB,EAAqBprC,EAAeqrC,GAClD,OAAKrrC,EAGEqrC,EAAQ,UACRrrC,EAAMsrC,eAAeC,SAASC,cAAc,GADpC,YAC0CxrC,EAAM4qC,YAAYxtB,SAASvkB,OADrE,cAETmH,EAAMyrC,aAAaruB,SAASvkB,QAFnB,UAIRmH,EAAMsrC,eAAeE,cAAc,GAJ3B,YAIiCxrC,EAAMyrC,aAAaruB,SAASvkB,OAJ7D,cAKTmH,EAAM4qC,YAAYxtB,SAASvkB,QAPxB,K,iNC7DLmxC,EAAW,IAAI/tB,UAAQC,OAAKC,OAAO,IAAKD,OAAKC,OAAO,MACpDuC,EAAsB,IAAIzC,UAAQC,OAAKC,OAAO,KAAQD,OAAKC,OAAO,MAClE8tB,EAA2BvrB,EAAoBwrB,SAASF,GAGvD,SAASG,EAA2BnqC,GAMzC,IAAMoqC,EAAiBpqC,EAEnB0e,EAAoBwrB,SAClBlqC,EAAMqqC,MAAMhhB,MAAMQ,QAChB,SAACygB,GAAD,OAAoCA,EAAW/tB,SAAS0tB,KACxDvrB,SAJJ/xB,EASE49C,EAAgCvqC,GAASoqC,EAAgBpqC,EAAMwqC,YAAYN,SAASE,QAAiBz9C,EAe3G,MAAO,CAAE89C,sBAZ4BF,EACjC,IAAItuB,UAAJ,OAAYsuB,QAAZ,IAAYA,OAAZ,EAAYA,EAA+BG,UAA3C,OAAsDH,QAAtD,IAAsDA,OAAtD,EAAsDA,EAA+BI,kBACrFh+C,EAU0Dy9C,cAN5DA,GACApqC,IACCA,EAAM4qC,uBAAuB3S,cAC1B,IAAIA,cAAYj4B,EAAM4qC,YAAY17B,MAAOk7B,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,UACvFC,iBAAeC,MAAMX,EAAc7tB,SAASvc,EAAM4qC,YAAYpuB,KAAKquB,YAMpE,SAAS9Q,EACd/5B,EACA85B,GACwC,IAAD,EACjCkR,EAAMjvB,YAAqB+d,GACjC,OAAO,EAAP,iBACGxpC,IAAMq/B,MADT,OACiB3vB,QADjB,IACiBA,OADjB,EACiBA,EAAOirC,gBAAgBD,IADxC,cAEG16C,IAAMw/B,OAFT,OAEkB9vB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAOkrC,iBAAiBF,IAF1C,EAMK,SAASG,EAAgBX,GAC9B,OAAI,OAACA,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS1a,OACvB,OAACmsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS5a,OACvB,OAACqsB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS7a,OACvB,OAACssB,QAAD,IAACA,OAAD,EAACA,EAAazR,SAAS9a,MACpB,EADsD,EADG,EADF,EADM,EAO/D,SAASmtB,EAAqBprC,EAAeqrC,GAClD,OAAKrrC,EAGEqrC,EAAQ,UACRrrC,EAAMsrC,eAAeC,SAASC,cAAc,GADpC,YAC0CxrC,EAAM4qC,YAAYxtB,SAASvkB,OADrE,cAETmH,EAAMyrC,aAAaruB,SAASvkB,QAFnB,UAIRmH,EAAMsrC,eAAeE,cAAc,GAJ3B,YAIiCxrC,EAAMyrC,aAAaruB,SAASvkB,OAJ7D,cAKTmH,EAAM4qC,YAAYxtB,SAASvkB,QAPxB,K,0KCpEXhI,IAAU4gB,OAAO,CACf4a,eAAgB,IAChBC,eAAgB,KAGX,IAEM/Q,GAAkB,mBAC5B3nB,IAAQC,QAAU,uBADU,cAE5BD,IAAQuE,QAAU,+BAFU,GAYlBq0B,EAAiB,IAAI37B,IAAU,GAC/B47B,EAAkB,IAAI57B,IAAW,SAEjC87B,GADgBH,EAAe17B,MAAM27B,GAC1B,8BAEXI,GADsB,UAAMF,EAAN,QACFpR,EAAmB3nB,IAAQC,UAGvB9C,IAAQC,IAAI,K,6BC/BjD,0PAOM06C,EAAgB,sBAChBC,EAAkB,gBACjB,SAAS71B,EAAUQ,GACxB,IAAKo1B,EAActV,KAAK9f,EAAK3iB,SAC3B,MAAM,IAAIpE,MAAJ,2BAA8B+mB,EAAK3iB,UAE3C,IAAKg4C,EAAgBvV,KAAK9f,EAAKqB,UAC7B,MAAM,IAAIpoB,MAAJ,uBAA0B+mB,EAAKqB,WAEvC,MAAM,GAAN,OAAUrB,EAAK3iB,QAAf,YAA0B2iB,EAAKqB,UAG1B,SAASxB,EAAa8b,GAC3B,IAAM2Z,EAAM3Z,EAAQt/B,MAAM,KAC1B,GAAmB,IAAfi5C,EAAI11B,OACN,MAAM,IAAI3mB,MAAJ,4BAA+B0iC,IAEvC,MAAO,CACLt+B,QAASi4C,EAAI,GACbj0B,SAAUi0B,EAAI,IASX,IAAMx1B,EAAwB5lB,YACnC,mCAEW6lB,EAA2B7lB,YACtC,sCAEW0hC,EAA2B1hC,YACtC,sCAEW4hC,EAAgC5hC,YAI1C,2CACU6hC,EAAyB7hC,YAMnC,qC,0CCrDGq7C,E,KAAOp8C,EAAOq8C,KAAV,oUAqBKD,O,8ICdFE,EAAY,uCAAG,8BAAA1+C,EAAA,2DACpBgG,EAAWgrC,OAAO2N,UADE,wBAGlBh5C,EAAUQ,SAASC,KAAgC,IAHjC,kBAKhBJ,EAAS44C,QAAQ,CACrBhF,OAAQ,0BACRrhB,OAAQ,CACN,CACE5yB,QAAQ,KAAD,OAAOA,EAAQhE,SAAS,KAC/Bk9C,UAAW,8BACXC,eAAgB,CACdxmB,KAAM,MACN9sB,OAAQ,MACRjI,SAAU,IAEZw7C,QAASC,IACTC,kBAAmB,CAAC,GAAD,OAAIzf,IAAJ,UAjBH,iCAqBf,GArBe,uCAuBtBhgB,QAAQC,MAAM,2CAAd,MAvBsB,mBAwBf,GAxBe,uCA2BxBD,QAAQC,MAAM,gFA3BU,mBA4BjB,GA5BiB,yDAAH,qDAuCZy/B,EAAa,uCAAG,WAAO9jC,EAAsB+jC,EAAqBC,GAAlD,eAAAp/C,EAAA,sEACFgxC,OAAO2N,SAASC,QAAQ,CAC/ChF,OAAQ,oBACRrhB,OAAQ,CACNtK,KAAM,QACNzpB,QAAS,CACP8B,QAAS8U,EACT5P,OAAQ2zC,EACR57C,SAAU67C,EACVC,MAAM,GAAD,OAAK/f,IAAL,0BAA+BlkB,EAA/B,YATgB,cACrBkkC,EADqB,yBAcpBA,GAdoB,2CAAH,2D,60JChC1B,SAASpL,EAAmBC,EAAcC,GACxC,IAAMC,EAAQ/d,IAAsB0N,SAASmQ,GAAQ7d,IAAsBpP,QAAQitB,GAAQG,OAAOC,iBAC5FC,EAASle,IAAsB0N,SAASoQ,GAAQ9d,IAAsBpP,QAAQktB,GAAQE,OAAOC,iBAGnG,OAAIF,EAAQG,EAAe,EACvBH,EAAQG,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAU/uC,QAAS+uC,EAAUpuC,QAASouC,EAAUnxC,SAAUmxC,EAAUlpC,OAAQkpC,EAAUpc,OAL9Eoc,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUG,YAZ1B,GAAsChqC,KAuBhCiqC,GAA2B,mBAC9BvuC,IAAQC,QAAU,IADY,cAE9BD,IAAQuE,QAAU,IAFY,GAK3BiqC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMhsB,EAAM,OAAG6rB,QAAH,IAAGA,OAAH,EAAGA,EAAW70C,IAAIg1C,GAC9B,GAAIhsB,EAAQ,OAAOA,EAEnB,IAAM3I,EAAM20B,EAAKxuC,OAAO81B,QACtB,SAAC4K,EAAUsN,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIp0B,KAAI,SAAC40B,GAAW,IAAD,EACf,GAAI,UAACD,EAAKP,YAAN,aAAC,EAAYQ,GACjB,OAAO,2BAAKD,EAAKP,KAAKQ,IAAtB,IAA8BhxB,GAAIgxB,cAJnB,aACnB,EAKI7sB,QAAO,SAACrB,GAAD,OAAqBuB,QAAQvB,aANrB,QAM4B,GAC3CpF,EAAQ,IAAI4yB,EAAiBC,EAAWC,GAC9C,QAA+Cr1C,IAA3C8nC,EAASvlB,EAAMlc,SAASkc,EAAMvb,SAAwB,MAAMpE,MAAM,qBACtE,OAAO,2BACFklC,GADL,kBAEGvlB,EAAMlc,QAFT,2BAGOyhC,EAASvlB,EAAMlc,UAHtB,kBAIKkc,EAAMvb,QAAU,CACfub,QACAqzB,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAW91C,IAAIi2C,EAAM30B,GACdA,EAGF,SAAS60B,IAQd,OAAOt0B,aAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SAGlF,SAAS+R,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGhvC,IAAQC,QADX,2BAC0B8uC,EAAK/uC,IAAQC,UAAa+uC,EAAKhvC,IAAQC,WADjE,cAEGD,IAAQuE,QAFX,2BAE0BwqC,EAAK/uC,IAAQuE,UAAayqC,EAAKhvC,IAAQuE,WAFjE,EAOF,SAAS0qC,EAA4BC,GACnC,IAAM9O,EAAQyO,IAEd,OAAOxyB,mBAAQ,WACb,OAAK6yB,EAGHA,EACGC,QAEAhtB,KAAKwrB,GACL1X,QAAO,SAACmZ,EAAWC,GAAgB,IAAD,EAC3B1vC,EAAO,UAAGygC,EAAMiP,UAAT,aAAG,EAAmB1vC,QACnC,IAAKA,EAAS,OAAOyvC,EACrB,IAEE,OAAON,EAAYM,EADDv0C,OAAOy0C,OAAOZ,EAAe/uC,KAE/C,MAAOuZ,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDk2B,KAERb,GAjBWA,IAmBjB,CAACnO,EAAO8O,IAIN,SAASK,IAA2C,IAAD,EACxD,iBAAOh1B,aAA2D,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMnD,yBAAzF,aAAO,EAAmGlb,QACxG,SAACob,GAAD,OAAUrN,IAAsB2N,SAASN,MAWtC,SAASiE,IAId,OAAO0N,EAFcG,EADEM,KAECb,EAAec,IAKlC,SAASjO,IAEd,OAAO0N,EAjBF,WACL,IAAM7O,EAAQyO,IACRY,EAAoBF,IAC1B,OAAO10C,OAAOC,KAAKslC,GAAOre,QAAO,SAACob,GAAD,QAAS,OAACsS,QAAD,IAACA,OAAD,EAACA,EAAmBhS,SAASN,MAASrN,IAAsB2N,SAASN,MAazEuS,IAKjC,SAASC,IACd,OAAOjB,EAAec,GAIjB,SAAS9N,IAQd,OAAOoN,EANyBJ,EAAekB,GAGdX,EAA4Bnf,MAMxD,SAAS+f,EAAgB1S,GAC9B,IAAMF,EAAiBsS,IACvB,OAAOttB,QAAO,OAACgb,QAAD,IAACA,OAAD,EAACA,EAAgBQ,SAASN,M,mZCvK1C,SAASwQ,EAAmBC,EAAcC,GACxC,IAAMC,EAAQ/d,IAAsB0N,SAASmQ,GAAQ7d,IAAsBpP,QAAQitB,GAAQG,OAAOC,iBAC5FC,EAASle,IAAsB0N,SAASoQ,GAAQ9d,IAAsBpP,QAAQktB,GAAQE,OAAOC,iBAGnG,OAAIF,EAAQG,EAAe,EACvBH,EAAQG,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAU/uC,QAAS+uC,EAAUpuC,QAASouC,EAAUnxC,SAAUmxC,EAAUlpC,OAAQkpC,EAAUpc,OAL9Eoc,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUG,YAZ1B,GAAsChqC,SAuBhCiqC,GAA2B,mBAC9BvuC,UAAQC,QAAU,IADY,cAE9BD,UAAQuE,QAAU,IAFY,GAK3BiqC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMhsB,EAAM,OAAG6rB,QAAH,IAAGA,OAAH,EAAGA,EAAW70C,IAAIg1C,GAC9B,GAAIhsB,EAAQ,OAAOA,EAEnB,IAAM3I,EAAM20B,EAAKxuC,OAAO81B,QACtB,SAAC4K,EAAUsN,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIp0B,KAAI,SAAC40B,GAAW,IAAD,EACf,GAAI,UAACD,EAAKP,YAAN,aAAC,EAAYQ,GACjB,OAAO,2BAAKD,EAAKP,KAAKQ,IAAtB,IAA8BhxB,GAAIgxB,cAJnB,aACnB,EAKI7sB,QAAO,SAACrB,GAAD,OAAqBuB,QAAQvB,aANrB,QAM4B,GAC3CpF,EAAQ,IAAI4yB,EAAiBC,EAAWC,GAC9C,QAA+Cr1C,IAA3C8nC,EAASvlB,EAAMlc,SAASkc,EAAMvb,SAAwB,MAAMpE,MAAM,qBACtE,OAAO,2BACFklC,GADL,kBAEGvlB,EAAMlc,QAFT,2BAGOyhC,EAASvlB,EAAMlc,UAHtB,kBAIKkc,EAAMvb,QAAU,CACfub,QACAqzB,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAW91C,IAAIi2C,EAAM30B,GACdA,EAGF,SAAS60B,IAQd,OAAOt0B,aAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SAGlF,SAAS+R,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGhvC,UAAQC,QADX,2BAC0B8uC,EAAK/uC,UAAQC,UAAa+uC,EAAKhvC,UAAQC,WADjE,cAEGD,UAAQuE,QAFX,2BAE0BwqC,EAAK/uC,UAAQuE,UAAayqC,EAAKhvC,UAAQuE,WAFjE,EAOF,SAAS0qC,EAA4BC,GACnC,IAAM9O,EAAQyO,IAEd,OAAOxyB,mBAAQ,WACb,OAAK6yB,EAGHA,EACGC,QAEAhtB,KAAKwrB,GACL1X,QAAO,SAACmZ,EAAWC,GAAgB,IAAD,EAC3B1vC,EAAO,UAAGygC,EAAMiP,UAAT,aAAG,EAAmB1vC,QACnC,IAAKA,EAAS,OAAOyvC,EACrB,IAEE,OAAON,EAAYM,EADDv0C,OAAOy0C,OAAOZ,EAAe/uC,KAE/C,MAAOuZ,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDk2B,KAERb,GAjBWA,IAmBjB,CAACnO,EAAO8O,IAIN,SAASK,IAA2C,IAAD,EACxD,iBAAOh1B,aAA2D,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMnD,yBAAzF,aAAO,EAAmGlb,QACxG,SAACob,GAAD,OAAUrN,IAAsB2N,SAASN,MAWtC,SAASiE,IAId,OAAO0N,EAFcG,EADEM,KAECb,EAAec,IAKlC,SAASjO,IAEd,OAAO0N,EAjBF,WACL,IAAM7O,EAAQyO,IACRY,EAAoBF,IAC1B,OAAO10C,OAAOC,KAAKslC,GAAOre,QAAO,SAACob,GAAD,QAAS,OAACsS,QAAD,IAACA,OAAD,EAACA,EAAmBhS,SAASN,MAASrN,IAAsB2N,SAASN,MAazEuS,IAKjC,SAASC,IACd,OAAOjB,EAAec,GAIjB,SAAS9N,IAQd,OAAOoN,EANyBJ,EAAekB,GAGdX,EAA4Bnf,MAMxD,SAAS+f,EAAgB1S,GAC9B,IAAMF,EAAiBsS,IACvB,OAAOttB,QAAO,OAACgb,QAAD,IAACA,OAAD,EAACA,EAAgBQ,SAASN,M,mZCvK1C,SAASwQ,EAAmBC,EAAcC,GACxC,IAAMC,EAAQ/d,IAAsB0N,SAASmQ,GAAQ7d,IAAsBpP,QAAQitB,GAAQG,OAAOC,iBAC5FC,EAASle,IAAsB0N,SAASoQ,GAAQ9d,IAAsBpP,QAAQktB,GAAQE,OAAOC,iBAGnG,OAAIF,EAAQG,EAAe,EACvBH,EAAQG,GAAgB,EACrB,EAMF,IAAMC,EAAb,kDAKE,WAAYC,EAAsBC,GAAkB,IAAD,8BACjD,cAAMD,EAAU/uC,QAAS+uC,EAAUpuC,QAASouC,EAAUnxC,SAAUmxC,EAAUlpC,OAAQkpC,EAAUpc,OAL9Eoc,eAImC,IAFnCC,UAEmC,EAEjD,EAAKD,UAAYA,EACjB,EAAKC,KAAOA,EAHqC,EALrD,yCAWE,WACE,OAAOC,KAAKF,UAAUG,YAZ1B,GAAsChqC,SAuBhCiqC,GAA2B,mBAC9BvuC,UAAQC,QAAU,IADY,cAE9BD,UAAQuE,QAAU,IAFY,GAK3BiqC,EACe,qBAAZC,QAA0B,IAAIA,QAAwC,KAExE,SAASC,EAAeC,GAC7B,IAAMhsB,EAAM,OAAG6rB,QAAH,IAAGA,OAAH,EAAGA,EAAW70C,IAAIg1C,GAC9B,GAAIhsB,EAAQ,OAAOA,EAEnB,IAAM3I,EAAM20B,EAAKxuC,OAAO81B,QACtB,SAAC4K,EAAUsN,GAAe,IAAD,MACjBC,EAAe,oBACnBD,EAAUC,YADS,iBACnB,EACIp0B,KAAI,SAAC40B,GAAW,IAAD,EACf,GAAI,UAACD,EAAKP,YAAN,aAAC,EAAYQ,GACjB,OAAO,2BAAKD,EAAKP,KAAKQ,IAAtB,IAA8BhxB,GAAIgxB,cAJnB,aACnB,EAKI7sB,QAAO,SAACrB,GAAD,OAAqBuB,QAAQvB,aANrB,QAM4B,GAC3CpF,EAAQ,IAAI4yB,EAAiBC,EAAWC,GAC9C,QAA+Cr1C,IAA3C8nC,EAASvlB,EAAMlc,SAASkc,EAAMvb,SAAwB,MAAMpE,MAAM,qBACtE,OAAO,2BACFklC,GADL,kBAEGvlB,EAAMlc,QAFT,2BAGOyhC,EAASvlB,EAAMlc,UAHtB,kBAIKkc,EAAMvb,QAAU,CACfub,QACAqzB,cAjBE,eAsBLJ,IAGP,OADS,OAATC,QAAS,IAATA,KAAW91C,IAAIi2C,EAAM30B,GACdA,EAGF,SAAS60B,IAQd,OAAOt0B,aAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SAGlF,SAAS+R,EAAYC,EAAuBC,GAAyC,IAAD,EAClF,OAAO,EAAP,iBACGhvC,UAAQC,QADX,2BAC0B8uC,EAAK/uC,UAAQC,UAAa+uC,EAAKhvC,UAAQC,WADjE,cAEGD,UAAQuE,QAFX,2BAE0BwqC,EAAK/uC,UAAQuE,UAAayqC,EAAKhvC,UAAQuE,WAFjE,EAOF,SAAS0qC,EAA4BC,GACnC,IAAM9O,EAAQyO,IAEd,OAAOxyB,mBAAQ,WACb,OAAK6yB,EAGHA,EACGC,QAEAhtB,KAAKwrB,GACL1X,QAAO,SAACmZ,EAAWC,GAAgB,IAAD,EAC3B1vC,EAAO,UAAGygC,EAAMiP,UAAT,aAAG,EAAmB1vC,QACnC,IAAKA,EAAS,OAAOyvC,EACrB,IAEE,OAAON,EAAYM,EADDv0C,OAAOy0C,OAAOZ,EAAe/uC,KAE/C,MAAOuZ,GAEP,OADAD,QAAQC,MAAM,yCAA0CA,GACjDk2B,KAERb,GAjBWA,IAmBjB,CAACnO,EAAO8O,IAIN,SAASK,IAA2C,IAAD,EACxD,iBAAOh1B,aAA2D,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMnD,yBAAzF,aAAO,EAAmGlb,QACxG,SAACob,GAAD,OAAUrN,IAAsB2N,SAASN,MAWtC,SAASiE,IAId,OAAO0N,EAFcG,EADEM,KAECb,EAAec,IAKlC,SAASjO,IAEd,OAAO0N,EAjBF,WACL,IAAM7O,EAAQyO,IACRY,EAAoBF,IAC1B,OAAO10C,OAAOC,KAAKslC,GAAOre,QAAO,SAACob,GAAD,QAAS,OAACsS,QAAD,IAACA,OAAD,EAACA,EAAmBhS,SAASN,MAASrN,IAAsB2N,SAASN,MAazEuS,IAKjC,SAASC,IACd,OAAOjB,EAAec,GAIjB,SAAS9N,IAQd,OAAOoN,EANyBJ,EAAekB,GAGdX,EAA4Bnf,MAMxD,SAAS+f,EAAgB1S,GAC9B,IAAMF,EAAiBsS,IACvB,OAAOttB,QAAO,OAACgb,QAAD,IAACA,OAAD,EAACA,EAAgBQ,SAASN,M,igBC3J9B6b,E,2HAAAA,K,UAAAA,E,YAAAA,E,oBAAAA,E,aAAAA,M,KAOL,IAAMC,EAAe,SAAC39C,GAC3B,GAAc,OAAVA,EACF,OAAO,KAGT,IAAM49C,EAAWnL,OAAOzyC,GACxB,OAAOyyC,OAAOoL,MAAMD,GAAY,KAAOA,GAG5BE,EAAuB,SAACC,GACnC,IAAMC,EAAM,CACV17B,GAAIy7B,EAAYz7B,GAChBqd,KAAMoe,EAAYpe,KAClBl+B,OAAQs8C,EAAYt8C,OAAS83C,WAAWwE,EAAYt8C,QAAU,EAC9Dw8C,SAAmC,SAAzBF,EAAYE,SAAsBnT,IAAYoT,KAAOpT,IAAYqT,KAC3EC,QAASL,EAAYK,QACrBC,YAAaN,EAAYM,YACzBjnB,KAAM,CACJ9U,GAAIy7B,EAAY3mB,KAAK9U,GACrB7d,QAASs5C,EAAY3mB,KAAK3yB,QAC1Bk/B,MAAOga,EAAaI,EAAY3mB,KAAKuM,OACrC2a,UAAWX,EAAaI,EAAY3mB,KAAKknB,WACzCC,SAAUZ,EAAaI,EAAY3mB,KAAKmnB,YAQ5C,OAJIR,EAAY5sB,QACd6sB,EAAI7sB,MAAQqtB,EAAuBT,EAAY5sB,QAG1C6sB,GAGIQ,EAAyB,SAACC,GACrC,IAqB0BC,EApBxBp8B,EAkBEm8B,EAlBFn8B,GACAq8B,EAiBEF,EAjBFE,MACAC,EAgBEH,EAhBFG,OACA/rB,EAeE4rB,EAfF5rB,WACAgsB,EAcEJ,EAdFI,QACAC,EAaEL,EAbFK,OACAC,EAYEN,EAZFM,UACAC,EAWEP,EAXFO,UACAlsB,EAUE2rB,EAVF3rB,SACAmsB,EASER,EATFQ,WACAX,EAQEG,EARFH,UACAY,EAOET,EAPFS,YACAC,EAMEV,EANFU,SACAC,EAKEX,EALFW,SACAC,EAIEZ,EAJFY,WACAC,EAGEb,EAHFa,WACArB,EAEEQ,EAFFR,SAjBF,EAmBIQ,EADFc,YAlBF,MAkBS,GAlBT,EAiCA,MAAO,CACLj9B,KACAs8B,SACAD,MAAOhB,EAAagB,GACpB9rB,WAAY8qB,EAAa9qB,GACzBgsB,QAASlB,EAAakB,GACtBC,OAAQnB,EAAamB,GACrBC,UAAWpB,EAAaoB,GACxBC,UAAWA,EAAYzF,WAAWyF,GAAa,KAC/ClsB,SAAU6qB,EAAa7qB,GACvBmsB,WAAYA,EAAa1F,WAAW0F,GAAc,KAClDX,UAAWX,EAAaW,GACxBY,YAAaA,EAAc3F,WAAW2F,GAAe,EACrDC,SAAUxB,EAAawB,GACvBC,SAAUzB,EAAayB,GACvBC,WAAY1B,EAAa0B,GACzBC,WAAY3B,EAAa2B,GACzBrB,UA7BwBS,EA6BGT,EA5BF,SAArBS,EACK5T,IAAYoT,KAGI,SAArBQ,EACK5T,IAAYqT,KAGd,MAqBPoB,KAAMA,EAAK7gC,IAAIo/B,KAkBN0B,EAAiB,SAACxB,EAAUyB,GACvC,IAAQtuB,EAAU6sB,EAAV7sB,MACR,GAAIA,EAAMytB,OACR,OAAOlB,EAAOgC,SAGhB,GAAIvuB,EAAMwtB,OAASc,EAAe,EAChC,OAAO/B,EAAOiC,KAEhB,IAAMC,EAAsBzuB,EAAM8tB,WAAa9tB,EAAM6tB,UAAYlU,IAAYoT,KAAOpT,IAAYqT,KAEhG,OAAOH,EAAIC,WAAa2B,EAAsBlC,EAAOmC,IAAMnC,EAAOoC,MAMvDC,EAAc,SAAC/B,GAC1B,OAAQA,EAAII,UAAYJ,EAAIC,WAAaD,EAAI7sB,MAAM8sB,WAAiC,IAArBD,EAAI7sB,MAAMytB,SAO9DoB,EAA0B,SAACT,GACtC,OAAOA,EAAK94B,OAAOs5B,IAyBRE,EAAa,uCAAG,8CAAA9hD,EAAA,6DAC3B+hD,EAD2B,+BACI,GAC/B1N,EAF2B,+BAEnB,IACR2N,EAH2B,+BAGpB,EAHoB,SAKJpD,kBACrBqD,IACAC,cAF6B,IAAD,+UC3GA,qEArBE,0NA8BD,yDDiH7B,CAAE7N,QAAO2N,OAAMD,UApBU,cAKrBxV,EALqB,yBAsBpBA,EAAS6U,MAtBW,2CAAH,qDAiDbe,EAAa,uCAAG,WAAOxjC,EAAiByjC,GAAxB,mBAAApiD,EAAA,6DACrBsG,EAAUyD,cACVs4C,EAAcD,EAAO7hC,KAAI,SAACigC,GAAD,MAAY,CACzCl6C,UACAgyB,KAAM,SACNC,OAAQ,CAACioB,EAAO7hC,OALS,SAOJga,YAAyCtS,EAAgBg8B,GAPrD,cAOrB9V,EAPqB,yBAQpBA,GARoB,2CAAH,wDAWb+V,EAAgB,uCAAG,WAC9B3jC,EACAyjC,GAF8B,qBAAApiD,EAAA,6DAIxBsG,EAAUyD,cACVw4C,EAAiBH,EAAO7hC,KAAI,SAACigC,GAAD,MAAY,CAC5Cl6C,UACAgyB,KAAM,YACNC,OAAQ,CAACioB,EAAO7hC,OARY,SAUGga,YAA8CtS,EAAgBk8B,GAVjE,cAUxBC,EAVwB,gBAeAL,EAAcxjC,EAASyjC,GAfvB,cAexBK,EAfwB,yBAiBvBD,EAAmBhmB,QAAO,SAAC6b,EAAOqK,EAAmB5L,GAC1D,MAA4B2L,EAAgB3L,GAApCxzC,EAAR,EAAQA,OAAQ28C,EAAhB,EAAgBA,QACVO,EAAQ4B,EAAOtL,GACd6L,EAAP,YAAoBD,EAApB,MAEA,OAAO,2BACFrK,GADL,kBAEGmI,EAAQmC,GAAar/C,EAAO2wB,GAAG,KAAOgsB,MAExC,KA1B2B,2CAAH,wDAiChB2C,EAAiB,uCAAG,0DAAA5iD,EAAA,6DACzBsG,EAAUyD,cACV84C,EAAc,CAAC,eAAgB,iBAAkB,eAAgB,SAAU,eAAgB,cAActiC,KAC7G,SAACq5B,GAAD,MAAa,CACXtzC,UACAgyB,KAAMshB,MALqB,SAQ0EjhB,YACvGtS,EACAw8B,GAV6B,gEAQvBvB,EARuB,2BAQPwB,EARO,2BAQWC,EARX,2BAQ2BC,EAR3B,2BAQqCC,EARrC,2BAQqDC,EARrD,uBAaxB,CACL7Q,OAAQ2Q,EAASpW,IAAiBuW,OAASvW,IAAiB4U,KAC5DF,aAAcA,EAAat9C,WAC3B8+C,eAAgBA,EAAe9+C,WAC/Bi/C,aAAcA,EAAaj/C,WAC3B++C,aAAcA,EAAaphD,WAC3BuhD,WAAYA,EAAWl/C,aAnBM,4CAAH,qDAuBjBo/C,EAAa,uCAAG,WAAOhB,GAAP,mBAAApiD,EAAA,6DACrBsG,EAAUyD,cACVge,EAAQq6B,EAAO7hC,KAAI,SAACigC,GAAD,MAAY,CACnCl6C,UACAgyB,KAAM,SACNC,OAAQ,CAACioB,OALgB,SAOJ7nB,YAAyCtS,EAAgB0B,GAPrD,cAOrBwkB,EAPqB,yBAQpBA,GARoB,2CAAH,sDAWb8W,EAA0B,SAAC7C,EAAe9rB,GACrD,MAAO,CACL8rB,QACA9rB,aACAksB,UAAW,KACXjsB,SAAU,KACVksB,UAAW,KACXC,WAAY,KACZC,YAAah8C,IAAOvB,UAAUwB,KAAK,GAAGoU,SACtC+nC,WAAYp8C,IAAOvB,UAAUwB,KAAK,GAAGoU,SACrC8nC,WAAYn8C,IAAOvB,UAAUwB,KAAK,GAAGoU,SACrCkqC,oBAAqBv+C,IAAOvB,UAAUwB,KAAK,GAAGoU,SAC9CmqC,aAAcx+C,IAAOvB,UAAUwB,KAAK,GAAGoU,SACvCoqC,cAAc,IAILC,EAAgB,SAACC,GAC5B,OAAOA,EAAOlnB,QAAO,SAAC6b,EAAOrlB,GAC3B,OAAO,2BACFqlB,GADL,kBAEGrlB,EAAMwtB,MAAM7+C,WAAaqxB,MAE3B,KASQ2wB,EAAiB,SAAChlC,EAAiBilC,EAAsCxB,GACpF,OAAOwB,EAAQpnB,QAAO,SAAC6b,EAAOwL,EAAgB/M,GAC5C,IAAK+M,EACH,OAAOxL,EAIT,GAAIwL,EAAevgD,OAAOwgD,GAAG,GAC3B,OAAOzL,EAGT,IAAMmI,EAAQ4B,EAAOtL,GAAOn1C,WAE5B,OAAO,2BACF02C,GADL,kBAEG15B,EAFH,2BAGO05B,EAAM15B,IAHb,kBAIK6hC,EAvByC,SAACqD,GAAD,MAAiE,CACjH/D,SAAsC,IAA5B+D,EAAe/D,SAAiBnT,IAAYoT,KAAOpT,IAAYqT,KACzE18C,OAAQugD,EAAevgD,OAAO8V,SAC9B6mC,QAAS4D,EAAe5D,SAoBT8D,CAAmCF,SAG/C,KAMQG,EAAqC,SAACzX,GACjD,IACEiU,EAYEjU,EAZFiU,MACA9rB,EAWE6X,EAXF7X,WACAksB,EAUErU,EAVFqU,UACAjsB,EASE4X,EATF5X,SACAksB,EAQEtU,EARFsU,UACAC,EAOEvU,EAPFuU,WACAC,EAMExU,EANFwU,YACAI,EAKE5U,EALF4U,WACAD,EAIE3U,EAJF2U,WACAqC,EAGEhX,EAHFgX,aACAD,EAEE/W,EAFF+W,oBACAE,EACEjX,EADFiX,aAGF,MAAO,CACLhD,MAAOA,EAAMx8C,WACb0wB,WAAYA,EAAW1wB,WACvB48C,UAAWA,EAAU58C,WACrB2wB,SAAUA,EAAS3wB,WACnB68C,UAAWA,EAAUiD,GAAG,GAAK,KAAOjD,EAAUznC,SAC9C0nC,WAAYA,EAAWgD,GAAG,GAAK,KAAOhD,EAAW1nC,SACjD2nC,YAAaA,EAAY3nC,SACzB+nC,WAAYA,EAAW/nC,SACvB8nC,WAAYA,EAAW9nC,SACvBmqC,aAAcA,EAAanqC,SAC3BkqC,oBAAqBA,EAAoBlqC,SACzCoqC,iBAQSS,EAAoB,SAAmDjjD,GAClF,OAAOI,OAAOC,KAAKL,GAAMw7B,QAAO,SAAC6b,EAAOt3C,GACtC,IAAMc,EAAQb,EAAKD,GAEnB,OAAIc,GAAyB,eAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOosB,MACX,2BACFoqB,GADL,kBAEGt3C,EAAMgE,IAAOvB,UAAUwB,KAAKnD,KAI1B,2BACFw2C,GADL,kBAEGt3C,EAAMc,MAER,M,2wNEtaCqiD,EAASC,YAAH,sHASNC,EAAYhiD,IAAOiiD,IAAV,iIACGH,GACN,qBAAGjuB,QACJ,qBAAGA,QAEA,gBAAGquB,EAAH,EAAGA,OAAQ3tB,EAAX,EAAWA,MAAX,cAAuB2tB,QAAvB,IAAuBA,IAAU3tB,EAAMG,OAAOmb,WAQ7C,SAASM,EAAT,GAQX,IAAD,IAPDtc,YAOC,MAPM,OAON,EANDquB,EAMC,EANDA,OACGC,EAKF,iBACD,OACE,cAACH,EAAD,yBAAWI,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAA6BzuB,KAAMA,EAAMquB,OAAQA,GAAYC,GAA9G,aACE,sBACEI,EAAE,6HACFC,YAAY,MACZC,cAAc,QACdC,eAAe,e,6BCpCR,SAAS/W,EAAOgX,GAC7B,MAAO,SAAShc,KAAKgc,GALvB,mC,6BCAA,YAGMhkC,EAAsB,CAIzB,CACCN,IAAK,EACLW,SAAU,aACV4jC,UAAU,IACVC,UAAW,GACXC,UAAW,GACXC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOmK,MACd4R,WAAY/b,IAAOkB,MAErB,CACE6Y,IAAK,EACLW,SAAU,oBACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsR,WACdyK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,oBACV6jC,UAAW,YACXC,UAAW,eACXF,UAAU,IACVI,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsR,WACdyK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,EACLW,SAAU,qBACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsR,WACdyK,WAAY/b,IAAOsK,MAGpB,CACCyP,IAAK,GACLW,SAAU,qBACV4jC,UAAU,IACVC,UAAW,eACXC,UAAW,iBACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsR,WACdyK,WAAY/b,IAAOsK,MAEpB,CACCyP,IAAK,EACLW,SAAU,aACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOW,IACdob,WAAY/b,IAAOkB,MAGpB,CACC6Y,IAAK,EACLW,SAAU,cACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOW,IACdob,WAAY/b,IAAOsK,MAGpB,CACCyP,IAAK,GACLW,SAAU,oBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOW,IACdob,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,sBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOK,MACd0b,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,oBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO0B,IACdqa,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,2BACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4B,WACdma,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,oBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO+R,IACdgK,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,yBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4R,SACdmK,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,sBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4G,MACdmV,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,oBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOoB,IACd2a,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,wBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO8B,QACdia,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,qBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOgC,KACd+Z,WAAY/b,IAAOsR,YAEpB,CACCyI,IAAK,GACLW,SAAU,eACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOK,MACd0b,WAAY/b,IAAOkB,MAGpB,CACC6Y,IAAK,EACLW,SAAU,aACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO0B,IACdqa,WAAY/b,IAAOkB,MAGpB,CACC6Y,IAAK,EACLW,SAAU,oBACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4B,WACdma,WAAY/b,IAAOkB,MAGpB,CACC6Y,IAAK,EACLW,SAAU,cACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsK,KACdyR,WAAY/b,IAAOkB,MAGpB,CACC6Y,IAAK,EACLW,SAAU,aACV4jC,UAAU,IACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOoB,IACd2a,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,aACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOwB,IACdua,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,cACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO+R,IACdgK,WAAY/b,IAAOsK,MAEpB,CACCyP,IAAK,GACLW,SAAU,kBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4R,SACdmK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,eACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO2R,MACdoK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,cACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOwR,KACduK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,cACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO8R,KACdiK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,aACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO6R,IACdkK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,aACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOsB,IACdya,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,iBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO8B,QACdia,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,cACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOgC,KACd+Z,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,eACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO4G,MACdmV,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,eACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOmJ,MACd4S,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,cACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOuR,KACdwK,WAAY/b,IAAOkB,MAEpB,CACC6Y,IAAK,GACLW,SAAU,qBACV4jC,UAAU,KACVC,UAAW,gBACXC,UAAW,GACXE,SAAS,EACTC,aAAa,EACbF,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAOuR,KACdwK,WAAY/b,IAAOsR,aAQR+I,O,iFC3iBA,SAASwsB,EAAe1rC,EAAUyjD,GAC/C,MAA4C7lD,mBAAYoC,GAAxD,mBAAO0jD,EAAP,KAAuBC,EAAvB,KAgBA,OAdAzlD,qBAAU,WAER,IAAM0lD,EAAUC,YAAW,WACzBF,EAAkB3jD,KACjByjD,GAKH,OAAO,WACLK,aAAaF,MAEd,CAAC5jD,EAAOyjD,IAEJC,I,8BCpBT,gEAIA,IAAMK,EAAkB,IAAIztB,IAAUjM,GAEN,IAAIiM,IAAUxL,GAE/Bi5B,O,mLCHThwB,EAAUxzB,IAAOU,IAAV,4FAGK,qBAAG+yB,QAAuB,SAU7B,SAASC,EAAT,GAKc,IAJ3BC,EAI0B,EAJ1BA,UACAC,EAG0B,EAH1BA,UAG0B,IAF1BC,YAE0B,MAFnB,GAEmB,MAD1BJ,cAC0B,SAC1B,OACE,eAACD,EAAD,CAASC,OAAQA,EAAjB,UACGE,GAAa,cAAC,IAAD,CAAchG,SAAUgG,EAAWE,KAAI,UAAKA,EAAKt0B,WAAV,MAA0Bw0B,MAAO,CAAEC,YAAa,SACpGJ,GAAa,cAAC,IAAD,CAAcjG,SAAUiG,EAAWC,KAAI,UAAKA,EAAKt0B,WAAV,W,igBCFpD,SAASo3B,IACd,IAAM7Y,EAAWgI,cACX8Q,EAAYlY,aAAqD,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKD,aAEvFE,EAAqBp4B,uBAAY,WAEnCof,EADE8Y,EACOrL,cAEAC,iBAEV,CAACoL,EAAW9Y,IAEf,MAAO,CAAC8Y,EAAWE,GAGd,SAASC,IACd,OAAOrY,aAA0D,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKG,kBAGlF,SAASC,IACd,IAAMnZ,EAAWgI,cACXoR,EAAaH,IAEbI,EAAsBz4B,uBAAY,WACtCof,EAASiN,YAAqB,CAAEiM,gBAAiBE,OAChD,CAACA,EAAYpZ,IAEhB,MAAO,CAACoZ,EAAYC,GAcf,SAASE,IACd,IAAMvZ,EAAWgI,cAajB,MAAO,CAXepH,aACpB,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKS,qBAGC54B,uBACvB,SAAC64B,GACCzZ,EAASkN,YAAwB,CAAEsM,kBAAmBC,OAExD,CAACzZ,KAME,SAAS0Z,IACd,IAAM1Z,EAAWgI,cAYjB,MAAO,CAXuBpH,aAAiE,SAACjhB,GAC9F,OAAOA,EAAMo5B,KAAKY,yBAGa/4B,uBAC/B,SAACkuB,GACC9O,EAASmN,YAA4B,CAAEwM,sBAAuB7K,OAEhE,CAAC9O,KA0BE,SAASqa,IACd,IAAMra,EAAWgI,cAYjB,MAAO,CAXcpH,aAAwD,SAACjhB,GAC5E,OAAOA,EAAMo5B,KAAKuB,gBAGI15B,uBACtB,SAAC25B,GACCva,EAASoN,YAAmB,CAAEkN,aAAcC,OAE9C,CAACva,KAME,SAASwa,IACd,IAAMxa,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC+gB,GACC3B,EAASqN,YAAmB,CAAEoN,gBAAiBC,YAAe/Y,QAEhE,CAAC3B,IAIE,SAAS2a,IACd,IAAM3a,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC6E,EAAiBW,GAChB4Z,EAASsN,YAAsB,CAAE7nB,UAASW,eAE5C,CAAC4Z,IAIL,SAAS4a,EAAcC,GACrB,MAAO,CACLC,OAAQJ,YAAeG,EAAKC,QAC5BC,OAAQL,YAAeG,EAAKE,SAIzB,SAASC,IACd,IAAMhb,EAAWgI,cAEjB,OAAOpnB,uBACL,SAACi6B,GACC7a,EAASuN,YAAkB,CAAE0N,eAAgBL,EAAcC,QAE7D,CAAC7a,IASE,SAASkb,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAIzwB,QAAMwwB,EAAO11B,QAAS41B,OAAKl1B,WAAWg1B,EAAQC,GAAS,GAAI,MAAO,4BAMxE,SAASE,IACd,IAAQ71B,EAAYH,cAAZG,QACFe,EAAS+0B,cAGTC,EAAc9Y,mBAAQ,wBAAOjd,GAAO,UAAG2qB,IAAa3qB,UAAhB,QAAiC,KAAK,CAACA,IAG3Eg2B,EAAmC/Y,mBACvC,kBACEjd,EACIi2B,IAAQx6B,OAAOC,KAAKqF,IAAS,SAAC0U,GAAkB,IAAD,EACvCyG,EAAQnb,EAAO0U,GAErB,OAEE,UAACiV,IAA6B1qB,UAA9B,QAA0C,IAEvC4a,KAAI,SAACsb,GACJ,OAAIA,EAAKv1B,UAAYub,EAAMvb,QAClB,KAEF,CAACu1B,EAAMha,MAEfyG,QAAO,SAACwT,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACp1B,EAAQf,IAILo2B,EAAuBjb,aAAiD,qBAAGmY,KAAQ+C,SAEnFC,EAA8BrZ,mBAAQ,WAC1C,IAAKjd,IAAYo2B,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBp2B,GACtC,OAAKu2B,EAEE96B,OAAOC,KAAK66B,GAAU3b,KAAI,SAAC4b,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQnB,QAASoB,YAAiBF,EAASC,GAAQlB,YAHjE,KAKrB,CAACc,EAAsBp2B,IAEpB02B,EAAezZ,mBACnB,kBAAMqZ,EAAUK,OAAOX,GAAgBW,OAAOZ,KAC9C,CAACC,EAAgBD,EAAaO,IAGhC,OAAOrZ,mBAAQ,WAEb,IAAM2Z,EAAQF,EAAaG,QAA0C,SAACC,EAAD,GAA6B,IAAD,mBAApBpB,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5Bv6B,EAAM27B,EAAM,UAAMrB,EAAO/0B,QAAb,YAAwBg1B,EAAOh1B,SAA/B,UAA8Cg1B,EAAOh1B,QAArD,YAAgE+0B,EAAO/0B,SACzF,OAAIm2B,EAAK17B,KACT07B,EAAK17B,GAAO27B,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BoB,IAGrB,IAEH,OAAOr7B,OAAOC,KAAKk7B,GAAOhc,KAAI,SAACxf,GAAD,OAASw7B,EAAMx7B,QAC5C,CAACs7B,M,ifC5NC,SAAStD,IACd,IAAM7Y,EAAWgI,cACX8Q,EAAYlY,aAAqD,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKD,aAEvFE,EAAqBp4B,uBAAY,WAEnCof,EADE8Y,EACOrL,cAEAC,iBAEV,CAACoL,EAAW9Y,IAEf,MAAO,CAAC8Y,EAAWE,GAGd,SAASC,IACd,OAAOrY,aAA0D,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKG,kBAGlF,SAASC,IACd,IAAMnZ,EAAWgI,cACXoR,EAAaH,IAEbI,EAAsBz4B,uBAAY,WACtCof,EAASiN,YAAqB,CAAEiM,gBAAiBE,OAChD,CAACA,EAAYpZ,IAEhB,MAAO,CAACoZ,EAAYC,GAcf,SAASE,IACd,IAAMvZ,EAAWgI,cAajB,MAAO,CAXepH,aACpB,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKS,qBAGC54B,uBACvB,SAAC64B,GACCzZ,EAASkN,YAAwB,CAAEsM,kBAAmBC,OAExD,CAACzZ,KAME,SAAS0Z,IACd,IAAM1Z,EAAWgI,cAYjB,MAAO,CAXuBpH,aAAiE,SAACjhB,GAC9F,OAAOA,EAAMo5B,KAAKY,yBAGa/4B,uBAC/B,SAACkuB,GACC9O,EAASmN,YAA4B,CAAEwM,sBAAuB7K,OAEhE,CAAC9O,KA0BE,SAASqa,IACd,IAAMra,EAAWgI,cAYjB,MAAO,CAXcpH,aAAwD,SAACjhB,GAC5E,OAAOA,EAAMo5B,KAAKuB,gBAGI15B,uBACtB,SAAC25B,GACCva,EAASoN,YAAmB,CAAEkN,aAAcC,OAE9C,CAACva,KAME,SAASwa,IACd,IAAMxa,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC+gB,GACC3B,EAASqN,YAAmB,CAAEoN,gBAAiBC,YAAe/Y,QAEhE,CAAC3B,IAIE,SAAS2a,IACd,IAAM3a,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC6E,EAAiBW,GAChB4Z,EAASsN,YAAsB,CAAE7nB,UAASW,eAE5C,CAAC4Z,IAIL,SAAS4a,EAAcC,GACrB,MAAO,CACLC,OAAQJ,YAAeG,EAAKC,QAC5BC,OAAQL,YAAeG,EAAKE,SAIzB,SAASC,IACd,IAAMhb,EAAWgI,cAEjB,OAAOpnB,uBACL,SAACi6B,GACC7a,EAASuN,YAAkB,CAAE0N,eAAgBL,EAAcC,QAE7D,CAAC7a,IASE,SAASkb,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAIzwB,QAAMwwB,EAAO11B,QAAS41B,OAAKl1B,WAAWg1B,EAAQC,GAAS,GAAI,SAAU,cAM3E,SAASE,IACd,IAAQ71B,EAAYH,cAAZG,QACFe,EAAS+0B,cAGTC,EAAc9Y,mBAAQ,wBAAOjd,GAAO,UAAG2qB,IAAa3qB,UAAhB,QAAiC,KAAK,CAACA,IAG3Eg2B,EAAmC/Y,mBACvC,kBACEjd,EACIi2B,IAAQx6B,OAAOC,KAAKqF,IAAS,SAAC0U,GAAkB,IAAD,EACvCyG,EAAQnb,EAAO0U,GAErB,OAEE,UAACiV,IAA6B1qB,UAA9B,QAA0C,IAEvC4a,KAAI,SAACsb,GACJ,OAAIA,EAAKv1B,UAAYub,EAAMvb,QAClB,KAEF,CAACu1B,EAAMha,MAEfyG,QAAO,SAACwT,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACp1B,EAAQf,IAILo2B,EAAuBjb,aAAiD,qBAAGmY,KAAQ+C,SAEnFC,EAA8BrZ,mBAAQ,WAC1C,IAAKjd,IAAYo2B,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBp2B,GACtC,OAAKu2B,EAEE96B,OAAOC,KAAK66B,GAAU3b,KAAI,SAAC4b,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQnB,QAASoB,YAAiBF,EAASC,GAAQlB,YAHjE,KAKrB,CAACc,EAAsBp2B,IAEpB02B,EAAezZ,mBACnB,kBAAMqZ,EAAUK,OAAOX,GAAgBW,OAAOZ,KAC9C,CAACC,EAAgBD,EAAaO,IAGhC,OAAOrZ,mBAAQ,WAEb,IAAM2Z,EAAQF,EAAaG,QAA0C,SAACC,EAAD,GAA6B,IAAD,mBAApBpB,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5Bv6B,EAAM27B,EAAM,UAAMrB,EAAO/0B,QAAb,YAAwBg1B,EAAOh1B,SAA/B,UAA8Cg1B,EAAOh1B,QAArD,YAAgE+0B,EAAO/0B,SACzF,OAAIm2B,EAAK17B,KACT07B,EAAK17B,GAAO27B,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BoB,IAGrB,IAEH,OAAOr7B,OAAOC,KAAKk7B,GAAOhc,KAAI,SAACxf,GAAD,OAASw7B,EAAMx7B,QAC5C,CAACs7B,M,kfC5NC,SAAStD,IACd,IAAM7Y,EAAWgI,cACX8Q,EAAYlY,aAAqD,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKD,aAEvFE,EAAqBp4B,uBAAY,WAEnCof,EADE8Y,EACOrL,cAEAC,iBAEV,CAACoL,EAAW9Y,IAEf,MAAO,CAAC8Y,EAAWE,GAGd,SAASC,IACd,OAAOrY,aAA0D,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKG,kBAGlF,SAASC,IACd,IAAMnZ,EAAWgI,cACXoR,EAAaH,IAEbI,EAAsBz4B,uBAAY,WACtCof,EAASiN,YAAqB,CAAEiM,gBAAiBE,OAChD,CAACA,EAAYpZ,IAEhB,MAAO,CAACoZ,EAAYC,GAcf,SAASE,IACd,IAAMvZ,EAAWgI,cAajB,MAAO,CAXepH,aACpB,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKS,qBAGC54B,uBACvB,SAAC64B,GACCzZ,EAASkN,YAAwB,CAAEsM,kBAAmBC,OAExD,CAACzZ,KAME,SAAS0Z,IACd,IAAM1Z,EAAWgI,cAYjB,MAAO,CAXuBpH,aAAiE,SAACjhB,GAC9F,OAAOA,EAAMo5B,KAAKY,yBAGa/4B,uBAC/B,SAACkuB,GACC9O,EAASmN,YAA4B,CAAEwM,sBAAuB7K,OAEhE,CAAC9O,KA0BE,SAASqa,IACd,IAAMra,EAAWgI,cAYjB,MAAO,CAXcpH,aAAwD,SAACjhB,GAC5E,OAAOA,EAAMo5B,KAAKuB,gBAGI15B,uBACtB,SAAC25B,GACCva,EAASoN,YAAmB,CAAEkN,aAAcC,OAE9C,CAACva,KAME,SAASwa,IACd,IAAMxa,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC+gB,GACC3B,EAASqN,YAAmB,CAAEoN,gBAAiBC,YAAe/Y,QAEhE,CAAC3B,IAIE,SAAS2a,IACd,IAAM3a,EAAWgI,cACjB,OAAOpnB,uBACL,SAAC6E,EAAiBW,GAChB4Z,EAASsN,YAAsB,CAAE7nB,UAASW,eAE5C,CAAC4Z,IAIL,SAAS4a,EAAcC,GACrB,MAAO,CACLC,OAAQJ,YAAeG,EAAKC,QAC5BC,OAAQL,YAAeG,EAAKE,SAIzB,SAASC,IACd,IAAMhb,EAAWgI,cAEjB,OAAOpnB,uBACL,SAACi6B,GACC7a,EAASuN,YAAkB,CAAE0N,eAAgBL,EAAcC,QAE7D,CAAC7a,IASE,SAASkb,EAAT,GAAsE,IAAD,mBAAxCC,EAAwC,KAAhCC,EAAgC,KAC1E,OAAO,IAAIzwB,IAAMwwB,EAAO11B,QAAS41B,IAAKl1B,WAAWg1B,EAAQC,GAAS,GAAI,SAAU,sBAM3E,SAASE,IACd,IAAQ71B,EAAYH,cAAZG,QACFe,EAAS+0B,cAGTC,EAAc9Y,mBAAQ,wBAAOjd,GAAO,UAAG2qB,IAAa3qB,UAAhB,QAAiC,KAAK,CAACA,IAG3Eg2B,EAAmC/Y,mBACvC,kBACEjd,EACIi2B,IAAQx6B,OAAOC,KAAKqF,IAAS,SAAC0U,GAAkB,IAAD,EACvCyG,EAAQnb,EAAO0U,GAErB,OAEE,UAACiV,IAA6B1qB,UAA9B,QAA0C,IAEvC4a,KAAI,SAACsb,GACJ,OAAIA,EAAKv1B,UAAYub,EAAMvb,QAClB,KAEF,CAACu1B,EAAMha,MAEfyG,QAAO,SAACwT,GAAD,OAAkC,OAANA,QAG1C,KACN,CAACp1B,EAAQf,IAILo2B,EAAuBjb,aAAiD,qBAAGmY,KAAQ+C,SAEnFC,EAA8BrZ,mBAAQ,WAC1C,IAAKjd,IAAYo2B,EAAsB,MAAO,GAC9C,IAAMG,EAAWH,EAAqBp2B,GACtC,OAAKu2B,EAEE96B,OAAOC,KAAK66B,GAAU3b,KAAI,SAAC4b,GAChC,MAAO,CAACC,YAAiBF,EAASC,GAAQnB,QAASoB,YAAiBF,EAASC,GAAQlB,YAHjE,KAKrB,CAACc,EAAsBp2B,IAEpB02B,EAAezZ,mBACnB,kBAAMqZ,EAAUK,OAAOX,GAAgBW,OAAOZ,KAC9C,CAACC,EAAgBD,EAAaO,IAGhC,OAAOrZ,mBAAQ,WAEb,IAAM2Z,EAAQF,EAAaG,QAA0C,SAACC,EAAD,GAA6B,IAAD,mBAApBpB,EAAoB,KAAZC,EAAY,KACzFoB,EAASrB,EAAOsB,YAAYrB,GAC5Bv6B,EAAM27B,EAAM,UAAMrB,EAAO/0B,QAAb,YAAwBg1B,EAAOh1B,SAA/B,UAA8Cg1B,EAAOh1B,QAArD,YAAgE+0B,EAAO/0B,SACzF,OAAIm2B,EAAK17B,KACT07B,EAAK17B,GAAO27B,EAAS,CAACrB,EAAQC,GAAU,CAACA,EAAQD,IAD3BoB,IAGrB,IAEH,OAAOr7B,OAAOC,KAAKk7B,GAAOhc,KAAI,SAACxf,GAAD,OAASw7B,EAAMx7B,QAC5C,CAACs7B,M,8BCrPN,kRAgDO,SAASwpB,EACdv/C,EACAI,GAEA,IAAMo/C,EAA2BljC,mBAC/B,yCAAMlc,QAAN,IAAMA,OAAN,EAAMA,EAAQ4hB,QAAO,SAACxmB,GAAD,OAAqD,IAA1BisB,YAAS,OAACjsB,QAAD,IAACA,OAAD,EAACA,EAAGwE,mBAA7D,QAAoF,KACpF,CAACI,IAGGq/C,EAA0BnjC,mBAAQ,kBAAMkjC,EAAgBvlC,KAAI,SAACylC,GAAD,OAAQA,EAAG1/C,aAAU,CAACw/C,IAElFG,EAAWx7B,YAA8Bs7B,EAAyBH,IAAiB,YAAa,CAACt/C,IAEjG4/C,EAAsBtjC,mBAAQ,kBAAMqjC,EAASE,MAAK,SAACC,GAAD,OAAeA,EAAUh9B,aAAU,CAAC68B,IAE5F,MAAO,CACLrjC,mBACE,kBACEtc,GAAWw/C,EAAgBj9B,OAAS,EAChCi9B,EAAgBtpB,QAA4D,SAACC,EAAM5a,EAAO6W,GAAO,IAAD,IACxF72B,EAAK,OAAGokD,QAAH,IAAGA,GAAH,UAAGA,EAAWvtB,UAAd,iBAAG,EAAexP,cAAlB,aAAG,EAAwB,GAChC5lB,EAASzB,EAAQgtB,IAAKC,OAAOjtB,EAAMF,iBAAcrC,EAIvD,OAHIgE,IACFm5B,EAAK5a,EAAMvb,SAAW,IAAIskC,IAAY/oB,EAAOve,IAExCm5B,IACN,IACH,KACN,CAACn2B,EAASw/C,EAAiBG,IAE7BC,GAIG,SAASG,EACd//C,EACAI,GAEA,OAAOm/C,EAAqCv/C,EAASI,GAAQ,GAIxD,SAAS0Y,EAAgBT,EAAkBkD,GAChD,IAAMk3B,EAAgBsN,EAAiB1nC,EAAS,CAACkD,IACjD,GAAKA,EACL,OAAOk3B,EAAcl3B,EAAMvb,SAGtB,SAASggD,EACd3nC,EACA4nC,GAEA,IAAM7/C,EAASkc,mBACb,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYj+B,QAAO,SAACyH,GAAD,OAAiCA,aAAoBllB,cAA9E,QAAwF,KACxF,CAAC07C,IAGGxN,EAAgBsN,EAAiB1nC,EAASjY,GAE1C8/C,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoB35B,cAEpBxlB,EAAsBqb,mBAC1B,kBACE6jC,EACIA,EACGlmC,IAAIwN,KACJzF,QAAO,SAACtoB,GAAD,OAA0B,IAANA,KAC3B0oB,OACH,KACN,CAAC+9B,IAGGr8B,EAAUL,YACd28B,EACA,gBACAn/C,EAAUgZ,KAAI,SAACja,GAAD,MAAa,CAACA,OAG9B,OAAOsc,mBACL,kBACErb,EAAUi1B,QAA8C,SAACC,EAAMn2B,EAASoyB,GAAO,IAAD,IACtE72B,EAAK,OAAGuoB,QAAH,IAAGA,GAAH,UAAGA,EAAUsO,UAAb,iBAAG,EAAcxP,cAAjB,aAAG,EAAuB,GAErC,OADIrnB,IAAO46B,EAAKn2B,GAAWm3C,IAAeC,MAAM7uB,IAAKC,OAAOjtB,EAAMF,cAC3D86B,IACN,MACL,CAACl1B,EAAW6iB,IAkEKu8B,CADU/jC,mBAAQ,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYJ,MAAK,SAACp2B,GAAD,OAAcA,IAAaC,cAAlD,WAAmE,CAACu2B,IACzD,CAAC5nC,GAAW,IAE5D,OAAOiE,mBACL,yCACE2jC,QADF,IACEA,OADF,EACEA,EAAYhmC,KAAI,SAACwP,GACf,GAAKpR,GAAYoR,EACjB,OAAIA,aAAoBllB,IAAckuC,EAAchpB,EAASzpB,SACzDypB,IAAaC,IAAcw2B,EAAW7nC,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS4nC,EAAYC,EAAYzN,IAI/B,SAAS6N,EAAmBjoC,EAAkBoR,GACnD,OAAOu2B,EAAoB3nC,EAAS,CAACoR,IAAW,GAI3C,SAAS82B,IACd,IAAQloC,EAAYlZ,cAAZkZ,QACFg3B,EAAYla,cAEZwqB,EAAWI,EAAgB,OAAC1nC,QAAD,IAACA,SAAWrf,EADtBsjB,mBAAQ,kBAAMxhB,OAAOmnC,OAAP,OAAcoN,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOsQ,QAAP,IAAOA,IAAY,K,6BCnIrB,gRAgDO,SAASJ,EACdv/C,EACAI,GAEA,IAAMo/C,EAA2BljC,mBAC/B,yCAAMlc,QAAN,IAAMA,OAAN,EAAMA,EAAQ4hB,QAAO,SAACxmB,GAAD,OAAqD,IAA1BisB,YAAS,OAACjsB,QAAD,IAACA,OAAD,EAACA,EAAGwE,mBAA7D,QAAoF,KACpF,CAACI,IAGGq/C,EAA0BnjC,mBAAQ,kBAAMkjC,EAAgBvlC,KAAI,SAACylC,GAAD,OAAQA,EAAG1/C,aAAU,CAACw/C,IAElFG,EAAWx7B,YAA8Bs7B,EAAyBH,IAAiB,YAAa,CAACt/C,IAEjG4/C,EAAsBtjC,mBAAQ,kBAAMqjC,EAASE,MAAK,SAACC,GAAD,OAAeA,EAAUh9B,aAAU,CAAC68B,IAE5F,MAAO,CACLrjC,mBACE,kBACEtc,GAAWw/C,EAAgBj9B,OAAS,EAChCi9B,EAAgBtpB,QAA4D,SAACC,EAAM5a,EAAO6W,GAAO,IAAD,IACxF72B,EAAK,OAAGokD,QAAH,IAAGA,GAAH,UAAGA,EAAWvtB,UAAd,iBAAG,EAAexP,cAAlB,aAAG,EAAwB,GAChC5lB,EAASzB,EAAQgtB,IAAKC,OAAOjtB,EAAMF,iBAAcrC,EAIvD,OAHIgE,IACFm5B,EAAK5a,EAAMvb,SAAW,IAAIskC,IAAY/oB,EAAOve,IAExCm5B,IACN,IACH,KACN,CAACn2B,EAASw/C,EAAiBG,IAE7BC,GAIG,SAASG,EACd//C,EACAI,GAEA,OAAOm/C,EAAqCv/C,EAASI,GAAQ,GAIxD,SAAS0Y,EAAgBT,EAAkBkD,GAChD,IAAMk3B,EAAgBsN,EAAiB1nC,EAAS,CAACkD,IACjD,GAAKA,EACL,OAAOk3B,EAAcl3B,EAAMvb,SAGtB,SAASggD,EACd3nC,EACA4nC,GAEA,IAAM7/C,EAASkc,mBACb,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYj+B,QAAO,SAACyH,GAAD,OAAiCA,aAAoBllB,cAA9E,QAAwF,KACxF,CAAC07C,IAGGxN,EAAgBsN,EAAiB1nC,EAASjY,GAE1C8/C,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoB35B,cAEpBxlB,EAAsBqb,mBAC1B,kBACE6jC,EACIA,EACGlmC,IAAIwN,KACJzF,QAAO,SAACtoB,GAAD,OAA0B,IAANA,KAC3B0oB,OACH,KACN,CAAC+9B,IAGGr8B,EAAUL,YACd28B,EACA,gBACAn/C,EAAUgZ,KAAI,SAACja,GAAD,MAAa,CAACA,OAG9B,OAAOsc,mBACL,kBACErb,EAAUi1B,QAA8C,SAACC,EAAMn2B,EAASoyB,GAAO,IAAD,IACtE72B,EAAK,OAAGuoB,QAAH,IAAGA,GAAH,UAAGA,EAAUsO,UAAb,iBAAG,EAAcxP,cAAjB,aAAG,EAAuB,GAErC,OADIrnB,IAAO46B,EAAKn2B,GAAWm3C,IAAeC,MAAM7uB,IAAKC,OAAOjtB,EAAMF,cAC3D86B,IACN,MACL,CAACl1B,EAAW6iB,IAkEKu8B,CADU/jC,mBAAQ,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYJ,MAAK,SAACp2B,GAAD,OAAcA,IAAaC,cAAlD,WAAmE,CAACu2B,IACzD,CAAC5nC,GAAW,IAE5D,OAAOiE,mBACL,yCACE2jC,QADF,IACEA,OADF,EACEA,EAAYhmC,KAAI,SAACwP,GACf,GAAKpR,GAAYoR,EACjB,OAAIA,aAAoBllB,IAAckuC,EAAchpB,EAASzpB,SACzDypB,IAAaC,IAAcw2B,EAAW7nC,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS4nC,EAAYC,EAAYzN,IAI/B,SAAS6N,EAAmBjoC,EAAkBoR,GACnD,OAAOu2B,EAAoB3nC,EAAS,CAACoR,IAAW,GAI3C,SAAS82B,IACd,IAAQloC,EAAYlZ,cAAZkZ,QACFg3B,EAAYla,cAEZwqB,EAAWI,EAAgB,OAAC1nC,QAAD,IAACA,SAAWrf,EADtBsjB,mBAAQ,kBAAMxhB,OAAOmnC,OAAP,OAAcoN,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOsQ,QAAP,IAAOA,IAAY,K,6BCnIrB,kRAgDO,SAASJ,EACdv/C,EACAI,GAEA,IAAMo/C,EAA2BljC,mBAC/B,yCAAMlc,QAAN,IAAMA,OAAN,EAAMA,EAAQ4hB,QAAO,SAACxmB,GAAD,OAAqD,IAA1BisB,YAAS,OAACjsB,QAAD,IAACA,OAAD,EAACA,EAAGwE,mBAA7D,QAAoF,KACpF,CAACI,IAGGq/C,EAA0BnjC,mBAAQ,kBAAMkjC,EAAgBvlC,KAAI,SAACylC,GAAD,OAAQA,EAAG1/C,aAAU,CAACw/C,IAElFG,EAAWx7B,YAA8Bs7B,EAAyBH,IAAiB,YAAa,CAACt/C,IAEjG4/C,EAAsBtjC,mBAAQ,kBAAMqjC,EAASE,MAAK,SAACC,GAAD,OAAeA,EAAUh9B,aAAU,CAAC68B,IAE5F,MAAO,CACLrjC,mBACE,kBACEtc,GAAWw/C,EAAgBj9B,OAAS,EAChCi9B,EAAgBtpB,QAA4D,SAACC,EAAM5a,EAAO6W,GAAO,IAAD,IACxF72B,EAAK,OAAGokD,QAAH,IAAGA,GAAH,UAAGA,EAAWvtB,UAAd,iBAAG,EAAexP,cAAlB,aAAG,EAAwB,GAChC5lB,EAASzB,EAAQgtB,OAAKC,OAAOjtB,EAAMF,iBAAcrC,EAIvD,OAHIgE,IACFm5B,EAAK5a,EAAMvb,SAAW,IAAIskC,cAAY/oB,EAAOve,IAExCm5B,IACN,IACH,KACN,CAACn2B,EAASw/C,EAAiBG,IAE7BC,GAIG,SAASG,EACd//C,EACAI,GAEA,OAAOm/C,EAAqCv/C,EAASI,GAAQ,GAIxD,SAAS0Y,EAAgBT,EAAkBkD,GAChD,IAAMk3B,EAAgBsN,EAAiB1nC,EAAS,CAACkD,IACjD,GAAKA,EACL,OAAOk3B,EAAcl3B,EAAMvb,SAGtB,SAASggD,EACd3nC,EACA4nC,GAEA,IAAM7/C,EAASkc,mBACb,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYj+B,QAAO,SAACyH,GAAD,OAAiCA,aAAoBllB,kBAA9E,QAAwF,KACxF,CAAC07C,IAGGxN,EAAgBsN,EAAiB1nC,EAASjY,GAE1C8/C,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoB35B,cAEpBxlB,EAAsBqb,mBAC1B,kBACE6jC,EACIA,EACGlmC,IAAIwN,KACJzF,QAAO,SAACtoB,GAAD,OAA0B,IAANA,KAC3B0oB,OACH,KACN,CAAC+9B,IAGGr8B,EAAUL,YACd28B,EACA,gBACAn/C,EAAUgZ,KAAI,SAACja,GAAD,MAAa,CAACA,OAG9B,OAAOsc,mBACL,kBACErb,EAAUi1B,QAA8C,SAACC,EAAMn2B,EAASoyB,GAAO,IAAD,IACtE72B,EAAK,OAAGuoB,QAAH,IAAGA,GAAH,UAAGA,EAAUsO,UAAb,iBAAG,EAAcxP,cAAjB,aAAG,EAAuB,GAErC,OADIrnB,IAAO46B,EAAKn2B,GAAWm3C,iBAAeC,MAAM7uB,OAAKC,OAAOjtB,EAAMF,cAC3D86B,IACN,MACL,CAACl1B,EAAW6iB,IAkEKu8B,CADU/jC,mBAAQ,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYJ,MAAK,SAACp2B,GAAD,OAAcA,IAAaC,kBAAlD,WAAmE,CAACu2B,IACzD,CAAC5nC,GAAW,IAE5D,OAAOiE,mBACL,yCACE2jC,QADF,IACEA,OADF,EACEA,EAAYhmC,KAAI,SAACwP,GACf,GAAKpR,GAAYoR,EACjB,OAAIA,aAAoBllB,QAAckuC,EAAchpB,EAASzpB,SACzDypB,IAAaC,QAAcw2B,EAAW7nC,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS4nC,EAAYC,EAAYzN,IAI/B,SAAS6N,EAAmBjoC,EAAkBoR,GACnD,OAAOu2B,EAAoB3nC,EAAS,CAACoR,IAAW,GAI3C,SAAS82B,IACd,IAAQloC,EAAYlZ,cAAZkZ,QACFg3B,EAAYla,cAEZwqB,EAAWI,EAAgB,OAAC1nC,QAAD,IAACA,SAAWrf,EADtBsjB,mBAAQ,kBAAMxhB,OAAOmnC,OAAP,OAAcoN,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOsQ,QAAP,IAAOA,IAAY,K,6BCnIrB,kRAgDO,SAASJ,EACdv/C,EACAI,GAEA,IAAMo/C,EAA2BljC,mBAC/B,yCAAMlc,QAAN,IAAMA,OAAN,EAAMA,EAAQ4hB,QAAO,SAACxmB,GAAD,OAAqD,IAA1BisB,YAAS,OAACjsB,QAAD,IAACA,OAAD,EAACA,EAAGwE,mBAA7D,QAAoF,KACpF,CAACI,IAGGq/C,EAA0BnjC,mBAAQ,kBAAMkjC,EAAgBvlC,KAAI,SAACylC,GAAD,OAAQA,EAAG1/C,aAAU,CAACw/C,IAElFG,EAAWx7B,YAA8Bs7B,EAAyBH,IAAiB,YAAa,CAACt/C,IAEjG4/C,EAAsBtjC,mBAAQ,kBAAMqjC,EAASE,MAAK,SAACC,GAAD,OAAeA,EAAUh9B,aAAU,CAAC68B,IAE5F,MAAO,CACLrjC,mBACE,kBACEtc,GAAWw/C,EAAgBj9B,OAAS,EAChCi9B,EAAgBtpB,QAA4D,SAACC,EAAM5a,EAAO6W,GAAO,IAAD,IACxF72B,EAAK,OAAGokD,QAAH,IAAGA,GAAH,UAAGA,EAAWvtB,UAAd,iBAAG,EAAexP,cAAlB,aAAG,EAAwB,GAChC5lB,EAASzB,EAAQgtB,OAAKC,OAAOjtB,EAAMF,iBAAcrC,EAIvD,OAHIgE,IACFm5B,EAAK5a,EAAMvb,SAAW,IAAIskC,cAAY/oB,EAAOve,IAExCm5B,IACN,IACH,KACN,CAACn2B,EAASw/C,EAAiBG,IAE7BC,GAIG,SAASG,EACd//C,EACAI,GAEA,OAAOm/C,EAAqCv/C,EAASI,GAAQ,GAIxD,SAAS0Y,EAAgBT,EAAkBkD,GAChD,IAAMk3B,EAAgBsN,EAAiB1nC,EAAS,CAACkD,IACjD,GAAKA,EACL,OAAOk3B,EAAcl3B,EAAMvb,SAGtB,SAASggD,EACd3nC,EACA4nC,GAEA,IAAM7/C,EAASkc,mBACb,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYj+B,QAAO,SAACyH,GAAD,OAAiCA,aAAoBllB,kBAA9E,QAAwF,KACxF,CAAC07C,IAGGxN,EAAgBsN,EAAiB1nC,EAASjY,GAE1C8/C,EA/FD,SAAwBC,GAG7B,IAAMC,EAAoB35B,cAEpBxlB,EAAsBqb,mBAC1B,kBACE6jC,EACIA,EACGlmC,IAAIwN,KACJzF,QAAO,SAACtoB,GAAD,OAA0B,IAANA,KAC3B0oB,OACH,KACN,CAAC+9B,IAGGr8B,EAAUL,YACd28B,EACA,gBACAn/C,EAAUgZ,KAAI,SAACja,GAAD,MAAa,CAACA,OAG9B,OAAOsc,mBACL,kBACErb,EAAUi1B,QAA8C,SAACC,EAAMn2B,EAASoyB,GAAO,IAAD,IACtE72B,EAAK,OAAGuoB,QAAH,IAAGA,GAAH,UAAGA,EAAUsO,UAAb,iBAAG,EAAcxP,cAAjB,aAAG,EAAuB,GAErC,OADIrnB,IAAO46B,EAAKn2B,GAAWm3C,iBAAeC,MAAM7uB,OAAKC,OAAOjtB,EAAMF,cAC3D86B,IACN,MACL,CAACl1B,EAAW6iB,IAkEKu8B,CADU/jC,mBAAQ,yCAAM2jC,QAAN,IAAMA,OAAN,EAAMA,EAAYJ,MAAK,SAACp2B,GAAD,OAAcA,IAAaC,kBAAlD,WAAmE,CAACu2B,IACzD,CAAC5nC,GAAW,IAE5D,OAAOiE,mBACL,yCACE2jC,QADF,IACEA,OADF,EACEA,EAAYhmC,KAAI,SAACwP,GACf,GAAKpR,GAAYoR,EACjB,OAAIA,aAAoBllB,QAAckuC,EAAchpB,EAASzpB,SACzDypB,IAAaC,QAAcw2B,EAAW7nC,QAA1C,YAJJ,QAMQ,KACR,CAACA,EAAS4nC,EAAYC,EAAYzN,IAI/B,SAAS6N,EAAmBjoC,EAAkBoR,GACnD,OAAOu2B,EAAoB3nC,EAAS,CAACoR,IAAW,GAI3C,SAAS82B,IACd,IAAQloC,EAAYlZ,cAAZkZ,QACFg3B,EAAYla,cAEZwqB,EAAWI,EAAgB,OAAC1nC,QAAD,IAACA,SAAWrf,EADtBsjB,mBAAQ,kBAAMxhB,OAAOmnC,OAAP,OAAcoN,QAAd,IAAcA,IAAa,MAAK,CAACA,KAEtE,cAAOsQ,QAAP,IAAOA,IAAY,K,6BCnIrB,4MAAO,IAAMa,EAAoB1gD,8DACpB67C,EAAuB77C,iEACvB2gD,EAAoB3gD,8DACpB4gD,EAAsB5gD,0CACtB6gD,EAAoB7gD,4BACpB8gD,EAAY,UAAMD,EAAN,YACZE,EAAgB,UAAMF,EAAN,iB,4uNCN7B,oEAAO,IAAM5zB,EAA2C,SAAC,GAOlD,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WAII,IAHJP,wBAGI,MAHe,EAGf,MAFJC,yBAEI,MAFgB,EAEhB,MADJR,sBACI,MADa,EACb,EAEE00B,EAAkB,IAAMl0B,EAE1Bm0B,EAAe9zB,EAAU,IAEzBb,IAIF20B,GADoB9zB,EADMA,EAAU,IAAOb,GAEd,KAG/B,IAAM40B,EAAsBh0B,EAAe,IAErCi0B,EAAY,IAAO/zB,EAEnBg0B,EAAcD,EAAS,SAAI,EAAIF,EAAeD,EAAqBA,EAAkBE,GAI3F,OAAOlM,YAFgBoM,EAAcD,GAEJpjD,QAAQ8uB,KAG9BQ,EAAS,SAAC,GAErB,OAF0D,EAAnCC,aAAmC,EAArBC,eACgB,M,mPCtB1CsY,EAAW,uCAAG,WACzB3wB,EACA0O,EACAy9B,EACAC,GAJyB,mBAAA1nD,EAAA,yDAMpBsb,EAAS0O,GANW,sBAOjB,IAAI9nB,MAAJ,iBAAoB8nB,EAApB,6BAAmD1O,EAAShV,UAP3C,wBASM,EAAAgV,EAAS2wB,aAAYjiB,GAArB,oBAAoCy9B,IAT1C,cASnBE,EATmB,OAWnBC,EAAgBD,EACnBn5B,IAAIzpB,IAAOvB,UAAUwB,KAAK,KAAOypB,IAAI1pB,IAAOvB,UAAUwB,KAAK0iD,KAC3D5kD,IAAIiC,IAAOvB,UAAUwB,KAAK,MAbJ,kBAclB4iD,GAdkB,2CAAH,4DAwBXC,EAAmB,uCAAG,WACjCvsC,EACA0O,GAFiC,iCAAAhqB,EAAA,6DAGjCynD,EAHiC,+BAGb,GACpBC,EAJiC,+BAIb,IAEdE,EAAgB3b,EAAY3wB,EAAU0O,EAAYy9B,EAAYC,GANnC,SAOhBpsC,EAAS0O,GAAT,MAAA1O,EAAQ,YAAgBmsC,GAAhB,QAA4B,CACnDpb,SAAUub,MARqB,cAO3B5lB,EAP2B,yBAU1BA,GAV0B,2CAAH,wD,yBC/B1Bx9B,EAAU,CACd6nC,SAAU3M,KAGCooB,EAAS,uCAAG,WAAOtP,EAAoB/3B,EAAKnd,GAAhC,uBAAAtD,EAAA,yDACjB6B,EAAQ,IAAI2B,IAAUF,GAAQG,MAAMg8B,KAAuB99B,WACrD,IAAR8e,EAFmB,gCAGJ+3B,EAAmBuP,aAAalmD,EAAO2C,GAHnC,cAGfw9B,EAHe,gBAICA,EAAGgmB,OAJJ,cAIf7lB,EAJe,yBAKdA,EAAQkQ,QALM,wBAQNmG,EAAmByP,QAAQxnC,EAAK5e,EAAO2C,GARjC,eAQjBw9B,EARiB,iBASDA,EAAGgmB,OATF,eASjB7lB,EATiB,yBAUhBA,EAAQkQ,QAVQ,4CAAH,0DAaT6V,EAAW,uCAAG,WAAO1P,EAAoB/3B,EAAKnd,GAAhC,uBAAAtD,EAAA,yDACnB6B,EAAQ,IAAI2B,IAAUF,GAAQG,MAAMg8B,KAAuB99B,WACrD,IAAR8e,EAFqB,gCAGN+3B,EAAmB2P,aAAatmD,EAAO2C,GAHjC,cAGjBw9B,EAHiB,gBAIDA,EAAGgmB,OAJF,cAIjB7lB,EAJiB,yBAKhBA,EAAQkQ,QALQ,wBAQRmG,EAAmB4P,SAAS3nC,EAAK5e,EAAO2C,GARhC,eAQnBw9B,EARmB,iBASHA,EAAGgmB,OATA,eASnB7lB,EATmB,yBAUlBA,EAAQkQ,QAVU,4CAAH,0DAaXgW,EAAW,uCAAG,WAAO7P,EAAoB/3B,GAA3B,qBAAAzgB,EAAA,yDACb,IAARygB,EADqB,gCAEA+3B,EAAmB2P,aAAa,IAAK3jD,GAFrC,cAEjBw9B,EAFiB,gBAGDA,EAAGgmB,OAHF,cAGjB7lB,EAHiB,yBAIhBA,EAAQkQ,QAJQ,wBAORmG,EAAmByP,QAAQxnC,EAAK,IAAKjc,GAP7B,eAOnBw9B,EAPmB,iBAQHA,EAAGgmB,OARA,eAQnB7lB,EARmB,yBASlBA,EAAQkQ,QATU,4CAAH,wD,0CCtBXiW,EAAc,uCAAG,WAAO9iB,GAAP,yBAAAxlC,EAAA,yDACtBuoD,EAAgBprB,IACnB7U,QAAO,SAAChE,GAAD,OAA0B,IAAhBA,EAAKC,UACtB+D,QAAO,SAAChE,GAAD,OAA8B,IAApBA,EAAKsQ,iBAA4Ct1B,IAApBglB,EAAKsQ,cAH1B,KAIR4Q,EAJQ,qCAIQz/B,IAAkB82B,iBAJ1B,iCAItBnV,EAJsB,KAKtB8gC,EAAkBD,EAAchoC,KAAI,gBAAGqE,EAAH,EAAGA,gBAAH,MAA0B,CAClEte,QAASD,YAAWue,GACpB0T,KAAM,iBAEFmwB,EAAgBF,EAAchoC,KAAI,gBAAGqE,EAAH,EAAGA,gBAAH,MAA0B,CAChEte,QAASD,YAAWue,GACpB0T,KAAM,oBAXoB,UAaFrQ,YAAUnD,EAAY0jC,GAbpB,eAatBE,EAbsB,iBAcJzgC,YAAUnD,EAAY2jC,GAdlB,eActBE,EAdsB,yBAgBrBJ,EAAc/rB,QAAO,SAAC6b,EAAOuQ,EAAW9R,GAC7C,IAAMpiB,EAAag0B,EAAY5R,GAAS,IAAItzC,IAAUklD,EAAY5R,IAAU,KACtEniB,EAAWg0B,EAAU7R,GAAS,IAAItzC,IAAUmlD,EAAU7R,IAAU,KAEtE,OAAKpiB,GAAeC,EAIhBD,EAAWL,IAAI3M,IAAgBiN,EAASk0B,IAAInhC,GACvC2wB,EAGH,GAAN,mBAAWA,GAAX,CAAkBuQ,IAPTvQ,IAQR,KA7ByB,4CAAH,uD,8BCV3B,4KAQO,SAASvM,IAQd,MAA6BtmC,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACXuB,EAAWgI,cAEjB,OAAOpnB,uBACL,SACEyrC,GAMI,IAAD,yDAD4G,GAH7G7K,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACAE,EAEC,EAFDA,MAGF,GAAKhjB,GACAhZ,EAAL,CAEA,IAAQ67B,EAAS+K,EAAT/K,KACR,IAAKA,EACH,MAAMt/B,MAAM,8BAEdge,EAASohB,YAAe,CAAEE,OAAMx8B,KAAM2Z,EAAShZ,UAAS87B,WAAUC,UAASC,cAE7E,CAACzhB,EAAUva,EAASgZ,IAKjB,SAASm0B,IAAgE,IAAD,EACrEntC,EAAYH,cAAZG,QAEF9F,EAAQihB,aAAgD,SAACujB,GAAD,OAAOA,EAAE9C,gBAEvE,OAAO57B,GAAO,UAAG9F,EAAM8F,UAAT,QAA0B,GAenC,SAASqtC,EAAoBhR,GAClC,OAAO,IAAIpB,MAAOC,UAAYmB,EAAGH,UAAY,MAIxC,SAAS0J,EAAsBnwB,EAAkC8vB,GACtE,IAAM2H,EAAkBC,IACxB,OAAOlwB,mBACL,iBAC0B,kBAAjBxH,GACY,kBAAZ8vB,GACP9pC,OAAOC,KAAKwxC,GAAiBsT,MAAK,SAAC3kB,GACjC,IAAMQ,EAAK6Q,EAAgBrR,GAC3B,IAAKQ,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQV,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASyJ,UAAYA,GAAWzJ,EAASrmB,eAAiBA,GAAgB43B,EAAoBhR,SAEzG,CAAC6Q,EAAiB3H,EAAS9vB,M,wwPC/EhB,SAAS0tC,EAAUC,GAAwB,IAAD,IAEvD,OADiBA,EAAIzjD,MAAM,KAAK,GAAG+yB,eAEjC,IAAK,QACH,MAAO,CAAC0wB,GACV,IAAK,OACH,MAAO,CAAC,QAAD,OAASA,EAAIrb,OAAO,IAAMqb,GACnC,IAAK,OACH,IAAMvnB,EAAI,UAAGunB,EAAI7nD,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCsgC,EAArC,oCAAsEA,EAAtE,MACT,IAAK,OACH,IAAMlJ,EAAI,UAAGywB,EAAI7nD,MAAM,8BAAb,aAAG,EAAmC,GAChD,MAAO,CAAC,oCAAD,OAAqCo3B,EAArC,oCAAsEA,EAAtE,MACT,QACE,MAAO,IAnBb,mC,6BCAA,oJAcagJ,EAAiBn+B,YAO3B,+BACU2+B,EAAuB3+B,YAAmC,qCAC1D++B,EAAsB/+B,YAIhC,oCACU4+B,EAAqB5+B,YAI/B,oC,8fC7BGwnB,GAAoD,mBACvDpkB,IAAQC,QAAU,8CADqC,cAEvDD,IAAQuE,QAAU,8CAFqC,G,QC6K1D,SAASghB,EAAYxlB,EAA6BylB,GAAyD,IAA/CC,IAA8C,yDACxG,EAA6BxmB,cAArBE,EAAR,EAAQA,QAASiZ,EAAjB,EAAiBA,QAEjB,OAAOiE,mBAAQ,WACb,IAAKtc,IAAYylB,IAAQrmB,EAAS,OAAO,KACzC,IACE,OAAO4d,YAAYhd,EAASylB,EAAKrmB,EAASsmB,GAAwBrN,EAAUA,OAAUrf,GACtF,MAAOmgB,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACnZ,EAASylB,EAAKrmB,EAASsmB,EAAsBrN,IAG5C,SAASsN,EAAiB7Q,EAAuB4Q,GACtD,OAAOF,EAAY1Q,EAAc8Q,EAAWF,GAGvC,SAASG,EAAgBH,GAC9B,IAAQrmB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,EAAUymB,IAAKzmB,GAASW,aAAUhH,EAAW+sB,EAAUL,GAsBrE,SAASU,EAAwBtR,EAAuB4Q,GAC7D,OAAOF,EAAY1Q,EAAcuR,IAAmBX,GAG/C,SAASY,EAAgBC,EAAsBb,GACpD,OAAOF,EAAYe,EAAaC,IAAmBd,GAG9C,SAASe,IACd,IAAQpnB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,GAAWglB,EAAmBhlB,GAAUqnB,GAAe,K,2fCjOtErC,GAAoD,mBACvDpkB,UAAQC,QAAU,8CADqC,cAEvDD,UAAQuE,QAAU,8CAFqC,G,QC6K1D,SAASghB,EAAYxlB,EAA6BylB,GAAyD,IAA/CC,IAA8C,yDACxG,EAA6BxmB,cAArBE,EAAR,EAAQA,QAASiZ,EAAjB,EAAiBA,QAEjB,OAAOiE,mBAAQ,WACb,IAAKtc,IAAYylB,IAAQrmB,EAAS,OAAO,KACzC,IACE,OAAO4d,YAAYhd,EAASylB,EAAKrmB,EAASsmB,GAAwBrN,EAAUA,OAAUrf,GACtF,MAAOmgB,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACnZ,EAASylB,EAAKrmB,EAASsmB,EAAsBrN,IAG5C,SAASsN,EAAiB7Q,EAAuB4Q,GACtD,OAAOF,EAAY1Q,EAAc8Q,EAAWF,GAGvC,SAASG,EAAgBH,GAC9B,IAAQrmB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,EAAUymB,OAAKzmB,GAASW,aAAUhH,EAAW+sB,EAAUL,GAsBrE,SAASU,EAAwBtR,EAAuB4Q,GAC7D,OAAOF,EAAY1Q,EAAcuR,IAAmBX,GAG/C,SAASY,EAAgBC,EAAsBb,GACpD,OAAOF,EAAYe,EAAaC,IAAmBd,GAG9C,SAASe,IACd,IAAQpnB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,GAAWglB,EAAmBhlB,GAAUqnB,GAAe,K,2fCjOtErC,GAAoD,mBACvDpkB,UAAQC,QAAU,8CADqC,cAEvDD,UAAQuE,QAAU,8CAFqC,G,QC6K1D,SAASghB,EAAYxlB,EAA6BylB,GAAyD,IAA/CC,IAA8C,yDACxG,EAA6BxmB,cAArBE,EAAR,EAAQA,QAASiZ,EAAjB,EAAiBA,QAEjB,OAAOiE,mBAAQ,WACb,IAAKtc,IAAYylB,IAAQrmB,EAAS,OAAO,KACzC,IACE,OAAO4d,YAAYhd,EAASylB,EAAKrmB,EAASsmB,GAAwBrN,EAAUA,OAAUrf,GACtF,MAAOmgB,GAEP,OADAD,QAAQC,MAAM,yBAA0BA,GACjC,QAER,CAACnZ,EAASylB,EAAKrmB,EAASsmB,EAAsBrN,IAG5C,SAASsN,EAAiB7Q,EAAuB4Q,GACtD,OAAOF,EAAY1Q,EAAc8Q,EAAWF,GAGvC,SAASG,EAAgBH,GAC9B,IAAQrmB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,EAAUymB,OAAKzmB,GAASW,aAAUhH,EAAW+sB,EAAUL,GAsBrE,SAASU,EAAwBtR,EAAuB4Q,GAC7D,OAAOF,EAAY1Q,EAAcuR,IAAmBX,GAG/C,SAASY,EAAgBC,EAAsBb,GACpD,OAAOF,EAAYe,EAAaC,IAAmBd,GAG9C,SAASe,IACd,IAAQpnB,EAAYH,cAAZG,QACR,OAAOmmB,EAAYnmB,GAAWglB,EAAmBhlB,GAAUqnB,GAAe,K,o2WClO5E,sGAAO,IAEMluB,EAAe,CAAEI,OAAQ,QAASsB,SAAU,UAAWwoD,KAAM,MA2B7DppD,EAAY,CACvB,QA9B0B,CAAEV,OAAQ,QAASsB,SAAU,6CAAWwoD,KAAM,MA+BxE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,iCAASwoD,KAAM,MA+BtE,QAASlqD,EACT,QA9B0B,CAAEI,OAAQ,QAASsB,SAAU,UAAWwoD,KAAM,MA+BxE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,mDAAYwoD,KAAM,MA+BzE,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,aAAWwoD,KAAM,SA+B1E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,cAAewoD,KAAM,MA+B5E,SA9B2B,CAAE9pD,OAAQ,SAAUsB,SAAU,WAAYwoD,KAAM,OA+B3E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,cAAYwoD,KAAM,MA+BzE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,iCAASwoD,KAAM,MA+BtE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,SAAUwoD,KAAM,MA+BvE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,mBAAoBwoD,KAAM,MA+BjF,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,WAAYwoD,KAAM,MA+BzE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,qBAAOwoD,KAAM,MA+BpE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,qBAAOwoD,KAAM,MA+BpE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,aAAcwoD,KAAM,MA+B3E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,SAAUwoD,KAAM,MA+BvE,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,wBAAsBwoD,KAAM,SA+BrF,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,eAAawoD,KAAM,SA+B5E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,iBAAUwoD,KAAM,MA+BvE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,6CAAWwoD,KAAM,MA+BxE,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,UAAWwoD,KAAM,MA+B1E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,iCAASwoD,KAAM,MA+BtE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,eAAUwoD,KAAM,MA+BvE,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,+DAAcwoD,KAAM,MA+B3E,QA9B0B,CAAE9pD,OAAQ,QAASsB,SAAU,uBAAcwoD,KAAM,MA+B3E,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,2BAAQwoD,KAAM,SA+BvE,QA9B4B,CAAE9pD,OAAQ,QAASsB,SAAU,2BAAQwoD,KAAM,UAiC5DC,EAAe7nD,OAAOmnC,OAAO3oC,I,+BC9D1C,wDAGao/C,EAAQ,CAAC54C,oCAA8BA,mCAA8BA,oCAMnE8iD,IAJI,WACjB,OAAOC,IAAOnK,K,suFCNhB,sCAAMoK,EAAiB,kDAEhB,SAASC,EAAgBC,GAC9B,IAAMpoD,EAAQooD,EAAWpoD,MAAMkoD,GAC/B,GAAKloD,EACL,MAAO,CAAEktC,QAAQ,GAAD,OAAKltC,EAAM,GAAGm3B,cAAd,OAAkCkxB,QAASroD,EAAM,M,4JCI7DsoD,EAAapnD,YAAOqnD,IAAPrnD,CAAH,2DACL,qBAAG6zB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDnG,EAOC,EAPDA,SAOC,IANDkG,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMuzB,EAAeC,YAAiB55B,aAAoB0kB,IAAmB1kB,EAAS8kB,aAAUv1C,GAE1FsqD,EAAiBhnC,mBAAQ,WAC7B,OAAImN,IAAaC,IAAc,GAE3BD,aAAoBllB,IAClBklB,aAAoB0kB,IAChB,GAAN,mBAAWiV,GAAX,CAAyBG,YAAgB95B,EAASzpB,WAE7C,CAACujD,YAAgB95B,EAASzpB,UAE5B,KACN,CAACypB,EAAU25B,IAEd,OAAI35B,IAAaC,IACR,cAAC,IAAD,CAAa1tB,MAAO2zB,EAAME,MAAOA,IAGnC,cAACqzB,EAAD,CAAYvzB,KAAMA,EAAM2zB,KAAMA,EAAME,IAAG,2BAAK/5B,QAAL,IAAKA,OAAL,EAAKA,EAAUvkB,cAAf,QAAyB,QAAzB,SAAyC2qB,MAAOA,M,uVCtBzF,SAAS4zB,IACd,OAAOjpC,aAAwC,SAACjhB,GAAD,OAAWA,EAAM2mC,QAG3D,SAASmK,IAMd,IAAMzwB,EAAWgI,cACX8hC,EAAsBlpD,uBAC1B,SAAC6hC,EAAc5S,GACb7P,EACExH,YAAe,CACbiqB,QACAH,WAAYzS,aAAoBllB,IAAQklB,EAASzpB,QAAUypB,IAAaC,IAAQ,MAAQ,QAI9F,CAAC9P,IAqBH,MAAO,CACL+pC,eAnBqBnpD,uBAAY,WACjCof,EAASvH,iBACR,CAACuH,IAkBF8pC,sBACAE,YAjBkBppD,uBAClB,SAAC6hC,EAAcJ,GACbriB,EAAShd,YAAU,CAAEy/B,QAAOJ,kBAE9B,CAACriB,IAcDwwB,kBAXwB5vC,uBACxB,SAAC4hC,GACCxiB,EAASrH,YAAa,CAAE6pB,iBAE1B,CAACxiB,KAYE,SAASiqC,EAAetoD,EAAgBkuB,GAC7C,GAAKluB,GAAUkuB,EAGf,IACE,IAAMq6B,EAAmBC,qBAAWxoD,EAAOkuB,EAASxsB,UAAU5B,WAC9D,GAAyB,MAArByoD,EACF,OAAOr6B,aAAoBllB,IACvB,IAAI+/B,IAAY7a,EAAUlB,IAAKC,OAAOs7B,IACtC3M,IAAeC,MAAM7uB,IAAKC,OAAOs7B,IAEvC,MAAO3qC,GAEPD,QAAQsK,MAAR,yCAAgDjoB,EAAhD,KAA0D4d,IAM9D,IAAM6qC,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB53C,EAAc63C,GACrC,OACE73C,EAAMqqC,MAAMyN,KAAKtE,MAAK,SAACtkC,GAAD,OAAWA,EAAMvb,UAAYkkD,MACnD73C,EAAMqqC,MAAMhhB,MAAMmqB,MAAK,SAACprB,GAAD,OAAUA,EAAK2vB,eAAepkD,UAAYkkD,KAK9D,SAASG,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDjsC,EAAYnZ,cAAZmZ,QACA7c,EAAMC,cAAND,EAER,EAMIioD,IALF1nB,EADF,EACEA,iBACAE,EAFF,EAEEA,WAC6BK,EAH/B,EAGG3/B,IAAMq/B,OAAUE,WACaK,EAJhC,EAIG5/B,IAAMw/B,QAAWD,WAClBE,EALF,EAKEA,UAGImoB,EAAgBrhB,YAAY5G,GAC5BkoB,EAAiBthB,YAAY3G,GAC7BkoB,EAAkB7d,YAAM,OAACxK,QAAD,IAACA,SAAapjC,GACtC20C,EAAiB,UAAkB,OAAdvR,EAAqB/jB,EAAUosC,EAAgBzkD,eAAnD,QAA+D,KAEhF0kD,EAAwB1E,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,QACtEurD,QADsE,IACtEA,SAAiBvrD,EADqD,OAEtEwrD,QAFsE,IAEtEA,SAAkBxrD,IAGd2rD,EAAqB5oB,IAAqBp/B,IAAMq/B,MAChD4oB,EAAef,EAAe5nB,EAAD,UAAc0oB,EAAYJ,EAAgBC,SAA1C,aAA6DxrD,GAE1F6rD,EAAmBC,YAAgBH,EAAYC,OAAe5rD,EAA5B,OAAuCwrD,QAAvC,IAAuCA,SAAkBxrD,GAC3F+rD,EAAoBC,YAAgB,OAACT,QAAD,IAACA,SAAiBvrD,EAAY2rD,OAA2B3rD,EAAf4rD,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBvoD,IAAMq/B,MAAQ0oB,EAAsB,IADjB,cAEnB/nD,IAAMw/B,OAASuoB,EAAsB,IAFlB,GAKhBzE,GAA2C,mBAC9CtjD,IAAMq/B,MADwC,OAChCuoB,QADgC,IAChCA,SAAiBvrD,GADe,cAE9C2D,IAAMw/B,OAFwC,OAE/BqoB,QAF+B,IAE/BA,SAAkBxrD,GAFa,IAM5Cqf,IACHisC,EAAa9oD,EAAE,mBAGZopD,KACHN,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,oBAG1BykD,EAAWtjD,IAAMq/B,QAAWikB,EAAWtjD,IAAMw/B,UAChDmoB,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,mBAG/B,IACyB,EADnB2pD,EAAc19B,YAAUkmB,GAC9B,GAAKA,GAAOwX,GAEL,IAC6C,IAAlDnB,EAAwBpjC,QAAQukC,IAC/BN,GAAoBZ,EAAgBY,EAAkBM,IACtDJ,GAAqBd,EAAgBc,EAAmBI,GACzD,CAAC,IAAD,EACAb,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,2BAN7B8oD,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,qBAS/B,MAA0B83B,cAAnB6S,EAAP,oBAEMif,EAA0BH,GAAW9e,GAAmBC,YAA+B6e,EAAS9e,GAGtG,EAA8B,CAC5B+e,EAAiBvoD,IAAMq/B,OACvBopB,EAA0BA,EAAwBzoD,IAAMq/B,OAAS,MAF5DqpB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUjgB,SAASkgB,KAC9ChB,EAAa9oD,EAAE,gCAAiC,CAAE0J,OAAQogD,EAAS77B,SAASvkB,UAGvE,CACL+6C,aACAiF,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWjsD,EACpBsrD,cAIJ,SAASiB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMrkC,EAAQsG,YAAU+9B,GACxB,GAAIrkC,EAAO,OAAOA,EAClB,GAA+B,QAA3BqkC,EAASpiB,cAAyB,MAAO,MAC7C,IAAc,IAAVjiB,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAM2hC,EAAiB,qFACjB/K,EAAgB,sBAUf,SAAS0N,EAA2BC,GAAgC,IAAD,EACpEnB,EAAgBgB,EAA8BG,EAASnB,eACvDC,EAAiBe,EAA8BG,EAASlB,gBACxDD,IAAkBC,IACmB,kBAA5BkB,EAASlB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCgB,EA+B9BppB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B3U,YAAU2U,KAEtB0mB,EAAergB,KAAKrG,IACpB2b,EAActV,KAAKrG,GADoBA,EAEpC,MAcWupB,CAAmBD,EAAStpB,WAE9C,OAAO,EAAP,iBACGz/B,IAAMq/B,MAAQ,CACbE,WAAYqoB,IAFhB,cAIG5nD,IAAMw/B,OAAS,CACdD,WAAYsoB,IALhB,2BA/B2B,kBAFSgB,EAwCOE,EAASE,cAtCZxM,MAAMtE,WAAW0Q,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASzzB,cAA6Bp1B,IAAMw/B,OAASx/B,IAAMq/B,MAmC9E6pB,CAAkCH,EAASI,aAR/D,0BASE1pB,GATF,EAcK,SAAS2pB,IAGd,IAAQ1mD,EAAYH,cAAZG,QACFua,EAAWgI,cACX8jC,EAAWM,cACjB,EAA4B7sD,qBAA5B,mBAAOypB,EAAP,KAAeqjC,EAAf,KAsBA,OAlBAxsD,qBAAU,WACR,GAAK4F,EAAL,CACA,IAAM0oB,EAAS09B,EAA2BC,GAE1C9rC,EACEtH,YAAiB,CACf2pB,WAAYlU,EAAOkU,WACnBI,MAAOtU,EAAOgU,iBACdO,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WACrCK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,WACvCE,UAAW,QAIf6pB,EAAU,CAAE3pB,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WAAYK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,gBAEnG,CAACtiB,EAAUva,IAEPujB,I,8BC1RM2gC,IAHS,SAACvjD,GAAD,+BACJA,EADI,U,kWCYlBkmD,EAAkB/mC,cAGlBgnC,EAAoC,SAAClgB,EAAUmgB,GACnD,IACEra,EAaE9F,EAbF8F,OACAsa,EAYEpgB,EAZFogB,UACAC,EAWErgB,EAXFqgB,QACAC,EAUEtgB,EAVFsgB,kBACAC,EASEvgB,EATFugB,gBACAC,EAQExgB,EARFwgB,YACAC,EAOEzgB,EAPFygB,cACAC,EAME1gB,EANF0gB,aACAC,EAKE3gB,EALF2gB,sBACAC,EAIE5gB,EAJF4gB,YACAC,EAGE7gB,EAHF6gB,eACAC,EAEE9gB,EAFF8gB,uBACAC,EACE/gB,EADF+gB,iBAGIC,EAAYnsD,OAAOC,KAAKye,KAAeuyB,GACvCmb,EAA2BJ,EAAe7sC,KAAI,SAACktC,GAAD,OAAmBx0C,YAA4Bw0C,MAC7FC,EAAmCL,EAAuB9sC,KAAI,SAACotC,GAAD,OAClE10C,YAA4B00C,MAExBC,EAA6BN,EAAiB/sC,KAAI,SAACstC,GAAD,OAAY50C,YAA4B40C,MAEhG,MAAO,CACLrvB,WAAW,EACXkuB,YACAra,OAAQvyB,IAAcytC,GACtBZ,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWhrD,WACtBirD,QAAO,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAASjrD,WAClBkrD,kBAAmB5zC,YAA4B4zC,GAC/CC,gBAAe,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAiBnrD,WAClCorD,YAAW,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAaprD,WAC1BqrD,cAAa,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAerrD,WAC9BsrD,aAAY,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAActrD,WAC5BurD,sBAAuBj0C,YAA4Bi0C,GACnDC,cACAC,eAAgBI,EAChBH,uBAAwBK,EACxBJ,iBAAkBM,IAIhBE,EAAkC,SAACpB,GACvC,MAAO,CACLluB,WAAW,EACXkuB,YACAra,OAAQvyB,IAAc6rB,QACtBghB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,KAITS,EAAY,uCAAG,WAAOrB,GAAP,eAAA1sD,EAAA,+EAEEwsD,EAAgBwB,YAAYtB,GAF9B,cAElBuB,EAFkB,yBAGjBxB,EAAkCwB,EAAavB,IAH9B,yDAKjBoB,EAAgCpB,IALf,yDAAH,sDASZwB,EAAsB,uCAAG,WAAOC,GAAP,mBAAAnuD,EAAA,6DAC9B+nB,EAAQomC,EAAW5tC,KAAI,SAAC4D,GAAD,MAAS,CACpCmU,KAAM,cACNhyB,QAASqC,cACT4vB,OAAQ,CAACpU,OAJyB,kBAOPwU,YAAYjT,EAAcqC,EAAO,CAAE6Q,gBAAgB,IAP5C,cAO5Bw1B,EAP4B,OAQ5BC,EAAqBD,EAAa7tC,KAAI,SAAC9E,EAAKq7B,GAAN,OAC1C2V,EAAkChxC,EAAI,GAAI0yC,EAAWrX,OATrB,kBAW3BuX,GAX2B,uCAalC7uC,QAAQC,MAAR,MAbkC,kBAc3BsI,EAAMxH,KAAI,SAAC0I,EAAM6tB,GAAP,OAAiBgX,EAAgCK,EAAWrX,QAd3C,yDAAH,sDAkBtBwX,EAA8B,uCAAG,wCAAAtuD,EAAA,sEAEpC+nB,EAAQ,CAAC,mBAAoB,iCAAiCxH,KAAI,SAACq5B,GAAD,MAAa,CACnFtzC,QAASqC,cACT2vB,KAAMshB,MAJkC,SAM2BjhB,YACnEjT,EACAqC,GARwC,gEAMlCwmC,EANkC,2BAMdC,EANc,uBAWnC,CACLD,iBAAkBA,EAAmBA,EAAiB5sD,WAAa,KACnE6sD,8BAA+BA,EAAgCA,EAA8B7sD,WAAa,OAblE,2DAgBnC,CACL4sD,iBAAkB,KAClBC,8BAA+B,OAlBS,0DAAH,qDAuB9BC,EAAmB,SAACF,GAG/B,IAFA,IAAMG,EAAiBvoD,SAASooD,EAAkB,IAC5CI,EAAW,GACRj2B,EAAI,EAAGA,EAAIk2B,IAAgCl2B,IAClDi2B,EAAS1qB,KAAKyqB,EAAiBh2B,GAEjC,OAAOi2B,EAASpuC,KAAI,SAACsuC,GAAD,OAAaA,EAAQltD,eAG9BmtD,EAA4B,SACvCb,GAEA,IACqBc,EAGjBd,EAHFpB,kBACiBmC,EAEff,EAFFnB,gBACuBmC,EACrBhB,EADFf,sBAGIJ,EAAkBlqC,mBAAQ,WAC9B,OAAO,IAAIpf,IAAUwrD,KACpB,CAACA,IAEEnC,EAAoBjqC,mBAAQ,WAChC,OAAO,IAAIpf,IAAUurD,KACpB,CAACA,IAEE7B,EAAwBtqC,mBAAQ,WACpC,OAAO,IAAIpf,IAAUyrD,KACpB,CAACA,IAEJ,MAAO,CACLzwB,UAAWyvB,EAAYzvB,UACvBkuB,UAAWuB,EAAYvB,UACvBwC,YAAajB,EAAYiB,YACzB7c,OAAQ4b,EAAY5b,OACpBsa,UAAWsB,EAAYtB,UACvBC,QAASqB,EAAYrB,QACrBC,oBACAC,kBACAC,YAAakB,EAAYlB,YACzBC,cAAeiB,EAAYjB,cAC3BC,aAAcgB,EAAYhB,aAC1BC,wBACAC,YAAac,EAAYd,YACzBC,eAAgBa,EAAYb,eAC5BC,uBAAwBY,EAAYZ,uBACpCC,iBAAkBW,EAAYX,mBAIrB6B,EAAsB,SAACC,GAElC,OADuBA,EAAQ9mC,QAAO,SAAC+mC,GAAD,OAAYA,EAAOhd,UACnCxpB,OAAS,I,s3nBC1JlBymC,EAvBsB,CAQnC,CACE7uC,IAAK,KACLW,SAAU,aACV4jC,UAAW,IACXC,UAAW,IACXC,UAAW,IACXC,YAAa,CACX,GAAI,GACJ,GAAI,8CAENtjC,MAAOnb,IAAO2O,IACdoN,WAAY/b,IAAOkB,O,iECsFR2nD,EAxFA,uCAAG,WAAOjuC,GAAP,mEAAAthB,EAAA,6DACRygB,EAAwCa,EAAxCb,IAAK0kC,EAAmC7jC,EAAnC6jC,YAAatjC,EAAsBP,EAAtBO,MAAOY,EAAenB,EAAfmB,WAC3B+sC,EAAYnpD,YAAW8+C,GACvBp9B,EAAQ,CAEZ,CACEzhB,QAASD,YAAWwb,EAAMvb,SAC1BgyB,KAAM,YACNC,OAAQ,CAACi3B,IAGX,CACElpD,QAASD,YAAWoc,EAAWnc,SAC/BgyB,KAAM,YACNC,OAAQ,CAACi3B,IAGX,CACElpD,QAASkpD,EACTl3B,KAAM,YACNC,OAAQ,CAACjxB,gBAGX,CACEhB,QAASkpD,EACTl3B,KAAM,eAGR,CACEhyB,QAASD,YAAWwb,EAAMvb,SAC1BgyB,KAAM,YAGR,CACEhyB,QAASD,YAAWoc,EAAWnc,SAC/BgyB,KAAM,aAnCM,SAwCRrQ,YAAUwnC,EAAO1nC,GAxCT,sCAuCT2nC,EAvCS,KAuCOC,EAvCP,KAuC4BC,EAvC5B,KAuC8C1tC,EAvC9C,KAuC6Dk9B,EAvC7D,KAuC4EyQ,EAvC5E,KA2CVC,EAAe,IAAItsD,IAAUosD,GAAkB9sD,IAAI,IAAIU,IAAU0e,IAGjEG,EAAmB,IAAI7e,IAAUksD,GAAgB5sD,IAAIY,IAAQC,IAAIy7C,IACjE2Q,EAAwB,IAAIvsD,IAAUmsD,GAAqB7sD,IAAIY,IAAQC,IAAIksD,IAG3EG,EAAgB3tC,EAAiB5e,MAAMqsD,GACvCG,EAAqBF,EAAsBtsD,MAAMqsD,GAGjD3tC,EAAsB8tC,EAAmBxsD,MAAM,IAAID,IAAU,KAIjEid,GAAe,IAARA,EA1DO,kCA2DJwH,YAAUioC,EAAe,CAC7B,CACE5pD,QAASgB,cACTgxB,KAAM,WACNC,OAAQ,CAAC9X,IAEX,CACEna,QAASgB,cACTgxB,KAAM,qBAnEA,iDAsEV,CAAC,KAAM,MAtEG,yCAyDT63B,EAzDS,KAyDHC,EAzDG,KAwEVC,EAAaF,EAAO,IAAI3sD,IAAJ,UAAc2sD,EAAKE,kBAAnB,aAAc,EAAiBhX,MAAQvgC,IAC3Dw3C,EAAaF,EAAkBC,EAAWvtD,IAAI,IAAIU,IAAU4sD,IAAoBt3C,IAzEtE,kBA2ET,CACLk3C,cAAeA,EAAc52C,SAC7B62C,mBAAoBA,EAAmB72C,SACvCiJ,iBAAkBA,EAAiBjJ,SACnC22C,sBAAuBA,EAAsB32C,SAC7C8I,cAAe,IAAI1e,IAAU0e,GAAe9I,SAC5C+I,oBAAqBA,EAAoB/I,SACzCm3C,kBAAmBR,EAAsBjtD,IAAIuf,GAAkBjJ,SAC/Dk3C,WAAYA,EAAWl3C,SACvBo3C,WAAW,GAAD,OAAKH,EAAWvtD,IAAI,KAAKnB,WAAzB,OApFI,4CAAH,sDCXA4tD,EANA,uCAAG,WAAOjuC,GAAP,eAAAthB,EAAA,sEACaywD,EAAoBnvC,GADjC,cACVovC,EADU,oDAGJpvC,GAASovC,IAHL,2CAAH,sDCUAC,EAVC,uCAAG,WAAOC,GAAP,eAAA5wD,EAAA,sEACEk4C,QAAQC,IACzByY,EAAarwC,IAAb,uCAAiB,WAAOswC,GAAP,eAAA7wD,EAAA,sEACIuvD,EAAUsB,GADd,cACTvvC,EADS,yBAERA,GAFQ,2CAAjB,wDAFe,cACXtgB,EADW,yBAOVA,GAPU,2CAAH,sDCKH8vD,EAA0B,SAAC/vC,GAA4E,IAA7DgwC,EAA4D,uDAA3B,CAAC,OAAQ,QACzFC,EAAgBjwC,EAAME,MAAK,SAACK,GAChC,OAAOyvC,EAAqB5K,MAAK,SAAC1jC,GAChC,OAAOnB,EAAKmB,WAAWjX,SAAWiX,QAGtC,OAAOuuC,GAAiBjwC,EAAM,ICT1BkwC,EAAyB,SAAClwC,EAAeo+B,EAAqB4R,GAClE,IAAMG,EAAuBnwC,EAAMuH,QAAO,SAAChH,GAAD,OAAUA,EAAKO,MAAMrW,SAAW2zC,KAE1E,OADqB2R,EAAwBI,EAAsBH,IAI/DI,EAAwB,SAAC7vC,EAAY8vC,EAAsBC,GAC/D,IAAMC,EAAuB9oC,QAAQlH,EAAKivC,mBAE1C,GAA+B,SAA3BjvC,EAAKmB,WAAWjX,OAClB,OAAO8lD,EAAuB,IAAI9tD,IAAU8d,EAAKivC,mBAAqBz3C,IAGxE,GAA+B,SAA3BwI,EAAKmB,WAAWjX,OAClB,OAAO8lD,EAAuBD,EAAa5tD,MAAM6d,EAAKivC,mBAAqBz3C,IAI7E,IAAKs4C,EACH,OAAOt4C,IAQT,GAAyC,SAArCs4C,EAAe3uC,WAAWjX,OAAmB,CAC/C,IAAM+lD,EAAmBF,EAAa5tD,MAAM2tD,EAAeb,mBAC3D,OAAOe,GAAwBC,EAC3B,IAAI/tD,IAAU8d,EAAKivC,mBAAmB9sD,MAAM8tD,GAC5Cz4C,IAGN,GAAyC,SAArCs4C,EAAe3uC,WAAWjX,OAAmB,CAC/C,IAAM+lD,EAAmBH,EAAeb,kBACxC,OAAOe,GAAwBC,EAC3B,IAAI/tD,IAAU8d,EAAKivC,mBAAmB9sD,MAAM8tD,GAC5Cz4C,IAIN,OAAOA,KAGH04C,EAAyB,SAAClwC,EAAY8vC,EAAsBC,GAChE,MAA+B,SAA3B/vC,EAAKmB,WAAWjX,OACXuN,IAGsB,SAA3BuI,EAAKmB,WAAWjX,OACX6lD,EAGJD,EAIoC,SAArCA,EAAe3uC,WAAWjX,OACrB4lD,EAAeb,kBAAoBc,EAAa5tD,MAAM2tD,EAAeb,mBAAqBz3C,IAG1D,SAArCs4C,EAAe3uC,WAAWjX,QACrB4lD,EAAeb,kBAAoB,IAAI/sD,IAAU4tD,EAAeb,mBAGlEz3C,IAXEA,KA8BI24C,EAhBO,uCAAG,WAAO1wC,GAAP,mBAAA/gB,EAAA,6DACjBwiB,EAAczB,EAAME,MAAK,SAACK,GAAD,OAA6B,IAAbA,EAAKb,OAC9C4wC,EAAe7uC,EAAY+tC,kBAAoBx3C,IAAQjW,IAAI0f,EAAY+tC,mBAAqBz3C,IAE5F44C,EAAkB3wC,EAAMR,KAAI,SAACe,GACjC,IAAM8vC,EAAiBH,EAAuBlwC,EAAOO,EAAKmB,WAAWjX,QAC/DmmD,EAAiBR,EAAsB7vC,EAAM8vC,EAAgBC,GAC7DO,EAAkBJ,EAAuBlwC,EAAM8vC,EAAgBC,GAC/DxvC,EAAK,2BAAQP,EAAKO,OAAb,IAAoBC,UAAW6vC,EAAev4C,WACnDqJ,EAAU,2BAAQnB,EAAKmB,YAAb,IAAyBX,UAAW8vC,EAAgBx4C,WACpE,OAAO,2BAAKkI,GAAZ,IAAkBO,QAAOY,kBAVJ,kBAahBivC,GAbgB,2CAAH,sDCnETG,EAAuB,uCAAG,WAAOlzC,EAAiBiyC,GAAxB,qBAAA5wD,EAAA,6DAC/B8xD,EAAoBxqD,cAEpBygB,EAAQ6oC,EAAarwC,KAAI,SAACe,GAE9B,MAAO,CAAEhb,QADiBD,YAAWib,EAAK6jC,aACL7sB,KAAM,YAAaC,OAAQ,CAAC5Z,EAASmzC,OALvC,SAQP7pC,YAAUywB,EAAU3wB,GARb,cAQ/BgqC,EAR+B,OAS/BC,EAAqBD,EAAgBxxC,KAAI,SAAC0xC,GAC9C,OAAO,IAAIzuD,IAAUyuD,GAAW74C,YAVG,kBAY9B44C,GAZ8B,2CAAH,wDAevBE,EAA0B,uCAAG,WAAOvzC,EAAiBiyC,GAAxB,mBAAA5wD,EAAA,6DAClC+nB,EAAQ6oC,EAAarwC,KAAI,SAACe,GAE9B,MAAO,CACLhb,QAFwBD,YAAWib,EAAK6jC,aAGxC7sB,KAAM,YACNC,OAAQ,CAAC5Z,OAN2B,SAUTsJ,YAAUywB,EAAU3wB,GAVX,cAUlCoqC,EAVkC,OAWlCC,EAAsBD,EAAiB5xC,KAAI,SAACkB,GAChD,OAAO,IAAIje,IAAUie,GAAcrI,YAZG,kBAcjCg5C,GAdiC,2CAAH,wDAiB1BC,EAA2B,uCAAG,WAAO1zC,EAAiBiyC,GAAxB,qBAAA5wD,EAAA,6DACnC8xD,EAAoBxqD,cAEpBygB,EAAQ6oC,EAAarwC,KAAI,SAACe,GAC9B,MAAO,CACLhb,QAASwrD,EACTx5B,KAAM,WACNC,OAAQ,CAACjX,EAAKb,IAAK9B,OAPkB,SAWTsJ,YAAUioC,EAAenoC,GAXhB,cAWnCuqC,EAXmC,OAYnCC,EAAuBD,EAAkB/xC,KAAI,SAACmB,GAClD,OAAO,IAAIle,IAAUke,EAAc,GAAG23B,MAAMjgC,YAbL,kBAelCm5C,GAfkC,2CAAH,wDAkB3BC,EAAqB,uCAAG,WAAO7zC,EAAiBiyC,GAAxB,qBAAA5wD,EAAA,6DAC7B8xD,EAAoBxqD,cAEpBygB,EAAQ6oC,EAAarwC,KAAI,SAACe,GAC9B,MAAO,CACLhb,QAASwrD,EACTx5B,KAAM,cACNC,OAAQ,CAACjX,EAAKb,IAAK9B,OAPY,SAWTsJ,YAAUioC,EAAenoC,GAXhB,cAW7B0qC,EAX6B,OAY7BC,EAAiBD,EAAYlyC,KAAI,SAACoB,GACtC,OAAO,IAAIne,IAAUme,GAAUvI,YAbE,kBAe5Bs5C,GAf4B,2CAAH,wDCjC5B/zD,EAA2B,CAAEqC,KAVPqf,IAAYE,KAAI,SAACe,GAAD,mBAAC,eACxCA,GADuC,IAE1CE,SAAU,CACRD,UAAW,IACXE,aAAc,IACdC,cAAe,IACfC,SAAU,UAIgDgxC,uBAAuB,EAAOv1B,gBAAgB,GAE/F9c,EAAmBD,IAAYiI,QAAO,gBAAG7H,EAAH,EAAGA,IAAH,OAAcmyC,YAAcnyC,MAGlEC,EAA4Bq7B,YACvC,kCADuD,uCAEvD,WAAO37B,GAAP,uBAAApgB,EAAA,6DACQ4wD,EAAevwC,IAAYiI,QAAO,SAACuoC,GAAD,OAAgBzwC,EAAK4jB,SAAS6sB,EAAWpwC,QAG3EoyC,EAAwBjC,EAAat0B,OAAOw2B,GAJpD,SAMsBnC,EAAWkC,GANjC,cAMQ9xC,EANR,gBAOgC0wC,EAAiB1wC,GAPjD,cAOQ2wC,EAPR,OAUQqB,EAAwBrB,EAAgBppC,QAAO,SAAChH,GACpD,OAAOA,EAAKb,KAAoB,IAAba,EAAKb,OAX5B,kBAcSsyC,GAdT,4CAFuD,uDA4B5CpyC,EAAyBo7B,YACpC,+BADoD,uCAEpD,yCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAASyB,EAAlB,EAAkBA,KACVwwC,EAAevwC,IAAYiI,QAAO,SAACuoC,GAAD,OAAgBzwC,EAAK4jB,SAAS6sB,EAAWpwC,QADnF,SAEmCoxC,EAAwBlzC,EAASiyC,GAFpE,cAEQoC,EAFR,gBAGsCd,EAA2BvzC,EAASiyC,GAH1E,cAGQqC,EAHR,iBAImCZ,EAA4B1zC,EAASiyC,GAJxE,eAIQsC,EAJR,iBAKiCV,EAAsB7zC,EAASiyC,GALhE,eAKQuC,EALR,yBAOSH,EAAmBzyC,KAAI,SAAC6yC,EAAetc,GAC5C,MAAO,CACLr2B,IAAKmwC,EAAa9Z,GAAOr2B,IACzBc,UAAWyxC,EAAmBlc,GAC9Br1B,aAAcwxC,EAAsBnc,GACpCp1B,cAAewxC,EAAmBpc,GAClCn1B,SAAUwxC,EAAiBrc,QAbjC,4CAFoD,uDAqBzCuc,EAAalX,YAAY,CACpC7jB,KAAM,QACN35B,eACAy9C,SAAU,CACRkX,yBAA0B,SAACzzD,EAAO2gC,GAChC,IAAMmyB,EAAwBnyB,EAAOC,QACrC5gC,EAAM8yD,sBAAwBA,IAGlClW,cAAe,SAACpc,GAEdA,EAAQC,QAAQ5f,EAA0B2U,WAAW,SAACx1B,EAAO2gC,GAC3D3gC,EAAMmB,KAAOnB,EAAMmB,KAAKuf,KAAI,SAACe,GAC3B,IAAMiyC,EAAe/yB,EAAOC,QAAQxf,MAAK,SAACuyC,GAAD,OAAcA,EAAS/yC,MAAQa,EAAKb,OAC7E,OAAO,2BAAKa,GAASiyC,SAKzBlzB,EAAQC,QAAQ3f,EAAuB0U,WAAW,SAACx1B,EAAO2gC,GACxDA,EAAOC,QAAQn/B,SAAQ,SAACmyD,GACtB,IAAQhzC,EAAQgzC,EAARhzC,IACFq2B,EAAQj3C,EAAMmB,KAAKw7C,WAAU,SAACl7B,GAAD,OAAUA,EAAKb,MAAQA,KAC1D5gB,EAAMmB,KAAK81C,GAAX,2BAAyBj3C,EAAMmB,KAAK81C,IAApC,IAA4Ct1B,SAAUiyC,OAExD5zD,EAAMu9B,gBAAiB,QAMei2B,EAAW3W,QAAxC4W,yBAEAD,MAAf,S,0NCpGaK,EAA2B,SAACC,GACvC,IAAWC,EAA+ED,EAAlF,GAAcE,EAAoEF,EAAvE,GAAoBG,EAAmDH,EAAtD,GAAcI,EAAwCJ,EAA3C,GAAkBK,EAAyBL,EAA5B,GAAe55B,EAAa45B,EAAhB,GAE1E,MAAO,CACLC,OAAQtf,OAAOsf,GACfK,OAAQ3f,OAAOuf,GACfC,OAAQxf,OAAOwf,GACfE,QAAS1f,OAAO0f,GAChBD,aACAh6B,aCZEm6B,EAAkBjvC,cAQlBkvC,EAAW,uCAAG,WAAO7tD,GAAP,qBAAAtG,EAAA,+EAEOo0D,MAAM,GAAD,OATbhuD,kCASa,sBAA4BE,IAFxC,WAEVimC,EAFU,QAIF8nB,GAJE,yCAKP,IALO,uBAQgB9nB,EAAS+nB,OARzB,2BAQRC,gBARQ,MAQG,GARH,oBAUTA,GAVS,2DAYT,IAZS,0DAAH,sDAgEFC,EAhDC,uCAAG,WAAOluD,GAAP,yCAAAtG,EAAA,+EAEck0D,EAAgBO,cAAcnuD,GAF5C,UAETmuD,EAFS,gDAKN,CAAEA,gBAAe5uB,QAAS,OALpB,uBAQequB,EAAgBQ,eAAepuD,GAR9C,cAQTqtD,EARS,SASmDD,EAAyBC,GAAnFC,EATO,EASPA,OAAQK,EATD,EASCA,OAAQH,EATT,EASSA,OAAQE,EATjB,EASiBA,QAASD,EAT1B,EAS0BA,WAAYh6B,EATtC,EASsCA,SATtC,UAUI46B,YAAQb,GAVZ,eAUTc,EAVS,iBAWQT,EAAY7tD,GAXpB,WAWTiuD,EAXS,QAgBXx6B,EAhBW,kCAiBD86B,YAAgBd,EAAYC,GAjB3B,QAiBbc,EAjBa,OAoBbC,IAAQ91D,IAAR,kBACaqH,GACX,CACEiuD,WACAS,OAAO,gBAAD,iBAAkBF,SAAlB,aAAkB,EAAKG,OAAOC,KAEtC,CAAEC,OAAQ,iBAAkBC,QAAQ,EAAMC,QAAS,KA1BxC,eA8BTxvB,EAAU,CACd+tB,SACAK,SACAH,SACAE,UACAO,WACAR,aACAh6B,WACA+6B,MACAF,QAvCa,kBA0CR,CAAEH,gBAAe5uB,YA1CT,2DA4CR,MA5CQ,0DAAH,sDC3BVlnC,EAA6B,CACjC22D,eAAe,EACf92B,WAAW,EACXi2B,eAAe,EACfzzD,KAAM,MAGKu0D,EAAepZ,YAAY,CACtC7jB,KAAM,UACN35B,eACAy9C,SAAU,CACRoZ,kBAAmB,SAAC31D,GAClBA,EAAM2+B,WAAY,GAEpBi3B,sBAAuB,SAACC,EAAQl1B,GAC9B,MAAmCA,EAAOC,QAAlCoF,EAAR,EAAQA,QAER,MAAO,CACLyvB,eAAe,EACf92B,WAAW,EACXi2B,cALF,EAAiBA,cAMfzzD,KAAM6kC,IAGV8vB,mBAAoB,SAAC91D,GACnBA,EAAM2+B,WAAY,EAClB3+B,EAAMy1D,eAAgB,GAExBM,aAAc,8BAAC,eACVj3D,GADS,IAEZ6/B,WAAW,KAEbq3B,UAAW,SAACh2D,EAAO2gC,GACjB3gC,EAAMmB,KAAKizD,QAAUzzB,EAAOC,YAM3B,EACL80B,EAAa7Y,QADA8Y,EAAR,EAAQA,kBAAmBC,EAA3B,EAA2BA,sBAAuBE,EAAlD,EAAkDA,mBAAoBC,EAAtE,EAAsEA,aAAcC,EAApF,EAAoFA,UAK9EC,EAAe,SAACxvD,GAAD,8CAAqB,WAAO4Z,GAAP,eAAAlgB,EAAA,sEAE7CkgB,EAASs1C,KAFoC,SAGtBhB,EAAWluD,GAHW,OAGvCimC,EAHuC,OAI7CrsB,EAASu1C,EAAsBlpB,IAJc,gDAM7CrsB,EAASy1C,KANoC,yDAArB,uDAUbJ,MAAf,S,8BC3DA,qBAIMQ,EAAwB,CAC5BvqD,OAAQuV,IAAM,GAAGK,SACjB9a,QAASya,IAAM,GAAGokC,YAClB5hD,SAAU,IAGNyyD,EAAc,CAClB,CACE7xC,GAAI,SACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,gBACN29B,UAAW,CACTC,WAAY,eACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,IAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAO2P,KACdkgD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,0FACZC,mBAAoB,EACpB7yB,QAAS,GAEX,CACE1f,GAAI,WACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,uBACN29B,UAAW,CACTC,WAAY,sBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,sBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOkP,SACd2gD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,iGACZC,mBAAoB,IACpB7yB,QAAS,GAEX,CACE1f,GAAI,UACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,yBACN29B,UAAW,CACTC,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,IAErBC,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,IAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAO2N,IACdkiD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,mGACZC,mBAAoB,IACpB7yB,QAAS,GAEX,CACE1f,GAAI,OACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,cACNg+B,cAAe,CACbJ,WAAY,eACZC,YAAa,aACbC,WAAY,aACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAO0G,KACdmpD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,QACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,qBACNg+B,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOiH,MACd4oD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,+FACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,QACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,cACNg+B,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOyH,IACdooD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,UACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,kBACNg+B,cAAe,CACbJ,WAAY,kBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOoI,MACdynD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,2FACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,SACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,yBACNg+B,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOsI,OACdunD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,sGACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,QACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,cACNg+B,cAAe,CACbJ,WAAY,gBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOyI,IACdonD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,wFACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,QACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,gBACNg+B,cAAe,CACbJ,WAAY,gBACZC,YAAa,WACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAO+I,MACd8mD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,gGACZC,mBAAoB,KACpB7yB,QAAS,GAEX,CACE1f,GAAI,QACJ7d,QAAS,6CACTyzB,UAAU,EACVzB,KAAM,cACNg+B,cAAe,CACbJ,WAAY,oBACZC,YAAa,aACbC,WAAY,WACZC,kBAAmB,GAErBtmC,SAAUgmC,EACVl0C,MAAOnb,IAAOoJ,MACdymD,mBAAoB,QACpBC,WAAY,YACZC,WAAY,oFACZC,mBAAoB,KACpB7yB,QAAS,IAIEmyB,O,6BChPf,WAiBeW,IAVU,SAAC90D,GACxB,IAAMk2B,EAAMjyB,mBAMZ,OAJA/F,qBAAU,WACRg4B,EAAI7xB,QAAUrE,IACb,CAACA,IAEGk2B,EAAI7xB,U,wVCKN,SAAS6jD,IACd,OAAOjpC,aAAwC,SAACjhB,GAAD,OAAWA,EAAM2mC,QAG3D,SAASmK,IAMd,IAAMzwB,EAAWgI,cACX8hC,EAAsBlpD,uBAC1B,SAAC6hC,EAAc5S,GACb7P,EACExH,YAAe,CACbiqB,QACAH,WAAYzS,aAAoBllB,QAAQklB,EAASzpB,QAAUypB,IAAaC,QAAQ,MAAQ,QAI9F,CAAC9P,IAqBH,MAAO,CACL+pC,eAnBqBnpD,uBAAY,WACjCof,EAASvH,iBACR,CAACuH,IAkBF8pC,sBACAE,YAjBkBppD,uBAClB,SAAC6hC,EAAcJ,GACbriB,EAAShd,YAAU,CAAEy/B,QAAOJ,kBAE9B,CAACriB,IAcDwwB,kBAXwB5vC,uBACxB,SAAC4hC,GACCxiB,EAASrH,YAAa,CAAE6pB,iBAE1B,CAACxiB,KAYE,SAASiqC,EAAetoD,EAAgBkuB,GAC7C,GAAKluB,GAAUkuB,EAGf,IACE,IAAMq6B,EAAmBC,qBAAWxoD,EAAOkuB,EAASxsB,UAAU5B,WAC9D,GAAyB,MAArByoD,EACF,OAAOr6B,aAAoBllB,QACvB,IAAI+/B,cAAY7a,EAAUlB,OAAKC,OAAOs7B,IACtC3M,iBAAeC,MAAM7uB,OAAKC,OAAOs7B,IAEvC,MAAO3qC,GAEPD,QAAQsK,MAAR,yCAAgDjoB,EAAhD,KAA0D4d,IAM9D,IAAM6qC,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB53C,EAAc63C,GACrC,OACE73C,EAAMqqC,MAAMyN,KAAKtE,MAAK,SAACtkC,GAAD,OAAWA,EAAMvb,UAAYkkD,MACnD73C,EAAMqqC,MAAMhhB,MAAMmqB,MAAK,SAACprB,GAAD,OAAUA,EAAK2vB,eAAepkD,UAAYkkD,KAK9D,SAASG,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDjsC,EAAYnZ,cAAZmZ,QACA7c,EAAMC,cAAND,EAER,EAMIioD,IALF1nB,EADF,EACEA,iBACAE,EAFF,EAEEA,WAC6BK,EAH/B,EAGG3/B,IAAMq/B,OAAUE,WACaK,EAJhC,EAIG5/B,IAAMw/B,QAAWD,WAClBE,EALF,EAKEA,UAGImoB,EAAgBrhB,YAAY5G,GAC5BkoB,EAAiBthB,YAAY3G,GAC7BkoB,EAAkB7d,YAAM,OAACxK,QAAD,IAACA,SAAapjC,GACtC20C,EAAiB,UAAkB,OAAdvR,EAAqB/jB,EAAUosC,EAAgBzkD,eAAnD,QAA+D,KAEhF0kD,EAAwB1E,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,QACtEurD,QADsE,IACtEA,SAAiBvrD,EADqD,OAEtEwrD,QAFsE,IAEtEA,SAAkBxrD,IAGd2rD,EAAqB5oB,IAAqBp/B,IAAMq/B,MAChD4oB,EAAef,EAAe5nB,EAAD,UAAc0oB,EAAYJ,EAAgBC,SAA1C,aAA6DxrD,GAE1F6rD,EAAmBC,YAAgBH,EAAYC,OAAe5rD,EAA5B,OAAuCwrD,QAAvC,IAAuCA,SAAkBxrD,GAC3F+rD,EAAoBC,YAAgB,OAACT,QAAD,IAACA,SAAiBvrD,EAAY2rD,OAA2B3rD,EAAf4rD,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBvoD,IAAMq/B,MAAQ0oB,EAAsB,IADjB,cAEnB/nD,IAAMw/B,OAASuoB,EAAsB,IAFlB,GAKhBzE,GAA2C,mBAC9CtjD,IAAMq/B,MADwC,OAChCuoB,QADgC,IAChCA,SAAiBvrD,GADe,cAE9C2D,IAAMw/B,OAFwC,OAE/BqoB,QAF+B,IAE/BA,SAAkBxrD,GAFa,IAM5Cqf,IACHisC,EAAa9oD,EAAE,mBAGZopD,KACHN,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,oBAG1BykD,EAAWtjD,IAAMq/B,QAAWikB,EAAWtjD,IAAMw/B,UAChDmoB,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,mBAG/B,IACyB,EADnB2pD,EAAc19B,YAAUkmB,GAC9B,GAAKA,GAAOwX,GAEL,IAC6C,IAAlDnB,EAAwBpjC,QAAQukC,IAC/BN,GAAoBZ,EAAgBY,EAAkBM,IACtDJ,GAAqBd,EAAgBc,EAAmBI,GACzD,CAAC,IAAD,EACAb,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,2BAN7B8oD,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,qBAS/B,MAA0B83B,cAAnB6S,EAAP,oBAEMif,EAA0BH,GAAW9e,GAAmBC,YAA+B6e,EAAS9e,GAGtG,EAA8B,CAC5B+e,EAAiBvoD,IAAMq/B,OACvBopB,EAA0BA,EAAwBzoD,IAAMq/B,OAAS,MAF5DqpB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUjgB,SAASkgB,KAC9ChB,EAAa9oD,EAAE,gCAAiC,CAAE0J,OAAQogD,EAAS77B,SAASvkB,UAGvE,CACL+6C,aACAiF,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWjsD,EACpBsrD,cAIJ,SAASiB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMrkC,EAAQsG,YAAU+9B,GACxB,GAAIrkC,EAAO,OAAOA,EAClB,GAA+B,QAA3BqkC,EAASpiB,cAAyB,MAAO,MAC7C,IAAc,IAAVjiB,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAM2hC,EAAiB,qFACjB/K,EAAgB,sBAUf,SAAS0N,EAA2BC,GAAgC,IAAD,EACpEnB,EAAgBgB,EAA8BG,EAASnB,eACvDC,EAAiBe,EAA8BG,EAASlB,gBACxDD,IAAkBC,IACmB,kBAA5BkB,EAASlB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCgB,EA+B9BppB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B3U,YAAU2U,KAEtB0mB,EAAergB,KAAKrG,IACpB2b,EAActV,KAAKrG,GADoBA,EAEpC,MAcWupB,CAAmBD,EAAStpB,WAE9C,OAAO,EAAP,iBACGz/B,IAAMq/B,MAAQ,CACbE,WAAYqoB,IAFhB,cAIG5nD,IAAMw/B,OAAS,CACdD,WAAYsoB,IALhB,2BA/B2B,kBAFSgB,EAwCOE,EAASE,cAtCZxM,MAAMtE,WAAW0Q,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASzzB,cAA6Bp1B,IAAMw/B,OAASx/B,IAAMq/B,MAmC9E6pB,CAAkCH,EAASI,aAR/D,0BASE1pB,GATF,EAcK,SAAS2pB,IAGd,IAAQ1mD,EAAYH,cAAZG,QACFua,EAAWgI,cACX8jC,EAAWM,cACjB,EAA4B7sD,qBAA5B,mBAAOypB,EAAP,KAAeqjC,EAAf,KAsBA,OAlBAxsD,qBAAU,WACR,GAAK4F,EAAL,CACA,IAAM0oB,EAAS09B,EAA2BC,GAE1C9rC,EACEtH,YAAiB,CACf2pB,WAAYlU,EAAOkU,WACnBI,MAAOtU,EAAOgU,iBACdO,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WACrCK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,WACvCE,UAAW,QAIf6pB,EAAU,CAAE3pB,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WAAYK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,gBAEnG,CAACtiB,EAAUva,IAEPujB,I,wVC1QF,SAAS6gC,IACd,OAAOjpC,aAAwC,SAACjhB,GAAD,OAAWA,EAAM2mC,QAG3D,SAASmK,IAMd,IAAMzwB,EAAWgI,cACX8hC,EAAsBlpD,uBAC1B,SAAC6hC,EAAc5S,GACb7P,EACExH,YAAe,CACbiqB,QACAH,WAAYzS,aAAoBllB,QAAQklB,EAASzpB,QAAUypB,IAAaC,QAAQ,MAAQ,QAI9F,CAAC9P,IAqBH,MAAO,CACL+pC,eAnBqBnpD,uBAAY,WACjCof,EAASvH,iBACR,CAACuH,IAkBF8pC,sBACAE,YAjBkBppD,uBAClB,SAAC6hC,EAAcJ,GACbriB,EAAShd,YAAU,CAAEy/B,QAAOJ,kBAE9B,CAACriB,IAcDwwB,kBAXwB5vC,uBACxB,SAAC4hC,GACCxiB,EAASrH,YAAa,CAAE6pB,iBAE1B,CAACxiB,KAYE,SAASiqC,EAAetoD,EAAgBkuB,GAC7C,GAAKluB,GAAUkuB,EAGf,IACE,IAAMq6B,EAAmBC,qBAAWxoD,EAAOkuB,EAASxsB,UAAU5B,WAC9D,GAAyB,MAArByoD,EACF,OAAOr6B,aAAoBllB,QACvB,IAAI+/B,cAAY7a,EAAUlB,OAAKC,OAAOs7B,IACtC3M,iBAAeC,MAAM7uB,OAAKC,OAAOs7B,IAEvC,MAAO3qC,GAEPD,QAAQsK,MAAR,yCAAgDjoB,EAAhD,KAA0D4d,IAM9D,IAAM6qC,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB53C,EAAc63C,GACrC,OACE73C,EAAMqqC,MAAMyN,KAAKtE,MAAK,SAACtkC,GAAD,OAAWA,EAAMvb,UAAYkkD,MACnD73C,EAAMqqC,MAAMhhB,MAAMmqB,MAAK,SAACprB,GAAD,OAAUA,EAAK2vB,eAAepkD,UAAYkkD,KAK9D,SAASG,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDjsC,EAAYnZ,cAAZmZ,QACA7c,EAAMC,cAAND,EAER,EAMIioD,IALF1nB,EADF,EACEA,iBACAE,EAFF,EAEEA,WAC6BK,EAH/B,EAGG3/B,IAAMq/B,OAAUE,WACaK,EAJhC,EAIG5/B,IAAMw/B,QAAWD,WAClBE,EALF,EAKEA,UAGImoB,EAAgBrhB,YAAY5G,GAC5BkoB,EAAiBthB,YAAY3G,GAC7BkoB,EAAkB7d,YAAM,OAACxK,QAAD,IAACA,SAAapjC,GACtC20C,EAAiB,UAAkB,OAAdvR,EAAqB/jB,EAAUosC,EAAgBzkD,eAAnD,QAA+D,KAEhF0kD,EAAwB1E,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,QACtEurD,QADsE,IACtEA,SAAiBvrD,EADqD,OAEtEwrD,QAFsE,IAEtEA,SAAkBxrD,IAGd2rD,EAAqB5oB,IAAqBp/B,IAAMq/B,MAChD4oB,EAAef,EAAe5nB,EAAD,UAAc0oB,EAAYJ,EAAgBC,SAA1C,aAA6DxrD,GAE1F6rD,EAAmBC,YAAgBH,EAAYC,OAAe5rD,EAA5B,OAAuCwrD,QAAvC,IAAuCA,SAAkBxrD,GAC3F+rD,EAAoBC,YAAgB,OAACT,QAAD,IAACA,SAAiBvrD,EAAY2rD,OAA2B3rD,EAAf4rD,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBvoD,IAAMq/B,MAAQ0oB,EAAsB,IADjB,cAEnB/nD,IAAMw/B,OAASuoB,EAAsB,IAFlB,GAKhBzE,GAA2C,mBAC9CtjD,IAAMq/B,MADwC,OAChCuoB,QADgC,IAChCA,SAAiBvrD,GADe,cAE9C2D,IAAMw/B,OAFwC,OAE/BqoB,QAF+B,IAE/BA,SAAkBxrD,GAFa,IAM5Cqf,IACHisC,EAAa9oD,EAAE,mBAGZopD,KACHN,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,oBAG1BykD,EAAWtjD,IAAMq/B,QAAWikB,EAAWtjD,IAAMw/B,UAChDmoB,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,mBAG/B,IACyB,EADnB2pD,EAAc19B,YAAUkmB,GAC9B,GAAKA,GAAOwX,GAEL,IAC6C,IAAlDnB,EAAwBpjC,QAAQukC,IAC/BN,GAAoBZ,EAAgBY,EAAkBM,IACtDJ,GAAqBd,EAAgBc,EAAmBI,GACzD,CAAC,IAAD,EACAb,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,2BAN7B8oD,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,qBAS/B,MAA0B83B,cAAnB6S,EAAP,oBAEMif,EAA0BH,GAAW9e,GAAmBC,YAA+B6e,EAAS9e,GAGtG,EAA8B,CAC5B+e,EAAiBvoD,IAAMq/B,OACvBopB,EAA0BA,EAAwBzoD,IAAMq/B,OAAS,MAF5DqpB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUjgB,SAASkgB,KAC9ChB,EAAa9oD,EAAE,gCAAiC,CAAE0J,OAAQogD,EAAS77B,SAASvkB,UAGvE,CACL+6C,aACAiF,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWjsD,EACpBsrD,cAIJ,SAASiB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMrkC,EAAQsG,YAAU+9B,GACxB,GAAIrkC,EAAO,OAAOA,EAClB,GAA+B,QAA3BqkC,EAASpiB,cAAyB,MAAO,MAC7C,IAAc,IAAVjiB,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAM2hC,EAAiB,qFACjB/K,EAAgB,sBAUf,SAAS0N,EAA2BC,GAAgC,IAAD,EACpEnB,EAAgBgB,EAA8BG,EAASnB,eACvDC,EAAiBe,EAA8BG,EAASlB,gBACxDD,IAAkBC,IACmB,kBAA5BkB,EAASlB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCgB,EA+B9BppB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B3U,YAAU2U,KAEtB0mB,EAAergB,KAAKrG,IACpB2b,EAActV,KAAKrG,GADoBA,EAEpC,MAcWupB,CAAmBD,EAAStpB,WAE9C,OAAO,EAAP,iBACGz/B,IAAMq/B,MAAQ,CACbE,WAAYqoB,IAFhB,cAIG5nD,IAAMw/B,OAAS,CACdD,WAAYsoB,IALhB,2BA/B2B,kBAFSgB,EAwCOE,EAASE,cAtCZxM,MAAMtE,WAAW0Q,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASzzB,cAA6Bp1B,IAAMw/B,OAASx/B,IAAMq/B,MAmC9E6pB,CAAkCH,EAASI,aAR/D,0BASE1pB,GATF,EAcK,SAAS2pB,IAGd,IAAQ1mD,EAAYH,cAAZG,QACFua,EAAWgI,cACX8jC,EAAWM,cACjB,EAA4B7sD,qBAA5B,mBAAOypB,EAAP,KAAeqjC,EAAf,KAsBA,OAlBAxsD,qBAAU,WACR,GAAK4F,EAAL,CACA,IAAM0oB,EAAS09B,EAA2BC,GAE1C9rC,EACEtH,YAAiB,CACf2pB,WAAYlU,EAAOkU,WACnBI,MAAOtU,EAAOgU,iBACdO,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WACrCK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,WACvCE,UAAW,QAIf6pB,EAAU,CAAE3pB,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WAAYK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,gBAEnG,CAACtiB,EAAUva,IAEPujB,I,0jZClRG0tC,E,gEAFNC,EAAiB,IAAI1+B,IAAUrL,KAS9B,SAASgqC,EAASvQ,GACvB,IAAQ5gD,EAAYH,cAAZG,QAEFe,EAASkc,mBACb,kBACE2jC,EAAWhmC,KAAI,mCAAEw2C,EAAF,KAAaC,EAAb,WAA4B,CACzCvsB,YAAgBssB,EAAWpxD,GAC3B8kC,YAAgBusB,EAAWrxD,SAE/B,CAACA,EAAS4gD,IAGN0Q,EAAgBr0C,mBACpB,kBACElc,EAAO6Z,KAAI,YAAuB,IAAD,mBAApB8a,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOyP,OAAOxP,GAAUC,IAAKl1B,WAAWg1B,EAAQC,QAAUh8B,OAE1F,CAACoH,IAGG0jB,EAAUK,YAA8BwsC,EAAeJ,EAAgB,eAE7E,OAAOj0C,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,EAAQwP,GAC1B,IAAgBw+B,EAAsBhuC,EAA9BA,OAAkBE,EAAYF,EAAZE,QACpBiS,EAAS30B,EAAOgyB,GAAG,GACnB4C,EAAS50B,EAAOgyB,GAAG,GAEzB,GAAItP,EAAS,MAAO,CAACwtC,EAAUO,QAAS,MACxC,IAAK97B,IAAWC,GAAUD,EAAOyP,OAAOxP,GAAS,MAAO,CAACs7B,EAAUQ,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACN,EAAUS,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBl8B,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOL,EAAP,KAAeC,EAAf,KACA,MAAO,CACL27B,EAAUY,OACV,IAAIj8B,IAAK,IAAIqP,IAAY5P,EAAQs8B,EAAS31D,YAAa,IAAIipC,IAAY3P,EAAQs8B,EAAS51D,mBAG3F,CAACyoB,EAAS1jB,IAGR,SAAS+wD,EAAQp8B,EAAmBC,GACzC,OAAOw7B,EAAS,CAAC,CAACz7B,EAAQC,KAAU,I,SAjD1Bs7B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,6ICAAA,E,gEAFNC,EAAiB,IAAI1+B,IAAUrL,KAS9B,SAASgqC,EAASvQ,GACvB,IAAQ5gD,EAAYH,cAAZG,QAEFe,EAASkc,mBACb,kBACE2jC,EAAWhmC,KAAI,mCAAEw2C,EAAF,KAAaC,EAAb,WAA4B,CACzCvsB,YAAgBssB,EAAWpxD,GAC3B8kC,YAAgBusB,EAAWrxD,SAE/B,CAACA,EAAS4gD,IAGN0Q,EAAgBr0C,mBACpB,kBACElc,EAAO6Z,KAAI,YAAuB,IAAD,mBAApB8a,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOyP,OAAOxP,GAAUC,IAAKl1B,WAAWg1B,EAAQC,QAAUh8B,OAE1F,CAACoH,IAGG0jB,EAAUK,YAA8BwsC,EAAeJ,EAAgB,eAE7E,OAAOj0C,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,EAAQwP,GAC1B,IAAgBw+B,EAAsBhuC,EAA9BA,OAAkBE,EAAYF,EAAZE,QACpBiS,EAAS30B,EAAOgyB,GAAG,GACnB4C,EAAS50B,EAAOgyB,GAAG,GAEzB,GAAItP,EAAS,MAAO,CAACwtC,EAAUO,QAAS,MACxC,IAAK97B,IAAWC,GAAUD,EAAOyP,OAAOxP,GAAS,MAAO,CAACs7B,EAAUQ,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACN,EAAUS,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBl8B,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOL,EAAP,KAAeC,EAAf,KACA,MAAO,CACL27B,EAAUY,OACV,IAAIj8B,IAAK,IAAIqP,IAAY5P,EAAQs8B,EAAS31D,YAAa,IAAIipC,IAAY3P,EAAQs8B,EAAS51D,mBAG3F,CAACyoB,EAAS1jB,IAGR,SAAS+wD,EAAQp8B,EAAmBC,GACzC,OAAOw7B,EAAS,CAAC,CAACz7B,EAAQC,KAAU,I,SAjD1Bs7B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,8VCQL,SAAS7M,IACd,OAAOjpC,aAAwC,SAACjhB,GAAD,OAAWA,EAAM2mC,QAG3D,SAASmK,IAMd,IAAMzwB,EAAWgI,cACX8hC,EAAsBlpD,uBAC1B,SAAC6hC,EAAc5S,GACb7P,EACExH,YAAe,CACbiqB,QACAH,WAAYzS,aAAoBllB,IAAQklB,EAASzpB,QAAUypB,IAAaC,IAAQ,MAAQ,QAI9F,CAAC9P,IAqBH,MAAO,CACL+pC,eAnBqBnpD,uBAAY,WACjCof,EAASvH,iBACR,CAACuH,IAkBF8pC,sBACAE,YAjBkBppD,uBAClB,SAAC6hC,EAAcJ,GACbriB,EAAShd,YAAU,CAAEy/B,QAAOJ,kBAE9B,CAACriB,IAcDwwB,kBAXwB5vC,uBACxB,SAAC4hC,GACCxiB,EAASrH,YAAa,CAAE6pB,iBAE1B,CAACxiB,KAYE,SAASiqC,EAAetoD,EAAgBkuB,GAC7C,GAAKluB,GAAUkuB,EAGf,IACE,IAAMq6B,EAAmBC,qBAAWxoD,EAAOkuB,EAASxsB,UAAU5B,WAC9D,GAAyB,MAArByoD,EACF,OAAOr6B,aAAoBllB,IACvB,IAAI+/B,IAAY7a,EAAUlB,IAAKC,OAAOs7B,IACtC3M,IAAeC,MAAM7uB,IAAKC,OAAOs7B,IAEvC,MAAO3qC,GAEPD,QAAQsK,MAAR,yCAAgDjoB,EAAhD,KAA0D4d,IAM9D,IAAM6qC,EAAoC,CACxC,6CACA,6CACA,8CAQF,SAASC,EAAgB53C,EAAc63C,GACrC,OACE73C,EAAMqqC,MAAMyN,KAAKtE,MAAK,SAACtkC,GAAD,OAAWA,EAAMvb,UAAYkkD,MACnD73C,EAAMqqC,MAAMhhB,MAAMmqB,MAAK,SAACprB,GAAD,OAAUA,EAAK2vB,eAAepkD,UAAYkkD,KAK9D,SAASG,IAMb,IAAD,QAwCIC,EAKe,EAIwC,EAhDnDjsC,EAAYnZ,cAAZmZ,QACA7c,EAAMC,cAAND,EAER,EAMIioD,IALF1nB,EADF,EACEA,iBACAE,EAFF,EAEEA,WAC6BK,EAH/B,EAGG3/B,IAAMq/B,OAAUE,WACaK,EAJhC,EAIG5/B,IAAMw/B,QAAWD,WAClBE,EALF,EAKEA,UAGImoB,EAAgBrhB,YAAY5G,GAC5BkoB,EAAiBthB,YAAY3G,GAC7BkoB,EAAkB7d,YAAM,OAACxK,QAAD,IAACA,SAAapjC,GACtC20C,EAAiB,UAAkB,OAAdvR,EAAqB/jB,EAAUosC,EAAgBzkD,eAAnD,QAA+D,KAEhF0kD,EAAwB1E,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,QACtEurD,QADsE,IACtEA,SAAiBvrD,EADqD,OAEtEwrD,QAFsE,IAEtEA,SAAkBxrD,IAGd2rD,EAAqB5oB,IAAqBp/B,IAAMq/B,MAChD4oB,EAAef,EAAe5nB,EAAD,UAAc0oB,EAAYJ,EAAgBC,SAA1C,aAA6DxrD,GAE1F6rD,EAAmBC,YAAgBH,EAAYC,OAAe5rD,EAA5B,OAAuCwrD,QAAvC,IAAuCA,SAAkBxrD,GAC3F+rD,EAAoBC,YAAgB,OAACT,QAAD,IAACA,SAAiBvrD,EAAY2rD,OAA2B3rD,EAAf4rD,GAE9EK,EAAUN,EAAYE,EAAmBE,EAEzCG,GAAgB,mBACnBvoD,IAAMq/B,MAAQ0oB,EAAsB,IADjB,cAEnB/nD,IAAMw/B,OAASuoB,EAAsB,IAFlB,GAKhBzE,GAA2C,mBAC9CtjD,IAAMq/B,MADwC,OAChCuoB,QADgC,IAChCA,SAAiBvrD,GADe,cAE9C2D,IAAMw/B,OAFwC,OAE/BqoB,QAF+B,IAE/BA,SAAkBxrD,GAFa,IAM5Cqf,IACHisC,EAAa9oD,EAAE,mBAGZopD,KACHN,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,oBAG1BykD,EAAWtjD,IAAMq/B,QAAWikB,EAAWtjD,IAAMw/B,UAChDmoB,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,mBAG/B,IACyB,EADnB2pD,EAAc19B,YAAUkmB,GAC9B,GAAKA,GAAOwX,GAEL,IAC6C,IAAlDnB,EAAwBpjC,QAAQukC,IAC/BN,GAAoBZ,EAAgBY,EAAkBM,IACtDJ,GAAqBd,EAAgBc,EAAmBI,GACzD,CAAC,IAAD,EACAb,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,2BAN7B8oD,EAAU,UAAGA,SAAH,QAAiB9oD,EAAE,qBAS/B,MAA0B83B,cAAnB6S,EAAP,oBAEMif,EAA0BH,GAAW9e,GAAmBC,YAA+B6e,EAAS9e,GAGtG,EAA8B,CAC5B+e,EAAiBvoD,IAAMq/B,OACvBopB,EAA0BA,EAAwBzoD,IAAMq/B,OAAS,MAF5DqpB,EAAP,KAAkBC,EAAlB,KASA,OAJID,GAAaC,GAAYD,EAAUjgB,SAASkgB,KAC9ChB,EAAa9oD,EAAE,gCAAiC,CAAE0J,OAAQogD,EAAS77B,SAASvkB,UAGvE,CACL+6C,aACAiF,mBACAN,eACAK,QAAO,OAAEA,QAAF,IAAEA,SAAWjsD,EACpBsrD,cAIJ,SAASiB,EAA8BC,GACrC,GAAwB,kBAAbA,EAAuB,CAChC,IAAMrkC,EAAQsG,YAAU+9B,GACxB,GAAIrkC,EAAO,OAAOA,EAClB,GAA+B,QAA3BqkC,EAASpiB,cAAyB,MAAO,MAC7C,IAAc,IAAVjiB,EAAiB,MAAO,MAE9B,cAAO,YAAS,GAYlB,IAAM2hC,EAAiB,qFACjB/K,EAAgB,sBAUf,SAAS0N,EAA2BC,GAAgC,IAAD,EACpEnB,EAAgBgB,EAA8BG,EAASnB,eACvDC,EAAiBe,EAA8BG,EAASlB,gBACxDD,IAAkBC,IACmB,kBAA5BkB,EAASlB,eAClBD,EAAgB,GAEhBC,EAAiB,IAIrB,IA/BoCgB,EA+B9BppB,EApBR,SAA4BA,GAC1B,MAAyB,kBAAdA,EAA+B,KAC1B3U,YAAU2U,KAEtB0mB,EAAergB,KAAKrG,IACpB2b,EAActV,KAAKrG,GADoBA,EAEpC,MAcWupB,CAAmBD,EAAStpB,WAE9C,OAAO,EAAP,iBACGz/B,IAAMq/B,MAAQ,CACbE,WAAYqoB,IAFhB,cAIG5nD,IAAMw/B,OAAS,CACdD,WAAYsoB,IALhB,2BA/B2B,kBAFSgB,EAwCOE,EAASE,cAtCZxM,MAAMtE,WAAW0Q,IAAwB,GAAXA,GA+BtE,iCA5BF,SAA2CA,GACzC,MAA2B,kBAAbA,GAAoD,WAA3BA,EAASzzB,cAA6Bp1B,IAAMw/B,OAASx/B,IAAMq/B,MAmC9E6pB,CAAkCH,EAASI,aAR/D,0BASE1pB,GATF,EAcK,SAAS2pB,IAGd,IAAQ1mD,EAAYH,cAAZG,QACFua,EAAWgI,cACX8jC,EAAWM,cACjB,EAA4B7sD,qBAA5B,mBAAOypB,EAAP,KAAeqjC,EAAf,KAsBA,OAlBAxsD,qBAAU,WACR,GAAK4F,EAAL,CACA,IAAM0oB,EAAS09B,EAA2BC,GAE1C9rC,EACEtH,YAAiB,CACf2pB,WAAYlU,EAAOkU,WACnBI,MAAOtU,EAAOgU,iBACdO,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WACrCK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,WACvCE,UAAW,QAIf6pB,EAAU,CAAE3pB,gBAAiBvU,EAAOprB,IAAMq/B,OAAOE,WAAYK,iBAAkBxU,EAAOprB,IAAMw/B,QAAQD,gBAEnG,CAACtiB,EAAUva,IAEPujB,I,uIClRG0tC,E,gEAFNC,EAAiB,IAAI1+B,IAAUrL,KAS9B,SAASgqC,EAASvQ,GACvB,IAAQ5gD,EAAYH,cAAZG,QAEFe,EAASkc,mBACb,kBACE2jC,EAAWhmC,KAAI,mCAAEw2C,EAAF,KAAaC,EAAb,WAA4B,CACzCvsB,YAAgBssB,EAAWpxD,GAC3B8kC,YAAgBusB,EAAWrxD,SAE/B,CAACA,EAAS4gD,IAGN0Q,EAAgBr0C,mBACpB,kBACElc,EAAO6Z,KAAI,YAAuB,IAAD,mBAApB8a,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOyP,OAAOxP,GAAUC,OAAKl1B,WAAWg1B,EAAQC,QAAUh8B,OAE1F,CAACoH,IAGG0jB,EAAUK,YAA8BwsC,EAAeJ,EAAgB,eAE7E,OAAOj0C,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,EAAQwP,GAC1B,IAAgBw+B,EAAsBhuC,EAA9BA,OAAkBE,EAAYF,EAAZE,QACpBiS,EAAS30B,EAAOgyB,GAAG,GACnB4C,EAAS50B,EAAOgyB,GAAG,GAEzB,GAAItP,EAAS,MAAO,CAACwtC,EAAUO,QAAS,MACxC,IAAK97B,IAAWC,GAAUD,EAAOyP,OAAOxP,GAAS,MAAO,CAACs7B,EAAUQ,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACN,EAAUS,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBl8B,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOL,EAAP,KAAeC,EAAf,KACA,MAAO,CACL27B,EAAUY,OACV,IAAIj8B,OAAK,IAAIqP,cAAY5P,EAAQs8B,EAAS31D,YAAa,IAAIipC,cAAY3P,EAAQs8B,EAAS51D,mBAG3F,CAACyoB,EAAS1jB,IAGR,SAAS+wD,EAAQp8B,EAAmBC,GACzC,OAAOw7B,EAAS,CAAC,CAACz7B,EAAQC,KAAU,I,SAjD1Bs7B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,6ICAAA,E,gEAFNC,EAAiB,IAAI1+B,IAAUrL,KAS9B,SAASgqC,EAASvQ,GACvB,IAAQ5gD,EAAYH,cAAZG,QAEFe,EAASkc,mBACb,kBACE2jC,EAAWhmC,KAAI,mCAAEw2C,EAAF,KAAaC,EAAb,WAA4B,CACzCvsB,YAAgBssB,EAAWpxD,GAC3B8kC,YAAgBusB,EAAWrxD,SAE/B,CAACA,EAAS4gD,IAGN0Q,EAAgBr0C,mBACpB,kBACElc,EAAO6Z,KAAI,YAAuB,IAAD,mBAApB8a,EAAoB,KAAZC,EAAY,KAC/B,OAAOD,GAAUC,IAAWD,EAAOyP,OAAOxP,GAAUC,OAAKl1B,WAAWg1B,EAAQC,QAAUh8B,OAE1F,CAACoH,IAGG0jB,EAAUK,YAA8BwsC,EAAeJ,EAAgB,eAE7E,OAAOj0C,mBAAQ,WACb,OAAOwH,EAAQ7J,KAAI,SAAC2I,EAAQwP,GAC1B,IAAgBw+B,EAAsBhuC,EAA9BA,OAAkBE,EAAYF,EAAZE,QACpBiS,EAAS30B,EAAOgyB,GAAG,GACnB4C,EAAS50B,EAAOgyB,GAAG,GAEzB,GAAItP,EAAS,MAAO,CAACwtC,EAAUO,QAAS,MACxC,IAAK97B,IAAWC,GAAUD,EAAOyP,OAAOxP,GAAS,MAAO,CAACs7B,EAAUQ,QAAS,MAC5E,IAAKF,EAAU,MAAO,CAACN,EAAUS,WAAY,MAC7C,IAAQC,EAAuBJ,EAAvBI,SAAUC,EAAaL,EAAbK,SAClB,EAAyBl8B,EAAOsB,YAAYrB,GAAU,CAACD,EAAQC,GAAU,CAACA,EAAQD,GAAlF,mBAAOL,EAAP,KAAeC,EAAf,KACA,MAAO,CACL27B,EAAUY,OACV,IAAIj8B,OAAK,IAAIqP,cAAY5P,EAAQs8B,EAAS31D,YAAa,IAAIipC,cAAY3P,EAAQs8B,EAAS51D,mBAG3F,CAACyoB,EAAS1jB,IAGR,SAAS+wD,EAAQp8B,EAAmBC,GACzC,OAAOw7B,EAAS,CAAC,CAACz7B,EAAQC,KAAU,I,SAjD1Bs7B,O,qBAAAA,I,2BAAAA,I,mBAAAA,I,sBAAAA,M,wGCJG,SAASc,IACtB,IAAMrnB,EAAMvvB,aAA8B,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKuB,gBAC1Dm9B,ECJO,WAA4D,IAAD,IAClE1vC,EAAY8E,cAClB,iBAAOrC,YAAoBzC,EAAW,mCAAtC,iBAAO,EAA4DiB,cAAnE,aAAO,EAAqE,GDErD0uC,GACvB,OAAOh1C,mBAAQ,WACb,GAAI+0C,GAAkBtnB,EAAK,OAAOsnB,EAAelpC,IAAI4hB,KAEpD,CAACsnB,EAAgBtnB,M,wKEGhBwnB,EAAgBz1D,IAAOU,IAAV,6NAMR,qBAAG6zB,MAAkBG,OAAOU,QACjB,qBAAGb,MAAkBG,OAAOghC,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7BxR,EAA4B,EAA5BA,WAAYtW,EAAgB,EAAhBA,UAC/CtqC,EAAYH,cAAZG,QACFe,EACJf,GAAW4gD,EACPA,EAAWhmC,KAAI,SAACwP,GACd,OAAO0a,YAAgB1a,EAAUpqB,MAEnC,GAEAqyD,EAAkDhwB,cAExD,OACE,cAAC,KAAD,CAAO4I,MAAM,qBAAqBE,SAAS,QAAQb,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYltC,IAAI,KAAhB,UACG2D,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,EACrB,OACEA,GACAm2C,GACA52D,OAAOC,KAAK22D,GAAmBh0B,SAASniB,EAAMvb,UAC5C,eAAC,IAAD,CAAyDvD,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwtB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,UAAOpU,EAAMrW,YAEd7F,GACC,cAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5+C,MAAM,cAAcg5B,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAxF,SACGkc,EAAMvb,YAPb,UAAiBub,EAAMvb,eAAvB,aAAiB,EAAeg2B,OAAO,qBAc7C,cAAC,IAAD,CAAYv5B,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASo1D,EAAT,GAA8F,IAAzD5R,EAAwD,EAAxDA,WAClD,EAAyB1U,aAAS,cAACkmB,EAAD,CAAkBxR,WAAYA,KAAzD6R,EAAP,oBAEA,OACE,cAACP,EAAD,UACE,cAAC,IAAD,CAAQxoB,QAAQ,OAAO31B,QAAS0+C,EAAhC,oD,6FCzEAC,EAA6C,GA+BpC5O,IAtBmB,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,KAAME,EAAmB,EAAnBA,IAAQvF,EAAW,iBAC5D,EAAoB9kD,mBAAiB,GAA5B0f,EAAT,oBAEMm5C,EAA0B1O,EAAK3oC,MAAK,SAACojB,GAAD,OAAQg0B,EAASh0B,MAE3D,OAAIi0B,EAEA,+CACM/T,GADN,IAEEuF,IAAKA,EACLwO,IAAKA,EACLC,QAAS,WACHD,IAAKD,EAASC,IAAO,GACzBn5C,GAAQ,SAACuZ,GAAD,OAAOA,EAAI,SAMpB,cAAC,IAAD,eAAc6rB,M,4JCtBjBiF,EAAapnD,YAAOqnD,IAAPrnD,CAAH,2DACL,qBAAG6zB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDnG,EAOC,EAPDA,SAOC,IANDkG,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMuzB,EAAeC,YAAiB55B,aAAoB0kB,IAAmB1kB,EAAS8kB,aAAUv1C,GAE1FsqD,EAAiBhnC,mBAAQ,WAC7B,OAAImN,IAAaC,QAAc,GAE3BD,aAAoBllB,QAClBklB,aAAoB0kB,IAChB,GAAN,mBAAWiV,GAAX,CAAyBG,YAAgB95B,EAASzpB,WAE7C,CAACujD,YAAgB95B,EAASzpB,UAE5B,KACN,CAACypB,EAAU25B,IAEd,OAAI35B,IAAaC,QACR,cAAC,IAAD,CAAa1tB,MAAO2zB,EAAME,MAAOA,IAGnC,cAACqzB,EAAD,CAAYvzB,KAAMA,EAAM2zB,KAAMA,EAAME,IAAG,2BAAK/5B,QAAL,IAAKA,OAAL,EAAKA,EAAUvkB,cAAf,QAAyB,QAAzB,SAAyC2qB,MAAOA,M,4JChC1FqzB,EAAapnD,YAAOqnD,IAAPrnD,CAAH,2DACL,qBAAG6zB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDnG,EAOC,EAPDA,SAOC,IANDkG,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMuzB,EAAeC,YAAiB55B,aAAoB0kB,IAAmB1kB,EAAS8kB,aAAUv1C,GAE1FsqD,EAAiBhnC,mBAAQ,WAC7B,OAAImN,IAAaC,QAAc,GAE3BD,aAAoBllB,QAClBklB,aAAoB0kB,IAChB,GAAN,mBAAWiV,GAAX,CAAyBG,YAAgB95B,EAASzpB,WAE7C,CAACujD,YAAgB95B,EAASzpB,UAE5B,KACN,CAACypB,EAAU25B,IAEd,OAAI35B,IAAaC,QACR,cAAC,IAAD,CAAa1tB,MAAO2zB,EAAME,MAAOA,IAGnC,cAACqzB,EAAD,CAAYvzB,KAAMA,EAAM2zB,KAAMA,EAAME,IAAG,2BAAK/5B,QAAL,IAAKA,OAAL,EAAKA,EAAUvkB,cAAf,QAAyB,QAAzB,SAAyC2qB,MAAOA,M,uICnCjF,SAASwzB,EAAiBZ,GACvC,IAAMyP,EAAM51C,mBAAQ,kBAAOmmC,EAAMM,YAAgBN,QAAOzpD,IAAY,CAACypD,IAC/D0P,ECCO,SAA2BrqB,GAA4E,IAAD,MAC7GZ,EAAkB5qB,mBAAQ,WAC9B,IAAKwrB,EAAS,MAAO,MAAC9uC,GACtB,IACE,OAAO8uC,EAAU,CAACX,mBAASW,IAAY,MAAC9uC,GACxC,MAAOmgB,GACP,MAAO,MAACngB,MAET,CAAC8uC,IACET,EAAoBrhB,aAAwB,GAC5CuhB,EAAwBnjB,YAAoBijB,EAAmB,WAAYH,GAC3EI,EAAe,UAAGC,EAAsB3kB,cAAzB,aAAG,EAA+B,GACjD4kB,EAAmBthB,YACvBohB,GAAmBG,YAAOH,QAAmBtuC,EAAYsuC,GACzD,GAEI8qB,EAAchuC,YAAoBojB,EAAkB,cAAeN,GAEzE,MAAO,CACLkrB,YAAW,oBAAEA,EAAYxvC,cAAd,aAAE,EAAqB,UAAvB,QAA6B,KACxCE,QAASykB,EAAsBzkB,SAAWsvC,EAAYtvC,SDrB5BuvC,CAAiB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAKpqB,SACnD,OAAOxrB,mBAAQ,WACb,OAAI41C,EACKC,EAAoBC,YAAc5P,YAAU8P,YAAiBH,EAAoBC,cAAgB,GAEnG3P,EAAMD,YAAUC,GAAO,KAC7B,CAACyP,EAAKC,EAAoBC,YAAa3P,M,gCEd5C,kCAAO,IAAM8P,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAACC,GACvB,OAAOA,EAAMx3D,QAAQ,qBAAqB,SAACulB,GAAD,OAAO4xC,EAASC,UAAU7xC,IAAMA,O,gCCP5E,4KAQO,SAAS6kB,IAQd,MAA6BtmC,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACXuB,EAAWgI,cAEjB,OAAOpnB,uBACL,SACEyrC,GAMI,IAAD,yDAD4G,GAH7G7K,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACAE,EAEC,EAFDA,MAGF,GAAKhjB,GACAhZ,EAAL,CAEA,IAAQ67B,EAAS+K,EAAT/K,KACR,IAAKA,EACH,MAAMt/B,MAAM,8BAEdge,EAASohB,YAAe,CAAEE,OAAMx8B,KAAM2Z,EAAShZ,UAAS87B,WAAUC,UAASC,cAE7E,CAACzhB,EAAUva,EAASgZ,IAKjB,SAASm0B,IAAgE,IAAD,EACrEntC,EAAYH,cAAZG,QAEF9F,EAAQihB,aAAgD,SAACujB,GAAD,OAAOA,EAAE9C,gBAEvE,OAAO57B,GAAO,UAAG9F,EAAM8F,UAAT,QAA0B,GAenC,SAASqtC,EAAoBhR,GAClC,OAAO,IAAIpB,MAAOC,UAAYmB,EAAGH,UAAY,MAIxC,SAAS0J,EAAsBnwB,EAAkC8vB,GACtE,IAAM2H,EAAkBC,IACxB,OAAOlwB,mBACL,iBAC0B,kBAAjBxH,GACY,kBAAZ8vB,GACP9pC,OAAOC,KAAKwxC,GAAiBsT,MAAK,SAAC3kB,GACjC,IAAMQ,EAAK6Q,EAAgBrR,GAC3B,IAAKQ,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQV,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASyJ,UAAYA,GAAWzJ,EAASrmB,eAAiBA,GAAgB43B,EAAoBhR,SAEzG,CAAC6Q,EAAiB3H,EAAS9vB,M,6BCnF/B,4KAQO,SAAS0wB,IAQd,MAA6BtmC,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACXuB,EAAWgI,cAEjB,OAAOpnB,uBACL,SACEyrC,GAMI,IAAD,yDAD4G,GAH7G7K,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACAE,EAEC,EAFDA,MAGF,GAAKhjB,GACAhZ,EAAL,CAEA,IAAQ67B,EAAS+K,EAAT/K,KACR,IAAKA,EACH,MAAMt/B,MAAM,8BAEdge,EAASohB,YAAe,CAAEE,OAAMx8B,KAAM2Z,EAAShZ,UAAS87B,WAAUC,UAASC,cAE7E,CAACzhB,EAAUva,EAASgZ,IAKjB,SAASm0B,IAAgE,IAAD,EACrEntC,EAAYH,cAAZG,QAEF9F,EAAQihB,aAAgD,SAACujB,GAAD,OAAOA,EAAE9C,gBAEvE,OAAO57B,GAAO,UAAG9F,EAAM8F,UAAT,QAA0B,GAenC,SAASqtC,EAAoBhR,GAClC,OAAO,IAAIpB,MAAOC,UAAYmB,EAAGH,UAAY,MAIxC,SAAS0J,EAAsBnwB,EAAkC8vB,GACtE,IAAM2H,EAAkBC,IACxB,OAAOlwB,mBACL,iBAC0B,kBAAjBxH,GACY,kBAAZ8vB,GACP9pC,OAAOC,KAAKwxC,GAAiBsT,MAAK,SAAC3kB,GACjC,IAAMQ,EAAK6Q,EAAgBrR,GAC3B,IAAKQ,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQV,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASyJ,UAAYA,GAAWzJ,EAASrmB,eAAiBA,GAAgB43B,EAAoBhR,SAEzG,CAAC6Q,EAAiB3H,EAAS9vB,M,6BCnF/B,4KAQO,SAAS0wB,IAQd,MAA6BtmC,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACXuB,EAAWgI,cAEjB,OAAOpnB,uBACL,SACEyrC,GAMI,IAAD,yDAD4G,GAH7G7K,EAIC,EAJDA,QACAD,EAGC,EAHDA,SACAE,EAEC,EAFDA,MAGF,GAAKhjB,GACAhZ,EAAL,CAEA,IAAQ67B,EAAS+K,EAAT/K,KACR,IAAKA,EACH,MAAMt/B,MAAM,8BAEdge,EAASohB,YAAe,CAAEE,OAAMx8B,KAAM2Z,EAAShZ,UAAS87B,WAAUC,UAASC,cAE7E,CAACzhB,EAAUva,EAASgZ,IAKjB,SAASm0B,IAAgE,IAAD,EACrEntC,EAAYH,cAAZG,QAEF9F,EAAQihB,aAAgD,SAACujB,GAAD,OAAOA,EAAE9C,gBAEvE,OAAO57B,GAAO,UAAG9F,EAAM8F,UAAT,QAA0B,GAenC,SAASqtC,EAAoBhR,GAClC,OAAO,IAAIpB,MAAOC,UAAYmB,EAAGH,UAAY,MAIxC,SAAS0J,EAAsBnwB,EAAkC8vB,GACtE,IAAM2H,EAAkBC,IACxB,OAAOlwB,mBACL,iBAC0B,kBAAjBxH,GACY,kBAAZ8vB,GACP9pC,OAAOC,KAAKwxC,GAAiBsT,MAAK,SAAC3kB,GACjC,IAAMQ,EAAK6Q,EAAgBrR,GAC3B,IAAKQ,EAAI,OAAO,EAChB,GAAIA,EAAGG,QACL,OAAO,EAET,IAAQV,EAAaO,EAAbP,SACR,QAAKA,IACEA,EAASyJ,UAAYA,GAAWzJ,EAASrmB,eAAiBA,GAAgB43B,EAAoBhR,SAEzG,CAAC6Q,EAAiB3H,EAAS9vB,M,2KChFlBxa,EAAS,uBAETT,EAAW,uCAAG,WAAOjB,GAAP,iBAAAc,EAAA,sEACFo0D,MAAM,GAAD,OALZhuD,GAKY,oBAAyBlH,EAAzB,UADH,cACnBqtC,EADmB,gBAENA,EAAS+nB,OAFH,cAEnBtzD,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMXrB,EAAwB,WACnC,IAGE,OAFwBe,aAAay4D,QAAQv4D,IAEnB9B,IAAGI,OAC7B,SACA,OAAOJ,IAAGI,U,0rDCbRk6D,EAAiBh3D,YAAOqnD,IAAPrnD,CAAH,2DACT,qBAAG6zB,QACF,qBAAGA,QAGA,SAASojC,EAAT,GAUX,IATFxkB,EASC,EATDA,QACA1e,EAQC,EARDA,MAQC,IAPDF,YAOC,MAPM,OAON,EAND6zB,EAMC,EANDA,IAOMF,EAAiBD,YAAiB9U,GAExC,OAAO,cAACukB,EAAD,CAAgBtP,IAAKA,EAAK7zB,KAAMA,EAAM2zB,KAAMA,EAAMzzB,MAAOA,M,gkUCrBrDmjC,EAAe,+BAEfC,GAAqB,mBAC/B15C,IAAQ25C,QAAU,CACjBlzD,QAAS,CACP,GAAI,6CACJ,GAAI,8CAENmzD,cAAe,UANe,cAQ/B55C,IAAQ65C,MAAQ,CACfpzD,QAAS,CACP,GAAI,6CACJ,GAAI,IAENmzD,cAAe,UAbe,GAsB5BE,EAAc,CAClB,CACErhC,KAAM,SACNshC,YAAa,mEACb3E,OAAQ,CACN4E,GAAI,gBACJC,GAAI,gBACJ5E,GAAI,gBACJ6E,KAAM,8FAERvvB,UAAW,IACXwvB,WAAY,SACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,aACNshC,YAAa,mDACb3E,OAAQ,CACN4E,GAAI,cACJC,GAAI,cACJ5E,GAAI,cACJ6E,KAAM,kGAERG,MAAO,CACLC,KAAM,mGACNC,IAAK,mGAEP5vB,UAAW,IACXwvB,WAAY,aACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,WACNshC,YAAa,kGACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,sGAERvvB,UAAW,IACXwvB,WAAY,iBACZ/rC,KAAMpO,IAAQ65C,MACdO,YAAa,GAEf,CACE3hC,KAAM,WACNshC,YAAa,kGACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,sGAERvvB,UAAW,IACXwvB,WAAY,iBACZ/rC,KAAMpO,IAAQ65C,MACdO,YAAa,GAEf,CACE3hC,KAAM,WACNshC,YAAa,kGACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,sGAERvvB,UAAW,IACXwvB,WAAY,iBACZ/rC,KAAMpO,IAAQ65C,MACdO,YAAa,GAEf,CACE3hC,KAAM,4BACNshC,YAAa,kEACb3E,OAAQ,CACN4E,GAAI,+BACJC,GAAI,+BACJ5E,GAAI,+BACJ6E,KAAM,6GAERG,MAAO,CACLC,KAAM,8GACNC,IAAK,8GAEP5vB,UAAW,IACXwvB,WAAY,wBACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,sBACNshC,YAAa,0CACb3E,OAAQ,CACN4E,GAAI,4BACJC,GAAI,4BACJ5E,GAAI,4BACJ6E,KAAM,oGAERvvB,UAAW,IACXwvB,WAAY,eACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,qBACNshC,YAAa,8CACb3E,OAAQ,CACN4E,GAAI,2BACJC,GAAI,2BACJ5E,GAAI,2BACJ6E,KAAM,sGAERvvB,UAAW,IACXwvB,WAAY,iBACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,oBACNshC,YAAa,kDACb3E,OAAQ,CACN4E,GAAI,0BACJC,GAAI,0BACJ5E,GAAI,0BACJ6E,KAAM,oGAERvvB,UAAW,IACXwvB,WAAY,eACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,UACNshC,YAAa,+EACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,+FAERG,MAAO,CACLC,KAAM,+FACNC,IAAK,+FAEP5vB,UAAW,IACXwvB,WAAY,UACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,SACNshC,YAAa,sEACb3E,OAAQ,CACN4E,GAAI,gBACJC,GAAI,gBACJ5E,GAAI,gBACJ6E,KAAM,8FAERvvB,UAAW,IACXwvB,WAAY,SACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAEf,CACE3hC,KAAM,SACNshC,YAAa,uEACb3E,OAAQ,CACN4E,GAAI,gBACJC,GAAI,gBACJ5E,GAAI,gBACJ6E,KAAM,wGACNM,KAAM,mBAER7vB,UAAW,IACXwvB,WAAY,SACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,QACNshC,YAAa,kEACb3E,OAAQ,CACN4E,GAAI,eACJC,GAAI,eACJ5E,GAAI,eACJ6E,KAAM,wGACNM,KAAM,kBAER7vB,UAAW,IACXwvB,WAAY,QACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,MACNshC,YAAa,yEACb3E,OAAQ,CACN4E,GAAI,gBACJC,GAAI,gBACJ5E,GAAI,gBACJ6E,KAAM,wGACNM,KAAM,yBAER7vB,UAAW,IACXwvB,WAAY,MACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,SACNshC,YAAa,8DACb3E,OAAQ,CACN4E,GAAI,gBACJC,GAAI,gBACJ5E,GAAI,gBACJ6E,KAAM,wGACNM,KAAM,mBAER7vB,UAAW,IACXwvB,WAAY,SACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,UACNshC,YAAa,yEACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,wGACNM,KAAM,oBAER7vB,UAAW,IACXwvB,WAAY,UACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,WACNshC,YAAa,6EACb3E,OAAQ,CACN4E,GAAI,kBACJC,GAAI,kBACJ5E,GAAI,kBACJ6E,KAAM,wGACNM,KAAM,qBAER7vB,UAAW,IACXwvB,WAAY,WACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,UACNshC,YAAa,oFACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,8FACNM,KAAM,oBAER7vB,UAAW,IACXwvB,WAAY,UACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,cACNshC,YAAa,oFACb3E,OAAQ,CACN4E,GAAI,qBACJC,GAAI,qBACJ5E,GAAI,qBACJ6E,KAAM,kGACNM,KAAM,wBAER7vB,UAAW,IACXwvB,WAAY,cACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,WACNshC,YAAa,mFACb3E,OAAQ,CACN4E,GAAI,kBACJC,GAAI,kBACJ5E,GAAI,kBACJ6E,KAAM,+FACNM,KAAM,qBAER7vB,UAAW,IACXwvB,WAAY,WACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,GAEf,CACE3hC,KAAM,UACNshC,YAAa,6FACb3E,OAAQ,CACN4E,GAAI,iBACJC,GAAI,iBACJ5E,GAAI,iBACJ6E,KAAM,8FACNM,KAAM,oBAER7vB,UAAW,IACXwvB,WAAY,UACZ/rC,KAAMpO,IAAQ25C,QACdS,YAAa,IAIFN,O,4JChRA55B,IAtDC,WACd,IAAQj+B,EAAMC,cAAND,EACFoe,EAAWC,cACjB,EAAiC1a,cAAzB60D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WACVC,EAAe37B,cAAf27B,WA+CR,MAAO,CAAEx6B,MA7CKl/B,uBACZ,SAAC25D,GACC,IAAMC,EAAYC,IAAiBF,GAC/BC,EACFJ,EAASI,EAAD,uCAAY,WAAOj7C,GAAP,SAAAzf,EAAA,2DACdyf,aAAiBm7C,KADH,gCAEOlc,cAFP,eAId4b,EAASI,GAJK,sBAOhB1pB,OAAOtwC,aAAam6D,WAAWC,MAC3Br7C,aAAiBs7C,KAA2Bt7C,aAAiBu7C,qBAC/DR,EAAW14D,EAAE,kBAAmBA,EAAE,0BAElC2d,aAAiBw7C,KACjBx7C,aAAiBy7C,KAEbR,aAAqBS,MACCT,EACRU,sBAAwB,MAE1CZ,EAAW14D,EAAE,uBAAwBA,EAAE,6CAEvC04D,EAAW/6C,EAAM6Y,KAAM7Y,EAAM47C,SApBf,2CAAZ,uDAyBRb,EAAW14D,EAAE,4BAA6BA,EAAE,oCAGhD,CAACA,EAAGw4D,EAAUE,IAaAv6B,OAVDn/B,uBAAY,WACzBof,EAAS01C,eACT2E,IAEIvpB,OAAOtwC,aAAay4D,QAAQ,mBAC9BwB,IAAiBW,cAAcC,QAC/BZ,IAAiBW,cAAcF,sBAAwB,QAExD,CAACb,EAAYr6C,O,gDCzCHs7C,IAfW,SAACC,EAAoBC,GAC7C,MAAwCj8D,oBAAS,GAAjD,mBAAOk8D,EAAP,KAAqBC,EAArB,KAWA,OATA77D,qBAAU,WACR,IAAI87D,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYnW,YAAW,kBAAMkW,GAAgB,KAAQF,IAEhD,kBAAM/V,aAAakW,MACzB,CAACJ,EAAWC,EAAWC,IACnBA,I,6u9FCfHG,EAAqB,IAAIC,IAAI,CAAEC,WAAW,IAAQC,QAAQC,GAOjD,SAAeC,EAA9B,oC,4CAAe,WACb54B,EACA64B,GAFa,uCAAAp8D,EAAA,2DAIPq8D,EAAYhT,YAAgB9lB,IAJrB,0CASc64B,EAAsBC,EAAUjuB,SAT9C,OASTkuB,EATS,6DAWT98C,QAAQC,MAAR,sCAA6C48C,EAAUjuB,SAAvD,MACM,IAAIlsC,MAAJ,sCAAyCm6D,EAAUjuB,UAZhD,kBAgBTmuB,EAAgB3D,YAAiB0D,GAhBxB,yDAkBT98C,QAAQC,MAAM,yCAA0C68C,GAClD,IAAIp6D,MAAJ,kDAAqDo6D,IAnBlD,QAqBX7mB,EAAOqT,YAAU,GAAD,OAAIyT,GAAJ,iBAAoBF,EAAU9S,eAA9B,QAAyC,KArB9C,wBAuBX9T,EAAOqT,YAAUvlB,GAvBN,QAyBJ7K,EAAI,EAzBA,aAyBGA,EAAI+c,EAAK5sB,QAzBZ,wBA0BL6a,EAAM+R,EAAK/c,GACX8jC,EAAS9jC,IAAM+c,EAAK5sB,OAAS,EAC/B0jB,OA5BO,sBA8BQ6nB,MAAM1wB,GA9Bd,QA8BT6I,EA9BS,6DAgCT/sB,QAAQC,MAAM,uBAAwB8jB,EAAtC,OACIi5B,EAjCK,uBAiCS,IAAIt6D,MAAJ,kCAAqCqhC,IAjC9C,kDAqCNgJ,EAAS8nB,GArCH,qBAsCLmI,EAtCK,uBAsCS,IAAIt6D,MAAJ,kCAAqCqhC,IAtC9C,gEA0CQgJ,EAAS+nB,OA1CjB,WA0CLA,EA1CK,OA2CNwH,EAAmBxH,GA3Cb,uBA4CHmI,EA5CG,oBA6CPX,EAAmBY,cA7CZ,aA6CP,EAA2BlgC,QAAe,SAACC,EAAMhd,GAAW,IAAD,EACnDgP,EAAG,UAAOhP,EAAck9C,SAArB,sBAAiCl9C,EAAM47C,eAAvC,QAAkD,IAC3D,OAAO5+B,EAAK5T,OAAS,EAAd,UAAqB4T,EAArB,aAA8BhO,GAA9B,UAAyCA,KAC/C,WAhDI,QAgDG,gBACN,IAAIvsB,MAAJ,wCAA2Cu6D,IAjDxC,iCAmDJnI,GAnDI,QAyBoB57B,IAzBpB,8BAqDP,IAAIx2B,MAAM,mCArDH,0E,qICZT06D,EAAgB,CACpB,CACEC,UAAU,EACVxyC,OAAQ,CACN,CACEiO,KAAM,OACNrK,KAAM,YAGVqK,KAAM,WACNwkC,QAAS,CACP,CACExkC,KAAM,kBACNrK,KAAM,YAGV8uC,SAAS,EACTC,gBAAiB,OACjB/uC,KAAM,aAGJgvC,EAAoB,6CAEpBC,EAAe,CACnB,CACEL,UAAU,EACVxyC,OAAQ,CACN,CACE8yC,aAAc,UACd7kC,KAAM,OACNrK,KAAM,YAGVqK,KAAM,cACNwkC,QAAS,CACP,CACEK,aAAc,QACd7kC,KAAM,GACNrK,KAAM,UAGV8uC,SAAS,EACTC,gBAAiB,OACjB/uC,KAAM,aAKV,SAAS6f,EAAiBF,EAAyB5nC,GACjD,OAAO,IAAI0d,WAASkqB,EAAiBsvB,EAAcl3D,GAQtC,SAAeo2D,EAA9B,oC,4CAAe,WAAqChuB,EAAiBpoC,GAAtD,mBAAAhG,EAAA,6DACPo9D,EAAuB,IAAI15C,WAASu5C,EAAmBL,EAAe52D,GACtEw7B,EAAOiM,mBAASW,GAFT,SAGiBgvB,EAAqBC,SAAS77B,GAH/C,cAGPoM,EAHO,yBAINE,EAAiBF,EAAiB5nC,GAAU0yD,YAAYl3B,IAJlD,4C,oLCpDTgoB,EAAapnD,YAAOqnD,IAAPrnD,CAAH,2DACL,qBAAG6zB,QACF,qBAAGA,QAGA,SAASC,EAAT,GAQX,IAAD,EAPDnG,EAOC,EAPDA,SAOC,IANDkG,YAMC,MANM,OAMN,EALDE,EAKC,EALDA,MAMMuzB,EAAeC,YAAiB55B,aAAoB0kB,IAAmB1kB,EAAS8kB,aAAUv1C,GAE1FsqD,EAAiBhnC,mBAAQ,WAC7B,OAAImN,IAAaC,IAAc,GAE3BD,aAAoBllB,IAClBklB,aAAoB0kB,IAChB,GAAN,mBAAWiV,GAAX,CAAyBG,YAAgB95B,EAASzpB,WAE7C,CAACujD,YAAgB95B,EAASzpB,UAE5B,KACN,CAACypB,EAAU25B,IAEd,OAAI35B,IAAaC,IACR,cAAC,IAAD,CAAa1tB,MAAO2zB,EAAME,MAAOA,IAGnC,cAACqzB,EAAD,CAAYvzB,KAAMA,EAAM2zB,KAAMA,EAAME,IAAG,2BAAK/5B,QAAL,IAAKA,OAAL,EAAKA,EAAUvkB,cAAf,QAAyB,QAAzB,SAAyC2qB,MAAOA,M,6BCzChG,8DAIe,SAASm2B,IACtB,IAAQgR,EAAWC,cAAXD,OACR,OAAO16C,mBACL,kBAAO06C,GAAUA,EAAOz0C,OAAS,EAAID,gBAAM00C,EAAQ,CAAEE,aAAa,EAAOC,mBAAmB,IAAU,KACtG,CAACH,M,6BCRL,8CAEO,SAAS96B,EAAWzS,GACzB,GAAIA,IAAaC,IAAO,MAAO,MAC/B,GAAID,aAAoBllB,IAAO,OAAOklB,EAASzpB,QAC/C,MAAM,IAAIpE,MAAM,sB,6BCLlB,8CAEO,SAASsgC,EAAWzS,GACzB,GAAIA,IAAaC,IAAO,MAAO,MAC/B,GAAID,aAAoBllB,IAAO,OAAOklB,EAASzpB,QAC/C,MAAM,IAAIpE,MAAM,sB,6BCLlB,8CAEO,SAASsgC,EAAWzS,GACzB,GAAIA,IAAaC,QAAO,MAAO,MAC/B,GAAID,aAAoBllB,QAAO,OAAOklB,EAASzpB,QAC/C,MAAM,IAAIpE,MAAM,sB,6BCLlB,8CAEO,SAASsgC,EAAWzS,GACzB,GAAIA,IAAaC,QAAO,MAAO,MAC/B,GAAID,aAAoBllB,QAAO,OAAOklB,EAASzpB,QAC/C,MAAM,IAAIpE,MAAM,sB,+BCLlB,sDAIO,SAASsoB,IACd,IAAQ7kB,EAAYH,cAAZG,QAER,OAAOmb,aAAY,SAACjhB,GAAD,OAAqBA,EAAM0mC,YAAY7e,YAAlB,OAA8B/hB,QAA9B,IAA8BA,KAAY,Q,6BCPpF,gFAGO,SAASi1B,EAAe/Y,GAC7B,MAAO,CACLlc,QAASkc,EAAMlc,QACfW,QAASub,EAAMvb,QACf/C,SAAUse,EAAMte,SAChBiI,OAAQqW,EAAMrW,OACd8sB,KAAMzW,EAAMyW,MAIT,SAAS8D,EAAiBzB,GAC/B,OAAO,IAAI9vB,IACT8vB,EAAgBh1B,QAChBg1B,EAAgBr0B,QAChBq0B,EAAgBp3B,SAChBo3B,EAAgBnvB,OAChBmvB,EAAgBrC,Q,6BCnBpB,gFAGO,SAASsC,EAAe/Y,GAC7B,MAAO,CACLlc,QAASkc,EAAMlc,QACfW,QAASub,EAAMvb,QACf/C,SAAUse,EAAMte,SAChBiI,OAAQqW,EAAMrW,OACd8sB,KAAMzW,EAAMyW,MAIT,SAAS8D,EAAiBzB,GAC/B,OAAO,IAAI9vB,IACT8vB,EAAgBh1B,QAChBg1B,EAAgBr0B,QAChBq0B,EAAgBp3B,SAChBo3B,EAAgBnvB,OAChBmvB,EAAgBrC,Q,6BCnBpB,gFAGO,SAASsC,EAAe/Y,GAC7B,MAAO,CACLlc,QAASkc,EAAMlc,QACfW,QAASub,EAAMvb,QACf/C,SAAUse,EAAMte,SAChBiI,OAAQqW,EAAMrW,OACd8sB,KAAMzW,EAAMyW,MAIT,SAAS8D,EAAiBzB,GAC/B,OAAO,IAAI9vB,QACT8vB,EAAgBh1B,QAChBg1B,EAAgBr0B,QAChBq0B,EAAgBp3B,SAChBo3B,EAAgBnvB,OAChBmvB,EAAgBrC,Q,6BCnBpB,gFAGO,SAASsC,EAAe/Y,GAC7B,MAAO,CACLlc,QAASkc,EAAMlc,QACfW,QAASub,EAAMvb,QACf/C,SAAUse,EAAMte,SAChBiI,OAAQqW,EAAMrW,OACd8sB,KAAMzW,EAAMyW,MAIT,SAAS8D,EAAiBzB,GAC/B,OAAO,IAAI9vB,QACT8vB,EAAgBh1B,QAChBg1B,EAAgBr0B,QAChBq0B,EAAgBp3B,SAChBo3B,EAAgBnvB,OAChBmvB,EAAgBrC,Q,sKCNd35B,EAA2B,CAC/B22D,eAAe,EACf92B,WAAW,EACXx9B,KAV2B08D,IAAUlhC,QAAO,SAAC6b,EAAOuc,GACpD,OAAO,2BACFvc,GADL,kBAEGuc,EAAKzwC,GAAKywC,MAEZ,KAQU+I,EAAaxhB,YAAY,CACpC7jB,KAAM,QACN35B,eACAy9C,SAAU,CACRwhB,WAAY,SAAC/9D,GACXA,EAAM2+B,WAAY,GAEpBq/B,YAAa,SAACh+D,GACZA,EAAM2+B,WAAY,EAClB3+B,EAAMy1D,eAAgB,GAExBwI,mBAAoB,SAACj+D,EAAO2gC,GAC1B3gC,EAAMy1D,eAAgB,EACtBz1D,EAAM2+B,WAAY,EAClB3+B,EAAMmB,KAAKw/B,EAAOC,QAAQtc,IAAMqc,EAAOC,SAEzCs9B,oBAAqB,SAACl+D,EAAO2gC,GAC3B3gC,EAAMy1D,eAAgB,EACtBz1D,EAAM2+B,WAAY,EAClB3+B,EAAMmB,KAAOw/B,EAAOC,YAMnB,EAA6Ek9B,EAAWjhB,QAAhFkhB,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,mBAAoBD,EAAxC,EAAwCA,YAAaE,EAArD,EAAqDA,oBAG/CC,EAAY,SAAClK,GAAD,8CAAoB,WAAO5zC,GAAP,eAAAlgB,EAAA,sEAEzCkgB,EAAS09C,KAFgC,SAGtBjJ,YAAQb,GAHc,OAGnCc,EAHmC,OAIzC10C,EAAS49C,EAAmBlJ,IAJa,gDAMzC10C,EAAS29C,KANgC,yDAApB,uDAUZI,EAAa,yDAAM,WAAO/9C,GAAP,eAAAlgB,EAAA,sEAE5BkgB,EAAS09C,KAFmB,SAGRM,cAHQ,OAGtBn4B,EAHsB,OAI5B7lB,EAAS69C,EAAoBh4B,IAJD,gDAM5B7lB,EAAS29C,KANmB,yDAAN,uDAUXF,MAAf,S,mCCnEA,sGAAO,IAAMQ,EAA2B,KAC3BC,EAAkC,EAClCxP,EAAiC,G,sMCsBxCh5B,EAAUxzB,IAAOU,IAAV,4CAGPu7D,EAAUj8D,YAAOuI,IAAPvI,CAAH,8CAIPk8D,EAAgBl8D,YAAOsI,IAAPtI,CAAH,gDAInB,SAASm8D,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5B18D,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,cAAC0oC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAYv7D,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,8BACzB,cAAC,IAAD,CAAYiB,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM0uC,MAAI,EAACgnB,OAAK,EAACuG,UAAU,SAA3B,SACGD,MAGL,cAAC,KAAD,CAAMtG,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,SAAzC,SACG38D,EAAE,mDAOb,SAAS48D,EAAT,GAUI,IAAD,EATDzuB,EASC,EATDA,UACAtqC,EAQC,EARDA,QACA67B,EAOC,EAPDA,KACAm9B,EAMC,EANDA,cAOQj5D,EAAYF,cAAZE,QAEA5D,EAAMC,cAAND,EAEF+f,EAA2B4oB,YAAgBk0B,EAAeh5D,GAEhE,OACE,cAACiwB,EAAD,UACE,eAACyoC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAa1Z,YAAa,GAAKtiD,MAAM,OAAOgX,MAAM,cAEpD,eAAC,IAAD,CAAYvW,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,2BACxB6D,GAAW67B,GACV,cAAC,KAAD,CAAMy2B,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,YAAewT,EAAM,cAAe77B,GAA/D,SACG7D,EAAE,qBAGN68D,IAAa,OAAIj5D,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmB44D,aACnC,cAAC,IAAD,CACEvvB,QAAQ,WACRmC,GAAG,OACHlvC,MAAM,cACNoX,QAAS,kBAAMwlC,YAAcr9B,EAAMvb,QAASub,EAAMrW,OAAQqW,EAAMte,WAJlE,SAME,eAAC,IAAD,WACGzB,EAAE,0BAA2B,CAAE+8D,MAAOF,EAAcnzD,SACrD,cAAC,KAAD,CAAclJ,MAAM,OAAOmvC,GAAG,aAIpC,cAAC,IAAD,CAAQ/3B,QAASu2B,EAAWuB,GAAG,OAA/B,SACG1vC,EAAE,mBAQR,SAASg9D,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAACppC,EAAD,WACE,cAAC,IAAD,UAAMopC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE5D,EAAkE,EAAlEA,QAASprB,EAAyD,EAAzDA,UACzCnuC,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,eAAC,IAAD,CAAYpzB,QAAQ,SAApB,UACE,cAAC,IAAD,CAAW8W,MAAM,UAAUhX,MAAM,SACjC,cAAC,KAAD,CAAMgX,MAAM,UAAU6c,MAAO,CAAEsoC,UAAW,SAAUn8D,MAAO,OAA3D,SACG+4D,OAIL,cAAC,IAAD,CAAMloB,eAAe,SAAS+rB,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQxlD,QAASu2B,EAAjB,SAA6BnuC,EAAE,kBAuDxBq9D,IAvC6E,SAAC,GAStF,IARLvuB,EAQI,EARJA,MACAX,EAOI,EAPJA,UACAmvB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA79B,EAII,EAJJA,KACAg9B,EAGI,EAHJA,YACAc,EAEI,EAFJA,QACAX,EACI,EADJA,cAEQh5D,EAAYH,cAAZG,QAEF45D,EAAgBz+D,uBAAY,WAC5Bs+D,GACFA,IAEFnvB,MACC,CAACmvB,EAAiBnvB,IAErB,OAAKtqC,EAGH,cAAC,KAAD,CAAOirC,MAAOA,EAAO4uB,iBAAiB,aAAavvB,UAAWsvB,EAA9D,SACGF,EACC,cAACd,EAAD,CAA4BC,YAAaA,IACvCh9B,EACF,cAACk9B,EAAD,CACE/4D,QAASA,EACT67B,KAAMA,EACNyO,UAAWA,EACX0uB,cAAeA,IAGjBW,MAde,O,sKCvKhB,SAASG,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGxuC,IAExB,GAAIsuC,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3Bp3B,YAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D0Y,YAAek3B,EAAOvhB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,UAElE,MAAM,IAAI7tB,MAAM,6BAGlB,OAAI09D,EAAaE,QAAQ1uC,KAChBsuC,EAAOzhB,eAAevS,SAASi0B,EAAO1hB,gBAExCyhB,EAAOzhB,eAAe9uB,IAAID,SAAS0wC,EAAanxC,IAAI4C,MAAsBqa,SAASi0B,EAAO1hB,iBAGpFwhB,I,mECRf,SAASM,EAAkBhJ,EAAsBC,GAC/C,IAAQrxD,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IACjE,MAACrG,OAAWA,GAFhB,mBAAO+7B,EAAP,KAAeC,EAAf,KAIM0kC,EAAiBp9C,mBAAQ,WAAO,IAAD,UACnC,IAAKjd,EAAS,MAAO,GAErB,IAAMs6D,EAAM,UAAG/vC,IAA8BvqB,UAAjC,QAA6C,GACnDu6D,EAAc7kC,GAAM,oBAAGlL,IAAiBxqB,UAApB,aAAG,EAA4B01B,EAAO/0B,gBAAtC,QAAuD,GAC3E65D,EAAc7kC,GAAM,oBAAGnL,IAAiBxqB,UAApB,aAAG,EAA4B21B,EAAOh1B,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAW25D,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACx6D,EAAS01B,EAAQC,IAEf8kC,EAA8Bx9C,mBAClC,kBAAMgZ,IAAQokC,GAAO,SAACnkC,GAAD,OAA4BmkC,EAAMz/C,KAAI,SAAC8/C,GAAD,MAAe,CAACxkC,EAAMwkC,WACjF,CAACL,IAGGM,EAAwC19C,mBAC5C,kBACEyY,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIK0kC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACR,EAAQQ,OAJlD,YAMKmkC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACP,EAAQO,OANlD,YAQKukC,IAEF93C,QAAO,SAAC5hB,GAAD,OAAsC8hB,QAAQ9hB,EAAO,IAAMA,EAAO,OACzE4hB,QAAO,mCAAEi4C,EAAF,KAAMC,EAAN,YAAcD,EAAGj6D,UAAYk6D,EAAGl6D,WACvCgiB,QAAO,YAAyB,IAAD,mBAAtBm4C,EAAsB,KAAbC,EAAa,KAC9B,IAAK/6D,EAAS,OAAO,EACrB,IAAMg7D,EAAcvwC,IAAazqB,GAE3Bi7D,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQn6D,SAC1Du6D,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQp6D,SAEhE,OAAKs6D,IAAiBC,KAElBD,IAAiBA,EAAa3/C,MAAK,SAAC4a,GAAD,OAAU6kC,EAAQ51B,OAAOjP,UAC5DglC,IAAiBA,EAAa5/C,MAAK,SAAC4a,GAAD,OAAU4kC,EAAQ31B,OAAOjP,UAIpE,KACN,CAACR,EAAQC,EAAQ0kC,EAAOI,EAAWz6D,IAG/Bm7D,EAAWhK,YAASwJ,GAG1B,OAAO19C,mBACL,kBACExhB,OAAOmnC,OACLu4B,EAEGx4C,QAAO,SAACY,GAAD,OAAgDV,QAAQU,EAAO,KAAO0tC,IAAUY,QAAUtuC,EAAO,OAExGsT,QAAwC,SAACC,EAAD,GAAqB,IAAD,EAAVskC,EAAU,oBAE3D,OADAtkC,EAAKskC,EAAKrW,eAAepkD,SAAzB,UAAoCm2B,EAAKskC,EAAKrW,eAAepkD,gBAA7D,QAAyEy6D,EAClEtkC,IACN,OAET,CAACqkC,IASE,SAAS1V,EAAgB4V,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkBjxC,SAAUkxC,GAEnE,EAAwBxnC,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAIo+C,GAAoBC,GAAeC,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,IAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAA0B,UAC9BJ,IAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS1oC,EAAG2oC,cAAe,IAAK,UADxE,QAE9B,KAEE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACJ,EAAcF,EAAkBC,EAAazwB,IAM5C,SAAS8a,EAAiBkW,EAAuBC,GACtD,IAAMP,EAAenB,EAAkByB,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmB1xC,UAEtE,EAAwB0J,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAI4+C,GAAcC,GAAqBP,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,IAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAAY,UAChBJ,IAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS1oC,EAAG2oC,cAAe,IAAK,UADvF,QAEhB,KACE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBP,EAAc1wB,IAG5C,SAASkxB,EAA4BF,EAAuBP,GACjE,IAAMjJ,EAAkDhwB,cAChDriC,EAAYH,cAAZG,QAEFg8D,EAAUl3B,YAAgB+2B,EAAY77D,GACtCi8D,EAAWn3B,YAAgBw2B,EAAat7D,GAG9C,GAAIqyD,EAAmB,CACrB,GAAI2J,GAAWvgE,OAAOC,KAAK22D,GAAmBh0B,SAAS29B,EAAQr7D,SAC7D,OAAO,EAET,GAAIs7D,GAAYxgE,OAAOC,KAAK22D,GAAmBh0B,SAAS49B,EAASt7D,SAC/D,OAAO,EAIX,OAAO,I,wKClII44C,G,OAAa,uCAAG,WAAO9jC,EAAsB+jC,EAAqBC,GAAlD,eAAAp/C,EAAA,sEACFgxC,OAAO2N,SAASC,QAAQ,CAC/ChF,OAAQ,oBACRrhB,OAAQ,CACNtK,KAAM,QACNzpB,QAAS,CACP8B,QAAS8U,EACT5P,OAAQ2zC,EACR57C,SAAU67C,EACVC,MAAM,GAAD,OAAK/f,IAAL,0BAA+BlkB,EAA/B,YATgB,cACrBkkC,EADqB,yBAcpBA,GAdoB,2CAAH,2D,qDCxBpB1pB,EAAUxzB,IAAOU,IAAV,4CAGPu7D,EAAUj8D,YAAOuI,IAAPvI,CAAH,8CAIPk8D,EAAgBl8D,YAAOsI,IAAPtI,CAAH,gDAInB,SAASm8D,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5B18D,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,cAAC0oC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAYv7D,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,8BACzB,cAAC,IAAD,CAAYiB,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM0uC,MAAI,EAACgnB,OAAK,EAACuG,UAAU,SAA3B,SACGD,MAGL,cAAC,KAAD,CAAMtG,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,SAAzC,SACG38D,EAAE,mDAOb,SAAS48D,EAAT,GAUI,IAAD,EATDzuB,EASC,EATDA,UACAtqC,EAQC,EARDA,QACA67B,EAOC,EAPDA,KACAm9B,EAMC,EANDA,cAOQj5D,EAAYF,cAAZE,QAEA5D,EAAMC,cAAND,EAEF+f,EAA2B4oB,YAAgBk0B,EAAeh5D,GAEhE,OACE,cAACiwB,EAAD,UACE,eAACyoC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAa1Z,YAAa,GAAKtiD,MAAM,OAAOgX,MAAM,cAEpD,eAAC,IAAD,CAAYvW,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,2BACxB6D,GAAW67B,GACV,cAAC,KAAD,CAAMy2B,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,YAAewT,EAAM,cAAe77B,GAA/D,SACG7D,EAAE,qBAGN68D,IAAa,OAAIj5D,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmB44D,aACnC,cAAC,IAAD,CACEvvB,QAAQ,WACRmC,GAAG,OACHlvC,MAAM,cACNoX,QAAS,kBAAMwlC,EAAcr9B,EAAMvb,QAASub,EAAMrW,OAAQqW,EAAMte,WAJlE,SAME,eAACpB,EAAA,EAAD,WACGL,EAAE,0BAA2B,CAAE+8D,MAAOF,EAAcnzD,SACrD,cAAC,KAAD,CAAclJ,MAAM,OAAOmvC,GAAG,aAIpC,cAAC,IAAD,CAAQ/3B,QAASu2B,EAAWuB,GAAG,OAA/B,SACG1vC,EAAE,mBAQR,SAASg9D,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAACppC,EAAD,WACE,cAAC,IAAD,UAAMopC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE5D,EAAkE,EAAlEA,QAASprB,EAAyD,EAAzDA,UACzCnuC,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,eAAC,IAAD,CAAYpzB,QAAQ,SAApB,UACE,cAAC,IAAD,CAAW8W,MAAM,UAAUhX,MAAM,SACjC,cAAC,KAAD,CAAMgX,MAAM,UAAU6c,MAAO,CAAEsoC,UAAW,SAAUn8D,MAAO,OAA3D,SACG+4D,OAIL,cAAC,IAAD,CAAMloB,eAAe,SAAS+rB,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQxlD,QAASu2B,EAAjB,SAA6BnuC,EAAE,kBAuDxBq9D,IAvC6E,SAAC,GAStF,IARLvuB,EAQI,EARJA,MACAX,EAOI,EAPJA,UACAmvB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA79B,EAII,EAJJA,KACAg9B,EAGI,EAHJA,YACAc,EAEI,EAFJA,QACAX,EACI,EADJA,cAEQh5D,EAAYH,cAAZG,QAEF45D,EAAgBz+D,uBAAY,WAC5Bs+D,GACFA,IAEFnvB,MACC,CAACmvB,EAAiBnvB,IAErB,OAAKtqC,EAGH,cAAC,KAAD,CAAOirC,MAAOA,EAAO4uB,iBAAiB,aAAavvB,UAAWsvB,EAA9D,SACGF,EACC,cAACd,EAAD,CAA4BC,YAAaA,IACvCh9B,EACF,cAACk9B,EAAD,CACE/4D,QAASA,EACT67B,KAAMA,EACNyO,UAAWA,EACX0uB,cAAeA,IAGjBW,MAde,O,sKCvKhB,SAASG,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGxuC,IAExB,GAAIsuC,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3Bp3B,YAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D0Y,YAAek3B,EAAOvhB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,UAElE,MAAM,IAAI7tB,MAAM,6BAGlB,OAAI09D,EAAaE,QAAQ1uC,KAChBsuC,EAAOzhB,eAAevS,SAASi0B,EAAO1hB,gBAExCyhB,EAAOzhB,eAAe9uB,IAAID,SAAS0wC,EAAanxC,IAAI4C,MAAsBqa,SAASi0B,EAAO1hB,iBAGpFwhB,I,kECRf,SAASM,EAAkBhJ,EAAsBC,GAC/C,IAAQrxD,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IACjE,MAACrG,OAAWA,GAFhB,mBAAO+7B,EAAP,KAAeC,EAAf,KAIM0kC,EAAiBp9C,mBAAQ,WAAO,IAAD,UACnC,IAAKjd,EAAS,MAAO,GAErB,IAAMs6D,EAAM,UAAG/vC,IAA8BvqB,UAAjC,QAA6C,GACnDu6D,EAAc7kC,GAAM,oBAAGlL,IAAiBxqB,UAApB,aAAG,EAA4B01B,EAAO/0B,gBAAtC,QAAuD,GAC3E65D,EAAc7kC,GAAM,oBAAGnL,IAAiBxqB,UAApB,aAAG,EAA4B21B,EAAOh1B,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAW25D,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACx6D,EAAS01B,EAAQC,IAEf8kC,EAA8Bx9C,mBAClC,kBAAMgZ,IAAQokC,GAAO,SAACnkC,GAAD,OAA4BmkC,EAAMz/C,KAAI,SAAC8/C,GAAD,MAAe,CAACxkC,EAAMwkC,WACjF,CAACL,IAGGM,EAAwC19C,mBAC5C,kBACEyY,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIK0kC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACR,EAAQQ,OAJlD,YAMKmkC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACP,EAAQO,OANlD,YAQKukC,IAEF93C,QAAO,SAAC5hB,GAAD,OAAsC8hB,QAAQ9hB,EAAO,IAAMA,EAAO,OACzE4hB,QAAO,mCAAEi4C,EAAF,KAAMC,EAAN,YAAcD,EAAGj6D,UAAYk6D,EAAGl6D,WACvCgiB,QAAO,YAAyB,IAAD,mBAAtBm4C,EAAsB,KAAbC,EAAa,KAC9B,IAAK/6D,EAAS,OAAO,EACrB,IAAMg7D,EAAcvwC,IAAazqB,GAE3Bi7D,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQn6D,SAC1Du6D,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQp6D,SAEhE,OAAKs6D,IAAiBC,KAElBD,IAAiBA,EAAa3/C,MAAK,SAAC4a,GAAD,OAAU6kC,EAAQ51B,OAAOjP,UAC5DglC,IAAiBA,EAAa5/C,MAAK,SAAC4a,GAAD,OAAU4kC,EAAQ31B,OAAOjP,UAIpE,KACN,CAACR,EAAQC,EAAQ0kC,EAAOI,EAAWz6D,IAG/Bm7D,EAAWhK,YAASwJ,GAG1B,OAAO19C,mBACL,kBACExhB,OAAOmnC,OACLu4B,EAEGx4C,QAAO,SAACY,GAAD,OAAgDV,QAAQU,EAAO,KAAO0tC,IAAUY,QAAUtuC,EAAO,OAExGsT,QAAwC,SAACC,EAAD,GAAqB,IAAD,EAAVskC,EAAU,oBAE3D,OADAtkC,EAAKskC,EAAKrW,eAAepkD,SAAzB,UAAoCm2B,EAAKskC,EAAKrW,eAAepkD,gBAA7D,QAAyEy6D,EAClEtkC,IACN,OAET,CAACqkC,IASE,SAAS1V,EAAgB4V,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkBjxC,SAAUkxC,GAEnE,EAAwBxnC,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAIo+C,GAAoBC,GAAeC,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,IAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAA0B,UAC9BJ,IAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS1oC,EAAG2oC,cAAe,IAAK,UADxE,QAE9B,KAEE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACJ,EAAcF,EAAkBC,EAAazwB,IAM5C,SAAS8a,EAAiBkW,EAAuBC,GACtD,IAAMP,EAAenB,EAAkByB,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmB1xC,UAEtE,EAAwB0J,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAI4+C,GAAcC,GAAqBP,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,IAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAAY,UAChBJ,IAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS1oC,EAAG2oC,cAAe,IAAK,UADvF,QAEhB,KACE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBP,EAAc1wB,IAG5C,SAASkxB,EAA4BF,EAAuBP,GACjE,IAAMjJ,EAAkDhwB,cAChDriC,EAAYH,cAAZG,QAEFg8D,EAAUl3B,YAAgB+2B,EAAY77D,GACtCi8D,EAAWn3B,YAAgBw2B,EAAat7D,GAG9C,GAAIqyD,EAAmB,CACrB,GAAI2J,GAAWvgE,OAAOC,KAAK22D,GAAmBh0B,SAAS29B,EAAQr7D,SAC7D,OAAO,EAET,GAAIs7D,GAAYxgE,OAAOC,KAAK22D,GAAmBh0B,SAAS49B,EAASt7D,SAC/D,OAAO,EAIX,OAAO,I,sKC9KF,SAASm5D,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGxuC,IAExB,GAAIsuC,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3Bp3B,yBAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D0Y,yBAAek3B,EAAOvhB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,UAElE,MAAM,IAAI7tB,MAAM,6BAGlB,OAAI09D,EAAaE,QAAQ1uC,KAChBsuC,EAAOzhB,eAAevS,SAASi0B,EAAO1hB,gBAExCyhB,EAAOzhB,eAAe9uB,IAAID,SAAS0wC,EAAanxC,IAAI4C,MAAsBqa,SAASi0B,EAAO1hB,iBAGpFwhB,I,mECRf,SAASM,EAAkBhJ,EAAsBC,GAC/C,IAAQrxD,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IACjE,MAACrG,OAAWA,GAFhB,mBAAO+7B,EAAP,KAAeC,EAAf,KAIM0kC,EAAiBp9C,mBAAQ,WAAO,IAAD,UACnC,IAAKjd,EAAS,MAAO,GAErB,IAAMs6D,EAAM,UAAG/vC,IAA8BvqB,UAAjC,QAA6C,GACnDu6D,EAAc7kC,GAAM,oBAAGlL,IAAiBxqB,UAApB,aAAG,EAA4B01B,EAAO/0B,gBAAtC,QAAuD,GAC3E65D,EAAc7kC,GAAM,oBAAGnL,IAAiBxqB,UAApB,aAAG,EAA4B21B,EAAOh1B,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAW25D,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACx6D,EAAS01B,EAAQC,IAEf8kC,EAA8Bx9C,mBAClC,kBAAMgZ,IAAQokC,GAAO,SAACnkC,GAAD,OAA4BmkC,EAAMz/C,KAAI,SAAC8/C,GAAD,MAAe,CAACxkC,EAAMwkC,WACjF,CAACL,IAGGM,EAAwC19C,mBAC5C,kBACEyY,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIK0kC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACR,EAAQQ,OAJlD,YAMKmkC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACP,EAAQO,OANlD,YAQKukC,IAEF93C,QAAO,SAAC5hB,GAAD,OAAsC8hB,QAAQ9hB,EAAO,IAAMA,EAAO,OACzE4hB,QAAO,mCAAEi4C,EAAF,KAAMC,EAAN,YAAcD,EAAGj6D,UAAYk6D,EAAGl6D,WACvCgiB,QAAO,YAAyB,IAAD,mBAAtBm4C,EAAsB,KAAbC,EAAa,KAC9B,IAAK/6D,EAAS,OAAO,EACrB,IAAMg7D,EAAcvwC,IAAazqB,GAE3Bi7D,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQn6D,SAC1Du6D,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQp6D,SAEhE,OAAKs6D,IAAiBC,KAElBD,IAAiBA,EAAa3/C,MAAK,SAAC4a,GAAD,OAAU6kC,EAAQ51B,OAAOjP,UAC5DglC,IAAiBA,EAAa5/C,MAAK,SAAC4a,GAAD,OAAU4kC,EAAQ31B,OAAOjP,UAIpE,KACN,CAACR,EAAQC,EAAQ0kC,EAAOI,EAAWz6D,IAG/Bm7D,EAAWhK,YAASwJ,GAG1B,OAAO19C,mBACL,kBACExhB,OAAOmnC,OACLu4B,EAEGx4C,QAAO,SAACY,GAAD,OAAgDV,QAAQU,EAAO,KAAO0tC,IAAUY,QAAUtuC,EAAO,OAExGsT,QAAwC,SAACC,EAAD,GAAqB,IAAD,EAAVskC,EAAU,oBAE3D,OADAtkC,EAAKskC,EAAKrW,eAAepkD,SAAzB,UAAoCm2B,EAAKskC,EAAKrW,eAAepkD,gBAA7D,QAAyEy6D,EAClEtkC,IACN,OAET,CAACqkC,IASE,SAAS1V,EAAgB4V,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkBjxC,SAAUkxC,GAEnE,EAAwBxnC,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAIo+C,GAAoBC,GAAeC,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,QAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAA0B,UAC9BJ,QAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS1oC,EAAG2oC,cAAe,IAAK,UADxE,QAE9B,KAEE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACJ,EAAcF,EAAkBC,EAAazwB,IAM5C,SAAS8a,EAAiBkW,EAAuBC,GACtD,IAAMP,EAAenB,EAAkByB,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmB1xC,UAEtE,EAAwB0J,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAI4+C,GAAcC,GAAqBP,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,QAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAAY,UAChBJ,QAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS1oC,EAAG2oC,cAAe,IAAK,UADvF,QAEhB,KACE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBP,EAAc1wB,IAG5C,SAASkxB,EAA4BF,EAAuBP,GACjE,IAAMjJ,EAAkDhwB,cAChDriC,EAAYH,cAAZG,QAEFg8D,EAAUl3B,YAAgB+2B,EAAY77D,GACtCi8D,EAAWn3B,YAAgBw2B,EAAat7D,GAG9C,GAAIqyD,EAAmB,CACrB,GAAI2J,GAAWvgE,OAAOC,KAAK22D,GAAmBh0B,SAAS29B,EAAQr7D,SAC7D,OAAO,EAET,GAAIs7D,GAAYxgE,OAAOC,KAAK22D,GAAmBh0B,SAAS49B,EAASt7D,SAC/D,OAAO,EAIX,OAAO,I,wKClII44C,G,OAAa,uCAAG,WAAO9jC,EAAsB+jC,EAAqBC,GAAlD,eAAAp/C,EAAA,sEACFgxC,OAAO2N,SAASC,QAAQ,CAC/ChF,OAAQ,oBACRrhB,OAAQ,CACNtK,KAAM,QACNzpB,QAAS,CACP8B,QAAS8U,EACT5P,OAAQ2zC,EACR57C,SAAU67C,EACVC,MAAM,GAAD,OAAK/f,IAAL,0BAA+BlkB,EAA/B,YATgB,cACrBkkC,EADqB,yBAcpBA,GAdoB,2CAAH,2D,qDCxBpB1pB,EAAUxzB,IAAOU,IAAV,4CAGPu7D,EAAUj8D,YAAOuI,IAAPvI,CAAH,8CAIPk8D,EAAgBl8D,YAAOsI,IAAPtI,CAAH,gDAInB,SAASm8D,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5B18D,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,cAAC0oC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAYv7D,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,8BACzB,cAAC,IAAD,CAAYiB,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM0uC,MAAI,EAACgnB,OAAK,EAACuG,UAAU,SAA3B,SACGD,MAGL,cAAC,KAAD,CAAMtG,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,SAAzC,SACG38D,EAAE,mDAOb,SAAS48D,EAAT,GAUI,IAAD,EATDzuB,EASC,EATDA,UACAtqC,EAQC,EARDA,QACA67B,EAOC,EAPDA,KACAm9B,EAMC,EANDA,cAOQj5D,EAAYF,cAAZE,QAEA5D,EAAMC,cAAND,EAEF+f,EAA2B4oB,YAAgBk0B,EAAeh5D,GAEhE,OACE,cAACiwB,EAAD,UACE,eAACyoC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAa1Z,YAAa,GAAKtiD,MAAM,OAAOgX,MAAM,cAEpD,eAAC,IAAD,CAAYvW,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,2BACxB6D,GAAW67B,GACV,cAAC,KAAD,CAAMy2B,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,YAAewT,EAAM,cAAe77B,GAA/D,SACG7D,EAAE,qBAGN68D,IAAa,OAAIj5D,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmB44D,aACnC,cAAC,IAAD,CACEvvB,QAAQ,WACRmC,GAAG,OACHlvC,MAAM,cACNoX,QAAS,kBAAMwlC,EAAcr9B,EAAMvb,QAASub,EAAMrW,OAAQqW,EAAMte,WAJlE,SAME,eAACpB,EAAA,EAAD,WACGL,EAAE,0BAA2B,CAAE+8D,MAAOF,EAAcnzD,SACrD,cAAC,KAAD,CAAclJ,MAAM,OAAOmvC,GAAG,aAIpC,cAAC,IAAD,CAAQ/3B,QAASu2B,EAAWuB,GAAG,OAA/B,SACG1vC,EAAE,mBAQR,SAASg9D,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAACppC,EAAD,WACE,cAAC,IAAD,UAAMopC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE5D,EAAkE,EAAlEA,QAASprB,EAAyD,EAAzDA,UACzCnuC,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,eAAC,IAAD,CAAYpzB,QAAQ,SAApB,UACE,cAAC,IAAD,CAAW8W,MAAM,UAAUhX,MAAM,SACjC,cAAC,KAAD,CAAMgX,MAAM,UAAU6c,MAAO,CAAEsoC,UAAW,SAAUn8D,MAAO,OAA3D,SACG+4D,OAIL,cAAC,IAAD,CAAMloB,eAAe,SAAS+rB,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQxlD,QAASu2B,EAAjB,SAA6BnuC,EAAE,kBAuDxBq9D,IAvC6E,SAAC,GAStF,IARLvuB,EAQI,EARJA,MACAX,EAOI,EAPJA,UACAmvB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA79B,EAII,EAJJA,KACAg9B,EAGI,EAHJA,YACAc,EAEI,EAFJA,QACAX,EACI,EADJA,cAEQh5D,EAAYH,cAAZG,QAEF45D,EAAgBz+D,uBAAY,WAC5Bs+D,GACFA,IAEFnvB,MACC,CAACmvB,EAAiBnvB,IAErB,OAAKtqC,EAGH,cAAC,KAAD,CAAOirC,MAAOA,EAAO4uB,iBAAiB,aAAavvB,UAAWsvB,EAA9D,SACGF,EACC,cAACd,EAAD,CAA4BC,YAAaA,IACvCh9B,EACF,cAACk9B,EAAD,CACE/4D,QAASA,EACT67B,KAAMA,EACNyO,UAAWA,EACX0uB,cAAeA,IAGjBW,MAde,O,sKCvKhB,SAASG,EACdC,EACAC,GAEsB,IADtBC,EACqB,uDADGxuC,IAExB,GAAIsuC,IAAWC,EAAQ,OAAO,EAC9B,GAAIA,IAAWD,EAAQ,OAAO,EAC9B,GAAKA,GAAWC,EAAhB,CAEA,GACED,EAAOG,YAAcF,EAAOE,YAC3Bp3B,yBAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D0Y,yBAAek3B,EAAOvhB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,UAElE,MAAM,IAAI7tB,MAAM,6BAGlB,OAAI09D,EAAaE,QAAQ1uC,KAChBsuC,EAAOzhB,eAAevS,SAASi0B,EAAO1hB,gBAExCyhB,EAAOzhB,eAAe9uB,IAAID,SAAS0wC,EAAanxC,IAAI4C,MAAsBqa,SAASi0B,EAAO1hB,iBAGpFwhB,I,mECRf,SAASM,EAAkBhJ,EAAsBC,GAC/C,IAAQrxD,EAAYH,cAAZG,QAER,EAAyBA,EACrB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IACjE,MAACrG,OAAWA,GAFhB,mBAAO+7B,EAAP,KAAeC,EAAf,KAIM0kC,EAAiBp9C,mBAAQ,WAAO,IAAD,UACnC,IAAKjd,EAAS,MAAO,GAErB,IAAMs6D,EAAM,UAAG/vC,IAA8BvqB,UAAjC,QAA6C,GACnDu6D,EAAc7kC,GAAM,oBAAGlL,IAAiBxqB,UAApB,aAAG,EAA4B01B,EAAO/0B,gBAAtC,QAAuD,GAC3E65D,EAAc7kC,GAAM,oBAAGnL,IAAiBxqB,UAApB,aAAG,EAA4B21B,EAAOh1B,gBAAtC,QAAuD,GAEjF,MAAM,GAAN,mBAAW25D,GAAX,YAAsBC,GAAtB,YAAsCC,MACrC,CAACx6D,EAAS01B,EAAQC,IAEf8kC,EAA8Bx9C,mBAClC,kBAAMgZ,IAAQokC,GAAO,SAACnkC,GAAD,OAA4BmkC,EAAMz/C,KAAI,SAAC8/C,GAAD,MAAe,CAACxkC,EAAMwkC,WACjF,CAACL,IAGGM,EAAwC19C,mBAC5C,kBACEyY,GAAUC,EACN,CAEE,CAACD,EAAQC,IAFX,mBAIK0kC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACR,EAAQQ,OAJlD,YAMKmkC,EAAMz/C,KAAI,SAACsb,GAAD,MAA0B,CAACP,EAAQO,OANlD,YAQKukC,IAEF93C,QAAO,SAAC5hB,GAAD,OAAsC8hB,QAAQ9hB,EAAO,IAAMA,EAAO,OACzE4hB,QAAO,mCAAEi4C,EAAF,KAAMC,EAAN,YAAcD,EAAGj6D,UAAYk6D,EAAGl6D,WACvCgiB,QAAO,YAAyB,IAAD,mBAAtBm4C,EAAsB,KAAbC,EAAa,KAC9B,IAAK/6D,EAAS,OAAO,EACrB,IAAMg7D,EAAcvwC,IAAazqB,GAE3Bi7D,EAAiC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcF,EAAQn6D,SAC1Du6D,EAAiC,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAcD,EAAQp6D,SAEhE,OAAKs6D,IAAiBC,KAElBD,IAAiBA,EAAa3/C,MAAK,SAAC4a,GAAD,OAAU6kC,EAAQ51B,OAAOjP,UAC5DglC,IAAiBA,EAAa5/C,MAAK,SAAC4a,GAAD,OAAU4kC,EAAQ31B,OAAOjP,UAIpE,KACN,CAACR,EAAQC,EAAQ0kC,EAAOI,EAAWz6D,IAG/Bm7D,EAAWhK,YAASwJ,GAG1B,OAAO19C,mBACL,kBACExhB,OAAOmnC,OACLu4B,EAEGx4C,QAAO,SAACY,GAAD,OAAgDV,QAAQU,EAAO,KAAO0tC,IAAUY,QAAUtuC,EAAO,OAExGsT,QAAwC,SAACC,EAAD,GAAqB,IAAD,EAAVskC,EAAU,oBAE3D,OADAtkC,EAAKskC,EAAKrW,eAAepkD,SAAzB,UAAoCm2B,EAAKskC,EAAKrW,eAAepkD,gBAA7D,QAAyEy6D,EAClEtkC,IACN,OAET,CAACqkC,IASE,SAAS1V,EAAgB4V,EAAmCC,GACjE,IAAMC,EAAenB,EAAiB,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAkBjxC,SAAUkxC,GAEnE,EAAwBxnC,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAIo+C,GAAoBC,GAAeC,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,QAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS,EAAGC,cAAe,IAAK,UADxG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GApBL,EAoBoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAA0B,UAC9BJ,QAAMhW,iBAAiB+V,EAAcF,EAAkBC,EAAa,CAAEG,QAAS1oC,EAAG2oC,cAAe,IAAK,UADxE,QAE9B,KAEE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAGT,OAAO,OACN,CAACJ,EAAcF,EAAkBC,EAAazwB,IAM5C,SAAS8a,EAAiBkW,EAAuBC,GACtD,IAAMP,EAAenB,EAAkByB,EAAD,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAmB1xC,UAEtE,EAAwB0J,cAAjB+W,EAAP,oBAEA,OAAO5tB,mBAAQ,WACb,GAAI4+C,GAAcC,GAAqBP,EAAar4C,OAAS,EAAG,CAC1C,IAAD,EAAnB,GAAI2nB,EACF,iBACE2wB,QAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS,EAAGC,cAAe,IAAK,UADzG,QAEE,KAKJ,IADA,IAAIC,EAA+B,KAC1B5oC,EAAI,EAAGA,GAtDL,EAsDoBA,IAAK,CAAC,IAAD,EAC5B6oC,EAAY,UAChBJ,QAAM9V,kBAAkB6V,EAAcM,EAAYC,EAAmB,CAAEL,QAAS1oC,EAAG2oC,cAAe,IAAK,UADvF,QAEhB,KACE5B,EAAc6B,EAAgBC,EAAcpwC,OAC9CmwC,EAAiBC,GAGrB,OAAOD,EAET,OAAO,OACN,CAACE,EAAYC,EAAmBP,EAAc1wB,IAG5C,SAASkxB,EAA4BF,EAAuBP,GACjE,IAAMjJ,EAAkDhwB,cAChDriC,EAAYH,cAAZG,QAEFg8D,EAAUl3B,YAAgB+2B,EAAY77D,GACtCi8D,EAAWn3B,YAAgBw2B,EAAat7D,GAG9C,GAAIqyD,EAAmB,CACrB,GAAI2J,GAAWvgE,OAAOC,KAAK22D,GAAmBh0B,SAAS29B,EAAQr7D,SAC7D,OAAO,EAET,GAAIs7D,GAAYxgE,OAAOC,KAAK22D,GAAmBh0B,SAAS49B,EAASt7D,SAC/D,OAAO,EAIX,OAAO,I,wKClII44C,G,OAAa,uCAAG,WAAO9jC,EAAsB+jC,EAAqBC,GAAlD,eAAAp/C,EAAA,sEACFgxC,OAAO2N,SAASC,QAAQ,CAC/ChF,OAAQ,oBACRrhB,OAAQ,CACNtK,KAAM,QACNzpB,QAAS,CACP8B,QAAS8U,EACT5P,OAAQ2zC,EACR57C,SAAU67C,EACVC,MAAM,GAAD,OAAK/f,IAAL,0BAA+BlkB,EAA/B,YATgB,cACrBkkC,EADqB,yBAcpBA,GAdoB,2CAAH,2D,qDCxBpB1pB,EAAUxzB,IAAOU,IAAV,4CAGPu7D,EAAUj8D,YAAOuI,IAAPvI,CAAH,8CAIPk8D,EAAgBl8D,YAAOsI,IAAPtI,CAAH,gDAInB,SAASm8D,EAAT,GAA+E,IAAzCC,EAAwC,EAAxCA,YAC5B18D,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,cAAC0oC,EAAD,UACE,cAAC,KAAD,MAEF,eAAC,IAAD,CAAYv7D,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,8BACzB,cAAC,IAAD,CAAYiB,IAAI,OAAOP,QAAQ,SAA/B,SACE,cAAC,KAAD,CAAM0uC,MAAI,EAACgnB,OAAK,EAACuG,UAAU,SAA3B,SACGD,MAGL,cAAC,KAAD,CAAMtG,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,SAAzC,SACG38D,EAAE,mDAOb,SAAS48D,EAAT,GAUI,IAAD,EATDzuB,EASC,EATDA,UACAtqC,EAQC,EARDA,QACA67B,EAOC,EAPDA,KACAm9B,EAMC,EANDA,cAOQj5D,EAAYF,cAAZE,QAEA5D,EAAMC,cAAND,EAEF+f,EAA2B4oB,YAAgBk0B,EAAeh5D,GAEhE,OACE,cAACiwB,EAAD,UACE,eAACyoC,EAAD,WACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAa1Z,YAAa,GAAKtiD,MAAM,OAAOgX,MAAM,cAEpD,eAAC,IAAD,CAAYvW,IAAI,OAAOP,QAAQ,SAA/B,UACE,cAAC,KAAD,CAAM2uC,SAAS,OAAf,SAAuBrvC,EAAE,2BACxB6D,GAAW67B,GACV,cAAC,KAAD,CAAMy2B,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,YAAewT,EAAM,cAAe77B,GAA/D,SACG7D,EAAE,qBAGN68D,IAAa,OAAIj5D,QAAJ,IAAIA,GAAJ,UAAIA,EAASM,gBAAb,aAAI,EAAmB44D,aACnC,cAAC,IAAD,CACEvvB,QAAQ,WACRmC,GAAG,OACHlvC,MAAM,cACNoX,QAAS,kBAAMwlC,EAAcr9B,EAAMvb,QAASub,EAAMrW,OAAQqW,EAAMte,WAJlE,SAME,eAACpB,EAAA,EAAD,WACGL,EAAE,0BAA2B,CAAE+8D,MAAOF,EAAcnzD,SACrD,cAAC,KAAD,CAAclJ,MAAM,OAAOmvC,GAAG,aAIpC,cAAC,IAAD,CAAQ/3B,QAASu2B,EAAWuB,GAAG,OAA/B,SACG1vC,EAAE,mBAQR,SAASg9D,EAAT,GAMH,IALFC,EAKC,EALDA,cACAC,EAIC,EAJDA,WAKA,OACE,eAACppC,EAAD,WACE,cAAC,IAAD,UAAMopC,MACN,cAAC,IAAD,UAAMD,SAKL,SAASE,EAAT,GAAsG,IAAnE5D,EAAkE,EAAlEA,QAASprB,EAAyD,EAAzDA,UACzCnuC,EAAMC,cAAND,EACR,OACE,eAAC8zB,EAAD,WACE,eAAC,IAAD,CAAYpzB,QAAQ,SAApB,UACE,cAAC,IAAD,CAAW8W,MAAM,UAAUhX,MAAM,SACjC,cAAC,KAAD,CAAMgX,MAAM,UAAU6c,MAAO,CAAEsoC,UAAW,SAAUn8D,MAAO,OAA3D,SACG+4D,OAIL,cAAC,IAAD,CAAMloB,eAAe,SAAS+rB,GAAG,OAAjC,SACE,cAAC,IAAD,CAAQxlD,QAASu2B,EAAjB,SAA6BnuC,EAAE,kBAuDxBq9D,IAvC6E,SAAC,GAStF,IARLvuB,EAQI,EARJA,MACAX,EAOI,EAPJA,UACAmvB,EAMI,EANJA,gBACAC,EAKI,EALJA,cACA79B,EAII,EAJJA,KACAg9B,EAGI,EAHJA,YACAc,EAEI,EAFJA,QACAX,EACI,EADJA,cAEQh5D,EAAYH,cAAZG,QAEF45D,EAAgBz+D,uBAAY,WAC5Bs+D,GACFA,IAEFnvB,MACC,CAACmvB,EAAiBnvB,IAErB,OAAKtqC,EAGH,cAAC,KAAD,CAAOirC,MAAOA,EAAO4uB,iBAAiB,aAAavvB,UAAWsvB,EAA9D,SACGF,EACC,cAACd,EAAD,CAA4BC,YAAaA,IACvCh9B,EACF,cAACk9B,EAAD,CACE/4D,QAASA,EACT67B,KAAMA,EACNyO,UAAWA,EACX0uB,cAAeA,IAGjBW,MAde,O,6BC3KvB,gHAOauC,EAAkB,WAC7B,IAAQljD,EAAYlZ,cAAZkZ,QACFuB,EAAWC,cAEjBpgB,qBAAU,WACRmgB,EAAS41C,YAAan3C,MACrB,CAACA,EAASuB,KAGFiL,EAAa,WACxB,MAAwErK,aAAY,SAACjhB,GAAD,OAAkBA,EAAMgmC,WAApGyvB,EAAR,EAAQA,cAAe92B,EAAvB,EAAuBA,UAAWx9B,EAAlC,EAAkCA,KAAMyzD,EAAxC,EAAwCA,cACxC,MAAO,CAAE5uB,QAAS7kC,EAAM8gE,WAAYxM,GAAiBb,EAAea,gBAAe92B,e,gGCfxEujC,EAAyB,CACpCnxB,MAAO,aACPgpB,YACE,4OACFva,MAAO,sD,uCCEH2iB,EAAa5/D,YAAO6/D,IAAP7/D,CAAH,oPAKZ,qBAAGu0B,MAAkBurC,aAAahN,MAKlC,qBAAGv+B,MAAkBurC,aAAarI,MAMhCsI,EAAW,WACf,IAAQrgE,EAAMC,cAAND,EACAsgE,EAAa7E,cAAb6E,SACFC,EAAe3/C,cACf4/C,EAAsBD,EAAapuC,GAAG,GAAhB,WACpBouC,EAAar+D,WAAWW,oBAAerF,EAAW,CACpDmF,sBAAuB,EACvBC,sBAAuB,KAEzB,GAEE69D,ED1BqB,SAAC9X,EAAc3oD,GAC1C,OAAQ2oD,GACN,IAAK,IACH,MAAO,CACL7Z,MAAM,GAAD,OAAK9uC,EAAE,QAAP,cAAoBA,EAAE,gBAE/B,IAAK,eAIL,IAAK,cAIL,IAAK,UAIL,IAAK,SAIL,IAAK,WAIL,IAAK,gBAIL,IAAK,OAIL,IAAK,SAIL,IAAK,iBAIL,IAAK,WACH,MAAO,CACL8uC,MAAM,GAAD,OAAK9uC,EAAE,gBAEhB,QACE,OAAO,MCrBM0gE,CAAcJ,EAAUtgE,IAAM,GAC/C,6BAA2CigE,GAAiBQ,GAApD3xB,EAAR,EAAQA,MAAOgpB,EAAf,EAAeA,YAAava,EAA5B,EAA4BA,MACtBojB,EAAYH,EAAsB,CAAC1xB,EAAO0xB,GAAqBI,KAAK,OAAS9xB,EAEnF,OACE,eAAC,IAAD,WACE,gCAAQ6xB,IACR,sBAAME,SAAS,WAAWrD,QAAS1uB,IACnC,sBAAM+xB,SAAS,iBAAiBrD,QAAS1F,IACzC,sBAAM+I,SAAS,WAAWrD,QAASjgB,QAc1BujB,IAT8C,SAAC,GAA4B,IAA1BpjE,EAAyB,EAAzBA,SAAama,EAAY,iBACvF,OACE,qCACE,cAAC,EAAD,IACA,cAACqoD,EAAD,2BAAgBroD,GAAhB,aAAwBna,U,gOC9CxBqjE,EAAS3Z,cACTvjD,EAAUQ,SAASC,KAAgC,IAEnD08D,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACr9D,KAEvD21D,EAAgB,IAAIH,IAAuB,CAC/C8H,IAAI,eAAIt9D,EAAUk9D,GAClBK,OAAQ,gDACRC,QAAQ,EACRC,gBAVuB,OAanBC,EAAe,IAAIC,eAAa,CAAEN,kBAAmB,CAACr9D,KAE/Cg1D,GAA4D,mBACtE4I,IAAeC,SAAWV,GAD4C,cAEtES,IAAeE,cAAgBnI,GAFuC,cAGtEiI,IAAeG,IAAML,GAHiD,GAM5DM,EAAa,SAAC39D,GACzB,IAAMN,EAAU,IAAIX,IAAO2pC,UAAUk1B,aAAa59D,GAElD,OADAN,EAAQ09D,gBAvBe,KAwBhB19D,GAOIm+D,EAAW,uCAAG,WAAO79D,EAAe2Y,EAAiB08C,GAAvC,yBAAAr7D,EAAA,0DACrBgxC,OAAO8yB,aADc,gCAEK9yB,OAAO8yB,aAAaC,QAAQplD,EAAS08C,GAF1C,uBAEf2I,EAFe,EAEfA,UAFe,kBAGhBA,GAHgB,sBAUrBh+D,EAASA,gBAVY,aAUrB,EAAmBi+D,IAVE,wBAWjBC,EAAYn/D,IAAOmzB,MAAMisC,QAAQp/D,IAAOmzB,MAAMksC,YAAY/I,IAXzC,oBAYCr1D,EAASA,gBAZV,aAYC,EAAmBi+D,GAAGI,oBAAoB,CAACH,EAAWvlD,IAZvD,eAYjBqlD,EAZiB,yBAahBA,GAbgB,iCAgBlBh+D,EAAS6kB,UAAUlM,GAASklD,YAAYxI,IAhBtB,4CAAH,2D,wDCpBTz8C,IAXQ,WACrB,MAA2Cnf,mBAASmhC,KAAKS,OAAzD,mBAAOxiB,EAAP,KAAoBylD,EAApB,KAOA,MAAO,CAAEzlD,cAAa0lD,oBANM5N,YAAiB93C,GAMFC,eAJpBhe,uBAAY,WACjCwjE,EAAoB1jC,KAAKS,SACxB,CAACijC,O,wECJAE,EAAiB,CACrBC,QAASC,IACTC,UAAWD,KAyBEE,IAnBS,SAACC,EAAmBC,GAC1C,iCAAqDN,GAAmBM,GAAhEC,EAAR,EAAQA,gBAAiBN,EAAzB,EAAyBA,QAASE,EAAlC,EAAkCA,UAClC,EAA0BllE,oBAAS,WACjC,IACE,IAAMulE,EAActkE,aAAay4D,QAAQ4L,GAEzC,OAAOC,EAAcP,EAAQr8C,KAAKQ,MAAMo8C,IAAgBH,EACxD,MAAOplD,GACP,OAAOolD,MANX,mBAAOhjE,EAAP,KAAcojE,EAAd,KAcA,OAJAllE,qBAAU,WACRW,aAAaC,QAAQokE,EAAiB38C,KAAKC,UAAUs8C,EAAU9iE,OAC9D,CAACA,EAAOkjE,EAAiBJ,IAErB,CAAC9iE,EAAOojE,K,+BCjCjB,8CAKaC,EAAa/oB,YAAY,CACpC7jB,KAAM,QACN35B,aAJ+B,CAAE81B,aAAc,EAAG0a,aAAc,GAKhEiN,SAAU,CACRrN,SAAU,SAAClvC,EAAO2gC,GACW,IAAvB3gC,EAAMsvC,eACRtvC,EAAMsvC,aAAe3O,EAAOC,SAG9B5gC,EAAM40B,aAAe+L,EAAOC,YAMnBsO,EAAam2B,EAAWxoB,QAAxB3N,SAEAm2B,MAAf,S,4HC+BeC,IAzCf,WACE,IAAQz/D,EAAY0/D,cAAZ1/D,QACAC,EAAYH,cAAZG,QACFua,EAAWgI,cAEXm9C,EAAcvkE,uBAClB,SAACstC,GACC,GAAIzoC,IAAYY,IAAQC,QACtB,MAAM,IAAItE,MAAM,4CAElB,OAAOk6D,YAAsBhuB,EAAS1oC,KAExC,CAACC,EAASD,IAIZ,OAAO5E,sBAAW,uCAChB,WAAOyiC,GAAP,6BAAAvjC,EAAA,6DAAwBslE,IAAxB,iCACQ7hC,EAAY8hC,cACdD,GACFplD,EAASiV,IAAeC,QAAQ,CAAEqO,YAAWC,IAAKH,KAHtD,kBAKS44B,YAAa54B,EAAS8hC,GAC1B/4B,MAAK,SAAC3I,GAIL,OAHI2hC,GACFplD,EAASiV,IAAeE,UAAU,CAAEqO,IAAKH,EAASI,YAAWF,eAExDE,KAERwI,OAAM,SAAC1sB,GAKN,MAJAD,QAAQC,MAAR,oCAA2C8jB,GAAW9jB,GAClD6lD,GACFplD,EAASiV,IAAeG,SAAS,CAAEoO,IAAKH,EAASE,YAAWS,aAAczkB,EAAM47C,WAE5E57C,MAjBZ,2CADgB,sDAqBhB,CAACS,EAAUmlD,M,uLC5CFtmC,EAAgB1/B,6BAA+BC,GAE/CkmE,EAA2B,SAAC,GAAkB,IAAhBhmE,EAAe,EAAfA,SACzC,EAA4BC,mBAAoC,IAAhE,mBAAOgmE,EAAP,KAAeC,EAAf,KAEMC,EAAQ7kE,uBACZ,YAAsD,IAAnD8vC,EAAkD,EAAlDA,MAAOgpB,EAA2C,EAA3CA,YAAa3rC,EAA8B,EAA9BA,KACrBy3C,GAAU,SAACE,GACT,IAAMzhD,EAAK0hD,oBAAUj1B,GAGfk1B,EAAgBF,EAAWt9C,QAAO,SAACy9C,GAAD,OAAeA,EAAU5hD,KAAOA,KAExE,MAAM,CACJ,CACEA,KACAysB,QACAgpB,cACA3rC,SALJ,mBAOK63C,SAIT,CAACJ,IAoBH,OACE,cAAC3mC,EAAcn9B,SAAf,CAAwBC,MAAO,CAAE4jE,SAAQO,MAN7B,kBAAMN,EAAU,KAMoBO,OALnC,SAAC9hD,GACduhD,GAAU,SAACE,GAAD,OAAgBA,EAAWt9C,QAAO,SAACy9C,GAAD,OAAeA,EAAU5hD,KAAOA,SAIpBq2C,WAlBvC,SAAC5pB,EAAegpB,GACjC,OAAO+L,EAAM,CAAE/0B,QAAOgpB,cAAa3rC,KAAMi4C,KAAWC,UAiBgBC,UAfpD,SAACx1B,EAAegpB,GAChC,OAAO+L,EAAM,CAAE/0B,QAAOgpB,cAAa3rC,KAAMi4C,KAAWG,QAc2BC,aAZ5D,SAAC11B,EAAegpB,GACnC,OAAO+L,EAAM,CAAE/0B,QAAOgpB,cAAa3rC,KAAMi4C,KAAWjnD,WAWyCsnD,aAT1E,SAAC31B,EAAegpB,GACnC,OAAO+L,EAAM,CAAE/0B,QAAOgpB,cAAa3rC,KAAMi4C,KAAWM,YAQpD,SACGhnE,K,QCvCQinE,EARO,WACpB,MAA2B5nC,cAAnB4mC,EAAR,EAAQA,OAAQQ,EAAhB,EAAgBA,OAIhB,OAAO,cAAC,KAAD,CAAgBR,OAAQA,EAAQiB,SAFlB,SAACviD,GAAD,OAAgB8hD,EAAO9hD,Q,kPCFxCwiD,EAAcvkE,IAAO82D,MAAV,snBACN,gBAAGz5C,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOU,QAS9D,gBAAGj1B,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGo0B,MAAkBG,OAAO8vC,cAInCC,EAAaplE,OAAO,0BAEbqlE,EAAQC,IAAMtqC,MAAK,YAWyC,IAVvE56B,EAUsE,EAVtEA,MACAqoD,EASsE,EATtEA,YACA8c,EAQsE,EARtEA,YACGziB,EAOmE,iBAO9DziD,EAAMC,cAAND,EAER,OACE,cAAC6kE,EAAD,2BACMpiB,GADN,IAEE1iD,MAAOA,EACP8vC,SAAU,SAACs1B,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAOtlE,MAAMH,QAAQ,KAAM,OAblBmlE,EAAW99B,KAAKpZ,YAAau3C,MACvDhd,EAAYgd,IAeZE,UAAU,UACVx2B,MAAO9uC,EAAE,gBACTulE,aAAa,MACbC,YAAY,MAEZr5C,KAAK,OACLs5C,QAAQ,sBACRP,YAAaA,GAAe,MAC5BQ,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAWvlE,IAAOU,IAAV,iHAID,qBAAG8kE,SAA2B,8BAAgC,kCAErEC,EAAuBzlE,YAAO0lE,KAAQC,MAAM,CAAE14B,QAAS,OAAQ+D,MAAO,MAA/ChxC,CAAH,kDAGpB4lE,EAAW5lE,IAAOU,IAAV,6LAIH,qBAAG6zB,MAAkBG,OAAOU,QAKjCywC,EAAa7lE,IAAOU,IAAV,kKAIG,qBAAGolE,UAA6B,MAAQ,UACrC,qBAAGvxC,MAAkBG,OAAOC,cAG5CkrC,EAAY7/D,IAAOU,IAAV,2GAGC,qBAAG6zB,MAAkBwxC,QAAQC,SAiB9B,SAASC,EAAT,GAcc,IAAD,EAb1BxmE,EAa0B,EAb1BA,MACAqoD,EAY0B,EAZ1BA,YACAoe,EAW0B,EAX1BA,MACAC,EAU0B,EAV1BA,cACAC,EAS0B,EAT1BA,MACAC,EAQ0B,EAR1BA,iBACA14C,EAO0B,EAP1BA,SAO0B,IAN1B24C,6BAM0B,aAL1BC,mBAK0B,aAJ1B5tC,YAI0B,MAJnB,KAImB,MAH1BmtC,iBAG0B,SAF1BU,EAE0B,EAF1BA,cACAzkD,EAC0B,EAD1BA,GAEQxF,EAAYnZ,cAAZmZ,QACFkqD,EAA0BjiB,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAZ,OAAuBywB,QAAvB,IAAuBA,SAAYzwB,GAC7EwC,EAAMC,cAAND,EACFgnE,EAAkBN,GAAS1mE,EAAE,SAEnC,EAAiC+vC,aAC/B,cAAC,IAAD,CACE42B,iBAAkBA,EAClBM,iBAAkBh5C,EAClBi5C,sBAAuBJ,KAJpBK,EAAP,oBAOA,OACE,cAAChB,EAAD,CAAY9jD,GAAIA,EAAhB,SACE,eAAC89C,EAAD,CAAWiG,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAAC7lE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuB23B,IACtBnqD,GACC,cAAC,KAAD,CAAMjF,QAAS4uD,EAAOn3B,SAAS,OAAOhb,MAAO,CAAE+yC,QAAS,SAAUC,OAAQ,WAA1E,UACIR,GAAiB54C,GAAY84C,EAC3B/mE,EAAE,oBAAqB,CAAEwB,OAAM,iBAAEulE,QAAF,IAAEA,OAAF,EAAEA,EAAyB1qB,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACwpB,EAAD,CAAUxxC,MAAO+xC,EAAY,CAAEzlE,QAAS,IAAKE,aAAc,OAAU,GAAIilE,SAAUc,EAAnF,WACIR,GACA,qCACE,cAAC,EAAD,CACEkB,UAAU,qBACVvnE,MAAOA,EACPqoD,YAAa,SAACmf,GACZnf,EAAYmf,MAGf1qD,GAAWoR,GAAYw4C,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ9uD,QAAS4uD,EAAOl1B,MAAM,KAAK/D,QAAQ,OAA3C,oBAMN,cAACw4B,EAAD,CACED,WAAY73C,EACZq5C,UAAU,8BACV1vD,QAAS,WACFgvD,GACHO,KALN,SASE,eAAC,IAAD,CAAMn1B,WAAW,SAASX,eAAe,gBAAzC,UACGpY,EACC,cAAC,IAAD,CAAoBhF,UAAWgF,EAAKC,OAAQhF,UAAW+E,EAAKE,OAAQhF,KAAM,GAAIJ,QAAM,IAClF9F,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACH2E,EACC,eAAC,KAAD,CAAM5W,GAAG,OAAT,iBACG4W,QADH,IACGA,OADH,EACGA,EAAMC,OAAOxvB,OADhB,WACyBuvB,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAOzvB,UAGtC,cAAC,KAAD,CAAM2Y,GAAG,OAAT,UACI4L,GAAYA,EAASvkB,QAAUukB,EAASvkB,OAAOqd,OAAS,GAAxD,UACKkH,EAASvkB,OAAOkqC,MAAM,EAAG,GAD9B,cACsC3lB,EAASvkB,OAAOkqC,MAClD3lB,EAASvkB,OAAOqd,OAAS,EACzBkH,EAASvkB,OAAOqd,SAHpB,OAKEkH,QALF,IAKEA,OALF,EAKEA,EAAUvkB,SAAW1J,EAAE,wBAG7B4mE,GAAyB,cAAC,IAAD,mB,kPChJnC/B,EAAcvkE,IAAO82D,MAAV,snBACN,gBAAGz5C,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOU,QAS9D,gBAAGj1B,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGo0B,MAAkBG,OAAO8vC,cAInCC,EAAaplE,OAAO,0BAEbqlE,EAAQC,IAAMtqC,MAAK,YAWyC,IAVvE56B,EAUsE,EAVtEA,MACAqoD,EASsE,EATtEA,YACA8c,EAQsE,EARtEA,YACGziB,EAOmE,iBAO9DziD,EAAMC,cAAND,EAER,OACE,cAAC6kE,EAAD,2BACMpiB,GADN,IAEE1iD,MAAOA,EACP8vC,SAAU,SAACs1B,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAOtlE,MAAMH,QAAQ,KAAM,OAblBmlE,EAAW99B,KAAKpZ,YAAau3C,MACvDhd,EAAYgd,IAeZE,UAAU,UACVx2B,MAAO9uC,EAAE,gBACTulE,aAAa,MACbC,YAAY,MAEZr5C,KAAK,OACLs5C,QAAQ,sBACRP,YAAaA,GAAe,MAC5BQ,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAWvlE,IAAOU,IAAV,iHAID,qBAAG8kE,SAA2B,8BAAgC,kCAErEC,EAAuBzlE,YAAO0lE,KAAQC,MAAM,CAAE14B,QAAS,OAAQ+D,MAAO,MAA/ChxC,CAAH,kDAGpB4lE,EAAW5lE,IAAOU,IAAV,6LAIH,qBAAG6zB,MAAkBG,OAAOU,QAKjCywC,EAAa7lE,IAAOU,IAAV,kKAIG,qBAAGolE,UAA6B,MAAQ,UACrC,qBAAGvxC,MAAkBG,OAAOC,cAG5CkrC,EAAY7/D,IAAOU,IAAV,2GAGC,qBAAG6zB,MAAkBwxC,QAAQC,SAiB9B,SAASC,EAAT,GAcc,IAAD,EAb1BxmE,EAa0B,EAb1BA,MACAqoD,EAY0B,EAZ1BA,YACAoe,EAW0B,EAX1BA,MACAC,EAU0B,EAV1BA,cACAC,EAS0B,EAT1BA,MACAC,EAQ0B,EAR1BA,iBACA14C,EAO0B,EAP1BA,SAO0B,IAN1B24C,6BAM0B,aAL1BC,mBAK0B,aAJ1B5tC,YAI0B,MAJnB,KAImB,MAH1BmtC,iBAG0B,SAF1BU,EAE0B,EAF1BA,cACAzkD,EAC0B,EAD1BA,GAEQxF,EAAYnZ,cAAZmZ,QACFkqD,EAA0BjiB,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAZ,OAAuBywB,QAAvB,IAAuBA,SAAYzwB,GAC7EwC,EAAMC,cAAND,EACFgnE,EAAkBN,GAAS1mE,EAAE,SAEnC,EAAiC+vC,aAC/B,cAAC,IAAD,CACE42B,iBAAkBA,EAClBM,iBAAkBh5C,EAClBi5C,sBAAuBJ,KAJpBK,EAAP,oBAOA,OACE,cAAChB,EAAD,CAAY9jD,GAAIA,EAAhB,SACE,eAAC89C,EAAD,CAAWiG,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAAC7lE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuB23B,IACtBnqD,GACC,cAAC,KAAD,CAAMjF,QAAS4uD,EAAOn3B,SAAS,OAAOhb,MAAO,CAAE+yC,QAAS,SAAUC,OAAQ,WAA1E,UACIR,GAAiB54C,GAAY84C,EAC3B/mE,EAAE,oBAAqB,CAAEwB,OAAM,iBAAEulE,QAAF,IAAEA,OAAF,EAAEA,EAAyB1qB,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACwpB,EAAD,CAAUxxC,MAAO+xC,EAAY,CAAEzlE,QAAS,IAAKE,aAAc,OAAU,GAAIilE,SAAUc,EAAnF,WACIR,GACA,qCACE,cAAC,EAAD,CACEkB,UAAU,qBACVvnE,MAAOA,EACPqoD,YAAa,SAACmf,GACZnf,EAAYmf,MAGf1qD,GAAWoR,GAAYw4C,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ9uD,QAAS4uD,EAAOl1B,MAAM,KAAK/D,QAAQ,OAA3C,oBAMN,cAACw4B,EAAD,CACED,WAAY73C,EACZq5C,UAAU,8BACV1vD,QAAS,WACFgvD,GACHO,KALN,SASE,eAAC,IAAD,CAAMn1B,WAAW,SAASX,eAAe,gBAAzC,UACGpY,EACC,cAAC,IAAD,CAAoBhF,UAAWgF,EAAKC,OAAQhF,UAAW+E,EAAKE,OAAQhF,KAAM,GAAIJ,QAAM,IAClF9F,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACH2E,EACC,eAAC,KAAD,CAAM5W,GAAG,OAAT,iBACG4W,QADH,IACGA,OADH,EACGA,EAAMC,OAAOxvB,OADhB,WACyBuvB,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAOzvB,UAGtC,cAAC,KAAD,CAAM2Y,GAAG,OAAT,UACI4L,GAAYA,EAASvkB,QAAUukB,EAASvkB,OAAOqd,OAAS,GAAxD,UACKkH,EAASvkB,OAAOkqC,MAAM,EAAG,GAD9B,cACsC3lB,EAASvkB,OAAOkqC,MAClD3lB,EAASvkB,OAAOqd,OAAS,EACzBkH,EAASvkB,OAAOqd,SAHpB,OAKEkH,QALF,IAKEA,OALF,EAKEA,EAAUvkB,SAAW1J,EAAE,wBAG7B4mE,GAAyB,cAAC,IAAD,mB,kPChJnC/B,EAAcvkE,IAAO82D,MAAV,snBACN,gBAAGz5C,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOU,QAS9D,gBAAGj1B,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGo0B,MAAkBG,OAAO8vC,cAInCC,EAAaplE,OAAO,0BAEbqlE,EAAQC,IAAMtqC,MAAK,YAWyC,IAVvE56B,EAUsE,EAVtEA,MACAqoD,EASsE,EATtEA,YACA8c,EAQsE,EARtEA,YACGziB,EAOmE,iBAO9DziD,EAAMC,cAAND,EAER,OACE,cAAC6kE,EAAD,2BACMpiB,GADN,IAEE1iD,MAAOA,EACP8vC,SAAU,SAACs1B,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAOtlE,MAAMH,QAAQ,KAAM,OAblBmlE,EAAW99B,KAAKpZ,YAAau3C,MACvDhd,EAAYgd,IAeZE,UAAU,UACVx2B,MAAO9uC,EAAE,gBACTulE,aAAa,MACbC,YAAY,MAEZr5C,KAAK,OACLs5C,QAAQ,sBACRP,YAAaA,GAAe,MAC5BQ,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAWvlE,IAAOU,IAAV,iHAID,qBAAG8kE,SAA2B,8BAAgC,kCAErEC,EAAuBzlE,YAAO0lE,KAAQC,MAAM,CAAE14B,QAAS,OAAQ+D,MAAO,MAA/ChxC,CAAH,kDAGpB4lE,EAAW5lE,IAAOU,IAAV,6LAIH,qBAAG6zB,MAAkBG,OAAOU,QAKjCywC,EAAa7lE,IAAOU,IAAV,kKAIG,qBAAGolE,UAA6B,MAAQ,UACrC,qBAAGvxC,MAAkBG,OAAOC,cAG5CkrC,EAAY7/D,IAAOU,IAAV,2GAGC,qBAAG6zB,MAAkBwxC,QAAQC,SAiB9B,SAASC,EAAT,GAcc,IAAD,EAb1BxmE,EAa0B,EAb1BA,MACAqoD,EAY0B,EAZ1BA,YACAoe,EAW0B,EAX1BA,MACAC,EAU0B,EAV1BA,cACAC,EAS0B,EAT1BA,MACAC,EAQ0B,EAR1BA,iBACA14C,EAO0B,EAP1BA,SAO0B,IAN1B24C,6BAM0B,aAL1BC,mBAK0B,aAJ1B5tC,YAI0B,MAJnB,KAImB,MAH1BmtC,iBAG0B,SAF1BU,EAE0B,EAF1BA,cACAzkD,EAC0B,EAD1BA,GAEQxF,EAAYnZ,cAAZmZ,QACFkqD,EAA0BjiB,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAZ,OAAuBywB,QAAvB,IAAuBA,SAAYzwB,GAC7EwC,EAAMC,cAAND,EACFgnE,EAAkBN,GAAS1mE,EAAE,SAEnC,EAAiC+vC,aAC/B,cAAC,IAAD,CACE42B,iBAAkBA,EAClBM,iBAAkBh5C,EAClBi5C,sBAAuBJ,KAJpBK,EAAP,oBAOA,OACE,cAAChB,EAAD,CAAY9jD,GAAIA,EAAhB,SACE,eAAC89C,EAAD,CAAWiG,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAAC7lE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuB23B,IACtBnqD,GACC,cAAC,KAAD,CAAMjF,QAAS4uD,EAAOn3B,SAAS,OAAOhb,MAAO,CAAE+yC,QAAS,SAAUC,OAAQ,WAA1E,UACIR,GAAiB54C,GAAY84C,EAC3B/mE,EAAE,oBAAqB,CAAEwB,OAAM,iBAAEulE,QAAF,IAAEA,OAAF,EAAEA,EAAyB1qB,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACwpB,EAAD,CAAUxxC,MAAO+xC,EAAY,CAAEzlE,QAAS,IAAKE,aAAc,OAAU,GAAIilE,SAAUc,EAAnF,WACIR,GACA,qCACE,cAAC,EAAD,CACEkB,UAAU,qBACVvnE,MAAOA,EACPqoD,YAAa,SAACmf,GACZnf,EAAYmf,MAGf1qD,GAAWoR,GAAYw4C,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ9uD,QAAS4uD,EAAOl1B,MAAM,KAAK/D,QAAQ,OAA3C,oBAMN,cAACw4B,EAAD,CACED,WAAY73C,EACZq5C,UAAU,8BACV1vD,QAAS,WACFgvD,GACHO,KALN,SASE,eAAC,IAAD,CAAMn1B,WAAW,SAASX,eAAe,gBAAzC,UACGpY,EACC,cAAC,IAAD,CAAoBhF,UAAWgF,EAAKC,OAAQhF,UAAW+E,EAAKE,OAAQhF,KAAM,GAAIJ,QAAM,IAClF9F,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACH2E,EACC,eAAC,KAAD,CAAM5W,GAAG,OAAT,iBACG4W,QADH,IACGA,OADH,EACGA,EAAMC,OAAOxvB,OADhB,WACyBuvB,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAOzvB,UAGtC,cAAC,KAAD,CAAM2Y,GAAG,OAAT,UACI4L,GAAYA,EAASvkB,QAAUukB,EAASvkB,OAAOqd,OAAS,GAAxD,UACKkH,EAASvkB,OAAOkqC,MAAM,EAAG,GAD9B,cACsC3lB,EAASvkB,OAAOkqC,MAClD3lB,EAASvkB,OAAOqd,OAAS,EACzBkH,EAASvkB,OAAOqd,SAHpB,OAKEkH,QALF,IAKEA,OALF,EAKEA,EAAUvkB,SAAW1J,EAAE,wBAG7B4mE,GAAyB,cAAC,IAAD,mB,iPChJnC/B,EAAcvkE,IAAO82D,MAAV,snBACN,gBAAGz5C,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOU,QAS9D,gBAAGj1B,EAAH,EAAGA,MAAH,OAAeA,GAASA,KAqB3B,qBAAGo0B,MAAkBG,OAAO8vC,cAInCC,EAAaplE,OAAO,0BAEbqlE,EAAQC,IAAMtqC,MAAK,YAWyC,IAVvE56B,EAUsE,EAVtEA,MACAqoD,EASsE,EATtEA,YACA8c,EAQsE,EARtEA,YACGziB,EAOmE,iBAO9DziD,EAAMC,cAAND,EAER,OACE,cAAC6kE,EAAD,2BACMpiB,GADN,IAEE1iD,MAAOA,EACP8vC,SAAU,SAACs1B,GAZE,IAACC,GACM,MADNA,EAcHD,EAAME,OAAOtlE,MAAMH,QAAQ,KAAM,OAblBmlE,EAAW99B,KAAKpZ,YAAau3C,MACvDhd,EAAYgd,IAeZE,UAAU,UACVx2B,MAAO9uC,EAAE,gBACTulE,aAAa,MACbC,YAAY,MAEZr5C,KAAK,OACLs5C,QAAQ,sBACRP,YAAaA,GAAe,MAC5BQ,UAAW,EACXC,UAAW,GACXC,WAAW,cCpEXC,EAAWvlE,IAAOU,IAAV,iHAID,qBAAG8kE,SAA2B,8BAAgC,kCAErEC,EAAuBzlE,YAAO0lE,KAAQC,MAAM,CAAE14B,QAAS,OAAQ+D,MAAO,MAA/ChxC,CAAH,kDAGpB4lE,EAAW5lE,IAAOU,IAAV,6LAIH,qBAAG6zB,MAAkBG,OAAOU,QAKjCywC,EAAa7lE,IAAOU,IAAV,kKAIG,qBAAGolE,UAA6B,MAAQ,UACrC,qBAAGvxC,MAAkBG,OAAOC,cAG5CkrC,EAAY7/D,IAAOU,IAAV,2GAGC,qBAAG6zB,MAAkBwxC,QAAQC,SAiB9B,SAASC,EAAT,GAcc,IAAD,EAb1BxmE,EAa0B,EAb1BA,MACAqoD,EAY0B,EAZ1BA,YACAoe,EAW0B,EAX1BA,MACAC,EAU0B,EAV1BA,cACAC,EAS0B,EAT1BA,MACAC,EAQ0B,EAR1BA,iBACA14C,EAO0B,EAP1BA,SAO0B,IAN1B24C,6BAM0B,aAL1BC,mBAK0B,aAJ1B5tC,YAI0B,MAJnB,KAImB,MAH1BmtC,iBAG0B,SAF1BU,EAE0B,EAF1BA,cACAzkD,EAC0B,EAD1BA,GAEQxF,EAAYnZ,cAAZmZ,QACFkqD,EAA0BjiB,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAZ,OAAuBywB,QAAvB,IAAuBA,SAAYzwB,GAC7EwC,EAAMC,cAAND,EACFgnE,EAAkBN,GAAS1mE,EAAE,SAEnC,EAAiC+vC,aAC/B,cAACy3B,EAAA,EAAD,CACEb,iBAAkBA,EAClBM,iBAAkBh5C,EAClBi5C,sBAAuBJ,KAJpBK,EAAP,oBAOA,OACE,cAAChB,EAAD,CAAY9jD,GAAIA,EAAhB,SACE,eAAC89C,EAAD,CAAWiG,UAAWA,EAAtB,WACIA,GACA,cAACF,EAAD,UACE,eAAC7lE,EAAA,EAAD,WACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,SAAuB23B,IACtBnqD,GACC,cAAC,KAAD,CAAMjF,QAAS4uD,EAAOn3B,SAAS,OAAOhb,MAAO,CAAE+yC,QAAS,SAAUC,OAAQ,WAA1E,UACIR,GAAiB54C,GAAY84C,EAC3B/mE,EAAE,oBAAqB,CAAEwB,OAAM,iBAAEulE,QAAF,IAAEA,OAAF,EAAEA,EAAyB1qB,cAAc,UAAzC,QAA+C,KAC9E,YAMd,eAACwpB,EAAD,CAAUxxC,MAAO+xC,EAAY,CAAEzlE,QAAS,IAAKE,aAAc,OAAU,GAAIilE,SAAUc,EAAnF,WACIR,GACA,qCACE,cAAC,EAAD,CACEkB,UAAU,qBACVvnE,MAAOA,EACPqoD,YAAa,SAACmf,GACZnf,EAAYmf,MAGf1qD,GAAWoR,GAAYw4C,GAA2B,OAAVC,GACvC,cAAC,IAAD,CAAQ9uD,QAAS4uD,EAAOl1B,MAAM,KAAK/D,QAAQ,OAA3C,oBAMN,cAACw4B,EAAD,CACED,WAAY73C,EACZq5C,UAAU,8BACV1vD,QAAS,WACFgvD,GACHO,KALN,SASE,eAAC,IAAD,CAAMn1B,WAAW,SAASX,eAAe,gBAAzC,UACGpY,EACC,cAAC,IAAD,CAAoBhF,UAAWgF,EAAKC,OAAQhF,UAAW+E,EAAKE,OAAQhF,KAAM,GAAIJ,QAAM,IAClF9F,EACF,cAAC,IAAD,CAAcA,SAAUA,EAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,SAClE,KACH2E,EACC,eAAC,KAAD,CAAM5W,GAAG,OAAT,iBACG4W,QADH,IACGA,OADH,EACGA,EAAMC,OAAOxvB,OADhB,WACyBuvB,QADzB,IACyBA,OADzB,EACyBA,EAAME,OAAOzvB,UAGtC,cAAC,KAAD,CAAM2Y,GAAG,OAAT,UACI4L,GAAYA,EAASvkB,QAAUukB,EAASvkB,OAAOqd,OAAS,GAAxD,UACKkH,EAASvkB,OAAOkqC,MAAM,EAAG,GAD9B,cACsC3lB,EAASvkB,OAAOkqC,MAClD3lB,EAASvkB,OAAOqd,OAAS,EACzBkH,EAASvkB,OAAOqd,SAHpB,OAKEkH,QALF,IAKEA,OALF,EAKEA,EAAUvkB,SAAW1J,EAAE,wBAG7B4mE,GAAyB,cAAC,IAAD,mB,+BCrJzC,uFAIO,SAASpgC,EAAa5hC,EAAiB42D,GAC5C,GAAsB,IAAlBA,EAAOz0C,OAAc,OAAOniB,EAEhC,IAAM6iE,EAAmBx7C,YAAUuvC,GAEnC,GAAIiM,EACF,OAAO7iE,EAAO4hB,QAAO,SAACzG,GAAD,OAAWA,EAAMvb,UAAYijE,KAGpD,IAAMC,EAAmBlM,EACtBjlC,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAgC,IAA5B2gD,EAAiB3gD,OACnB,OAAOniB,EAGT,IAAM+iE,EAAgB,SAACplC,GACrB,IAAMqlC,EAASrlC,EACZhM,cACA/yB,MAAM,OACNgjB,QAAO,SAACqhD,GAAD,OAAQA,EAAG9gD,OAAS,KAE9B,OAAO2gD,EAAiBliD,OAAM,SAACwU,GAAD,OAAoB,IAAbA,EAAEjT,QAAgB6gD,EAAOvjB,MAAK,SAACyjB,GAAD,OAAQA,EAAGC,WAAW/tC,IAAM8tC,EAAGE,SAAShuC,UAG7G,OAAOp1B,EAAO4hB,QAAO,SAACzG,GACpB,IAAQrW,EAAiBqW,EAAjBrW,OAAQ8sB,EAASzW,EAATyW,KAChB,OAAQ9sB,GAAUi+D,EAAcj+D,IAAa8sB,GAAQmxC,EAAcnxC,MAIhE,SAASyxC,EAAuBrjE,EAA6B2hC,GAClE,OAAOzlB,mBAAQ,WACb,IAAKlc,EACH,MAAO,GAGT,IAAMsjE,EAAc3hC,EACjBhQ,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAImhD,EAAYnhD,OAAS,EACvB,OAAOniB,EAGT,IAAMujE,EAAwB,GACxBC,EAA2B,GAC3B3lB,EAAgB,GAatB,OAVA79C,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMrW,cAAN,eAAc6sB,iBAAkB2xC,EAAY,GACvCC,EAAahmC,KAAKpiB,IAE3B,UAAIA,EAAMrW,cAAV,aAAI,EAAc6sB,cAAcwxC,WAAWxhC,EAAYhQ,cAAc8xC,SAC5DD,EAAgBjmC,KAAKpiB,GAEvB0iC,EAAKtgB,KAAKpiB,MAGb,GAAN,OAAWooD,EAAiBC,EAAoB3lB,KAC/C,CAAC79C,EAAQ2hC,M,8BClEd,kCASA,IAAM+hC,EAAwB,CAC5B,CACEjmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,SACPy5B,MAAO,gBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,WACPy5B,MAAO,oBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,mBACPy5B,MAAO,eAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,OACPy5B,MAAO,gBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,aACPy5B,MAAO,iBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,QACPy5B,MAAO,eAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,UACPy5B,MAAO,iBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,SACPy5B,MAAO,kBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,QACPy5B,MAAO,eAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,QACPy5B,MAAO,iBAET,CACElmD,GAAI,YACJ8J,KAAM,MACN2iB,MAAO,QACPy5B,MAAO,eAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,wBACPy5B,MAAO,4BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,uBACPy5B,MAAO,2BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,uBACPy5B,MAAO,2BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,uBACPy5B,MAAO,2BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,2BACPy5B,MAAO,+BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,0BACPy5B,MAAO,8BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,6BACPy5B,MAAO,iCAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,0BACPy5B,MAAO,8BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,yBACPy5B,MAAO,6BAET,CACElmD,GAAI,YACJ8J,KAAM,aACN2iB,MAAO,6BACPy5B,MAAO,iCAET,CACElmD,GAAI,YACJ8J,KAAM,gBACN2iB,MAAO,eACPgpB,YAAa,qDACbyQ,MAAO,oBAET,CACElmD,GAAI,YACJ8J,KAAM,gBACN2iB,MAAO,cACPgpB,YAAa,mDACbyQ,MAAO,oBAQEC,EAAc,IAAItrE,IAE/BorE,EAAU9oE,SAAQ,SAACipE,GACjBD,EAAYrrE,IAAIsrE,EAASpmD,GAAIomD,O,6BC/L/B,uFAIO,SAASjiC,EAAa5hC,EAAiB42D,GAC5C,GAAsB,IAAlBA,EAAOz0C,OAAc,OAAOniB,EAEhC,IAAM6iE,EAAmBx7C,YAAUuvC,GAEnC,GAAIiM,EACF,OAAO7iE,EAAO4hB,QAAO,SAACzG,GAAD,OAAWA,EAAMvb,UAAYijE,KAGpD,IAAMC,EAAmBlM,EACtBjlC,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAgC,IAA5B2gD,EAAiB3gD,OACnB,OAAOniB,EAGT,IAAM+iE,EAAgB,SAACplC,GACrB,IAAMqlC,EAASrlC,EACZhM,cACA/yB,MAAM,OACNgjB,QAAO,SAACqhD,GAAD,OAAQA,EAAG9gD,OAAS,KAE9B,OAAO2gD,EAAiBliD,OAAM,SAACwU,GAAD,OAAoB,IAAbA,EAAEjT,QAAgB6gD,EAAOvjB,MAAK,SAACyjB,GAAD,OAAQA,EAAGC,WAAW/tC,IAAM8tC,EAAGE,SAAShuC,UAG7G,OAAOp1B,EAAO4hB,QAAO,SAACzG,GACpB,IAAQrW,EAAiBqW,EAAjBrW,OAAQ8sB,EAASzW,EAATyW,KAChB,OAAQ9sB,GAAUi+D,EAAcj+D,IAAa8sB,GAAQmxC,EAAcnxC,MAIhE,SAASyxC,EAAuBrjE,EAA6B2hC,GAClE,OAAOzlB,mBAAQ,WACb,IAAKlc,EACH,MAAO,GAGT,IAAMsjE,EAAc3hC,EACjBhQ,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAImhD,EAAYnhD,OAAS,EACvB,OAAOniB,EAGT,IAAMujE,EAAwB,GACxBC,EAA2B,GAC3B3lB,EAAgB,GAatB,OAVA79C,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMrW,cAAN,eAAc6sB,iBAAkB2xC,EAAY,GACvCC,EAAahmC,KAAKpiB,IAE3B,UAAIA,EAAMrW,cAAV,aAAI,EAAc6sB,cAAcwxC,WAAWxhC,EAAYhQ,cAAc8xC,SAC5DD,EAAgBjmC,KAAKpiB,GAEvB0iC,EAAKtgB,KAAKpiB,MAGb,GAAN,OAAWooD,EAAiBC,EAAoB3lB,KAC/C,CAAC79C,EAAQ2hC,M,6BCpEd,uFAIO,SAASC,EAAa5hC,EAAiB42D,GAC5C,GAAsB,IAAlBA,EAAOz0C,OAAc,OAAOniB,EAEhC,IAAM6iE,EAAmBx7C,YAAUuvC,GAEnC,GAAIiM,EACF,OAAO7iE,EAAO4hB,QAAO,SAACzG,GAAD,OAAWA,EAAMvb,UAAYijE,KAGpD,IAAMC,EAAmBlM,EACtBjlC,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAgC,IAA5B2gD,EAAiB3gD,OACnB,OAAOniB,EAGT,IAAM+iE,EAAgB,SAACplC,GACrB,IAAMqlC,EAASrlC,EACZhM,cACA/yB,MAAM,OACNgjB,QAAO,SAACqhD,GAAD,OAAQA,EAAG9gD,OAAS,KAE9B,OAAO2gD,EAAiBliD,OAAM,SAACwU,GAAD,OAAoB,IAAbA,EAAEjT,QAAgB6gD,EAAOvjB,MAAK,SAACyjB,GAAD,OAAQA,EAAGC,WAAW/tC,IAAM8tC,EAAGE,SAAShuC,UAG7G,OAAOp1B,EAAO4hB,QAAO,SAACzG,GACpB,IAAQrW,EAAiBqW,EAAjBrW,OAAQ8sB,EAASzW,EAATyW,KAChB,OAAQ9sB,GAAUi+D,EAAcj+D,IAAa8sB,GAAQmxC,EAAcnxC,MAIhE,SAASyxC,EAAuBrjE,EAA6B2hC,GAClE,OAAOzlB,mBAAQ,WACb,IAAKlc,EACH,MAAO,GAGT,IAAMsjE,EAAc3hC,EACjBhQ,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAImhD,EAAYnhD,OAAS,EACvB,OAAOniB,EAGT,IAAMujE,EAAwB,GACxBC,EAA2B,GAC3B3lB,EAAgB,GAatB,OAVA79C,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMrW,cAAN,eAAc6sB,iBAAkB2xC,EAAY,GACvCC,EAAahmC,KAAKpiB,IAE3B,UAAIA,EAAMrW,cAAV,aAAI,EAAc6sB,cAAcwxC,WAAWxhC,EAAYhQ,cAAc8xC,SAC5DD,EAAgBjmC,KAAKpiB,GAEvB0iC,EAAKtgB,KAAKpiB,MAGb,GAAN,OAAWooD,EAAiBC,EAAoB3lB,KAC/C,CAAC79C,EAAQ2hC,M,wIChEd7kC,IAAU4gB,OAAO,CACf4a,eAAgB,IAChBC,eAAgB,KAGX,IAEM/Q,GAAkB,mBAC5B3nB,IAAQC,QAAU,uBADU,cAE5BD,IAAQuE,QAAU,+BAFU,GAYlBq0B,EAAiB,IAAI37B,IAAU,GAC/B47B,EAAkB,IAAI57B,IAAW,SAEjC87B,GADgBH,EAAe17B,MAAM27B,GAC1B,8BAEXI,GADsB,UAAMF,EAAN,QACFpR,EAAmB3nB,IAAQC,UAGvB9C,IAAQC,IAAI,K,6BC/BjD,uFAIO,SAAS2kC,EAAa5hC,EAAiB42D,GAC5C,GAAsB,IAAlBA,EAAOz0C,OAAc,OAAOniB,EAEhC,IAAM6iE,EAAmBx7C,YAAUuvC,GAEnC,GAAIiM,EACF,OAAO7iE,EAAO4hB,QAAO,SAACzG,GAAD,OAAWA,EAAMvb,UAAYijE,KAGpD,IAAMC,EAAmBlM,EACtBjlC,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAgC,IAA5B2gD,EAAiB3gD,OACnB,OAAOniB,EAGT,IAAM+iE,EAAgB,SAACplC,GACrB,IAAMqlC,EAASrlC,EACZhM,cACA/yB,MAAM,OACNgjB,QAAO,SAACqhD,GAAD,OAAQA,EAAG9gD,OAAS,KAE9B,OAAO2gD,EAAiBliD,OAAM,SAACwU,GAAD,OAAoB,IAAbA,EAAEjT,QAAgB6gD,EAAOvjB,MAAK,SAACyjB,GAAD,OAAQA,EAAGC,WAAW/tC,IAAM8tC,EAAGE,SAAShuC,UAG7G,OAAOp1B,EAAO4hB,QAAO,SAACzG,GACpB,IAAQrW,EAAiBqW,EAAjBrW,OAAQ8sB,EAASzW,EAATyW,KAChB,OAAQ9sB,GAAUi+D,EAAcj+D,IAAa8sB,GAAQmxC,EAAcnxC,MAIhE,SAASyxC,EAAuBrjE,EAA6B2hC,GAClE,OAAOzlB,mBAAQ,WACb,IAAKlc,EACH,MAAO,GAGT,IAAMsjE,EAAc3hC,EACjBhQ,cACA/yB,MAAM,OACNgjB,QAAO,SAAC+b,GAAD,OAAOA,EAAExb,OAAS,KAE5B,GAAImhD,EAAYnhD,OAAS,EACvB,OAAOniB,EAGT,IAAMujE,EAAwB,GACxBC,EAA2B,GAC3B3lB,EAAgB,GAatB,OAVA79C,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACpB,OAAI,UAAAA,EAAMrW,cAAN,eAAc6sB,iBAAkB2xC,EAAY,GACvCC,EAAahmC,KAAKpiB,IAE3B,UAAIA,EAAMrW,cAAV,aAAI,EAAc6sB,cAAcwxC,WAAWxhC,EAAYhQ,cAAc8xC,SAC5DD,EAAgBjmC,KAAKpiB,GAEvB0iC,EAAKtgB,KAAKpiB,MAGb,GAAN,OAAWooD,EAAiBC,EAAoB3lB,KAC/C,CAAC79C,EAAQ2hC,M,yCCfCtC,IAnDO,CACpB,CACE5hB,GAAI,EACJmU,KAAM,cACNshC,YAAa,gFACb3E,OAAQ,CACN4E,GAAI,qBACJC,GAAI,qBACJ5E,GAAI,qBACJpL,IAAK,sBACLiQ,KAAM,mGAERhjC,WAAY,qBACZyzC,UAAW,UACXC,MAAO,EACPxW,OAAQ,GAEV,CACE9vC,GAAI,EACJmU,KAAM,oBACNshC,YAAa,yFACb3E,OAAQ,CACN4E,GAAI,2BACJC,GAAI,2BACJ5E,GAAI,2BACJpL,IAAK,4BACLiQ,KAAM,yGAERhjC,WAAY,2BACZyzC,UAAW,UACXC,MAAO,EACPxW,OAAQ,GAEV,CACE9vC,GAAI,EACJmU,KAAM,iBACNshC,YAAa,sFACb3E,OAAQ,CACN4E,GAAI,wBACJC,GAAI,wBACJ5E,GAAI,wBACJpL,IAAK,yBACLiQ,KAAM,sGAERhjC,WAAY,wBACZyzC,UAAW,UACXC,MAAO,EACPxW,OAAQ,K,6BChDZ,4BAce/5C,IARf,SAAwB2H,GAAyC,IAAD,IACxDvG,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+T,EAAsB,UAAGqQ,YAAoBpP,EAAU,sBAAjC,iBAAG,EAA8C4N,cAAjD,aAAG,EAAuD,GAEtF,OAAOrH,GAASxH,EAAc,IAAIuwB,IAAY/oB,EAAOxH,EAAY1Y,iBAAcrC,I,6BCXjF,6BAce4a,IARf,SAAwB2H,GAAyC,IAAD,IACxDvG,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+T,EAAsB,UAAGqQ,YAAoBpP,EAAU,sBAAjC,iBAAG,EAA8C4N,cAAjD,aAAG,EAAuD,GAEtF,OAAOrH,GAASxH,EAAc,IAAIuwB,IAAY/oB,EAAOxH,EAAY1Y,iBAAcrC,I,6BCXjF,6BAce4a,IARf,SAAwB2H,GAAyC,IAAD,IACxDvG,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+T,EAAsB,UAAGqQ,YAAoBpP,EAAU,sBAAjC,iBAAG,EAA8C4N,cAAjD,aAAG,EAAuD,GAEtF,OAAOrH,GAASxH,EAAc,IAAIuwB,cAAY/oB,EAAOxH,EAAY1Y,iBAAcrC,I,6BCXjF,6BAce4a,IARf,SAAwB2H,GAAyC,IAAD,IACxDvG,EAAW2Q,YAAgB,OAACpK,QAAD,IAACA,OAAD,EAACA,EAAOvb,SAAS,GAE5C+T,EAAsB,UAAGqQ,YAAoBpP,EAAU,sBAAjC,iBAAG,EAA8C4N,cAAjD,aAAG,EAAuD,GAEtF,OAAOrH,GAASxH,EAAc,IAAIuwB,cAAY/oB,EAAOxH,EAAY1Y,iBAAcrC,I,+BCZjF,sEAOe,SAASioC,IACtB,IAAQ5hC,EAAYH,cAAZG,QACF+kE,EAAsB5pD,aAAkD,qBAAGmY,KAAQvyB,UAEzF,OAAOkc,mBAAQ,WAAO,IAAD,EACnB,OAAKjd,EACEvE,OAAOmnC,OAAP,iBAAcmiC,QAAd,IAAcA,OAAd,EAAcA,EAAsB/kE,UAApC,QAA2D,IAAI4a,IAAI6b,KADrD,KAEpB,CAACsuC,EAAqB/kE,M,2MCLrBuuD,EAAkBjvC,cAEX0vC,EAAO,uCAAG,WAAOb,GAAP,yBAAA9zD,EAAA,+EAE2Dk0D,EAAgByW,eAAe7W,GAF1F,uBAER8W,EAFQ,EAEX,GAAgBC,EAFL,EAEE,GAAmBhX,EAFrB,EAEkB,GAAoBiX,EAFtC,EAEmC,GAChDC,EAAiBrN,IAAUz8C,MAAK,SAAC+pD,GAAD,OAAgBA,EAAW7mD,KAAO2vC,KAHrD,kBAKZmX,IAAM,GAAIF,EAAgB,CAC/BD,aACAxyC,KAAMsyC,EACNH,MAAOI,EAAY7mE,WACnBiwD,OAAQJ,EAAa7vD,cATJ,2DAYZ,MAZY,0DAAH,sDAmBPk6D,EAAQ,uCAAG,sCAAAl+D,EAAA,sEAEdkrE,EAAYxN,IAAUlhC,QAAO,SAAC6b,EAAOuc,GACzC,OAAO,2BACFvc,GADL,kBAEGuc,EAAKzwC,GAAKywC,MAEZ,IAPiB,SAQEV,EAAgBiX,cARlB,OAWpB,IAHMC,EARc,OAUdrjD,EAAQ,GACL2Q,EAAI,EAAGA,GAAK0yC,EAAS1yC,IAC5B3Q,EAAMkc,KAAK,CACT39B,QAASuC,cACTyvB,KAAM,iBACNC,OAAQ,CAACG,KAfO,gBAkBGC,YAAYzT,EAAY6C,GAlB3B,cAkBdsjD,EAlBc,OAoBdC,EAAkBD,EAAS7uC,QAAO,SAAC6b,EAAOuc,EAAM9d,GACpD,IAAW8zB,EAA6DhW,EAAhE,GAAgBiW,EAAgDjW,EAAnD,GAAmBf,EAAgCe,EAAnC,GAAoBkW,EAAelW,EAAlB,GAEtD,OAAO,2BACFvc,GADL,kBAEGvB,EAAQ,EAAI,CACXxe,KAAMsyC,EACNH,MAAOI,EAAY7mE,WACnBiwD,OAAQJ,EAAa7vD,WACrB8mE,kBAGH,IAhCiB,kBAkCbG,IAAM,GAAIC,EAAWI,IAlCR,2DAoCb,MApCa,0DAAH,sD,6BC9BrB,sEAOe,SAAS/jC,IACtB,IAAQ5hC,EAAYH,cAAZG,QACF+kE,EAAsB5pD,aAAkD,qBAAGmY,KAAQvyB,UAEzF,OAAOkc,mBAAQ,WAAO,IAAD,EACnB,OAAKjd,EACEvE,OAAOmnC,OAAP,iBAAcmiC,QAAd,IAAcA,OAAd,EAAcA,EAAsB/kE,UAApC,QAA2D,IAAI4a,IAAI6b,KADrD,KAEpB,CAACsuC,EAAqB/kE,M,6BCd3B,sEAOe,SAAS4hC,IACtB,IAAQ5hC,EAAYH,cAAZG,QACF+kE,EAAsB5pD,aAAkD,qBAAGmY,KAAQvyB,UAEzF,OAAOkc,mBAAQ,WAAO,IAAD,EACnB,OAAKjd,EACEvE,OAAOmnC,OAAP,iBAAcmiC,QAAd,IAAcA,OAAd,EAAcA,EAAsB/kE,UAApC,QAA2D,IAAI4a,IAAI6b,KADrD,KAEpB,CAACsuC,EAAqB/kE,M,6BCd3B,sEAOe,SAAS4hC,IACtB,IAAQ5hC,EAAYH,cAAZG,QACF+kE,EAAsB5pD,aAAkD,qBAAGmY,KAAQvyB,UAEzF,OAAOkc,mBAAQ,WAAO,IAAD,EACnB,OAAKjd,EACEvE,OAAOmnC,OAAP,iBAAcmiC,QAAd,IAAcA,OAAd,EAAcA,EAAsB/kE,UAApC,QAA2D,IAAI4a,IAAI6b,KADrD,KAEpB,CAACsuC,EAAqB/kE,M,sFCLZs8D,IANuB,SAAC,GAAD,IAAGziE,EAAH,EAAGA,SAAama,EAAhB,wBACpC,cAAC,IAAD,yBAAK4xD,GAAI,CAAC,OAAQ,QAASr0D,GAAG,OAAO45B,SAAS,UAAan3B,GAA3D,aACGna,O,8BCLL,IACMgsE,EAAkB,KAClBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAkB,SAgDTC,IAzCQ,SAACC,GACtB,IAAIC,EAAQ/4C,KAAKg5C,IAAIF,GACfG,EAAW,CACfC,MAAO,EACPC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,QAAS,EACTR,QAAS,GA8BX,OA3BIC,GAASH,IACXK,EAASC,MAAQl5C,KAAKu5C,MAAMR,EAAQH,GACpCG,GAASE,EAASC,MAAQN,GAGxBG,GAASJ,IACXM,EAASE,OAASn5C,KAAKu5C,MAAMR,EAAQJ,GACrCI,GAASE,EAASE,OAASR,GAGzBI,GAASL,IACXO,EAASG,KAAOp5C,KAAKu5C,MAAMR,EAAQL,GACnCK,GAASE,EAASG,KAAOV,GAGvBK,GAASN,IACXQ,EAASI,MAAQr5C,KAAKu5C,MAAMR,EAAQN,GACpCM,GAASE,EAASI,MAAQZ,GAGxBM,GA1CoB,KA2CtBE,EAASK,QAAUt5C,KAAKu5C,MAAMR,EA3CR,IA4CtBA,GA5CsB,GA4CbE,EAASK,SAGpBL,EAASH,QAAUC,EAEZE,I,wJCxCIO,EAA8B,SAACxY,GAC1C,IAAMyY,EAAYprE,OAAOmnC,OAAOgxB,KAAYt4C,MAAK,SAACwrD,GAEhD,OADgBpmE,YAAWomE,EAAenmE,WACvBytD,KAGrB,OAAOyY,EAAYA,EAAU/S,cAAgB,MAMlCiT,EAAc,SAACC,GAC1B,OAAIA,EAAS9C,WAAW,WAChB,GAAN,OAAUvQ,IAAV,iBAA+BqT,EAASj3B,MAAM,IAGzCi3B,GAGIC,EAAmB,SAAC3+C,GAC/B,OAAO5nB,YAAWkzD,IAAWtrC,GAAM3nB,UAGxBumE,EAAe,uCAAG,WAAO9Y,EAAoBC,GAA3B,qBAAAh0D,EAAA,sEAErBsb,EAAWsI,YAAkBmwC,GAFR,SAGJz4C,EAASwxD,SAAS9Y,GAHd,cAGrB2Y,EAHqB,gBAIGvY,MAAMsY,EAAYC,IAJrB,WAIrBI,EAJqB,QAMN1Y,GANM,0CAOlB,MAPkB,yBAUL0Y,EAAgBzY,OAVX,eAUrB0Y,EAVqB,yBAWpBA,GAXoB,yCAa3BxtD,QAAQC,MAAM,kBAAd,MAb2B,kBAcpB,MAdoB,0DAAH,wDAkBfo1C,EAAe,uCAAG,WAAOd,EAAoBC,GAA3B,iBAAAh0D,EAAA,sEACP6sE,EAAgB9Y,EAAYC,GADrB,UACvBgZ,EADuB,OAEvBvT,EAAgB8S,EAA4BxY,GAI7CiZ,EANwB,yCAOpB,MAPoB,UAUxBvT,EAVwB,yCAWpB,MAXoB,UAcxBuT,EAAQvT,GAdgB,0CAepB,MAfoB,iCAkBtBE,IAAK14C,MAAK,SAAC6zC,GAChB,OAAOkY,EAAQvT,GAAez1B,SAAS8wB,EAAIkF,gBAnBhB,4CAAH,yD,+GC7CtBiT,EAAY7qE,IAAO8qE,IAAV,oDAmCAC,EAjBH,WACV,IAfsB/K,EAehBgL,EAAW7P,cACTz7D,EAAMC,cAAND,EACR,OACE,cAACmrE,EAAD,UACE,eAAC,IAAD,CAAYI,aAnBMjL,EAmBsBgL,EAAShL,SAjBnDA,EAASp+B,SAAS,WAClBo+B,EAASp+B,SAAS,eAClBo+B,EAASp+B,SAAS,qBAClBo+B,EAASp+B,SAAS,eAClBo+B,EAASp+B,SAAS,aAClBo+B,EAASp+B,SAAS,iBAEX,EAEF,GAQyDoP,MAAM,KAAK/D,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBlrB,GAAG,gBAAgB8vB,GAAG,WAAWF,GAAIC,IAArD,SACGlyC,EAAE,UAEL,cAAC,IAAD,CAAgBqiB,GAAG,gBAAgB8vB,GAAG,SAASF,GAAIC,IAAnD,SACGlyC,EAAE,qB,eC7BPkgE,EAAa5/D,IAAOU,IAAV,iXASZ,qBAAG6zB,MAAkBurC,aAAaoL,MAIlC,qBAAG32C,MAAkBurC,aAAahN,MAKlC,qBAAGv+B,MAAkBurC,aAAarI,MAgBvB+I,IAV8C,SAAC,GAA4B,IAA1BpjE,EAAyB,EAAzBA,SAAama,EAAY,iBACvF,OACE,eAACqoD,EAAD,2BAAgBroD,GAAhB,cACE,cAAC,EAAD,IACCna,EACD,cAAC,IAAD,CAAM+tE,SAAU,U,8GC5BhBN,EAAY7qE,IAAO8qE,IAAV,oDAmCAC,EAjBH,WACV,IAfsB/K,EAehBgL,EAAW7P,cACTz7D,EAAMC,cAAND,EACR,OACE,cAACmrE,EAAD,UACE,eAAC,IAAD,CAAYI,aAnBMjL,EAmBsBgL,EAAShL,SAjBnDA,EAASp+B,SAAS,WAClBo+B,EAASp+B,SAAS,iBAClBo+B,EAASp+B,SAAS,uBAClBo+B,EAASp+B,SAAS,iBAClBo+B,EAASp+B,SAAS,eAClBo+B,EAASp+B,SAAS,mBAEX,EAEF,GAQyDoP,MAAM,KAAK/D,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBlrB,GAAG,gBAAgB8vB,GAAG,cAAcF,GAAIC,IAAxD,SACGlyC,EAAE,UAEL,cAAC,IAAD,CAAgBqiB,GAAG,gBAAgB8vB,GAAG,SAASF,GAAIC,IAAnD,SACGlyC,EAAE,qB,eC7BPkgE,EAAa5/D,IAAOU,IAAV,iXASZ,qBAAG6zB,MAAkBurC,aAAaoL,MAIlC,qBAAG32C,MAAkBurC,aAAahN,MAKlC,qBAAGv+B,MAAkBurC,aAAarI,MAgBvB+I,IAV8C,SAAC,GAA4B,IAA1BpjE,EAAyB,EAAzBA,SAAama,EAAY,iBACvF,OACE,eAACqoD,EAAD,2BAAgBroD,GAAhB,cACE,cAAC,EAAD,IACCna,EACD,cAAC,IAAD,CAAM+tE,SAAU,U,8GC5BhBN,EAAY7qE,IAAO8qE,IAAV,oDAmCAC,EAjBH,WACV,IAfsB/K,EAehBgL,EAAW7P,cACTz7D,EAAMC,cAAND,EACR,OACE,cAACmrE,EAAD,UACE,eAAC,IAAD,CAAYI,aAnBMjL,EAmBsBgL,EAAShL,SAjBnDA,EAASp+B,SAAS,WAClBo+B,EAASp+B,SAAS,kBAClBo+B,EAASp+B,SAAS,wBAClBo+B,EAASp+B,SAAS,kBAClBo+B,EAASp+B,SAAS,gBAClBo+B,EAASp+B,SAAS,oBAEX,EAEF,GAQyDoP,MAAM,KAAK/D,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBlrB,GAAG,gBAAgB8vB,GAAG,UAAUF,GAAIC,IAApD,SACGlyC,EAAE,UAEL,cAAC,IAAD,CAAgBqiB,GAAG,gBAAgB8vB,GAAG,SAASF,GAAIC,IAAnD,SACGlyC,EAAE,qB,eC7BPkgE,EAAa5/D,IAAOU,IAAV,iXASZ,qBAAG6zB,MAAkBurC,aAAaoL,MAIlC,qBAAG32C,MAAkBurC,aAAahN,MAKlC,qBAAGv+B,MAAkBurC,aAAarI,MAgBvB+I,IAV8C,SAAC,GAA4B,IAA1BpjE,EAAyB,EAAzBA,SAAama,EAAY,iBACvF,OACE,eAACqoD,EAAD,2BAAgBroD,GAAhB,cACE,cAAC,EAAD,IACCna,EACD,cAAC,IAAD,CAAM+tE,SAAU,U,8GC5BhBN,EAAY7qE,IAAO8qE,IAAV,oDAmCAC,EAjBH,WACV,IAfsB/K,EAehBgL,EAAW7P,cACTz7D,EAAMC,cAAND,EACR,OACE,cAACmrE,EAAD,UACE,eAAC,IAAD,CAAYI,aAnBMjL,EAmBsBgL,EAAShL,SAjBnDA,EAASp+B,SAAS,UAClBo+B,EAASp+B,SAAS,YAClBo+B,EAASp+B,SAAS,SAClBo+B,EAASp+B,SAAS,YAClBo+B,EAASp+B,SAAS,UAClBo+B,EAASp+B,SAAS,cAEX,EAEF,GAQyDoP,MAAM,KAAK/D,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgBlrB,GAAG,gBAAgB8vB,GAAG,QAAQF,GAAIC,IAAlD,SACGlyC,EAAE,UAEL,cAAC,IAAD,CAAgBqiB,GAAG,gBAAgB8vB,GAAG,QAAQF,GAAIC,IAAlD,SACGlyC,EAAE,qB,eC7BPkgE,EAAa5/D,IAAOU,IAAV,iXASZ,qBAAG6zB,MAAkBurC,aAAaoL,MAIlC,qBAAG32C,MAAkBurC,aAAahN,MAKlC,qBAAGv+B,MAAkBurC,aAAarI,MAgBvB+I,IAV8C,SAAC,GAA4B,IAA1BpjE,EAAyB,EAAzBA,SAAama,EAAY,iBACvF,OACE,eAACqoD,EAAD,2BAAgBroD,GAAhB,cACE,cAAC6zD,EAAD,IACChuE,EACD,cAAC,IAAD,CAAM+tE,SAAU,U,wKC7BhBE,EAAQrrE,YAAOC,IAAPD,CAAH,4BAGLsrE,EAAQtrE,YAAO6/D,IAAP7/D,CAAH,2EAWIurE,EANuC,SAAC,GAAD,IAAG52C,EAAH,EAAGA,WAAYv3B,EAAf,EAAeA,SAAama,EAA5B,wBACpD,cAAC8zD,EAAD,yBAAO12C,WAAYA,GAAgBpd,GAAnC,aACE,cAAC+zD,EAAD,UAAQluE,S,4CCbNouE,E,KAAaxrE,EAAOU,IAAV,4NAaD8qE,O,0CCbTC,E,KAAUzrE,EAAOU,IAAV,miBA4BE+qE,O,8ICxBTlH,EAAcvkE,YAAO0kE,KAAP1kE,CAAH,0EAKX0rE,EAAe1rE,IAAOU,IAAV,sFAEd,qBAAG6zB,MAAkBurC,aAAahN,MAKhC+M,EAAY7/D,IAAOU,IAAV,0BAqCAirE,EA9BsB,SAAC,GAA4D,IAAhDC,EAA+C,EAAzDr8B,SAAyD,IAA7Bq1B,mBAA6B,MAAf,SAAe,EAC/F,EAA8BvnE,oBAAS,GAAvC,mBAAOwuE,EAAP,KAAgBC,EAAhB,KACA,EAAoCzuE,mBAAS,IAA7C,mBAAO0uE,EAAP,KAAmBC,EAAnB,KAEQtsE,EAAMC,cAAND,EAEFusE,EAAoBzrD,mBACxB,kBAAM0rD,KAAS,SAACC,GAAD,OAA4CP,EAAiBO,KAAI,OAChF,CAACP,IAQH,OACE,cAAC/L,EAAD,CAAWgM,QAASA,EAApB,SACE,cAACH,EAAD,UACE,cAACnH,EAAD,CACE9kE,MAAOssE,EACPx8B,SAVS,SAAC48B,GAChBH,EAAcG,EAAEpH,OAAOtlE,OACvBwsE,EAAkBE,IASZvH,YAAallE,EAAEklE,GACfwH,OAAQ,kBAAMN,GAAW,Y,kCChDnC,8CAEa3tC,EAAoBp9B,YAAuD,kC,6BCFxF,0EAeA,IAAMsrE,EAAgB,IAAIC,YAMX,SAAS9V,EAAiBF,GACvC,IAAMiW,EAlBR,SAAyBC,GAGvB,IADAA,EAAMA,EAAI/E,WAAW,MAAQ+E,EAAIlhC,OAAO,GAAKkhC,GACrC/lD,OAAS,IAAM,EAAG,MAAM,IAAI3mB,MAAM,8CAE1C,IADA,IAAM2sE,EAAM,IAAIC,WAAWF,EAAI/lD,OAAS,GAC/B6P,EAAI,EAAGA,EAAIm2C,EAAIhmD,OAAQ6P,IAC9Bm2C,EAAIn2C,GAAKvyB,SAASyoE,EAAIlhC,OAAW,EAAJhV,EAAO,GAAI,IAE1C,OAAOm2C,EAUME,CAAgBrW,GACvBsW,EAAQC,mBAASN,GACvB,OAAQK,GACN,IAAK,UACH,IAAMhuE,EAAOkuE,mBAASP,GAChBQ,EAAM,IAAIC,IAAIpuE,GACpB,MAAM,UAAN,OAAiBquE,sBAAYF,EAAIG,YAEnC,IAAK,UACH,IAAMtuE,EAAOkuE,mBAASP,GAChBQ,EAAM,IAAIC,IAAIpuE,GACdsuE,EAAYC,iBAAOJ,EAAIG,WAC7B,MAAuB,aAAnBA,EAAUh3C,KACN,UAAN,OAAiBm2C,EAAcc,OAAOD,EAAUE,QAAQrF,QAEpD,UAAN,OAAiBkF,sBAAYF,EAAIG,YAEnC,QACE,MAAM,IAAIptE,MAAJ,8BAAiC8sE,O,mpTC1BhCS,EAAoB,SAACjuD,GAChC,MAAO,CACLD,UAAWC,EAAW,IAAIhe,IAAUge,EAASD,WAAazI,IAC1D0iC,oBAAqBh6B,EAAW,IAAIhe,IAAUge,EAASg6B,qBAAuB1iC,IAC9E4I,cAAeF,EAAW,IAAIhe,IAAUge,EAASE,eAAiB5I,IAClE4gC,cAAel4B,EAAW,IAAIhe,IAAUge,EAASk4B,eAAiB5gC,MAIzDukB,EAAgB,SAAC/Y,GAC5B,IAAQkzB,EAAiDlzB,EAAjDkzB,YAAaI,EAAoCtzB,EAApCszB,aAAcp2B,EAAsB8C,EAAtB9C,SAAa+iC,EAAhD,YAAyDjgC,EAAzD,GAEA,OAAO,2BACFigC,GADL,IAEE/iC,SAAUiuD,EAAkBjuD,GAC5Bg2B,YAAa,IAAIh0C,IAAUg0C,GAC3BI,aAAc,IAAIp0C,IAAUo0C,MAInB6C,EAAyB,SAAC15B,GACrC,OAAOA,EAAMyb,QAAO,SAACge,EAAQl5B,GAC3B,IAAMouD,EAAoBrpE,YAAWib,EAAKmB,WAAWnc,SAASqpE,oBACxDv0D,EAAe/U,YAAWib,EAAKO,MAAMvb,SAASqpE,oBASpD,OAPKn1B,EAAOk1B,KACVl1B,EAAOk1B,GAAqB,IAAIlsE,IAAU8d,EAAKmB,WAAWX,WAAW9d,YAElEw2C,EAAOp/B,KACVo/B,EAAOp/B,GAAgB,IAAI5X,IAAU8d,EAAKO,MAAMC,WAAW9d,YAGtDw2C,IACN,M,2JC1CCjpB,EAAiBw1C,IAAM1nE,cAAc,CAAEoyB,KAAM,EAAGD,KAAM,IAsBtDo+C,EAAyB,SAAC,GAAkB,IAAhBpwE,EAAe,EAAfA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAOgyB,EAAP,KAAao+C,EAAb,KACA,EAAwBpwE,mBAAS,GAAjC,mBAAO+xB,EAAP,KAAas+C,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwBjqE,kBAAO,GAcrC,OAZA/F,qBAAU,WACR,IAAMiwE,EAAqB,WACzBD,EAAsB7pE,SAAW+pE,SAASC,QAK5C,OAFAl/B,OAAOm/B,iBAAiB,mBAAoBH,GAErC,WACLh/B,OAAOo/B,oBAAoB,mBAAoBJ,MAEhD,IAEID,EAOuBM,GAoB9B,OAlBAtwE,qBAAU,WACR,IAAM8uC,EAAWC,YAAW,sBAAC,sBAAA9uC,EAAA,sDACvB+vE,EAAsB7pE,SACxB4pE,GAAQ,SAACpwD,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMsvB,cAAcH,MAC1B,CAACkhC,IAEJhwE,qBAAU,WACR,IAAM8uC,EAAWC,YAAW,sBAAC,sBAAA9uC,EAAA,sDACvB+vE,EAAsB7pE,SACxB2pE,GAAQ,SAACnwD,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMsvB,cAAcH,MAC1B,CAACkhC,IAEG,cAACx+C,EAAe3vB,SAAhB,CAAyBC,MAAO,CAAE4vB,OAAMD,QAAxC,SAAiDhyB,M,4HC2D3C8wE,IA7Ff,YAAqE,IAA9C5pE,EAA6C,EAA7CA,OAAQ6pE,EAAqC,EAArCA,qBACrB5qE,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEMC,EAAW/1C,cAGXg2C,EAAoB5oC,cAE1B,OACE,eAAC,IAAD,CAAY/kC,IAAI,KAAhB,UACE,cAAC,KAAD,CAASssC,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGvtC,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAIN4E,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACfqzB,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MACjE5uC,EAAUub,EAAMvb,QAAN,UACTub,EAAMvb,QAAQgoB,UAAU,EAAG,GADlB,cAC0BzM,EAAMvb,QAAQgoB,UAAUzM,EAAMvb,QAAQuiB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0B8nD,iBAAiB,cAAcC,QAAQ,MAAjE,eACYtxE,IAAT41C,EACC,eAAC,KAAD,CACE7F,QAAQ,UACRC,SAAO,EACP8D,MAAM,KACN7D,UAAW2F,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SAJnE,UAMGn0B,EAAE,OANL,IAMcozC,EAAK5c,QAGnB,cAAC,KAAD,CAAK+W,QAAQ,UAAUC,SAAO,EAAC8D,MAAM,KAAK7D,UAAW,cAAC,IAAD,CAAWj2B,MAAM,YAAtE,SACGxX,EAAE,oBAGP,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMtE,GAAG,MAAT,SAAgB3tB,EAAMyW,OACtB,eAAC,KAAD,eAAQzW,EAAMrW,OAAd,UAED7F,GACC,eAAC,IAAD,CAAMwtC,eAAe,gBAAgB7wC,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMktC,GAAG,MAAT,SAAgBlpC,IAChB,eAAC,KAAD,CAAMgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAUsyD,UAAQ,EAAvE,cACIn2D,EAAE,mBADN,YAtBK+f,EAAMvb,YA+BrB,eAAC,IAAD,CAAM6sC,eAAe,gBAAgBW,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASp6B,QAAS,kBAAM82D,GAAcv9B,IAAvD,UACE,cAAC,IAAD,CACEG,MAAM,KACN9a,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,MAEhC,cAAC,KAAD,CAAMxB,GAAG,MAAMtb,MAAO,CAAE06C,WAAY,QAApC,SACG/uE,EAAE,qBAGP,cAAC,IAAD,CACEutC,QAAQ,SACRyhC,UAAW79B,EACXv5B,QAAS,WACPhT,EAAO6Z,KAAI,SAACsB,GAAD,OAAW4uD,EAAS5uD,MAC3B0uD,GACFA,EAAqB7pE,EAAO,KAGhC0iE,UAAU,wBATZ,SAWGtnE,EAAE,oB,6BCtGb,sDAOO,SAASivE,EAAepmC,GAC7B,GAAKA,EACL,OAAIA,EAAe5a,WAAaC,IAC1BnB,IAAKmiD,YAAYrmC,EAAexb,IAAK8B,KAChCwsB,IAAeC,MAAM7uB,IAAKguB,SAASlS,EAAexb,IAAK8B,MAEzDwsB,IAAeC,MAAM7uB,IAAKC,OAAO,IAEnC6b,I,uHC8FM2lC,IA7Ff,YAAqE,IAA9C5pE,EAA6C,EAA7CA,OAAQ6pE,EAAqC,EAArCA,qBACrB5qE,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEMC,EAAW/1C,cAGXg2C,EAAoB5oC,cAE1B,OACE,eAAC,IAAD,CAAY/kC,IAAI,KAAhB,UACE,cAAC,KAAD,CAASssC,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGvtC,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAIN4E,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACfqzB,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MACjE5uC,EAAUub,EAAMvb,QAAN,UACTub,EAAMvb,QAAQgoB,UAAU,EAAG,GADlB,cAC0BzM,EAAMvb,QAAQgoB,UAAUzM,EAAMvb,QAAQuiB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0B8nD,iBAAiB,cAAcC,QAAQ,MAAjE,eACYtxE,IAAT41C,EACC,eAAC,KAAD,CACE7F,QAAQ,UACRC,SAAO,EACP8D,MAAM,KACN7D,UAAW2F,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SAJnE,UAMGn0B,EAAE,OANL,IAMcozC,EAAK5c,QAGnB,cAAC,KAAD,CAAK+W,QAAQ,UAAUC,SAAO,EAAC8D,MAAM,KAAK7D,UAAW,cAAC,IAAD,CAAWj2B,MAAM,YAAtE,SACGxX,EAAE,oBAGP,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMtE,GAAG,MAAT,SAAgB3tB,EAAMyW,OACtB,eAAC,KAAD,eAAQzW,EAAMrW,OAAd,UAED7F,GACC,eAAC,IAAD,CAAMwtC,eAAe,gBAAgB7wC,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMktC,GAAG,MAAT,SAAgBlpC,IAChB,eAAC,KAAD,CAAMgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAUsyD,UAAQ,EAAvE,cACIn2D,EAAE,mBADN,YAtBK+f,EAAMvb,YA+BrB,eAAC,IAAD,CAAM6sC,eAAe,gBAAgBW,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASp6B,QAAS,kBAAM82D,GAAcv9B,IAAvD,UACE,cAAC,IAAD,CACEG,MAAM,KACN9a,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,MAEhC,cAAC,KAAD,CAAMxB,GAAG,MAAMtb,MAAO,CAAE06C,WAAY,QAApC,SACG/uE,EAAE,qBAGP,cAAC,IAAD,CACEutC,QAAQ,SACRyhC,UAAW79B,EACXv5B,QAAS,WACPhT,EAAO6Z,KAAI,SAACsB,GAAD,OAAW4uD,EAAS5uD,MAC3B0uD,GACFA,EAAqB7pE,EAAO,KAGhC0iE,UAAU,wBATZ,SAWGtnE,EAAE,oB,6BCtGb,sDAOO,SAASivE,EAAepmC,GAC7B,GAAKA,EACL,OAAIA,EAAe5a,WAAaC,QAC1BnB,OAAKmiD,YAAYrmC,EAAexb,IAAK8B,KAChCwsB,iBAAeC,MAAM7uB,OAAKguB,SAASlS,EAAexb,IAAK8B,MAEzDwsB,iBAAeC,MAAM7uB,OAAKC,OAAO,IAEnC6b,I,uHC8FM2lC,IA7Ff,YAAqE,IAA9C5pE,EAA6C,EAA7CA,OAAQ6pE,EAAqC,EAArCA,qBACrB5qE,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEMC,EAAW/1C,cAGXg2C,EAAoB5oC,cAE1B,OACE,eAAC,IAAD,CAAY/kC,IAAI,KAAhB,UACE,cAAC,KAAD,CAASssC,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGvtC,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAIN4E,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACfqzB,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MACjE5uC,EAAUub,EAAMvb,QAAN,UACTub,EAAMvb,QAAQgoB,UAAU,EAAG,GADlB,cAC0BzM,EAAMvb,QAAQgoB,UAAUzM,EAAMvb,QAAQuiB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0B8nD,iBAAiB,cAAcC,QAAQ,MAAjE,eACYtxE,IAAT41C,EACC,eAAC,KAAD,CACE7F,QAAQ,UACRC,SAAO,EACP8D,MAAM,KACN7D,UAAW2F,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SAJnE,UAMGn0B,EAAE,OANL,IAMcozC,EAAK5c,QAGnB,cAAC,KAAD,CAAK+W,QAAQ,UAAUC,SAAO,EAAC8D,MAAM,KAAK7D,UAAW,cAAC,IAAD,CAAWj2B,MAAM,YAAtE,SACGxX,EAAE,oBAGP,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMtE,GAAG,MAAT,SAAgB3tB,EAAMyW,OACtB,eAAC,KAAD,eAAQzW,EAAMrW,OAAd,UAED7F,GACC,eAAC,IAAD,CAAMwtC,eAAe,gBAAgB7wC,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMktC,GAAG,MAAT,SAAgBlpC,IAChB,eAAC,KAAD,CAAMgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAUsyD,UAAQ,EAAvE,cACIn2D,EAAE,mBADN,YAtBK+f,EAAMvb,YA+BrB,eAAC,IAAD,CAAM6sC,eAAe,gBAAgBW,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASp6B,QAAS,kBAAM82D,GAAcv9B,IAAvD,UACE,cAAC,IAAD,CACEG,MAAM,KACN9a,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,MAEhC,cAAC,KAAD,CAAMxB,GAAG,MAAMtb,MAAO,CAAE06C,WAAY,QAApC,SACG/uE,EAAE,qBAGP,cAAC,IAAD,CACEutC,QAAQ,SACRyhC,UAAW79B,EACXv5B,QAAS,WACPhT,EAAO6Z,KAAI,SAACsB,GAAD,OAAW4uD,EAAS5uD,MAC3B0uD,GACFA,EAAqB7pE,EAAO,KAGhC0iE,UAAU,wBATZ,SAWGtnE,EAAE,oB,6BCtGb,sDAOO,SAASivE,EAAepmC,GAC7B,GAAKA,EACL,OAAIA,EAAe5a,WAAaC,QAC1BnB,OAAKmiD,YAAYrmC,EAAexb,IAAK8B,KAChCwsB,iBAAeC,MAAM7uB,OAAKguB,SAASlS,EAAexb,IAAK8B,MAEzDwsB,iBAAeC,MAAM7uB,OAAKC,OAAO,IAEnC6b,I,qHC8FM2lC,IA7Ff,YAAqE,IAA9C5pE,EAA6C,EAA7CA,OAAQ6pE,EAAqC,EAArCA,qBACrB5qE,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEMC,EAAW/1C,cAGXg2C,EAAoB5oC,cAE1B,OACE,eAAC,IAAD,CAAY/kC,IAAI,KAAhB,UACE,cAAC,KAAD,CAASssC,QAAQ,UAAjB,SACE,eAAC,KAAD,WACGvtC,EACC,mLAEF,uBACA,uBACCA,EAAE,+EAIN4E,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,IACfqzB,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MACjE5uC,EAAUub,EAAMvb,QAAN,UACTub,EAAMvb,QAAQgoB,UAAU,EAAG,GADlB,cAC0BzM,EAAMvb,QAAQgoB,UAAUzM,EAAMvb,QAAQuiB,OAAS,IACrF,KACJ,OACE,eAAC,IAAD,CAA0B8nD,iBAAiB,cAAcC,QAAQ,MAAjE,eACYtxE,IAAT41C,EACC,eAAC,KAAD,CACE7F,QAAQ,UACRC,SAAO,EACP8D,MAAM,KACN7D,UAAW2F,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SAJnE,UAMGn0B,EAAE,OANL,IAMcozC,EAAK5c,QAGnB,cAAC,KAAD,CAAK+W,QAAQ,UAAUC,SAAO,EAAC8D,MAAM,KAAK7D,UAAW,cAAC,IAAD,CAAWj2B,MAAM,YAAtE,SACGxX,EAAE,oBAGP,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACE,cAAC,KAAD,CAAMtE,GAAG,MAAT,SAAgB3tB,EAAMyW,OACtB,eAAC,KAAD,eAAQzW,EAAMrW,OAAd,UAED7F,GACC,eAAC,IAAD,CAAMwtC,eAAe,gBAAgB7wC,MAAM,OAA3C,UACE,cAAC,KAAD,CAAMktC,GAAG,MAAT,SAAgBlpC,IAChB,eAAC,KAAD,CAAMgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAUsyD,UAAQ,EAAvE,cACIn2D,EAAE,mBADN,YAtBK+f,EAAMvb,YA+BrB,eAAC,IAAD,CAAM6sC,eAAe,gBAAgBW,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMA,WAAW,SAASp6B,QAAS,kBAAM82D,GAAcv9B,IAAvD,UACE,cAAC,IAAD,CACEG,MAAM,KACN9a,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,MAEhC,cAAC,KAAD,CAAMxB,GAAG,MAAMtb,MAAO,CAAE06C,WAAY,QAApC,SACG/uE,EAAE,qBAGP,cAAC,IAAD,CACEutC,QAAQ,SACRyhC,UAAW79B,EACXv5B,QAAS,WACPhT,EAAO6Z,KAAI,SAACsB,GAAD,OAAW4uD,EAAS5uD,MAC3B0uD,GACFA,EAAqB7pE,EAAO,KAGhC0iE,UAAU,wBATZ,SAWGtnE,EAAE,oB,6BCtGb,sDAOO,SAASivE,EAAepmC,GAC7B,GAAKA,EACL,OAAIA,EAAe5a,WAAaC,IAC1BnB,IAAKmiD,YAAYrmC,EAAexb,IAAK8B,KAChCwsB,IAAeC,MAAM7uB,IAAKguB,SAASlS,EAAexb,IAAK8B,MAEzDwsB,IAAeC,MAAM7uB,IAAKC,OAAO,IAEnC6b,I,kCCfT,wEAEY1nC,EAFZ,S,SAEYA,K,sCAAAA,E,sBAAAA,E,wBAAAA,E,yBAAAA,M,KAOL,IAAMC,EAAYC,YAAmD,uB,kkBCM/D8tE,EAAsB,SAAC1G,GAClC,OAAQA,EAASt8C,MACf,IAAK,MACH,MAAO,CACLltB,IAAK,uBACLC,KAAM,CACJ4vC,MAAO25B,EAAS35B,QAGtB,QACE,OAAO25B,EAAS35B,QAITsgC,EAA4B,SAAC3G,GACxC,OAAQA,EAASt8C,MACf,IAAK,MACH,MAAO,CACLltB,IAAK,wDACLC,KAAM,CACJ4vC,MAAO25B,EAAS35B,QAGtB,QACE,OAAO25B,EAAS3Q,cAOTuX,EAAmB,uCAAG,WAAOxyD,GAAP,qBAAA3e,EAAA,6DAC3BoxE,EAAeC,IAAS/oD,QAAO,SAACgpD,GAAD,YAAoChyE,IAAvBgyE,EAAQ9a,cAGpD+a,EAAmBH,EAAa7wD,KAAI,YAAkB,IAAfja,EAAc,EAAdA,QAC3C,MAAO,CACLA,QAAS+C,cACTivB,KAAM,mBACNC,OAAQ,CAAC5Z,EAASrY,OARW,SAYJqyB,YAAY64C,EAAmBD,EAAkB,CAAE34C,gBAAgB,IAZ/D,cAY3B64C,EAZ2B,gBAiBD94C,YAC9B64C,EACAC,EAAcj1C,QAAO,SAAC6b,EAAOq5B,EAAgB56B,GAC3C,OAAuB,OAAnB46B,EACKr5B,GAKW,IAFpB,YAAsBq5B,EAAtB,MAGQ,GAAN,mBAAWr5B,GAAX,CAAkB,CAAE/xC,QAAS+C,cAA4BivB,KAAM,OAAQC,OAAQ,CAACue,MAG3EuB,IACN,KA/B4B,cAiB3Bs5B,EAjB2B,yBAmC1BA,EAAiBn1C,QAAO,SAAC6b,EAAOu5B,GACrC,IAAKtH,IAAY7pE,IAAImxE,EAAqBpb,YACxC,OAAOne,EAGT,IAAMw5B,EAAevH,IAAYpqE,IAAI0xE,EAAqBpb,YAClDlwD,EAAY8qE,EAAanwD,MAAK,SAAC6wD,GAAD,OAAiBA,EAAYtb,aAAeob,EAAqBpb,cAA/FlwD,QAER,MAAM,GAAN,mBACK+xC,GADL,CAEE,CACE/xC,UACA6d,GAAIytD,EAAqBpb,WACzBvoC,KAAM,MACN2iB,MAAOqgC,EAAoBY,GAC3BjY,YAAasX,EAA0BW,GACvCxH,MAAOwH,EAAaxH,MACpBpW,OAAQ2d,EAAqB/d,aAAa7vD,gBAG7C,KAvD8B,2CAAH,uD,yrUC9B1B6zD,EAAgBz1D,IAAOU,IAAV,6NAMR,qBAAG6zB,MAAkBG,OAAOU,QACjB,qBAAGb,MAAkBG,OAAOghC,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7BxR,EAA4B,EAA5BA,WAAYtW,EAAgB,EAAhBA,UAC/CtqC,EAAYH,cAAZG,QACFe,EACJf,GAAW4gD,EACPA,EAAWhmC,KAAI,SAACwP,GACd,OAAO0a,YAAgB1a,EAAUpqB,MAEnC,GAEAqyD,EAAkDhwB,cAExD,OACE,cAAC,KAAD,CAAO4I,MAAM,qBAAqBE,SAAS,QAAQb,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYltC,IAAI,KAAhB,UACG2D,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,EACrB,OACEA,GACAm2C,GACA52D,OAAOC,KAAK22D,GAAmBh0B,SAASniB,EAAMvb,UAC5C,eAAC,IAAD,CAAyDvD,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwtB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,UAAOpU,EAAMrW,YAEd7F,GACC,cAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5+C,MAAM,cAAcg5B,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAxF,SACGkc,EAAMvb,YAPb,UAAiBub,EAAMvb,eAAvB,aAAiB,EAAeg2B,OAAO,qBAc7C,cAAC,IAAD,CAAYv5B,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASo1D,EAAT,GAA8F,IAAzD5R,EAAwD,EAAxDA,WAClD,EAAyB1U,aAAS,cAAC,EAAD,CAAkB0U,WAAYA,KAAzD6R,EAAP,oBAEA,OACE,cAACP,EAAD,UACE,cAAC,IAAD,CAAQxoB,QAAQ,OAAO31B,QAAS0+C,EAAhC,kD,gKC/DA2Z,EAAOljD,IAAKC,OAAO,GAElB,SAASkjD,IACd,OAAOlxD,aAAwC,SAACjhB,GAAD,OAAWA,EAAM4mC,Q,mDCkDnDwrC,OA1Df,YAcI,IAAD,gBAbDhvC,EAaC,EAbDA,YACAivC,EAYC,EAZDA,MACA3rB,EAWC,EAXDA,WACA4rB,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQvwE,EAAMC,cAAND,EACR,OACE,qCACE,eAACK,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAM8/B,YAAa5M,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAM8/B,mBAA3B,aAAO,EAAiCob,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAMqvE,YAAan8C,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAMqvE,mBAA3B,aAAO,EAAiCn0B,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,WACT,cAAC,KAAD,gCACQykD,EAAWtjD,IAAM8/B,mBADzB,aACQ,EAA8Bv3B,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAO/zB,cAAc,GADvE,sBAEIoI,EAAWtjD,IAAMqvE,mBAFrB,aAEI,EAA8B9mE,aAIpC,cAACrJ,EAAA,EAAD,CAAYg0B,MAAO,CAAEgd,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQoT,EAAWtjD,IAAMqvE,mBADzB,aACQ,EAA8B9mE,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAOh0B,SAASC,cAAc,GADhF,sBAEIoI,EAAWtjD,IAAM8/B,mBAFrB,aAEI,EAA8Bv3B,YAIpC,eAACrJ,EAAA,EAAD,WACE,eAAC,KAAD,WAAOL,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOmhC,EAAc,MAAH,OAAWmvC,QAAX,IAAWA,OAAX,EAAWA,EAAqBj0B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQzkC,QAAS24D,EAAO7gC,GAAG,OAA3B,SACiB1vC,EAAdmhC,EAAgB,uBAA4B,wB,UCFtCsvC,I,GAAAA,GAjDf,YAUI,IAAD,wBATDhsB,EASC,EATDA,WACAtjB,EAQC,EARDA,YACAmvC,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQpwE,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYiB,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,OAAP,EAAOA,EAAO/zB,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,GAAP,UAAOA,EAAOh0B,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,eAAC,KAAD,WACGygC,GAAeivC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB1mC,SAAShb,MAAY,QAA1C,OAAoD0hD,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBjuE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMgtC,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,4B,UCTGM,IAAO8qE,IAAV,mDAGA,SAASwF,KAAiB,IAAD,gCAEtC,GAAsCltE,cAA9BmZ,GAAR,GAAQA,QAAShZ,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QAClB5D,GAAMC,cAAND,EACR,GAAqC6wE,cAA7BC,GAAR,GAAQA,YAAaC,GAArB,GAAqBA,YACfC,GAAUC,cACVhc,GAAYvtB,YAAYopC,IACxB5b,GAAYxtB,YAAYqpC,IAGxBG,IAFWzV,cAES/0C,QACxB7iB,KACIoxD,IAAatuB,YAAesuB,GAAW3qC,IAAKzmB,MAC3CqxD,IAAavuB,YAAeuuB,GAAW5qC,IAAKzmB,QAG7C2zB,GAAaH,cAGnB,GAA0D64C,IAAlD3vC,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYS,GAAtC,GAAsCA,gBACtC,GHpBK,SACL+zB,EACAC,GAaC,IAAD,MAoGIv3C,EAKiC,EAIqC,EA5G1E,EAA6Bja,cAArBmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAEjB,EAA0DqsE,IAAlD3vC,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYS,EAAtC,EAAsCA,gBAEhCiwC,EAAiB5wC,IAAqBp/B,IAAM8/B,WAAa9/B,IAAMqvE,WAAarvE,IAAM8/B,WAGlFwjB,EAA8C3jC,mBAClD,2CACG3f,IAAM8/B,WADT,OACsBg0B,QADtB,IACsBA,SAAaz3D,GADnC,cAEG2D,IAAMqvE,WAFT,OAEsBtb,QAFtB,IAEsBA,SAAa13D,GAFnC,IAIA,CAACy3D,EAAWC,IAId,EAA0BS,YAAQlR,EAAWtjD,IAAM8/B,YAAawjB,EAAWtjD,IAAMqvE,aAAjF,mBAAOY,EAAP,KAAkBn4C,EAAlB,KAEM1gB,EAAcH,YAAc,OAAC6gB,QAAD,IAACA,OAAD,EAACA,EAAM2vB,gBAEnCznB,EACJiwC,IAActc,IAAUS,YAAc7uC,QAAQnO,GAAewU,IAAKskD,MAAM94D,EAAY8U,IAAK4iD,IAGrF9rB,EAAWK,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,CACzDinD,EAAWtjD,IAAM8/B,YACjBwjB,EAAWtjD,IAAMqvE,cAEb9mB,GAAuD,mBAC1DvoD,IAAM8/B,WAAakjB,EAAS,IAD8B,cAE1DhjD,IAAMqvE,WAAarsB,EAAS,IAF8B,GAMvDmtB,EAAgDjpB,YAAe5nB,EAAYgkB,EAAWlkB,IACtFgxC,EAA8CzwD,mBAAQ,WAC1D,GAAIqgB,EACF,OAAID,GAAmBujB,EAAW0sB,GACzB9oB,YAAennB,EAAiBujB,EAAW0sB,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2B5oC,YAAsB0oC,EAAmBztE,GAC1E,EAAyB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IAAnF01B,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUg4C,GAA4Bv4C,EAAM,CACxD,IAAMw4C,EAAoBN,IAAmBhwE,IAAMqvE,WAAatb,EAAYD,EACtEyc,EACJP,IAAmBhwE,IAAMqvE,WACrBv3C,EAAK04C,QAAQp4C,GAAQq4C,MAAMJ,GAC3Bv4C,EAAK04C,QAAQn4C,GAAQo4C,MAAMJ,GACjC,OAAOC,IAAsBvjD,IAAQytB,IAAeC,MAAM81B,EAAqBrkD,KAAOqkD,MAKzF,CAACvwC,EAAaD,EAAiBujB,EAAY0sB,EAAgBG,EAAmBrc,EAAWpxD,EAASqxD,EAAWj8B,IAE1Go3C,EAAkEvvD,mBACtE,2CACG3f,IAAM8/B,WAAaV,IAAqBp/B,IAAM8/B,WAAaqwC,EAAoBC,GADlF,cAEGpwE,IAAMqvE,WAAajwC,IAAqBp/B,IAAM8/B,WAAaswC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmB/wC,IAGjC6vC,EAAQtvD,mBAAQ,WACpB,GAAIqgB,EAAa,CACf,IAA4B0wC,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,OAAIqB,GAAmBC,EACd,IAAIC,IAAMF,EAAgB5jD,SAAU6jD,EAAgB7jD,SAAU4jD,EAAgBxkD,IAAKykD,EAAgBzkD,UAE5G,EAEF,IAAM2kD,EAAmBrpC,YAAgBssB,EAAWpxD,GACpD,OAAOo1B,GAAQ+4C,EAAmB/4C,EAAK04C,QAAQK,QAAoBx0E,IAClE,CAACqG,EAASoxD,EAAW9zB,EAAalI,EAAMo3C,IAGrC4B,EAAkBnxD,mBAAQ,WAC9B,IAA4B+wD,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,EAAqC,CACnC5nC,YAAsBipC,EAAiBhuE,GACvC+kC,YAAsBkpC,EAAiBjuE,IAFlCquE,EAAP,KAAqBC,EAArB,KAIA,GAAIl5C,GAAQ1gB,GAAe25D,GAAgBC,EACzC,OAAOl5C,EAAKm5C,mBAAmB75D,EAAa25D,EAAcC,KAG3D,CAAC9B,EAAexsE,EAASo1B,EAAM1gB,IAE5B+3D,EAAsBxvD,mBAAQ,WAClC,GAAImxD,GAAmB15D,EACrB,OAAO,IAAIuU,IAAQmlD,EAAgB5kD,IAAK9U,EAAYoU,IAAIslD,GAAiB5kD,OAG1E,CAAC4kD,EAAiB15D,IAGhBsE,IACHc,EAAQ,kBAGNyzD,IAActc,IAAUQ,UAC1B33C,EAAK,UAAGA,SAAH,QAAY,gBAGd0yD,EAAclvE,IAAM8/B,aAAgBovC,EAAclvE,IAAMqvE,cAC3D7yD,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dk0D,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YAUpD,OARIqB,IAAe,OAAInoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAM8/B,mBAA7B,aAAI,EAAsC2I,SAASioC,MACpEl0D,EAAK,iCAAmB8mC,EAAWtjD,IAAM8/B,mBAApC,aAAmB,EAA8Bv3B,OAAjD,aAGHooE,IAAe,OAAIpoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAMqvE,mBAA7B,aAAI,EAAsC5mC,SAASkoC,MACpEn0D,EAAK,iCAAmB8mC,EAAWtjD,IAAMqvE,mBAApC,aAAmB,EAA8B9mE,OAAjD,aAGA,CACLynE,iBACA1sB,aACAxrB,OACAm4C,YACA1nB,mBACA2mB,gBACAD,QACAjvC,cACA8wC,kBACA3B,sBACA3yD,SGrHE00D,CAAkB,OAACpd,SAAD,IAACA,WAAaz3D,EAAd,OAAyB03D,SAAzB,IAAyBA,WAAa13D,GAX1D2zE,GADF,GACEA,eACA1sB,GAFF,GAEEA,WACAxrB,GAHF,GAGEA,KACAm4C,GAJF,GAIEA,UACA1nB,GALF,GAKEA,iBACA2mB,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAjvC,GARF,GAQEA,YACA8wC,GATF,GASEA,gBACA3B,GAVF,GAUEA,oBACA3yD,GAXF,GAWEA,MAGF,GH3DK,SAA+BwjB,GAIpC,IAAM/iB,EAAWgI,cAejB,MAAO,CACLksD,cAdoBtzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAM8/B,WAAYR,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,IAWXoxC,cAToBvzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAMqvE,WAAY/vC,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,KG2C4BqxC,CAAsBrxC,IAAvDmxC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAW90D,GAGjB,GAA0ChgB,oBAAkB,GAA5D,qBAAO4/D,GAAP,MAAsBmV,GAAtB,MAGM/5C,GAAWi9B,cACjB,GAA0B99B,cAAnB6S,GAAP,qBACA,GAA4BhtC,mBAAiB,IAA7C,qBAAOg1E,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnBtyC,GAAmBE,IADA,cAEnB0wC,GAAiBhwC,GAAcD,GAAH,oBAAqBmvC,GAAcc,WAAnC,aAAqB,EAA+B90B,cAAc,UAAlE,QAAwE,IAFjF,GAMhBy2B,GAAiD,CAAC3xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC1F,SAACq4C,EAAalyC,GACZ,OAAO,2BACFkyC,GADL,kBAEGlyC,EAAQouC,aAAevlB,GAAiB7oB,QAG7C,IAGImyC,GAAmD,CAAC7xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC5F,SAACq4C,EAAalyC,GAAW,IAAD,IACtB,OAAO,2BACFkyC,GADL,kBAEGlyC,EAFH,UAEWiyC,GAAWjyC,UAFtB,aAEW,EAAmBm9B,QAAnB,UAA2BqS,GAAcxvC,UAAzC,QAAmD,SAGhE,IAiBF,GAAsCwI,YAAmBgnC,GAAclvE,IAAM8/B,YAAa9S,KAA1F,qBAAO8kD,GAAP,MAAkBC,GAAlB,MACA,GAAsC7pC,YAAmBgnC,GAAclvE,IAAMqvE,YAAariD,KAA1F,qBAAOglD,GAAP,MAAkBC,GAAlB,MAEM5zC,GAAiBwK,cA1Fe,SA4FvBumC,KA5FuB,8EA4FtC,0DAAAryE,EAAA,yDACO2F,IAAYD,IAAYiZ,GAD/B,oDAEQw2D,EAASr8C,aAAmBnzB,GAASD,GAASiZ,IAExBy2D,EAAqDjD,GAAxElvE,IAAM8/B,YAAgDsyC,EAAkBlD,GAArClvE,IAAMqvE,YAC7C8C,GAAkBC,GAAkBte,IAAcC,IAAcv8B,GALvE,2EAUKx3B,IAAM8/B,WAAahU,aAAwBqmD,EAAenyC,GAAc,EAAIwJ,IAAiB,IAVlG,cAWKxpC,IAAMqvE,WAAavjD,aAAwBsmD,EAAepyC,GAAc,EAAIwJ,IAAiB,IAF1F6oC,EATR,EAkBMve,KAAc/mC,KAASgnC,KAAchnC,KACjCulD,EAAcve,KAAchnC,IAClCwlD,EAAWL,EAAOlpC,YAAYwpC,gBAC9B77B,EAASu7B,EAAOM,gBAChBC,EAAO,qBACLjrC,YAAgB8qC,EAAcxe,GAAYC,GAAWrxD,WADhD,aACL,EAA+DW,eAD1D,QACqE,IACzEivE,EAAcH,EAAgBC,GAAelmD,IAAIxtB,WAClD2zE,EAAWC,EAActyE,IAAM8/B,WAAa9/B,IAAMqvE,YAAY3wE,WAC9D2zE,EAAWC,EAActyE,IAAMqvE,WAAarvE,IAAM8/B,YAAYphC,WAC9Dgd,GACA8b,GAASk7C,eAEX9zE,EAAQ2B,IAAUwB,MAAMuwE,EAAcF,EAAgBD,GAAejmD,IAAIxtB,cAEzE6zE,EAAWL,EAAOlpC,YAAY2pC,aAC9Bh8B,EAASu7B,EAAOS,aAChBF,EAAO,qBACLjrC,YAAgBssB,GAAWpxD,WADtB,aACL,EAAqCW,eADhC,QAC2C,GAD3C,oBAELmkC,YAAgBusB,GAAWrxD,WAFtB,aAEL,EAAqCW,eAFhC,QAE2C,GAChD8uE,EAAcjmD,IAAIxtB,WAClB0zE,EAAclmD,IAAIxtB,WAClB2zE,EAAWryE,IAAM8/B,YAAYphC,WAC7B2zE,EAAWryE,IAAMqvE,YAAY3wE,WAC7Bgd,GACA8b,GAASk7C,eAEX9zE,EAAQ,MAGV2yE,IAAiB,GA/CnB,UAgDQgB,EAAQ,WAAR,cAAYE,GAAZ,QAAkB7zE,EAAQ,CAAEA,SAAU,MACzCyqC,MAAK,SAACupC,GAAD,OACJj8B,EAAM,WAAN,cAAU87B,GAAV,mCACM7zE,EAAQ,CAAEA,SAAU,IAD1B,IAEEwqC,SAAU9d,aAAmBsnD,QAC5BvpC,MAAK,SAACC,GAAc,IAAD,QACpBioC,IAAiB,GAEjBlzC,GAAeiL,EAAU,CACvB7K,QAAQ,OAAD,iBAASywC,GAAclvE,IAAM8/B,mBAA7B,aAAS,EAAiCob,cAAc,GAAxD,sBACLoI,GAAWtjD,IAAM8/B,mBADZ,aACL,EAA8Bv3B,OADzB,0BAEC2mE,GAAclvE,IAAMqvE,mBAFrB,aAEC,EAAiCn0B,cAAc,GAFhD,sBAEsDoI,GAAWtjD,IAAMqvE,mBAFvE,aAEsD,EAA8B9mE,UAG7FkpE,GAAUnoC,EAAS/K,YAGtB2K,OAAM,SAAC2pC,GACNtB,IAAiB,GAEC,QAAX,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAK9sB,OACPxpC,QAAQC,MAAMq2D,MArEtB,6CA5FsC,sBAsKtC,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAO9yC,GACL,eAAC,IAAD,CAAM6Q,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,6BACMmwB,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,UAE5E,cAAC,IAAD,CACEuqB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAM6d,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,gBACG29C,SADH,IACGA,QADH,EACGA,GAAiB51B,cAAc,KAElC,cAAC,IAAD,CACEpoB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAGV,cAAC9zB,EAAA,EAAD,UACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,6BACMoV,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,OAD5E,oBAIF,cAAC,KAAD,CAAM0sD,OAAK,EAACuG,UAAU,OAAOuX,GAAG,OAAhC,SACGl0E,GAAE,mGAAoG,CACrGktB,SAAUyd,GAAkB,YAOhCwpC,GAAc,WAClB,OACE,cAAC,GAAD,CACE/D,MAAOA,GACP3rB,WAAYA,GACZ4rB,cAAeA,GACflvC,YAAaA,GACbovC,MAAOA,GACPD,oBAAqBA,MAKrB5T,GAAc18D,GAAE,wDAAyD,CAC7Eo0E,QAAO,oBAAE/D,GAAclvE,IAAM8/B,mBAAtB,aAAE,EAAiCob,cAAc,UAAjD,QAAuD,GAC9Dg4B,QAAO,oBAAE5vB,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GACjD4qE,QAAO,oBAAEjE,GAAclvE,IAAMqvE,mBAAtB,aAAE,EAAiCn0B,cAAc,UAAjD,QAAuD,GAC9Dk4B,QAAO,oBAAE9vB,GAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,KAG7C8qE,GAAwBx1E,uBAC5B,SAACy1E,GACC,IAAMC,EAAiBh0C,aAAW+zC,GAC9BC,IAAmB3D,GACrBC,GAAQ7uC,KAAR,2BAAiC4uC,GAAjC,YAAgDD,KAEhDE,GAAQ7uC,KAAR,2BAAiCuyC,EAAjC,YAAmD3D,OAGvD,CAACA,GAAaC,GAASF,KAEnB6D,GAAwB31E,uBAC5B,SAAC41E,GACC,IAAMC,EAAiBn0C,aAAWk0C,GAC9B9D,KAAgB+D,EACd9D,GACFC,GAAQ7uC,KAAR,2BAAiC4uC,GAAjC,YAAgD8D,IAEhD7D,GAAQ7uC,KAAR,2BAAiC0yC,IAGnC7D,GAAQ7uC,KAAR,2BAAiC2uC,IAAe,MAAhD,YAAyD+D,MAG7D,CAAC/D,GAAaE,GAASD,KAGnB+D,GAA4B91E,uBAAY,WAExC2zE,IACFL,GAAc,IAEhBM,GAAU,MACT,CAACN,GAAeK,KAEboC,GAAmBnV,YAA2B,OAACnb,SAAD,IAACA,QAAD,EAACA,GAAYxjB,WAAb,OAAyBwjB,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAY+rB,YAEzF,GAAqCzgC,aACnC,cAAC,IAAD,CACEjB,MAAqB9uC,GAAdmhC,GAAgB,0BAA+B,oBACtDm8B,gBAAiBwX,GACjBvX,cAAeA,GACf79B,KAAMizC,GACNnV,QAAS,kBAAM,cAAC,IAAD,CAA0BN,WAAY+W,GAAahX,cAAekX,MACjFzX,YAAaA,GACbG,cAAa,OAAE5jC,SAAF,IAAEA,QAAF,EAAEA,GAAM2vB,kBAEvB,GACA,EACA,qBAZKosB,GAAP,qBAeA,OACE,eAAC,KAAD,WACa,eAAC,KAAD,CAAUC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAY2nC,QAAS,cAAC,IAAD,IAA/C,UAChC,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFnC,aAArB,UAKR,eAAC,KAAD,CAAe2xC,GAAG,sBAAsBF,GAAIC,IAAM16B,MAAM,OAAxD,UACI,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,aAEL,eAAC,KAAD,CAAcmyC,GAAG,OAAOF,GAAIC,IAAM16B,MAAM,OAAxC,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,kBAEL,eAAC,KAAD,CAAemyC,GAAG,qBAAqBF,GAAIC,IAAM16B,MAAM,OAAvD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,oBAGX,eAACo1E,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEtmC,MAAO9uC,GAAE,iBACT4xC,SAAU5xC,GAAE,sCACZ6xC,OAAQ7xC,GACN,2IAEF8xC,OAAO,WAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY7wC,IAAI,OAAhB,UACGkgC,IACC,cAACx4B,EAAA,EAAD,UACE,cAAC,KAAD,CAAS4kC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAM6B,MAAI,EAACH,GAAG,MAAd,SACGjvC,GAAE,2CAEL,cAAC,KAAD,CAAMivC,GAAG,MAAT,SAAgBjvC,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAAC,IAAD,CACED,MAAO8yE,GAAiB1xE,IAAM8/B,YAC9BmnB,YAAakqB,GACb9L,MAAO,WAAO,IAAD,IACX8L,GAAa,oBAACQ,GAAW3xE,IAAM8/B,mBAAlB,aAAC,EAA8Bo0C,iBAA/B,QAA4C,KAE3D1O,iBAAkB6N,GAClB/N,eAAgBuM,GAAa7xE,IAAM8/B,YACnChT,SAAUw2B,GAAWtjD,IAAM8/B,YAC3B5e,GAAG,+BAEL,cAAC1Z,EAAA,EAAD,UACE,cAAC,IAAD,CAASnI,MAAM,WAEjB,cAAC,IAAD,CACET,MAAO8yE,GAAiB1xE,IAAMqvE,YAC9BpoB,YAAamqB,GACb5L,iBAAkBgO,GAClBnO,MAAO,WAAO,IAAD,IACX+L,GAAa,oBAACO,GAAW3xE,IAAMqvE,mBAAlB,aAAC,EAA8B6E,iBAA/B,QAA4C,KAE3D5O,eAAgBuM,GAAa7xE,IAAMqvE,YACnCviD,SAAUw2B,GAAWtjD,IAAMqvE,YAC3BnuD,GAAG,+BAEJoiC,GAAWtjD,IAAM8/B,aAAewjB,GAAWtjD,IAAMqvE,aAAeY,KAActc,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAW30D,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAM0uC,SAAS,OAAf,SACiBrvC,GAAdmhC,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWxgC,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,GAAD,CACE4jD,WAAYA,GACZ6rB,oBAAqBA,GACrBnvC,YAAaA,GACbivC,MAAOA,YAOhB2E,GACC,cAAC,IAAD,CAAQ/F,UAAQ,EAAC//B,GAAG,MAApB,SACGjvC,GAAE,uBAEF6c,GAGH,eAAC,IAAD,CAAY5b,IAAI,KAAhB,WACIgyE,KAAc/pC,IAAcY,cAC5BmpC,KAAc/pC,IAAcW,SAC5BspC,KAAcjqC,IAAcY,cAC5BqpC,KAAcjqC,IAAcW,UAC5B4oC,IACE,eAACpyE,EAAA,EAAD,WACG4yE,KAAc/pC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASs7D,GACTlE,SAAUiE,KAAc/pC,IAAcW,QACtCrpC,MAAO2yE,KAAcjqC,IAAcS,SAAW,MAAQ,OAHxD,SAKGspC,KAAc/pC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAIhEypE,KAAcjqC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASw7D,GACTpE,SAAUmE,KAAcjqC,IAAcW,QACtCrpC,MAAOyyE,KAAc/pC,IAAcS,SAAW,MAAQ,OAHxD,SAKGwpC,KAAcjqC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,cAMvE,cAAC,IAAD,CACE6jC,SACGklC,IAAapC,GAAclvE,IAAM8/B,aAAiBovC,GAAclvE,IAAMqvE,YACnE,SACA,UAEN54D,QAAS,WACH4f,GACF+4C,KAEAyE,MAGJhG,UAAWyD,IAAWQ,KAAc/pC,IAAcS,UAAYwpC,KAAcjqC,IAAcS,SAb5F,gBAeGhsB,SAfH,IAeGA,MAAS3d,GAAE,eApDhB,cAACg+B,EAAA,EAAD,YA2DN+2C,GAOA,cAAC1e,EAAD,CAA2B5R,WAAY,CAACA,GAAWxjB,WAAYwjB,GAAW+rB,cAN1Ev3C,KAASkI,IAAeiwC,KAActc,IAAUQ,QAC9C,cAAC,IAAD,CAAYjhC,MAAO,CAAEihD,SAAU,QAAS90E,MAAO,OAAQwuC,SAAU,QAASumC,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAetE,GAAmBj4C,KAAMA,OAE7D,U,mRCldN88B,EAAgBz1D,IAAOU,IAAV,6NAMR,qBAAG6zB,MAAkBG,OAAOU,QACjB,qBAAGb,MAAkBG,OAAOghC,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7BxR,EAA4B,EAA5BA,WAAYtW,EAAgB,EAAhBA,UAC/CtqC,EAAYH,cAAZG,QACFe,EACJf,GAAW4gD,EACPA,EAAWhmC,KAAI,SAACwP,GACd,OAAO0a,YAAgB1a,EAAUpqB,MAEnC,GAEAqyD,EAAkDhwB,cAExD,OACE,cAAC,KAAD,CAAO4I,MAAM,qBAAqBE,SAAS,QAAQb,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYltC,IAAI,KAAhB,UACG2D,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,EACrB,OACEA,GACAm2C,GACA52D,OAAOC,KAAK22D,GAAmBh0B,SAASniB,EAAMvb,UAC5C,eAAC,IAAD,CAAyDvD,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwtB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,UAAOpU,EAAMrW,YAEd7F,GACC,cAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5+C,MAAM,cAAcg5B,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAxF,SACGkc,EAAMvb,YAPb,UAAiBub,EAAMvb,eAAvB,aAAiB,EAAeg2B,OAAO,qBAc7C,cAAC,IAAD,CAAYv5B,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASo1D,EAAT,GAA8F,IAAzD5R,EAAwD,EAAxDA,WAClD,EAAyB1U,aAAS,cAAC,EAAD,CAAkB0U,WAAYA,KAAzD6R,EAAP,oBAEA,OACE,cAACP,EAAD,UACE,cAAC,IAAD,CAAQxoB,QAAQ,OAAO31B,QAAS0+C,EAAhC,kD,gKC/DA2Z,EAAOljD,OAAKC,OAAO,GAElB,SAASkjD,IACd,OAAOlxD,aAAwC,SAACjhB,GAAD,OAAWA,EAAM4mC,Q,mDCkDnDwrC,OA1Df,YAcI,IAAD,gBAbDhvC,EAaC,EAbDA,YACAivC,EAYC,EAZDA,MACA3rB,EAWC,EAXDA,WACA4rB,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQvwE,EAAMC,cAAND,EACR,OACE,qCACE,eAACK,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAM8/B,YAAa5M,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAM8/B,mBAA3B,aAAO,EAAiCob,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAMqvE,YAAan8C,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAMqvE,mBAA3B,aAAO,EAAiCn0B,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,WACT,cAAC,KAAD,gCACQykD,EAAWtjD,IAAM8/B,mBADzB,aACQ,EAA8Bv3B,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAO/zB,cAAc,GADvE,sBAEIoI,EAAWtjD,IAAMqvE,mBAFrB,aAEI,EAA8B9mE,aAIpC,cAACrJ,EAAA,EAAD,CAAYg0B,MAAO,CAAEgd,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQoT,EAAWtjD,IAAMqvE,mBADzB,aACQ,EAA8B9mE,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAOh0B,SAASC,cAAc,GADhF,sBAEIoI,EAAWtjD,IAAM8/B,mBAFrB,aAEI,EAA8Bv3B,YAIpC,eAACrJ,EAAA,EAAD,WACE,eAAC,KAAD,WAAOL,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOmhC,EAAc,MAAH,OAAWmvC,QAAX,IAAWA,OAAX,EAAWA,EAAqBj0B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQzkC,QAAS24D,EAAO7gC,GAAG,OAA3B,SACiB1vC,EAAdmhC,EAAgB,uBAA4B,wB,UCFtCsvC,I,GAAAA,GAjDf,YAUI,IAAD,wBATDhsB,EASC,EATDA,WACAtjB,EAQC,EARDA,YACAmvC,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQpwE,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYiB,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,OAAP,EAAOA,EAAO/zB,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,GAAP,UAAOA,EAAOh0B,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,eAAC,KAAD,WACGygC,GAAeivC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB1mC,SAAShb,MAAY,QAA1C,OAAoD0hD,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBjuE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMgtC,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,4B,UCTGM,IAAO8qE,IAAV,mDAGA,SAASqK,KAAiB,IAAD,gCAEtC,GAAsC/xE,cAA9BmZ,GAAR,GAAQA,QAAShZ,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QAClB5D,GAAMC,cAAND,EACR,GAAqC6wE,cAA7BC,GAAR,GAAQA,YAAaC,GAArB,GAAqBA,YACfC,GAAUC,cACVhc,GAAYvtB,YAAYopC,IACxB5b,GAAYxtB,YAAYqpC,IAGxBG,IAFWzV,cAES/0C,QACxB7iB,KACIoxD,IAAatuB,yBAAesuB,GAAW3qC,OAAKzmB,MAC3CqxD,IAAavuB,yBAAeuuB,GAAW5qC,OAAKzmB,QAG7C2zB,GAAaH,cAGnB,GAA0D64C,IAAlD3vC,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYS,GAAtC,GAAsCA,gBACtC,GHpBK,SACL+zB,EACAC,GAaC,IAAD,MAoGIv3C,EAKiC,EAIqC,EA5G1E,EAA6Bja,cAArBmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAEjB,EAA0DqsE,IAAlD3vC,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYS,EAAtC,EAAsCA,gBAEhCiwC,EAAiB5wC,IAAqBp/B,IAAM8/B,WAAa9/B,IAAMqvE,WAAarvE,IAAM8/B,WAGlFwjB,EAA8C3jC,mBAClD,2CACG3f,IAAM8/B,WADT,OACsBg0B,QADtB,IACsBA,SAAaz3D,GADnC,cAEG2D,IAAMqvE,WAFT,OAEsBtb,QAFtB,IAEsBA,SAAa13D,GAFnC,IAIA,CAACy3D,EAAWC,IAId,EAA0BS,YAAQlR,EAAWtjD,IAAM8/B,YAAawjB,EAAWtjD,IAAMqvE,aAAjF,mBAAOY,EAAP,KAAkBn4C,EAAlB,KAEM1gB,EAAcH,YAAc,OAAC6gB,QAAD,IAACA,OAAD,EAACA,EAAM2vB,gBAEnCznB,EACJiwC,IAActc,IAAUS,YAAc7uC,QAAQnO,GAAewU,OAAKskD,MAAM94D,EAAY8U,IAAK4iD,IAGrF9rB,EAAWK,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,CACzDinD,EAAWtjD,IAAM8/B,YACjBwjB,EAAWtjD,IAAMqvE,cAEb9mB,GAAuD,mBAC1DvoD,IAAM8/B,WAAakjB,EAAS,IAD8B,cAE1DhjD,IAAMqvE,WAAarsB,EAAS,IAF8B,GAMvDmtB,EAAgDjpB,YAAe5nB,EAAYgkB,EAAWlkB,IACtFgxC,EAA8CzwD,mBAAQ,WAC1D,GAAIqgB,EACF,OAAID,GAAmBujB,EAAW0sB,GACzB9oB,YAAennB,EAAiBujB,EAAW0sB,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2B5oC,YAAsB0oC,EAAmBztE,GAC1E,EAAyB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IAAnF01B,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUg4C,GAA4Bv4C,EAAM,CACxD,IAAMw4C,EAAoBN,IAAmBhwE,IAAMqvE,WAAatb,EAAYD,EACtEyc,EACJP,IAAmBhwE,IAAMqvE,WACrBv3C,EAAK04C,QAAQp4C,GAAQq4C,MAAMJ,GAC3Bv4C,EAAK04C,QAAQn4C,GAAQo4C,MAAMJ,GACjC,OAAOC,IAAsBvjD,QAAQytB,iBAAeC,MAAM81B,EAAqBrkD,KAAOqkD,MAKzF,CAACvwC,EAAaD,EAAiBujB,EAAY0sB,EAAgBG,EAAmBrc,EAAWpxD,EAASqxD,EAAWj8B,IAE1Go3C,EAAkEvvD,mBACtE,2CACG3f,IAAM8/B,WAAaV,IAAqBp/B,IAAM8/B,WAAaqwC,EAAoBC,GADlF,cAEGpwE,IAAMqvE,WAAajwC,IAAqBp/B,IAAM8/B,WAAaswC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmB/wC,IAGjC6vC,EAAQtvD,mBAAQ,WACpB,GAAIqgB,EAAa,CACf,IAA4B0wC,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,OAAIqB,GAAmBC,EACd,IAAIC,QAAMF,EAAgB5jD,SAAU6jD,EAAgB7jD,SAAU4jD,EAAgBxkD,IAAKykD,EAAgBzkD,UAE5G,EAEF,IAAM2kD,EAAmBrpC,YAAgBssB,EAAWpxD,GACpD,OAAOo1B,GAAQ+4C,EAAmB/4C,EAAK04C,QAAQK,QAAoBx0E,IAClE,CAACqG,EAASoxD,EAAW9zB,EAAalI,EAAMo3C,IAGrC4B,EAAkBnxD,mBAAQ,WAC9B,IAA4B+wD,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,EAAqC,CACnC5nC,YAAsBipC,EAAiBhuE,GACvC+kC,YAAsBkpC,EAAiBjuE,IAFlCquE,EAAP,KAAqBC,EAArB,KAIA,GAAIl5C,GAAQ1gB,GAAe25D,GAAgBC,EACzC,OAAOl5C,EAAKm5C,mBAAmB75D,EAAa25D,EAAcC,KAG3D,CAAC9B,EAAexsE,EAASo1B,EAAM1gB,IAE5B+3D,EAAsBxvD,mBAAQ,WAClC,GAAImxD,GAAmB15D,EACrB,OAAO,IAAIuU,UAAQmlD,EAAgB5kD,IAAK9U,EAAYoU,IAAIslD,GAAiB5kD,OAG1E,CAAC4kD,EAAiB15D,IAGhBsE,IACHc,EAAQ,kBAGNyzD,IAActc,IAAUQ,UAC1B33C,EAAK,UAAGA,SAAH,QAAY,gBAGd0yD,EAAclvE,IAAM8/B,aAAgBovC,EAAclvE,IAAMqvE,cAC3D7yD,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dk0D,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YAUpD,OARIqB,IAAe,OAAInoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAM8/B,mBAA7B,aAAI,EAAsC2I,SAASioC,MACpEl0D,EAAK,iCAAmB8mC,EAAWtjD,IAAM8/B,mBAApC,aAAmB,EAA8Bv3B,OAAjD,aAGHooE,IAAe,OAAIpoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAMqvE,mBAA7B,aAAI,EAAsC5mC,SAASkoC,MACpEn0D,EAAK,iCAAmB8mC,EAAWtjD,IAAMqvE,mBAApC,aAAmB,EAA8B9mE,OAAjD,aAGA,CACLynE,iBACA1sB,aACAxrB,OACAm4C,YACA1nB,mBACA2mB,gBACAD,QACAjvC,cACA8wC,kBACA3B,sBACA3yD,SGrHE00D,CAAkB,OAACpd,SAAD,IAACA,WAAaz3D,EAAd,OAAyB03D,SAAzB,IAAyBA,WAAa13D,GAX1D2zE,GADF,GACEA,eACA1sB,GAFF,GAEEA,WACAxrB,GAHF,GAGEA,KACAm4C,GAJF,GAIEA,UACA1nB,GALF,GAKEA,iBACA2mB,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAjvC,GARF,GAQEA,YACA8wC,GATF,GASEA,gBACA3B,GAVF,GAUEA,oBACA3yD,GAXF,GAWEA,MAGF,GH3DK,SAA+BwjB,GAIpC,IAAM/iB,EAAWgI,cAejB,MAAO,CACLksD,cAdoBtzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAM8/B,WAAYR,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,IAWXoxC,cAToBvzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAMqvE,WAAY/vC,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,KG2C4BqxC,CAAsBrxC,IAAvDmxC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAW90D,GAGjB,GAA0ChgB,oBAAkB,GAA5D,qBAAO4/D,GAAP,MAAsBmV,GAAtB,MAGM/5C,GAAWi9B,cACjB,GAA0B99B,cAAnB6S,GAAP,qBACA,GAA4BhtC,mBAAiB,IAA7C,qBAAOg1E,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnBtyC,GAAmBE,IADA,cAEnB0wC,GAAiBhwC,GAAcD,GAAH,oBAAqBmvC,GAAcc,WAAnC,aAAqB,EAA+B90B,cAAc,UAAlE,QAAwE,IAFjF,GAMhBy2B,GAAiD,CAAC3xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC1F,SAACq4C,EAAalyC,GACZ,OAAO,2BACFkyC,GADL,kBAEGlyC,EAAQouC,aAAevlB,GAAiB7oB,QAG7C,IAGImyC,GAAmD,CAAC7xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC5F,SAACq4C,EAAalyC,GAAW,IAAD,IACtB,OAAO,2BACFkyC,GADL,kBAEGlyC,EAFH,UAEWiyC,GAAWjyC,UAFtB,aAEW,EAAmBm9B,QAAnB,UAA2BqS,GAAcxvC,UAAzC,QAAmD,SAGhE,IAiBF,GAAsCwI,YAAmBgnC,GAAclvE,IAAM8/B,YAAa9S,KAA1F,qBAAO8kD,GAAP,MAAkBC,GAAlB,MACA,GAAsC7pC,YAAmBgnC,GAAclvE,IAAMqvE,YAAariD,KAA1F,qBAAOglD,GAAP,MAAkBC,GAAlB,MAEM5zC,GAAiBwK,cA1Fe,SA4FvBumC,KA5FuB,8EA4FtC,0DAAAryE,EAAA,yDACO2F,IAAYD,IAAYiZ,GAD/B,oDAEQw2D,EAASr8C,aAAmBnzB,GAASD,GAASiZ,IAExBy2D,EAAqDjD,GAAxElvE,IAAM8/B,YAAgDsyC,EAAkBlD,GAArClvE,IAAMqvE,YAC7C8C,GAAkBC,GAAkBte,IAAcC,IAAcv8B,GALvE,2EAUKx3B,IAAM8/B,WAAahU,aAAwBqmD,EAAenyC,GAAc,EAAIwJ,IAAiB,IAVlG,cAWKxpC,IAAMqvE,WAAavjD,aAAwBsmD,EAAepyC,GAAc,EAAIwJ,IAAiB,IAF1F6oC,EATR,EAkBMve,KAAc/mC,SAASgnC,KAAchnC,SACjCulD,EAAcve,KAAchnC,QAClCwlD,EAAWL,EAAOlpC,YAAYwpC,gBAC9B77B,EAASu7B,EAAOM,gBAChBC,EAAO,qBACLjrC,YAAgB8qC,EAAcxe,GAAYC,GAAWrxD,WADhD,aACL,EAA+DW,eAD1D,QACqE,IACzEivE,EAAcH,EAAgBC,GAAelmD,IAAIxtB,WAClD2zE,EAAWC,EAActyE,IAAM8/B,WAAa9/B,IAAMqvE,YAAY3wE,WAC9D2zE,EAAWC,EAActyE,IAAMqvE,WAAarvE,IAAM8/B,YAAYphC,WAC9Dgd,GACA8b,GAASk7C,eAEX9zE,EAAQ2B,IAAUwB,MAAMuwE,EAAcF,EAAgBD,GAAejmD,IAAIxtB,cAEzE6zE,EAAWL,EAAOlpC,YAAY2pC,aAC9Bh8B,EAASu7B,EAAOS,aAChBF,EAAO,qBACLjrC,YAAgBssB,GAAWpxD,WADtB,aACL,EAAqCW,eADhC,QAC2C,GAD3C,oBAELmkC,YAAgBusB,GAAWrxD,WAFtB,aAEL,EAAqCW,eAFhC,QAE2C,GAChD8uE,EAAcjmD,IAAIxtB,WAClB0zE,EAAclmD,IAAIxtB,WAClB2zE,EAAWryE,IAAM8/B,YAAYphC,WAC7B2zE,EAAWryE,IAAMqvE,YAAY3wE,WAC7Bgd,GACA8b,GAASk7C,eAEX9zE,EAAQ,MAGV2yE,IAAiB,GA/CnB,UAgDQgB,EAAQ,WAAR,cAAYE,GAAZ,QAAkB7zE,EAAQ,CAAEA,SAAU,MACzCyqC,MAAK,SAACupC,GAAD,OACJj8B,EAAM,WAAN,cAAU87B,GAAV,mCACM7zE,EAAQ,CAAEA,SAAU,IAD1B,IAEEwqC,SAAU9d,aAAmBsnD,QAC5BvpC,MAAK,SAACC,GAAc,IAAD,QACpBioC,IAAiB,GAEjBlzC,GAAeiL,EAAU,CACvB7K,QAAQ,OAAD,iBAASywC,GAAclvE,IAAM8/B,mBAA7B,aAAS,EAAiCob,cAAc,GAAxD,sBACLoI,GAAWtjD,IAAM8/B,mBADZ,aACL,EAA8Bv3B,OADzB,0BAEC2mE,GAAclvE,IAAMqvE,mBAFrB,aAEC,EAAiCn0B,cAAc,GAFhD,sBAEsDoI,GAAWtjD,IAAMqvE,mBAFvE,aAEsD,EAA8B9mE,UAG7FkpE,GAAUnoC,EAAS/K,YAGtB2K,OAAM,SAAC2pC,GACNtB,IAAiB,GAEC,QAAX,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAK9sB,OACPxpC,QAAQC,MAAMq2D,MArEtB,6CA5FsC,sBAsKtC,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAO9yC,GACL,eAAC,IAAD,CAAM6Q,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,6BACMmwB,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,UAE5E,cAAC,IAAD,CACEuqB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAM6d,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,gBACG29C,SADH,IACGA,QADH,EACGA,GAAiB51B,cAAc,KAElC,cAAC,IAAD,CACEpoB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAGV,cAAC9zB,EAAA,EAAD,UACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,6BACMoV,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,OAD5E,oBAIF,cAAC,KAAD,CAAM0sD,OAAK,EAACuG,UAAU,OAAOuX,GAAG,OAAhC,SACGl0E,GAAE,mGAAoG,CACrGktB,SAAUyd,GAAkB,YAOhCwpC,GAAc,WAClB,OACE,cAAC,GAAD,CACE/D,MAAOA,GACP3rB,WAAYA,GACZ4rB,cAAeA,GACflvC,YAAaA,GACbovC,MAAOA,GACPD,oBAAqBA,MAKrB5T,GAAc18D,GAAE,wDAAyD,CAC7Eo0E,QAAO,oBAAE/D,GAAclvE,IAAM8/B,mBAAtB,aAAE,EAAiCob,cAAc,UAAjD,QAAuD,GAC9Dg4B,QAAO,oBAAE5vB,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GACjD4qE,QAAO,oBAAEjE,GAAclvE,IAAMqvE,mBAAtB,aAAE,EAAiCn0B,cAAc,UAAjD,QAAuD,GAC9Dk4B,QAAO,oBAAE9vB,GAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,KAG7C8qE,GAAwBx1E,uBAC5B,SAACy1E,GACC,IAAMC,EAAiBh0C,aAAW+zC,GAC9BC,IAAmB3D,GACrBC,GAAQ7uC,KAAR,6BAAmC4uC,GAAnC,YAAkDD,KAElDE,GAAQ7uC,KAAR,6BAAmCuyC,EAAnC,YAAqD3D,OAGzD,CAACA,GAAaC,GAASF,KAEnB6D,GAAwB31E,uBAC5B,SAAC41E,GACC,IAAMC,EAAiBn0C,aAAWk0C,GAC9B9D,KAAgB+D,EACd9D,GACFC,GAAQ7uC,KAAR,6BAAmC4uC,GAAnC,YAAkD8D,IAElD7D,GAAQ7uC,KAAR,6BAAmC0yC,IAGrC7D,GAAQ7uC,KAAR,6BAAmC2uC,IAAe,MAAlD,YAA2D+D,MAG/D,CAAC/D,GAAaE,GAASD,KAGnB+D,GAA4B91E,uBAAY,WAExC2zE,IACFL,GAAc,IAEhBM,GAAU,MACT,CAACN,GAAeK,KAEboC,GAAmBnV,YAA2B,OAACnb,SAAD,IAACA,QAAD,EAACA,GAAYxjB,WAAb,OAAyBwjB,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAY+rB,YAEzF,GAAqCzgC,aACnC,cAAC,IAAD,CACEjB,MAAqB9uC,GAAdmhC,GAAgB,0BAA+B,oBACtDm8B,gBAAiBwX,GACjBvX,cAAeA,GACf79B,KAAMizC,GACNnV,QAAS,kBAAM,cAAC,IAAD,CAA0BN,WAAY+W,GAAahX,cAAekX,MACjFzX,YAAaA,GACbG,cAAa,OAAE5jC,SAAF,IAAEA,QAAF,EAAEA,GAAM2vB,kBAEvB,GACA,EACA,qBAZKosB,GAAP,qBAeA,OACE,eAAC,KAAD,WACS,eAAC,KAAD,CAAUC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAY2nC,QAAS,cAAC,IAAD,IAA/C,UAC5B,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFvC,gBAArB,UAKD,eAAC,KAAD,CAAe2xC,GAAG,mBAAmBF,GAAIC,IAAM16B,MAAM,OAArD,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,cAEL,eAAC,KAAD,CAAemyC,GAAG,sBAAsBF,GAAIC,IAAM16B,MAAM,OAAxD,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,aAEL,eAAC,KAAD,CAAemyC,GAAG,OAAOF,GAAIC,IAAM16B,MAAM,OAAzC,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,qBAGX,eAACo1E,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEtmC,MAAO9uC,GAAE,iBACT4xC,SAAU5xC,GAAE,sCACZ6xC,OAAQ7xC,GACN,2IAEF8xC,OAAO,WAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY7wC,IAAI,OAAhB,UACGkgC,IACC,cAACx4B,EAAA,EAAD,UACE,cAAC,KAAD,CAAS4kC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAM6B,MAAI,EAACH,GAAG,MAAd,SACGjvC,GAAE,2CAEL,cAAC,KAAD,CAAMivC,GAAG,MAAT,SAAgBjvC,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAAC,IAAD,CACED,MAAO8yE,GAAiB1xE,IAAM8/B,YAC9BmnB,YAAakqB,GACb9L,MAAO,WAAO,IAAD,IACX8L,GAAa,oBAACQ,GAAW3xE,IAAM8/B,mBAAlB,aAAC,EAA8Bo0C,iBAA/B,QAA4C,KAE3D1O,iBAAkB6N,GAClB/N,eAAgBuM,GAAa7xE,IAAM8/B,YACnChT,SAAUw2B,GAAWtjD,IAAM8/B,YAC3B5e,GAAG,+BAEL,cAAC1Z,EAAA,EAAD,UACE,cAAC,IAAD,CAASnI,MAAM,WAEjB,cAAC,IAAD,CACET,MAAO8yE,GAAiB1xE,IAAMqvE,YAC9BpoB,YAAamqB,GACb5L,iBAAkBgO,GAClBnO,MAAO,WAAO,IAAD,IACX+L,GAAa,oBAACO,GAAW3xE,IAAMqvE,mBAAlB,aAAC,EAA8B6E,iBAA/B,QAA4C,KAE3D5O,eAAgBuM,GAAa7xE,IAAMqvE,YACnCviD,SAAUw2B,GAAWtjD,IAAMqvE,YAC3BnuD,GAAG,+BAEJoiC,GAAWtjD,IAAM8/B,aAAewjB,GAAWtjD,IAAMqvE,aAAeY,KAActc,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAW30D,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAM0uC,SAAS,OAAf,SACiBrvC,GAAdmhC,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWxgC,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,GAAD,CACE4jD,WAAYA,GACZ6rB,oBAAqBA,GACrBnvC,YAAaA,GACbivC,MAAOA,YAOhB2E,GACC,cAAC,IAAD,CAAQ/F,UAAQ,EAAC//B,GAAG,MAApB,SACGjvC,GAAE,uBAEF6c,GAGH,eAAC,IAAD,CAAY5b,IAAI,KAAhB,WACIgyE,KAAc/pC,IAAcY,cAC5BmpC,KAAc/pC,IAAcW,SAC5BspC,KAAcjqC,IAAcY,cAC5BqpC,KAAcjqC,IAAcW,UAC5B4oC,IACE,eAACpyE,EAAA,EAAD,WACG4yE,KAAc/pC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASs7D,GACTlE,SAAUiE,KAAc/pC,IAAcW,QACtCrpC,MAAO2yE,KAAcjqC,IAAcS,SAAW,MAAQ,OAHxD,SAKGspC,KAAc/pC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAIhEypE,KAAcjqC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASw7D,GACTpE,SAAUmE,KAAcjqC,IAAcW,QACtCrpC,MAAOyyE,KAAc/pC,IAAcS,SAAW,MAAQ,OAHxD,SAKGwpC,KAAcjqC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,cAMvE,cAAC,IAAD,CACE6jC,SACGklC,IAAapC,GAAclvE,IAAM8/B,aAAiBovC,GAAclvE,IAAMqvE,YACnE,SACA,UAEN54D,QAAS,WACH4f,GACF+4C,KAEAyE,MAGJhG,UAAWyD,IAAWQ,KAAc/pC,IAAcS,UAAYwpC,KAAcjqC,IAAcS,SAb5F,gBAeGhsB,SAfH,IAeGA,MAAS3d,GAAE,eApDhB,cAACg+B,EAAA,EAAD,YA2DN+2C,GAOA,cAAC1e,EAAD,CAA2B5R,WAAY,CAACA,GAAWxjB,WAAYwjB,GAAW+rB,cAN1Ev3C,KAASkI,IAAeiwC,KAActc,IAAUQ,QAC9C,cAAC,IAAD,CAAYjhC,MAAO,CAAEihD,SAAU,QAAS90E,MAAO,OAAQwuC,SAAU,QAASumC,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAetE,GAAmBj4C,KAAMA,OAE7D,U,mRCldN88B,EAAgBz1D,IAAOU,IAAV,6NAMR,qBAAG6zB,MAAkBG,OAAOU,QACjB,qBAAGb,MAAkBG,OAAOghC,oBAI5CC,EAAoC,SAAC,GAA+B,IAA7BxR,EAA4B,EAA5BA,WAAYtW,EAAgB,EAAhBA,UAC/CtqC,EAAYH,cAAZG,QACFe,EACJf,GAAW4gD,EACPA,EAAWhmC,KAAI,SAACwP,GACd,OAAO0a,YAAgB1a,EAAUpqB,MAEnC,GAEAqyD,EAAkDhwB,cAExD,OACE,cAAC,KAAD,CAAO4I,MAAM,qBAAqBE,SAAS,QAAQb,UAAWA,EAA9D,SACE,eAAC,IAAD,CAAYltC,IAAI,KAAhB,UACG2D,EAAO6Z,KAAI,SAACsB,GAAW,IAAD,EACrB,OACEA,GACAm2C,GACA52D,OAAOC,KAAK22D,GAAmBh0B,SAASniB,EAAMvb,UAC5C,eAAC,IAAD,CAAyDvD,IAAI,OAA7D,UACE,eAAC,IAAD,CAASA,IAAI,MAAMR,MAAM,SAAzB,UACE,cAAC,IAAD,CAAcwtB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,UAAOpU,EAAMrW,YAEd7F,GACC,cAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5+C,MAAM,cAAcg5B,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAxF,SACGkc,EAAMvb,YAPb,UAAiBub,EAAMvb,eAAvB,aAAiB,EAAeg2B,OAAO,qBAc7C,cAAC,IAAD,CAAYv5B,IAAI,KAAhB,SACE,cAAC,KAAD,uLAUK,SAASo1D,EAAT,GAA8F,IAAzD5R,EAAwD,EAAxDA,WAClD,EAAyB1U,aAAS,cAAC,EAAD,CAAkB0U,WAAYA,KAAzD6R,EAAP,oBAEA,OACE,cAACP,EAAD,UACE,cAAC,IAAD,CAAQxoB,QAAQ,OAAO31B,QAAS0+C,EAAhC,kD,gKC/DA2Z,EAAOljD,OAAKC,OAAO,GAElB,SAASkjD,IACd,OAAOlxD,aAAwC,SAACjhB,GAAD,OAAWA,EAAM4mC,Q,mDCkDnDwrC,OA1Df,YAcI,IAAD,gBAbDhvC,EAaC,EAbDA,YACAivC,EAYC,EAZDA,MACA3rB,EAWC,EAXDA,WACA4rB,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQvwE,EAAMC,cAAND,EACR,OACE,qCACE,eAACK,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAM8/B,YAAa5M,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAM8/B,mBAA3B,aAAO,EAAiCob,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAMqvE,YAAan8C,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAMqvE,mBAA3B,aAAO,EAAiCn0B,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,WACT,cAAC,KAAD,gCACQykD,EAAWtjD,IAAM8/B,mBADzB,aACQ,EAA8Bv3B,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAO/zB,cAAc,GADvE,sBAEIoI,EAAWtjD,IAAMqvE,mBAFrB,aAEI,EAA8B9mE,aAIpC,cAACrJ,EAAA,EAAD,CAAYg0B,MAAO,CAAEgd,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQoT,EAAWtjD,IAAMqvE,mBADzB,aACQ,EAA8B9mE,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAOh0B,SAASC,cAAc,GADhF,sBAEIoI,EAAWtjD,IAAM8/B,mBAFrB,aAEI,EAA8Bv3B,YAIpC,eAACrJ,EAAA,EAAD,WACE,eAAC,KAAD,WAAOL,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOmhC,EAAc,MAAH,OAAWmvC,QAAX,IAAWA,OAAX,EAAWA,EAAqBj0B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQzkC,QAAS24D,EAAO7gC,GAAG,OAA3B,SACiB1vC,EAAdmhC,EAAgB,uBAA4B,wB,UCFtCsvC,I,GAAAA,GAjDf,YAUI,IAAD,wBATDhsB,EASC,EATDA,WACAtjB,EAQC,EARDA,YACAmvC,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQpwE,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYiB,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,OAAP,EAAOA,EAAO/zB,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,GAAP,UAAOA,EAAOh0B,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,eAAC,KAAD,WACGygC,GAAeivC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB1mC,SAAShb,MAAY,QAA1C,OAAoD0hD,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBjuE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMgtC,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,4B,UCTGM,IAAO8qE,IAAV,mDAGA,SAASsK,KAAiB,IAAD,gCAEtC,GAAsChyE,cAA9BmZ,GAAR,GAAQA,QAAShZ,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QAClB5D,GAAMC,cAAND,EACR,GAAqC6wE,cAA7BC,GAAR,GAAQA,YAAaC,GAArB,GAAqBA,YACfC,GAAUC,cACVhc,GAAYvtB,YAAYopC,IACxB5b,GAAYxtB,YAAYqpC,IAGxBG,IAFWzV,cAES/0C,QACxB7iB,KACIoxD,IAAatuB,yBAAesuB,GAAW3qC,OAAKzmB,MAC3CqxD,IAAavuB,yBAAeuuB,GAAW5qC,OAAKzmB,QAG7C2zB,GAAaH,cAGnB,GAA0D64C,IAAlD3vC,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYS,GAAtC,GAAsCA,gBACtC,GHpBK,SACL+zB,EACAC,GAaC,IAAD,MAoGIv3C,EAKiC,EAIqC,EA5G1E,EAA6Bja,cAArBmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAEjB,EAA0DqsE,IAAlD3vC,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYS,EAAtC,EAAsCA,gBAEhCiwC,EAAiB5wC,IAAqBp/B,IAAM8/B,WAAa9/B,IAAMqvE,WAAarvE,IAAM8/B,WAGlFwjB,EAA8C3jC,mBAClD,2CACG3f,IAAM8/B,WADT,OACsBg0B,QADtB,IACsBA,SAAaz3D,GADnC,cAEG2D,IAAMqvE,WAFT,OAEsBtb,QAFtB,IAEsBA,SAAa13D,GAFnC,IAIA,CAACy3D,EAAWC,IAId,EAA0BS,YAAQlR,EAAWtjD,IAAM8/B,YAAawjB,EAAWtjD,IAAMqvE,aAAjF,mBAAOY,EAAP,KAAkBn4C,EAAlB,KAEM1gB,EAAcH,YAAc,OAAC6gB,QAAD,IAACA,OAAD,EAACA,EAAM2vB,gBAEnCznB,EACJiwC,IAActc,IAAUS,YAAc7uC,QAAQnO,GAAewU,OAAKskD,MAAM94D,EAAY8U,IAAK4iD,IAGrF9rB,EAAWK,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,CACzDinD,EAAWtjD,IAAM8/B,YACjBwjB,EAAWtjD,IAAMqvE,cAEb9mB,GAAuD,mBAC1DvoD,IAAM8/B,WAAakjB,EAAS,IAD8B,cAE1DhjD,IAAMqvE,WAAarsB,EAAS,IAF8B,GAMvDmtB,EAAgDjpB,YAAe5nB,EAAYgkB,EAAWlkB,IACtFgxC,EAA8CzwD,mBAAQ,WAC1D,GAAIqgB,EACF,OAAID,GAAmBujB,EAAW0sB,GACzB9oB,YAAennB,EAAiBujB,EAAW0sB,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2B5oC,YAAsB0oC,EAAmBztE,GAC1E,EAAyB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IAAnF01B,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUg4C,GAA4Bv4C,EAAM,CACxD,IAAMw4C,EAAoBN,IAAmBhwE,IAAMqvE,WAAatb,EAAYD,EACtEyc,EACJP,IAAmBhwE,IAAMqvE,WACrBv3C,EAAK04C,QAAQp4C,GAAQq4C,MAAMJ,GAC3Bv4C,EAAK04C,QAAQn4C,GAAQo4C,MAAMJ,GACjC,OAAOC,IAAsBvjD,QAAQytB,iBAAeC,MAAM81B,EAAqBrkD,KAAOqkD,MAKzF,CAACvwC,EAAaD,EAAiBujB,EAAY0sB,EAAgBG,EAAmBrc,EAAWpxD,EAASqxD,EAAWj8B,IAE1Go3C,EAAkEvvD,mBACtE,2CACG3f,IAAM8/B,WAAaV,IAAqBp/B,IAAM8/B,WAAaqwC,EAAoBC,GADlF,cAEGpwE,IAAMqvE,WAAajwC,IAAqBp/B,IAAM8/B,WAAaswC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmB/wC,IAGjC6vC,EAAQtvD,mBAAQ,WACpB,GAAIqgB,EAAa,CACf,IAA4B0wC,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,OAAIqB,GAAmBC,EACd,IAAIC,QAAMF,EAAgB5jD,SAAU6jD,EAAgB7jD,SAAU4jD,EAAgBxkD,IAAKykD,EAAgBzkD,UAE5G,EAEF,IAAM2kD,EAAmBrpC,YAAgBssB,EAAWpxD,GACpD,OAAOo1B,GAAQ+4C,EAAmB/4C,EAAK04C,QAAQK,QAAoBx0E,IAClE,CAACqG,EAASoxD,EAAW9zB,EAAalI,EAAMo3C,IAGrC4B,EAAkBnxD,mBAAQ,WAC9B,IAA4B+wD,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,EAAqC,CACnC5nC,YAAsBipC,EAAiBhuE,GACvC+kC,YAAsBkpC,EAAiBjuE,IAFlCquE,EAAP,KAAqBC,EAArB,KAIA,GAAIl5C,GAAQ1gB,GAAe25D,GAAgBC,EACzC,OAAOl5C,EAAKm5C,mBAAmB75D,EAAa25D,EAAcC,KAG3D,CAAC9B,EAAexsE,EAASo1B,EAAM1gB,IAE5B+3D,EAAsBxvD,mBAAQ,WAClC,GAAImxD,GAAmB15D,EACrB,OAAO,IAAIuU,UAAQmlD,EAAgB5kD,IAAK9U,EAAYoU,IAAIslD,GAAiB5kD,OAG1E,CAAC4kD,EAAiB15D,IAGhBsE,IACHc,EAAQ,kBAGNyzD,IAActc,IAAUQ,UAC1B33C,EAAK,UAAGA,SAAH,QAAY,gBAGd0yD,EAAclvE,IAAM8/B,aAAgBovC,EAAclvE,IAAMqvE,cAC3D7yD,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dk0D,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YAUpD,OARIqB,IAAe,OAAInoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAM8/B,mBAA7B,aAAI,EAAsC2I,SAASioC,MACpEl0D,EAAK,iCAAmB8mC,EAAWtjD,IAAM8/B,mBAApC,aAAmB,EAA8Bv3B,OAAjD,aAGHooE,IAAe,OAAIpoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAMqvE,mBAA7B,aAAI,EAAsC5mC,SAASkoC,MACpEn0D,EAAK,iCAAmB8mC,EAAWtjD,IAAMqvE,mBAApC,aAAmB,EAA8B9mE,OAAjD,aAGA,CACLynE,iBACA1sB,aACAxrB,OACAm4C,YACA1nB,mBACA2mB,gBACAD,QACAjvC,cACA8wC,kBACA3B,sBACA3yD,SGrHE00D,CAAkB,OAACpd,SAAD,IAACA,WAAaz3D,EAAd,OAAyB03D,SAAzB,IAAyBA,WAAa13D,GAX1D2zE,GADF,GACEA,eACA1sB,GAFF,GAEEA,WACAxrB,GAHF,GAGEA,KACAm4C,GAJF,GAIEA,UACA1nB,GALF,GAKEA,iBACA2mB,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAjvC,GARF,GAQEA,YACA8wC,GATF,GASEA,gBACA3B,GAVF,GAUEA,oBACA3yD,GAXF,GAWEA,MAGF,GH3DK,SAA+BwjB,GAIpC,IAAM/iB,EAAWgI,cAejB,MAAO,CACLksD,cAdoBtzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAM8/B,WAAYR,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,IAWXoxC,cAToBvzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAMqvE,WAAY/vC,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,KG2C4BqxC,CAAsBrxC,IAAvDmxC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAW90D,GAGjB,GAA0ChgB,oBAAkB,GAA5D,qBAAO4/D,GAAP,MAAsBmV,GAAtB,MAGM/5C,GAAWi9B,cACjB,GAA0B99B,cAAnB6S,GAAP,qBACA,GAA4BhtC,mBAAiB,IAA7C,qBAAOg1E,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnBtyC,GAAmBE,IADA,cAEnB0wC,GAAiBhwC,GAAcD,GAAH,oBAAqBmvC,GAAcc,WAAnC,aAAqB,EAA+B90B,cAAc,UAAlE,QAAwE,IAFjF,GAMhBy2B,GAAiD,CAAC3xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC1F,SAACq4C,EAAalyC,GACZ,OAAO,2BACFkyC,GADL,kBAEGlyC,EAAQouC,aAAevlB,GAAiB7oB,QAG7C,IAGImyC,GAAmD,CAAC7xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC5F,SAACq4C,EAAalyC,GAAW,IAAD,IACtB,OAAO,2BACFkyC,GADL,kBAEGlyC,EAFH,UAEWiyC,GAAWjyC,UAFtB,aAEW,EAAmBm9B,QAAnB,UAA2BqS,GAAcxvC,UAAzC,QAAmD,SAGhE,IAiBF,GAAsCwI,YAAmBgnC,GAAclvE,IAAM8/B,YAAa9S,KAA1F,qBAAO8kD,GAAP,MAAkBC,GAAlB,MACA,GAAsC7pC,YAAmBgnC,GAAclvE,IAAMqvE,YAAariD,KAA1F,qBAAOglD,GAAP,MAAkBC,GAAlB,MAEM5zC,GAAiBwK,cA1Fe,SA4FvBumC,KA5FuB,8EA4FtC,0DAAAryE,EAAA,yDACO2F,IAAYD,IAAYiZ,GAD/B,oDAEQw2D,EAASr8C,aAAmBnzB,GAASD,GAASiZ,IAExBy2D,EAAqDjD,GAAxElvE,IAAM8/B,YAAgDsyC,EAAkBlD,GAArClvE,IAAMqvE,YAC7C8C,GAAkBC,GAAkBte,IAAcC,IAAcv8B,GALvE,2EAUKx3B,IAAM8/B,WAAahU,aAAwBqmD,EAAenyC,GAAc,EAAIwJ,IAAiB,IAVlG,cAWKxpC,IAAMqvE,WAAavjD,aAAwBsmD,EAAepyC,GAAc,EAAIwJ,IAAiB,IAF1F6oC,EATR,EAkBMve,KAAc/mC,SAASgnC,KAAchnC,SACjCulD,EAAcve,KAAchnC,QAClCwlD,EAAWL,EAAOlpC,YAAYwpC,gBAC9B77B,EAASu7B,EAAOM,gBAChBC,EAAO,qBACLjrC,YAAgB8qC,EAAcxe,GAAYC,GAAWrxD,WADhD,aACL,EAA+DW,eAD1D,QACqE,IACzEivE,EAAcH,EAAgBC,GAAelmD,IAAIxtB,WAClD2zE,EAAWC,EAActyE,IAAM8/B,WAAa9/B,IAAMqvE,YAAY3wE,WAC9D2zE,EAAWC,EAActyE,IAAMqvE,WAAarvE,IAAM8/B,YAAYphC,WAC9Dgd,GACA8b,GAASk7C,eAEX9zE,EAAQ2B,IAAUwB,MAAMuwE,EAAcF,EAAgBD,GAAejmD,IAAIxtB,cAEzE6zE,EAAWL,EAAOlpC,YAAY2pC,aAC9Bh8B,EAASu7B,EAAOS,aAChBF,EAAO,qBACLjrC,YAAgBssB,GAAWpxD,WADtB,aACL,EAAqCW,eADhC,QAC2C,GAD3C,oBAELmkC,YAAgBusB,GAAWrxD,WAFtB,aAEL,EAAqCW,eAFhC,QAE2C,GAChD8uE,EAAcjmD,IAAIxtB,WAClB0zE,EAAclmD,IAAIxtB,WAClB2zE,EAAWryE,IAAM8/B,YAAYphC,WAC7B2zE,EAAWryE,IAAMqvE,YAAY3wE,WAC7Bgd,GACA8b,GAASk7C,eAEX9zE,EAAQ,MAGV2yE,IAAiB,GA/CnB,UAgDQgB,EAAQ,WAAR,cAAYE,GAAZ,QAAkB7zE,EAAQ,CAAEA,SAAU,MACzCyqC,MAAK,SAACupC,GAAD,OACJj8B,EAAM,WAAN,cAAU87B,GAAV,mCACM7zE,EAAQ,CAAEA,SAAU,IAD1B,IAEEwqC,SAAU9d,aAAmBsnD,QAC5BvpC,MAAK,SAACC,GAAc,IAAD,QACpBioC,IAAiB,GAEjBlzC,GAAeiL,EAAU,CACvB7K,QAAQ,OAAD,iBAASywC,GAAclvE,IAAM8/B,mBAA7B,aAAS,EAAiCob,cAAc,GAAxD,sBACLoI,GAAWtjD,IAAM8/B,mBADZ,aACL,EAA8Bv3B,OADzB,0BAEC2mE,GAAclvE,IAAMqvE,mBAFrB,aAEC,EAAiCn0B,cAAc,GAFhD,sBAEsDoI,GAAWtjD,IAAMqvE,mBAFvE,aAEsD,EAA8B9mE,UAG7FkpE,GAAUnoC,EAAS/K,YAGtB2K,OAAM,SAAC2pC,GACNtB,IAAiB,GAEC,QAAX,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAK9sB,OACPxpC,QAAQC,MAAMq2D,MArEtB,6CA5FsC,sBAsKtC,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAO9yC,GACL,eAAC,IAAD,CAAM6Q,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,6BACMmwB,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,UAE5E,cAAC,IAAD,CACEuqB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAM6d,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,gBACG29C,SADH,IACGA,QADH,EACGA,GAAiB51B,cAAc,KAElC,cAAC,IAAD,CACEpoB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAGV,cAAC9zB,EAAA,EAAD,UACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,6BACMoV,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,OAD5E,oBAIF,cAAC,KAAD,CAAM0sD,OAAK,EAACuG,UAAU,OAAOuX,GAAG,OAAhC,SACGl0E,GAAE,mGAAoG,CACrGktB,SAAUyd,GAAkB,YAOhCwpC,GAAc,WAClB,OACE,cAAC,GAAD,CACE/D,MAAOA,GACP3rB,WAAYA,GACZ4rB,cAAeA,GACflvC,YAAaA,GACbovC,MAAOA,GACPD,oBAAqBA,MAKrB5T,GAAc18D,GAAE,wDAAyD,CAC7Eo0E,QAAO,oBAAE/D,GAAclvE,IAAM8/B,mBAAtB,aAAE,EAAiCob,cAAc,UAAjD,QAAuD,GAC9Dg4B,QAAO,oBAAE5vB,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GACjD4qE,QAAO,oBAAEjE,GAAclvE,IAAMqvE,mBAAtB,aAAE,EAAiCn0B,cAAc,UAAjD,QAAuD,GAC9Dk4B,QAAO,oBAAE9vB,GAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,KAG7C8qE,GAAwBx1E,uBAC5B,SAACy1E,GACC,IAAMC,EAAiBh0C,aAAW+zC,GAC9BC,IAAmB3D,GACrBC,GAAQ7uC,KAAR,8BAAoC4uC,GAApC,YAAmDD,KAEnDE,GAAQ7uC,KAAR,8BAAoCuyC,EAApC,YAAsD3D,OAG1D,CAACA,GAAaC,GAASF,KAEnB6D,GAAwB31E,uBAC5B,SAAC41E,GACC,IAAMC,EAAiBn0C,aAAWk0C,GAC9B9D,KAAgB+D,EACd9D,GACFC,GAAQ7uC,KAAR,8BAAoC4uC,GAApC,YAAmD8D,IAEnD7D,GAAQ7uC,KAAR,8BAAoC0yC,IAGtC7D,GAAQ7uC,KAAR,8BAAoC2uC,IAAe,MAAnD,YAA4D+D,MAGhE,CAAC/D,GAAaE,GAASD,KAGnB+D,GAA4B91E,uBAAY,WAExC2zE,IACFL,GAAc,IAEhBM,GAAU,MACT,CAACN,GAAeK,KAEboC,GAAmBnV,YAA2B,OAACnb,SAAD,IAACA,QAAD,EAACA,GAAYxjB,WAAb,OAAyBwjB,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAY+rB,YAEzF,GAAqCzgC,aACnC,cAAC,IAAD,CACEjB,MAAqB9uC,GAAdmhC,GAAgB,0BAA+B,oBACtDm8B,gBAAiBwX,GACjBvX,cAAeA,GACf79B,KAAMizC,GACNnV,QAAS,kBAAM,cAAC,IAAD,CAA0BN,WAAY+W,GAAahX,cAAekX,MACjFzX,YAAaA,GACbG,cAAa,OAAE5jC,SAAF,IAAEA,QAAF,EAAEA,GAAM2vB,kBAEvB,GACA,EACA,qBAZKosB,GAAP,qBAeA,OACE,eAAC,KAAD,WACW,eAAC,KAAD,CAAUC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAY2nC,QAAS,cAAC,IAAD,IAA/C,UAC9B,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFrC,YAArB,UAKH,eAAC,KAAD,CAAe2xC,GAAG,mBAAmBF,GAAIC,IAAM16B,MAAM,OAArD,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,cAEL,eAAC,KAAD,CAAcmyC,GAAG,OAAOF,GAAIC,IAAM16B,MAAM,OAAxC,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,kBAEL,eAAC,KAAD,CAAemyC,GAAG,qBAAqBF,GAAIC,IAAM16B,MAAM,OAAvD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,oBAGX,eAACo1E,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEtmC,MAAO9uC,GAAE,iBACT4xC,SAAU5xC,GAAE,sCACZ6xC,OAAQ7xC,GACN,2IAEF8xC,OAAO,WAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY7wC,IAAI,OAAhB,UACGkgC,IACC,cAACx4B,EAAA,EAAD,UACE,cAAC,KAAD,CAAS4kC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAM6B,MAAI,EAACH,GAAG,MAAd,SACGjvC,GAAE,2CAEL,cAAC,KAAD,CAAMivC,GAAG,MAAT,SAAgBjvC,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAAC,IAAD,CACED,MAAO8yE,GAAiB1xE,IAAM8/B,YAC9BmnB,YAAakqB,GACb9L,MAAO,WAAO,IAAD,IACX8L,GAAa,oBAACQ,GAAW3xE,IAAM8/B,mBAAlB,aAAC,EAA8Bo0C,iBAA/B,QAA4C,KAE3D1O,iBAAkB6N,GAClB/N,eAAgBuM,GAAa7xE,IAAM8/B,YACnChT,SAAUw2B,GAAWtjD,IAAM8/B,YAC3B5e,GAAG,+BAEL,cAAC1Z,EAAA,EAAD,UACE,cAAC,IAAD,CAASnI,MAAM,WAEjB,cAAC,IAAD,CACET,MAAO8yE,GAAiB1xE,IAAMqvE,YAC9BpoB,YAAamqB,GACb5L,iBAAkBgO,GAClBnO,MAAO,WAAO,IAAD,IACX+L,GAAa,oBAACO,GAAW3xE,IAAMqvE,mBAAlB,aAAC,EAA8B6E,iBAA/B,QAA4C,KAE3D5O,eAAgBuM,GAAa7xE,IAAMqvE,YACnCviD,SAAUw2B,GAAWtjD,IAAMqvE,YAC3BnuD,GAAG,+BAEJoiC,GAAWtjD,IAAM8/B,aAAewjB,GAAWtjD,IAAMqvE,aAAeY,KAActc,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAW30D,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAM0uC,SAAS,OAAf,SACiBrvC,GAAdmhC,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWxgC,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,GAAD,CACE4jD,WAAYA,GACZ6rB,oBAAqBA,GACrBnvC,YAAaA,GACbivC,MAAOA,YAOhB2E,GACC,cAAC,IAAD,CAAQ/F,UAAQ,EAAC//B,GAAG,MAApB,SACGjvC,GAAE,uBAEF6c,GAGH,eAAC,IAAD,CAAY5b,IAAI,KAAhB,WACIgyE,KAAc/pC,IAAcY,cAC5BmpC,KAAc/pC,IAAcW,SAC5BspC,KAAcjqC,IAAcY,cAC5BqpC,KAAcjqC,IAAcW,UAC5B4oC,IACE,eAACpyE,EAAA,EAAD,WACG4yE,KAAc/pC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASs7D,GACTlE,SAAUiE,KAAc/pC,IAAcW,QACtCrpC,MAAO2yE,KAAcjqC,IAAcS,SAAW,MAAQ,OAHxD,SAKGspC,KAAc/pC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,UAAEtY,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WAIhEypE,KAAcjqC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASw7D,GACTpE,SAAUmE,KAAcjqC,IAAcW,QACtCrpC,MAAOyyE,KAAc/pC,IAAcS,SAAW,MAAQ,OAHxD,SAKGwpC,KAAcjqC,IAAcW,QAC3B,cAAC6S,GAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,cAMvE,cAAC,IAAD,CACE6jC,SACGklC,IAAapC,GAAclvE,IAAM8/B,aAAiBovC,GAAclvE,IAAMqvE,YACnE,SACA,UAEN54D,QAAS,WACH4f,GACF+4C,KAEAyE,MAGJhG,UAAWyD,IAAWQ,KAAc/pC,IAAcS,UAAYwpC,KAAcjqC,IAAcS,SAb5F,gBAeGhsB,SAfH,IAeGA,MAAS3d,GAAE,eApDhB,cAACg+B,EAAA,EAAD,YA2DN+2C,GAOA,cAAC1e,EAAD,CAA2B5R,WAAY,CAACA,GAAWxjB,WAAYwjB,GAAW+rB,cAN1Ev3C,KAASkI,IAAeiwC,KAActc,IAAUQ,QAC9C,cAAC,IAAD,CAAYjhC,MAAO,CAAEihD,SAAU,QAAS90E,MAAO,OAAQwuC,SAAU,QAASumC,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAetE,GAAmBj4C,KAAMA,OAE7D,U,6YCrdNg3C,EAAOljD,IAAKC,OAAO,GAElB,SAASkjD,IACd,OAAOlxD,aAAwC,SAACjhB,GAAD,OAAWA,EAAM4mC,Q,sDCkDnDwrC,MA1Df,YAcI,IAAD,gBAbDhvC,EAaC,EAbDA,YACAivC,EAYC,EAZDA,MACA3rB,EAWC,EAXDA,WACA4rB,EAUC,EAVDA,cACAC,EASC,EATDA,oBACAC,EAQC,EARDA,MASQvwE,EAAMC,cAAND,EACR,OACE,qCACE,eAACK,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAM8/B,YAAa5M,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAM8/B,mBAA3B,aAAO,EAAiCob,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,oBAAqB,CAAE+8D,MAAK,UAAEtY,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,WACrE,eAACrJ,EAAA,EAAD,WACE,cAAC,IAAD,CAAc4tB,SAAUw2B,EAAWtjD,IAAMqvE,YAAan8C,MAAO,CAAEC,YAAa,SAC5E,cAAC,KAAD,oBAAO+7C,EAAclvE,IAAMqvE,mBAA3B,aAAO,EAAiCn0B,cAAc,WAG1D,eAACh8C,EAAA,EAAD,WACE,cAAC,KAAD,UAAOL,EAAE,WACT,cAAC,KAAD,gCACQykD,EAAWtjD,IAAM8/B,mBADzB,aACQ,EAA8Bv3B,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAO/zB,cAAc,GADvE,sBAEIoI,EAAWtjD,IAAMqvE,mBAFrB,aAEI,EAA8B9mE,aAIpC,cAACrJ,EAAA,EAAD,CAAYg0B,MAAO,CAAEgd,eAAgB,YAArC,SACE,cAAC,KAAD,gCACQoT,EAAWtjD,IAAMqvE,mBADzB,aACQ,EAA8B9mE,OADtC,qBACkD0mE,QADlD,IACkDA,OADlD,EACkDA,EAAOh0B,SAASC,cAAc,GADhF,sBAEIoI,EAAWtjD,IAAM8/B,mBAFrB,aAEI,EAA8Bv3B,YAIpC,eAACrJ,EAAA,EAAD,WACE,eAAC,KAAD,WAAOL,EAAE,iBAAT,OACA,eAAC,KAAD,WAAOmhC,EAAc,MAAH,OAAWmvC,QAAX,IAAWA,OAAX,EAAWA,EAAqBj0B,cAAc,GAAhE,UAEF,cAAC,IAAD,CAAQzkC,QAAS24D,EAAO7gC,GAAG,OAA3B,SACiB1vC,EAAdmhC,EAAgB,uBAA4B,wB,SCFtCsvC,I,EAAAA,EAjDf,YAUI,IAAD,wBATDhsB,EASC,EATDA,WACAtjB,EAQC,EARDA,YACAmvC,EAOC,EAPDA,oBACAF,EAMC,EANDA,MAOQpwE,EAAMC,cAAND,EACR,OACE,cAAC,IAAD,CAAYiB,IAAI,KAAhB,SACE,eAAC,IAAD,CAASP,QAAQ,eAAeO,IAAI,MAApC,UACE,eAAC,IAAD,CAAYP,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,OAAP,EAAOA,EAAO/zB,cAAc,UAA5B,QAAkC,MAClC,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,cAAC,KAAD,2BAAO0vE,QAAP,IAAOA,GAAP,UAAOA,EAAOh0B,gBAAd,aAAO,EAAiBC,cAAc,UAAtC,QAA4C,MAC5C,cAAC,KAAD,CAAMhN,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,wBAAyB,CAC1B0wE,OAAM,oBAAEjsB,EAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GAChDinE,OAAM,oBAAElsB,EAAWtjD,IAAMqvE,mBAAnB,aAAE,EAA8B9mE,cAAhC,QAA0C,UAItD,eAAC,IAAD,CAAYhJ,QAAQ,SAApB,UACE,eAAC,KAAD,WACGygC,GAAeivC,EACZ,MADH,WAEuB,OAAnBE,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB1mC,SAAShb,MAAY,QAA1C,OAAoD0hD,QAApD,IAAoDA,OAApD,EAAoDA,EAAqBjuE,QAAQ,UAFrF,QAE4F,IAH/F,OAMA,cAAC,KAAD,CAAMgtC,SAAS,OAAO+tB,GAAI,EAA1B,SACGp9D,EAAE,4B,UCVGM,IAAO8qE,IAAV,iDAIA,SAASuK,KAAgB,IAAD,sCAErC,GAAsCjyE,cAA9BmZ,GAAR,GAAQA,QAAShZ,GAAjB,GAAiBA,QAASD,GAA1B,GAA0BA,QAClB5D,GAAMC,cAAND,EACR,GAAqC6wE,cAA7BC,GAAR,GAAQA,YAAaC,GAArB,GAAqBA,YACfC,GAAUC,cACVhc,GAAYvtB,YAAYopC,IACxB5b,GAAYxtB,YAAYqpC,IAExBG,IADWzV,cACS/0C,QACxB7iB,KACIoxD,IAAatuB,YAAesuB,GAAW3qC,IAAKzmB,MAC3CqxD,IAAavuB,YAAeuuB,GAAW5qC,IAAKzmB,QAG7C2zB,GAAaH,cAGnB,GAA0D64C,IAAlD3vC,GAAR,GAAQA,iBAAkBE,GAA1B,GAA0BA,WAAYS,GAAtC,GAAsCA,gBACtC,GHnBK,SACL+zB,EACAC,GAaC,IAAD,MAoGIv3C,EAKiC,EAIqC,EA5G1E,EAA6Bja,cAArBmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAEjB,EAA0DqsE,IAAlD3vC,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYS,EAAtC,EAAsCA,gBAEhCiwC,EAAiB5wC,IAAqBp/B,IAAM8/B,WAAa9/B,IAAMqvE,WAAarvE,IAAM8/B,WAGlFwjB,EAA8C3jC,mBAClD,2CACG3f,IAAM8/B,WADT,OACsBg0B,QADtB,IACsBA,SAAaz3D,GADnC,cAEG2D,IAAMqvE,WAFT,OAEsBtb,QAFtB,IAEsBA,SAAa13D,GAFnC,IAIA,CAACy3D,EAAWC,IAId,EAA0BS,YAAQlR,EAAWtjD,IAAM8/B,YAAawjB,EAAWtjD,IAAMqvE,aAAjF,mBAAOY,EAAP,KAAkBn4C,EAAlB,KAEM1gB,EAAcH,YAAc,OAAC6gB,QAAD,IAACA,OAAD,EAACA,EAAM2vB,gBAEnCznB,EACJiwC,IAActc,IAAUS,YAAc7uC,QAAQnO,GAAewU,IAAKskD,MAAM94D,EAAY8U,IAAK4iD,IAGrF9rB,EAAWK,YAAmB,OAAC3nC,QAAD,IAACA,SAAWrf,EAAW,CACzDinD,EAAWtjD,IAAM8/B,YACjBwjB,EAAWtjD,IAAMqvE,cAEb9mB,GAAuD,mBAC1DvoD,IAAM8/B,WAAakjB,EAAS,IAD8B,cAE1DhjD,IAAMqvE,WAAarsB,EAAS,IAF8B,GAMvDmtB,EAAgDjpB,YAAe5nB,EAAYgkB,EAAWlkB,IACtFgxC,EAA8CzwD,mBAAQ,WAC1D,GAAIqgB,EACF,OAAID,GAAmBujB,EAAW0sB,GACzB9oB,YAAennB,EAAiBujB,EAAW0sB,SAEpD,EAEF,GAAIG,EAAJ,CAEE,IAAME,EAA2B5oC,YAAsB0oC,EAAmBztE,GAC1E,EAAyB,CAAC8kC,YAAgBssB,EAAWpxD,GAAU8kC,YAAgBusB,EAAWrxD,IAAnF01B,EAAP,KAAeC,EAAf,KACA,GAAID,GAAUC,GAAUg4C,GAA4Bv4C,EAAM,CACxD,IAAMw4C,EAAoBN,IAAmBhwE,IAAMqvE,WAAatb,EAAYD,EACtEyc,EACJP,IAAmBhwE,IAAMqvE,WACrBv3C,EAAK04C,QAAQp4C,GAAQq4C,MAAMJ,GAC3Bv4C,EAAK04C,QAAQn4C,GAAQo4C,MAAMJ,GACjC,OAAOC,IAAsBvjD,IAAQytB,IAAeC,MAAM81B,EAAqBrkD,KAAOqkD,MAKzF,CAACvwC,EAAaD,EAAiBujB,EAAY0sB,EAAgBG,EAAmBrc,EAAWpxD,EAASqxD,EAAWj8B,IAE1Go3C,EAAkEvvD,mBACtE,2CACG3f,IAAM8/B,WAAaV,IAAqBp/B,IAAM8/B,WAAaqwC,EAAoBC,GADlF,cAEGpwE,IAAMqvE,WAAajwC,IAAqBp/B,IAAM8/B,WAAaswC,EAAkBD,GAFhF,IAIA,CAACC,EAAiBD,EAAmB/wC,IAGjC6vC,EAAQtvD,mBAAQ,WACpB,GAAIqgB,EAAa,CACf,IAA4B0wC,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,OAAIqB,GAAmBC,EACd,IAAIC,IAAMF,EAAgB5jD,SAAU6jD,EAAgB7jD,SAAU4jD,EAAgBxkD,IAAKykD,EAAgBzkD,UAE5G,EAEF,IAAM2kD,EAAmBrpC,YAAgBssB,EAAWpxD,GACpD,OAAOo1B,GAAQ+4C,EAAmB/4C,EAAK04C,QAAQK,QAAoBx0E,IAClE,CAACqG,EAASoxD,EAAW9zB,EAAalI,EAAMo3C,IAGrC4B,EAAkBnxD,mBAAQ,WAC9B,IAA4B+wD,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YACpD,EAAqC,CACnC5nC,YAAsBipC,EAAiBhuE,GACvC+kC,YAAsBkpC,EAAiBjuE,IAFlCquE,EAAP,KAAqBC,EAArB,KAIA,GAAIl5C,GAAQ1gB,GAAe25D,GAAgBC,EACzC,OAAOl5C,EAAKm5C,mBAAmB75D,EAAa25D,EAAcC,KAG3D,CAAC9B,EAAexsE,EAASo1B,EAAM1gB,IAE5B+3D,EAAsBxvD,mBAAQ,WAClC,GAAImxD,GAAmB15D,EACrB,OAAO,IAAIuU,IAAQmlD,EAAgB5kD,IAAK9U,EAAYoU,IAAIslD,GAAiB5kD,OAG1E,CAAC4kD,EAAiB15D,IAGhBsE,IACHc,EAAQ,kBAGNyzD,IAActc,IAAUQ,UAC1B33C,EAAK,UAAGA,SAAH,QAAY,gBAGd0yD,EAAclvE,IAAM8/B,aAAgBovC,EAAclvE,IAAMqvE,cAC3D7yD,EAAK,UAAGA,SAAH,QAAY,mBAGnB,IAEwF,EAIA,EAN5Dk0D,EAAyDxB,EAA5ElvE,IAAM8/B,YAAkD6wC,EAAoBzB,EAAvClvE,IAAMqvE,YAUpD,OARIqB,IAAe,OAAInoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAM8/B,mBAA7B,aAAI,EAAsC2I,SAASioC,MACpEl0D,EAAK,iCAAmB8mC,EAAWtjD,IAAM8/B,mBAApC,aAAmB,EAA8Bv3B,OAAjD,aAGHooE,IAAe,OAAIpoB,QAAJ,IAAIA,GAAJ,UAAIA,EAAmBvoD,IAAMqvE,mBAA7B,aAAI,EAAsC5mC,SAASkoC,MACpEn0D,EAAK,iCAAmB8mC,EAAWtjD,IAAMqvE,mBAApC,aAAmB,EAA8B9mE,OAAjD,aAGA,CACLynE,iBACA1sB,aACAxrB,OACAm4C,YACA1nB,mBACA2mB,gBACAD,QACAjvC,cACA8wC,kBACA3B,sBACA3yD,SGtHE00D,CAAkB,OAACpd,SAAD,IAACA,WAAaz3D,EAAd,OAAyB03D,SAAzB,IAAyBA,WAAa13D,GAX1D2zE,GADF,GACEA,eACA1sB,GAFF,GAEEA,WACAxrB,GAHF,GAGEA,KACAm4C,GAJF,GAIEA,UACA1nB,GALF,GAKEA,iBACA2mB,GANF,GAMEA,cACAD,GAPF,GAOEA,MACAjvC,GARF,GAQEA,YACA8wC,GATF,GASEA,gBACA3B,GAVF,GAUEA,oBACA3yD,GAXF,GAWEA,MAGF,GH1DK,SAA+BwjB,GAIpC,IAAM/iB,EAAWgI,cAejB,MAAO,CACLksD,cAdoBtzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAM8/B,WAAYR,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,IAWXoxC,cAToBvzE,uBACpB,SAACyhC,GACCriB,EAAShd,YAAU,CAAEy/B,MAAO1/B,IAAMqvE,WAAY/vC,aAAYU,aAA6B,IAAhBA,OAEzE,CAAC/iB,EAAU+iB,KG0C4BqxC,CAAsBrxC,IAAvDmxC,GAAR,GAAQA,cAAeC,GAAvB,GAAuBA,cAEjBE,IAAW90D,GAGjB,GAA0ChgB,oBAAkB,GAA5D,qBAAO4/D,GAAP,MAAsBmV,GAAtB,MAGM/5C,GAAWi9B,cACjB,GAA0B99B,cAAnB6S,GAAP,qBACA,GAA4BhtC,mBAAiB,IAA7C,qBAAOg1E,GAAP,MAAeC,GAAf,MAGMC,IAAgB,mBACnBtyC,GAAmBE,IADA,cAEnB0wC,GAAiBhwC,GAAcD,GAAH,oBAAqBmvC,GAAcc,WAAnC,aAAqB,EAA+B90B,cAAc,UAAlE,QAAwE,IAFjF,GAMhBy2B,GAAiD,CAAC3xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC1F,SAACq4C,EAAalyC,GACZ,OAAO,2BACFkyC,GADL,kBAEGlyC,EAAQouC,YAAevlB,GAAiB7oB,QAG7C,IAGImyC,GAAmD,CAAC7xE,IAAM8/B,WAAY9/B,IAAMqvE,YAAY91C,QAC5F,SAACq4C,EAAalyC,GAAW,IAAD,IACtB,OAAO,2BACFkyC,GADL,kBAEGlyC,EAFH,UAEWiyC,GAAWjyC,UAFtB,aAEW,EAAmBm9B,QAAnB,UAA2BqS,GAAcxvC,UAAzC,QAAmD,SAGhE,IAiBF,GAAsCwI,YAAmBgnC,GAAclvE,IAAM8/B,YAAatT,KAA1F,qBAAOslD,GAAP,MAAkBC,GAAlB,MACA,GAAsC7pC,YAAmBgnC,GAAclvE,IAAMqvE,YAAa7iD,KAA1F,qBAAOwlD,GAAP,MAAkBC,GAAlB,MAEM5zC,GAAiBwK,cAzFc,SA2FtBumC,KA3FsB,8EA2FrC,0DAAAryE,EAAA,yDACO2F,IAAYD,IAAYiZ,GAD/B,oDAEQw2D,EAAS5lD,YAAkB5pB,GAASD,GAASiZ,IAEvBy2D,EAAqDjD,GAAxElvE,IAAM8/B,YAAgDsyC,EAAkBlD,GAArClvE,IAAMqvE,YAC7C8C,GAAkBC,GAAkBte,IAAcC,IAAcv8B,GALvE,2EAUKx3B,IAAM8/B,WAAahU,YAAwBqmD,EAAenyC,GAAc,EAAIwJ,IAAiB,IAVlG,cAWKxpC,IAAMqvE,WAAavjD,YAAwBsmD,EAAepyC,GAAc,EAAIwJ,IAAiB,IAF1F6oC,EATR,EAkBMve,KAAc/mC,KAASgnC,KAAchnC,KACjCulD,EAAcve,KAAchnC,IAClCwlD,EAAWL,EAAOlpC,YAAYwpC,gBAC9B77B,EAASu7B,EAAOM,gBAChBC,EAAO,qBACLjrC,YAAgB8qC,EAAcxe,GAAYC,GAAWrxD,WADhD,aACL,EAA+DW,eAD1D,QACqE,IACzEivE,EAAcH,EAAgBC,GAAelmD,IAAIxtB,WAClD2zE,EAAWC,EAActyE,IAAM8/B,WAAa9/B,IAAMqvE,YAAY3wE,WAC9D2zE,EAAWC,EAActyE,IAAMqvE,WAAarvE,IAAM8/B,YAAYphC,WAC9Dgd,GACA8b,GAASk7C,eAEX9zE,EAAQ2B,IAAUwB,MAAMuwE,EAAcF,EAAgBD,GAAejmD,IAAIxtB,cAEzE6zE,EAAWL,EAAOlpC,YAAY2pC,aAC9Bh8B,EAASu7B,EAAOS,aAChBF,EAAO,qBACLjrC,YAAgBssB,GAAWpxD,WADtB,aACL,EAAqCW,eADhC,QAC2C,GAD3C,oBAELmkC,YAAgBusB,GAAWrxD,WAFtB,aAEL,EAAqCW,eAFhC,QAE2C,GAChD8uE,EAAcjmD,IAAIxtB,WAClB0zE,EAAclmD,IAAIxtB,WAClB2zE,EAAWryE,IAAM8/B,YAAYphC,WAC7B2zE,EAAWryE,IAAMqvE,YAAY3wE,WAC7Bgd,GACA8b,GAASk7C,eAEX9zE,EAAQ,MAGV2yE,IAAiB,GA/CnB,UAgDQgB,EAAQ,WAAR,cAAYE,GAAZ,QAAkB7zE,EAAQ,CAAEA,SAAU,MACzCyqC,MAAK,SAACupC,GAAD,OACJj8B,EAAM,WAAN,cAAU87B,GAAV,mCACM7zE,EAAQ,CAAEA,SAAU,IAD1B,IAEEwqC,SAAU9d,YAAmBsnD,QAC5BvpC,MAAK,SAACC,GAAc,IAAD,QACpBioC,IAAiB,GAEjBlzC,GAAeiL,EAAU,CACvB7K,QAAQ,OAAD,iBAASywC,GAAclvE,IAAM8/B,mBAA7B,aAAS,EAAiCob,cAAc,GAAxD,sBACLoI,GAAWtjD,IAAM8/B,mBADZ,aACL,EAA8Bv3B,OADzB,0BAEC2mE,GAAclvE,IAAMqvE,mBAFrB,aAEC,EAAiCn0B,cAAc,GAFhD,sBAEsDoI,GAAWtjD,IAAMqvE,mBAFvE,aAEsD,EAA8B9mE,UAG7FkpE,GAAUnoC,EAAS/K,YAGtB2K,OAAM,SAAC2pC,GACNtB,IAAiB,GAEC,QAAX,OAAHsB,QAAG,IAAHA,OAAA,EAAAA,EAAK9sB,OACPxpC,QAAQC,MAAMq2D,MArEtB,6CA3FqC,sBAqKrC,IAAMC,GAAc,WAAO,IAAD,QACxB,OAAO9yC,GACL,eAAC,IAAD,CAAM6Q,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,6BACMmwB,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,UAE5E,cAAC,IAAD,CACEuqB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAIV,eAAC,IAAD,WACE,eAAC,IAAD,CAAM6d,WAAW,SAAjB,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO/a,YAAY,OAAlC,gBACG29C,SADH,IACGA,QADH,EACGA,GAAiB51B,cAAc,KAElC,cAAC,IAAD,CACEpoB,UAAWwwB,GAAWtjD,IAAM8/B,YAC5B/M,UAAWuwB,GAAWtjD,IAAMqvE,YAC5Br8C,KAAM,QAGV,cAAC9zB,EAAA,EAAD,UACE,cAAC,KAAD,CAAMgvC,SAAS,OAAf,6BACMoV,GAAWtjD,IAAM8/B,mBADvB,aACM,EAA8Bv3B,OADpC,sBAC8C+6C,GAAWtjD,IAAMqvE,mBAD/D,aAC8C,EAA8B9mE,OAD5E,oBAIF,cAAC,KAAD,CAAM0sD,OAAK,EAACuG,UAAU,OAAOuX,GAAG,OAAhC,SACGl0E,GAAE,mGAAoG,CACrGktB,SAAUyd,GAAkB,YAOhCwpC,GAAc,WAClB,OACE,cAAC,EAAD,CACE/D,MAAOA,GACP3rB,WAAYA,GACZ4rB,cAAeA,GACflvC,YAAaA,GACbovC,MAAOA,GACPD,oBAAqBA,MAKrB5T,GAAc18D,GAAE,wDAAyD,CAC7Eo0E,QAAO,oBAAE/D,GAAclvE,IAAM8/B,mBAAtB,aAAE,EAAiCob,cAAc,UAAjD,QAAuD,GAC9Dg4B,QAAO,oBAAE5vB,GAAWtjD,IAAM8/B,mBAAnB,aAAE,EAA8Bv3B,cAAhC,QAA0C,GACjD4qE,QAAO,sBAAEjE,GAAclvE,IAAMqvE,mBAAtB,cAAE,GAAiCn0B,cAAc,UAAjD,UAAuD,GAC9Dk4B,QAAO,sBAAE9vB,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,cAAhC,UAA0C,KAG7C8qE,GAAwBx1E,uBAC5B,SAACy1E,GACC,IAAMC,EAAiBh0C,YAAW+zC,GAC9BC,IAAmB3D,GACrBC,GAAQ7uC,KAAR,eAAqB4uC,GAArB,YAAoCD,KAEpCE,GAAQ7uC,KAAR,eAAqBuyC,EAArB,YAAuC3D,OAG3C,CAACA,GAAaC,GAASF,KAEnB6D,GAAwB31E,uBAC5B,SAAC41E,GACC,IAAMC,EAAiBn0C,YAAWk0C,GAC9B9D,KAAgB+D,EACd9D,GACFC,GAAQ7uC,KAAR,eAAqB4uC,GAArB,YAAoC8D,IAEpC7D,GAAQ7uC,KAAR,eAAqB0yC,IAGvB7D,GAAQ7uC,KAAR,eAAqB2uC,IAAe,MAApC,YAA6C+D,MAGjD,CAAC/D,GAAaE,GAASD,KAGnB+D,GAA4B91E,uBAAY,WAExC2zE,IACFL,GAAc,IAEhBM,GAAU,MACT,CAACN,GAAeK,KAEboC,GAAmBnV,YAA2B,OAACnb,SAAD,IAACA,QAAD,EAACA,GAAYxjB,WAAb,OAAyBwjB,SAAzB,IAAyBA,QAAzB,EAAyBA,GAAY+rB,YAEzF,GAAqCzgC,aACnC,cAACstB,EAAA,EAAD,CACEvuB,MAAqB9uC,GAAdmhC,GAAgB,0BAA+B,oBACtDm8B,gBAAiBwX,GACjBvX,cAAeA,GACf79B,KAAMizC,GACNnV,QAAS,kBAAM,cAAC,IAAD,CAA0BN,WAAY+W,GAAahX,cAAekX,MACjFzX,YAAaA,GACbG,cAAa,OAAE5jC,SAAF,IAAEA,QAAF,EAAEA,GAAM2vB,kBAEvB,GACA,EACA,qBAZKosB,GAAP,qBAeA,OACE,eAAClU,GAAA,EAAD,WACS,eAAC,KAAD,CAAUmU,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAY2nC,QAAS,cAAC,IAAD,IAA/C,UAC5B,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFvC,iBAArB,UAKD,eAAC,KAAD,CAAe2xC,GAAG,mBAAmBF,GAAIC,IAAM16B,MAAM,OAArD,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,cAEL,eAAC,KAAD,CAAemyC,GAAG,sBAAsBF,GAAIC,IAAM16B,MAAM,OAAxD,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,aAEL,eAAC,KAAD,CAAemyC,GAAG,qBAAqBF,GAAIC,IAAM16B,MAAM,OAAvD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,GAAE,oBAGX,eAACo1E,EAAA,EAAD,WACE,cAACA,EAAA,EAAD,CACEtmC,MAAO9uC,GAAE,iBACT4xC,SAAU5xC,GAAE,sCACZ6xC,OAAQ7xC,GACN,2IAEF8xC,OAAO,UAET,cAAC,IAAD,UACE,eAAC,IAAD,CAAY7wC,IAAI,OAAhB,UACGkgC,IACC,cAACx4B,EAAA,EAAD,UACE,cAAC,KAAD,CAAS4kC,QAAQ,UAAjB,SACE,gCACE,cAAC,KAAD,CAAM6B,MAAI,EAACH,GAAG,MAAd,SACGjvC,GAAE,2CAEL,cAAC,KAAD,CAAMivC,GAAG,MAAT,SAAgBjvC,GAAE,kEAClB,cAAC,KAAD,UAAOA,GAAE,qEAKjB,cAACumE,EAAA,EAAD,CACExmE,MAAO8yE,GAAiB1xE,IAAM8/B,YAC9BmnB,YAAakqB,GACb9L,MAAO,WAAO,IAAD,IACX8L,GAAa,oBAACQ,GAAW3xE,IAAM8/B,mBAAlB,aAAC,EAA8Bo0C,iBAA/B,QAA4C,KAE3D1O,iBAAkB6N,GAClB/N,eAAgBuM,GAAa7xE,IAAM8/B,YACnChT,SAAUw2B,GAAWtjD,IAAM8/B,YAC3B5e,GAAG,+BAEL,cAAC1Z,EAAA,EAAD,UACE,cAAC,IAAD,CAASnI,MAAM,WAEjB,cAAC+lE,EAAA,EAAD,CACExmE,MAAO8yE,GAAiB1xE,IAAMqvE,YAC9BpoB,YAAamqB,GACb5L,iBAAkBgO,GAClBnO,MAAO,WAAO,IAAD,IACX+L,GAAa,oBAACO,GAAW3xE,IAAMqvE,mBAAlB,aAAC,EAA8B6E,iBAA/B,QAA4C,KAE3D5O,eAAgBuM,GAAa7xE,IAAMqvE,YACnCviD,SAAUw2B,GAAWtjD,IAAMqvE,YAC3BnuD,GAAG,+BAEJoiC,GAAWtjD,IAAM8/B,aAAewjB,GAAWtjD,IAAMqvE,aAAeY,KAActc,IAAUQ,SACvF,mCACE,eAAC,IAAD,CAAW30D,QAAQ,MAAME,aAAa,OAAtC,UACE,cAACR,EAAA,EAAD,CAAYM,QAAQ,OAApB,SACE,cAAC,KAAD,CAAM0uC,SAAS,OAAf,SACiBrvC,GAAdmhC,GAAgB,gCAAqC,6BAE5C,IACd,cAAC,IAAD,CAAWxgC,QAAQ,OAAOE,aAAa,OAAvC,SACE,cAAC,EAAD,CACE4jD,WAAYA,GACZ6rB,oBAAqBA,GACrBnvC,YAAaA,GACbivC,MAAOA,YAOhB2E,GACC,cAAC,IAAD,CAAQ/F,UAAQ,EAAC//B,GAAG,MAApB,SACGjvC,GAAE,uBAEF6c,GAGH,eAAC,IAAD,CAAY5b,IAAI,KAAhB,WACIgyE,KAAc/pC,IAAcY,cAC5BmpC,KAAc/pC,IAAcW,SAC5BspC,KAAcjqC,IAAcY,cAC5BqpC,KAAcjqC,IAAcW,UAC5B4oC,IACE,eAACpyE,EAAA,EAAD,WACG4yE,KAAc/pC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASs7D,GACTlE,SAAUiE,KAAc/pC,IAAcW,QACtCrpC,MAAO2yE,KAAcjqC,IAAcS,SAAW,MAAQ,OAHxD,SAKGspC,KAAc/pC,IAAcW,QAC3B,cAAC6S,EAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAM8/B,mBAAnB,cAAE,GAA8Bv3B,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAM8/B,mBAAnB,cAAE,GAA8Bv3B,WAIhEypE,KAAcjqC,IAAcS,UAC3B,cAAC,IAAD,CACE/xB,QAASw7D,GACTpE,SAAUmE,KAAcjqC,IAAcW,QACtCrpC,MAAOyyE,KAAc/pC,IAAcS,SAAW,MAAQ,OAHxD,SAKGwpC,KAAcjqC,IAAcW,QAC3B,cAAC6S,EAAA,EAAD,UAAO18C,GAAE,mBAAoB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,WAEpE1J,GAAE,iBAAkB,CAAE+8D,MAAK,WAAEtY,GAAWtjD,IAAMqvE,mBAAnB,cAAE,GAA8B9mE,cAMvE,cAAC,IAAD,CACE6jC,SACGklC,IAAapC,GAAclvE,IAAM8/B,aAAiBovC,GAAclvE,IAAMqvE,YACnE,SACA,UAEN54D,QAAS,WACH4f,GACF+4C,KAEAyE,MAGJhG,UAAWyD,IAAWQ,KAAc/pC,IAAcS,UAAYwpC,KAAcjqC,IAAcS,SAb5F,gBAeGhsB,SAfH,IAeGA,MAAS3d,GAAE,eApDhB,cAACg+B,EAAA,EAAD,YA2DN+2C,GAOA,cAAC1e,EAAA,EAAD,CAA2B5R,WAAY,CAACA,GAAWxjB,WAAYwjB,GAAW+rB,cAN1Ev3C,KAASkI,IAAeiwC,KAActc,IAAUQ,QAC9C,cAAC,IAAD,CAAYjhC,MAAO,CAAEihD,SAAU,QAAS90E,MAAO,OAAQwuC,SAAU,QAASumC,UAAW,QAArF,SACE,cAAC,IAAD,CAAqBC,cAAetE,GAAmBj4C,KAAMA,OAE7D,U,2GC5dC28C,EAAct1E,YAAO80B,IAAP90B,CAAH,wGAUT,SAASu1E,EAAT,GAA+D,IAA5Cn4E,EAA2C,EAA3CA,SAChC,OAAO,cAACk4E,EAAD,UAAcl4E,M,gkBCUVo4E,EAAgB,EAEvBj5E,EAAiC,CACrC0zC,OAAQzF,IAAiBirC,QACzBr5C,WAAW,EACXs5C,mBAAmB,EACnBC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAeprC,IAAcqrC,IAC7B52B,aAAc,EACd62B,6BAA8B,EAC9Br1B,eAAgB,IAChBG,aAAc,GACdF,aAAc,mBACdG,WAAY,GACZk1B,gBAAiBt/D,IAASM,SAC1BsqC,OAAQ,GACRovB,QAAS,GACTlvB,QAAS,GACTy0B,kBAAmB,IAiBRC,EAAwBv8B,YACnC,wBADmD,sBAEnD,sDAAA/7C,EAAA,6DAAO2e,EAAP,+BAAiB,KAAjB,SAE2BikC,cAF3B,cAEQ21B,EAFR,OAGQn2B,EAASo2B,IAAMD,EAAWj3B,aAAci3B,EAAWj3B,aA7CpC,GA0CvB,SAM+B8B,YAAchB,GAN7C,UAMQq2B,EANR,OAOQC,EAAsDD,EAAej8C,QAAO,SAAC6b,EAAOiI,GACxF,IAAMq4B,EAAiB30B,YAAmC1D,GAE1D,OAAO,2BACFjI,GADL,kBAEGsgC,EAAen4B,MAAM7+C,WAAag3E,MAEpC,IAEGC,EAhBR,2BAiBOL,GAjBP,IAkBI70B,OAAQg1B,EACR90B,QAAS,GACTy0B,kBAAmB,KAGhB15D,EAvBP,0CAwBWi6D,GAxBX,yBA4BgCz2B,YAAcxjC,EAASyjC,GA5BvD,eA4BQK,EA5BR,iBA+BkCH,YAAiB3jC,EAASyjC,GA/B5D,eA+BQi2B,EA/BR,yBAiCSpN,IAAM,GAAI2N,EAAiB,CAChCh1B,QAASD,YAAehlC,EAAS8jC,EAAiBL,GAClDi2B,uBAnCJ,6CAwCWQ,EAAa98B,YAAyC,yBAAzB,uCAAmD,WAAOyE,GAAP,iBAAAxgD,EAAA,6DACrF84E,EAAqB1yD,cADgE,SAEpE0yD,EAAmBp1B,OAAOlD,GAF0C,cAErFjU,EAFqF,yBAGpFyX,YAAmCzX,IAHiD,2CAAnD,uDAM7BwsC,EAAch9B,YACzB,0BADyC,uCAEzC,WAAOqG,GAAP,eAAApiD,EAAA,sEACuBojD,YAAchB,GADrC,cACQsB,EADR,yBAESA,EAAOlnB,QAAO,SAAC6b,EAAOrlB,GAC3B,IAAKA,EACH,OAAOqlB,EAGT,IAAMsgC,EAAiB30B,YAAmChxB,GAE1D,OAAO,2BACFqlB,GADL,kBAEGsgC,EAAen4B,MAAM7+C,WAAag3E,MAEpC,KAbL,2CAFyC,uDAmB9BK,EAAkBj9B,YAA6B,8BAAb,sBAA4C,4BAAA/7C,EAAA,sEAChE4iD,cADgE,cACnF21B,EADmF,yBAElFA,GAFkF,4CAK9EU,EAAkBl9B,YAC7B,8BAD6C,uCAE7C,iCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAASyjC,EAAlB,EAAkBA,OAAlB,SACwBD,YAAcxjC,EAASyjC,GAD/C,cACQwB,EADR,yBAESD,YAAehlC,EAASilC,EAASxB,IAF1C,2CAF6C,uDAQlC82B,EAAyBn9B,YAGpC,qCAHoD,uCAGd,iCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAASyjC,EAAlB,EAAkBA,OAAlB,SAChBE,YAAiB3jC,EAASyjC,GADV,cAChCwB,EADgC,yBAE/BA,GAF+B,2CAHc,uDASzCu1B,EAAep9B,YAC1B,2BAD0C,uCAE1C,mCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAASshC,EAAlB,EAAkBA,QAAlB,SACyB6B,YAAc,CACnC7oB,KAAMta,EAAQ0Z,cACd4nB,YAHJ,cACQ1T,EADR,OAKQ6U,EAAO7U,EAAShsB,IAAIo/B,KAL5B,kBAOS,CAAEhhC,UAASyiC,SAPpB,2CAF0C,uDAa/Bg4B,EAAmBj9B,YAAY,CAC1C7jB,KAAM,cACN35B,eACAy9C,SAAU,CACRi9B,oBAAqB,SAACx5E,EAAO2gC,GAC3B3gC,EAAMwyC,OAAS7R,EAAOC,SAExB64C,oBAAqB,SAACz5E,EAAO2gC,GAC3B3gC,EAAMi4E,kBAAoBt3C,EAAOC,QACjC5gC,EAAMo4E,cAAgBprC,IAAcqrC,KAEtCqB,kBAAmB,SAAC15E,EAAO2gC,GACzB3gC,EAAMk4E,gBAAkBv3C,EAAOC,SAEjC+4C,iBAAkB,SAAC35E,EAAO2gC,GACxB3gC,EAAMo4E,cAAgBz3C,EAAOC,SAE/Bg5C,gBAAiB,SAAC55E,EAAO2gC,GACvB3gC,EAAMyhD,aAAe9gB,EAAOC,SAE9Bi5C,mBAAoB,SAAC75E,EAAO2gC,GAC1B3gC,EAAMu4E,gBAAkB53C,EAAOC,SAEjCk5C,0BAA2B,SAAC95E,EAAO2gC,GACjC,MAA2BA,EAAOC,QAA1B9hB,EAAR,EAAQA,QAASi7D,EAAjB,EAAiBA,MAEjB,GAAI/5E,EAAMizE,QAAQn0D,GAAU,CAC1B,IAAMk7D,EAAWh6E,EAAMizE,QAAQn0D,GAAS69B,WAAU,SAACqD,GAAD,OAASA,EAAI17B,KAAOy1D,KAElEC,GAAY,IACdh6E,EAAMizE,QAAQn0D,GAASk7D,GAAU55B,SAAU,MAKnDxD,cAAe,SAACpc,GAEdA,EAAQC,QAAQ44C,EAAuB7jD,WAAW,SAACx1B,EAAO2gC,GACxD3gC,EAAMw4E,kBAAoBpN,IAAM,GAAIprE,EAAMw4E,kBAAmB73C,EAAOC,YAItEJ,EAAQC,QAAQ24C,EAAgB5jD,WAAW,SAACx1B,EAAO2gC,GACjD3gC,EAAM+jD,QAAUqnB,IAAM,GAAIprE,EAAM+jD,QAASpjB,EAAOC,YAIlDJ,EAAQC,QAAQ04C,EAAgB3jD,WAAW,SAACx1B,EAAO2gC,GACjD,MAAyFA,EAAOC,QAAxF4R,EAAR,EAAQA,OAAQiP,EAAhB,EAAgBA,aAAcwB,EAA9B,EAA8BA,eAAgBG,EAA9C,EAA8CA,aAAcF,EAA5D,EAA4DA,aAAcG,EAA1E,EAA0EA,WAG1E,GAAIrjD,EAAMyhD,eAAiBA,EAAc,CACvC,IAAMw4B,EAAcC,IAAM34E,OAAOmnC,OAAO1oC,EAAM6jD,QAAS,SACjDs2B,EAAc32B,YAClBy2B,EAAYt5B,MAAQ,EACpBs5B,EAAYplD,YAAc70B,EAAMijD,eAAiB80B,IAGnD/3E,EAAM6jD,OAAOs2B,EAAYx5B,OAASw5B,EAClCn6E,EAAMs4E,6BAA+Bt4E,EAAMs4E,6BAA+Bt4E,EAAMijD,eAAiB80B,EAGnG/3E,EAAMwyC,OAASA,EACfxyC,EAAMyhD,aAAeA,EACrBzhD,EAAMijD,eAAiBA,EACvBjjD,EAAMojD,aAAeA,EACrBpjD,EAAMkjD,aAAeA,EACrBljD,EAAMqjD,WAAaA,KAIrB7iB,EAAQC,QAAQg4C,EAAsBjjD,WAAW,SAACx1B,EAAO2gC,GAMvD,IALA,MACEA,EAAOC,QADD4R,EAAR,EAAQA,OAAQiP,EAAhB,EAAgBA,aAAc2B,EAA9B,EAA8BA,aAAcH,EAA5C,EAA4CA,eAAgBY,EAA5D,EAA4DA,OAAQ20B,EAApE,EAAoEA,kBAAmBn1B,EAAvF,EAAuFA,WAAYU,EAAnG,EAAmGA,QAE7Fu0B,EAA+B33C,EAAOC,QAAQijB,OAAOpC,GAAc5sB,WACnEulD,EAAiC,GAE9BvhD,EAAI,EAAGA,GA1NK,EA0NoBA,IACvCuhD,EAAah2C,KACXof,YACE/B,EAAe5oB,EACfy/C,GAAgCr1B,EAAiB80B,GAAiBl/C,IAKxE,OAAO,2BACF74B,GADL,IAEEwyC,SACAiP,eACA2B,eACAH,iBACAI,aACAi1B,+BACAE,oBACAz0B,UACAF,OAAQunB,IAAM,GAAIvnB,EAAQD,YAAcw2B,SAK5C55C,EAAQC,QAAQu4C,EAAWxjD,WAAW,SAACx1B,EAAO2gC,GAC5C3gC,EAAM6jD,OAASunB,IAAM,GAAIprE,EAAM6jD,OAAX,eACjBljB,EAAOC,QAAQ+f,MAAM7+C,WAAa6+B,EAAOC,aAK9CJ,EAAQC,QAAQy4C,EAAY1jD,WAAW,SAACx1B,EAAO2gC,GAC7C3gC,EAAM6jD,OAASunB,IAAM,GAAIprE,EAAM6jD,OAAQljB,EAAOC,YAIhDJ,EAAQC,QAAQ64C,EAAa/jD,SAAS,SAACv1B,GACrCA,EAAMm4E,mBAAoB,KAE5B33C,EAAQC,QAAQ64C,EAAa7jD,UAAU,SAACz1B,GACtCA,EAAMm4E,mBAAoB,KAE5B33C,EAAQC,QAAQ64C,EAAa9jD,WAAW,SAACx1B,EAAO2gC,GAC9C,MAA0BA,EAAOC,QAAzB9hB,EAAR,EAAQA,QAASyiC,EAAjB,EAAiBA,KAEjBvhD,EAAMm4E,mBAAoB,EAC1Bn4E,EAAMizE,QAAQn0D,GAAWyiC,QAMxB,EAQHg4B,EAAiB18B,QAPnB68B,EADK,EACLA,kBAEAC,GAHK,EAELC,gBAFK,EAGLD,kBACAF,EAJK,EAILA,oBAEAI,GANK,EAKLL,oBALK,EAMLK,oBACAC,EAPK,EAOLA,0BAGaP,MAAf,S,qECvSKc,EAMAC,E,0DAWU,SAASC,EAAT,GAAkG,IAU3GC,EAWAC,EArBiCjpC,EAAyE,EAAzEA,YAAaC,EAA4D,EAA5DA,eAAgB7W,EAA4C,EAA5CA,SAAU8W,EAAkC,EAAlCA,YAC5E,EAA0C9xC,mBAAS,IAAnD,mBAAO86E,EAAP,KAAsBC,EAAtB,KACA,EAA0C/6E,mBAAS,IAAnD,mBAAOg7E,EAAP,KAAsBC,EAAtB,KAEQ54E,EAAMC,cAAND,EAEF64E,EACc,KAAlBJ,IAAyBlpC,EAAc,KAAKltC,QAAQ,KAAOmwC,OAAO8G,WAAWm/B,GAAep2E,QAAQ,GAChGy2E,EAAyC,KAAlBH,IAAyBhgD,EAAW,IAAI94B,aAAe84E,EAoBpF,SAASI,EAAoBh5E,GAC3B24E,EAAiB34E,GAEjB,IACE,IAAMi5E,EAA6BxmC,OAAOnuC,UAAqC,IAA3BmuC,OAAO8G,WAAWv5C,IAAcF,aAC/E2yC,OAAOoL,MAAMo7B,IAA+BA,EAA6B,KAC5ExpC,EAAewpC,GAEjB,MAAOr7D,GACPD,QAAQC,MAAMA,IAIlB,SAASs7D,EAAoBl5E,GAC3B64E,EAAiB74E,GAEjB,IACE,IAAMm5E,EAA8C,GAAzB1mC,OAAOnuC,SAAStE,IACtCyyC,OAAOoL,MAAMs7B,IAAeA,EAAa,GAC5CzpC,EAAYypC,GAEd,MAAOv7D,GACPD,QAAQC,MAAMA,IAIlB,OAxCE46D,EAHoB,KAAlBE,GAAyBI,EAElBA,GAAwBtpC,EAAc,GAC/B6oC,EAAce,SACrBN,GAAwBtpC,EAAc,IAC/B6oC,EAAcgB,eAEd57E,EANA46E,EAAciB,aAa9Bb,EAHoB,KAAlBG,GAAyBG,OAGXt7E,EAFA66E,EAAcgB,aAgC9B,eAAC,IAAD,CAAYp4E,IAAI,KAAhB,UACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMouC,SAAS,OAAf,SAAuBrvC,EAAE,wBACzB,cAAC,IAAD,CACE01B,KAAM11B,EAAE,+FACR2vC,GAAG,WAGP,eAAC,IAAD,CAAM2pC,SAAU,CAAC,OAAQ,OAAQ,UAAjC,UACE,eAAC,IAAD,CAAMC,oBAAoB,cAAczK,QAAQ,MAAM7/B,GAAI,CAAC,MAAO,MAAO,GAAIvB,GAAI,CAAC,EAAG,EAAG,OAAxF,UACE,cAAC,IAAD,CACE91B,QAAS,WACP8gE,EAAiB,IACjBlpC,EAAe,KAEjBjC,QAAyB,KAAhBgC,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACE33B,QAAS,WACP8gE,EAAiB,IACjBlpC,EAAe,KAEjBjC,QAAyB,KAAhBgC,EAAqB,UAAY,WAL5C,kBASA,cAAC,IAAD,CACE33B,QAAS,WACP8gE,EAAiB,IACjBlpC,EAAe,MAEjBjC,QAAyB,MAAhBgC,EAAsB,UAAY,WAL7C,mBAUF,eAAC,IAAD,WACE,cAAC,KAAD,CACE+B,MAAM,KACN4zB,aAAc31B,EAAc,KAAKltC,QAAQ,GACzCtC,MAAO04E,EACP/L,OAAQ,WACNqM,GAAqBxpC,EAAc,KAAKltC,QAAQ,KAElDwtC,SAAU,SAAC48B,GAAD,OAAOsM,EAAoBtM,EAAEpH,OAAOtlE,QAC9Cy5E,WAAYX,EACZY,WAAY,CAAC,GAAI,GAAI,KAAKv3C,SAASqN,KAErC,cAAC,KAAD,CAAM/3B,MAAM,UAAU43B,MAAI,EAACO,GAAG,MAA9B,uBAKD4oC,GACD,cAAC,IAAD,CACElkD,MAAO,CACLgb,SAAU,OACVqqC,WAAY,MACZliE,MAAO+gE,IAAkBH,EAAciB,aAAe,MAAQ,WAJlE,SAOGd,IAAkBH,EAAciB,aAC7Br5E,EAAE,qCACFu4E,IAAkBH,EAAce,SAChCn5E,EAAE,6BACFA,EAAE,yCAKZ,eAAC,IAAD,CAAYiB,IAAI,KAAhB,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMouC,SAAS,OAAf,SAAuBrvC,EAAE,0BACzB,cAAC,IAAD,CAAgB01B,KAAM11B,EAAE,0EAA2E2vC,GAAG,WAExG,eAAC,IAAD,WACE,cAAC,KAAD,CACEn4B,MAAOghE,EAAgB,WAAQh7E,EAC/BkvE,OAAQ,WACNuM,GAAqBtgD,EAAW,IAAI94B,aAEtCqlE,aAAcvsC,EAAW,IAAI94B,WAC7BE,MAAO44E,EACP9oC,SAAU,SAAC48B,GAAD,OAAOwM,EAAoBxM,EAAEpH,OAAOtlE,UAEhD,cAAC,KAAD,CAAM45E,GAAG,MAAMtqC,SAAS,OAAxB,SACGrvC,EAAE,uB,SAjKVo4E,K,4BAAAA,E,oBAAAA,E,uBAAAA,M,cAMAC,K,6BAAAA,M,wVCNCuB,EAAmC,SACvCC,EACAC,EACAC,GAGA,OAA6B,IAAzBD,EAAc/yD,OACTgzD,EAAgBt7D,KAAI,SAACu7D,GAC1B,IAAMC,EAAqBJ,EAAa16D,MAAK,SAAC+6D,GAAD,OAAkBA,EAAantB,UAAYitB,EAAUpvB,aAClG,MAAO,CACLE,QAASkvB,EAAUlvB,QACnBva,OAAQypC,EAAUzpC,OAClBqa,UAAWovB,EAAUpvB,UAAU/qD,WAC/Bs+C,QAASkP,YAAoB4sB,EAAmB7sB,aAChD+sB,aAAa,GAAD,OAAKF,EAAmB7sB,YAAYrmC,OAAOlnB,YACvDytD,QAAS2sB,EAAmB7sB,gBAMX0sB,EAAcr7D,KAAI,SAAC27D,EAAYplC,GACpD,IAAMglC,EAAYD,EAAgB/kC,GAElC,GAAIglC,EAAW,CACb,IAAMC,EAAqBJ,EAAa16D,MAAK,SAAC+6D,GAAD,OAAkBA,EAAantB,UAAYitB,EAAUpvB,aAElG,OAAKovB,EAAUt9C,UAUR09C,EATE,CACLtvB,QAASkvB,EAAUlvB,QACnBva,OAAQypC,EAAUzpC,OAClBqa,UAAWovB,EAAUpvB,UAAU/qD,WAC/Bs+C,QAASkP,YAAoB4sB,EAAmB7sB,aAChD+sB,aAAcC,EAAWD,aACzB7sB,QAAS2sB,EAAmB7sB,aAKlC,OAAOgtB,MAKLC,EAAmB,uCAAG,WAAOx9D,GAAP,qBAAA3e,EAAA,6DAEpBo8E,EAAY,CAChBz9D,UACA09D,UAAW,GACXJ,aAAc,GACdv4B,OAAQ,IANgB,kBAUD9E,kBACrBmI,IACA7E,cAF6B,IAAD,mdAqB5B,CAAEvjC,QAASA,EAAQ0Z,gBA/BG,OAUlBkU,EAVkB,OAiClB+vC,EAAU/vC,EAAStT,KAMvBA,EAHGqjD,EAGI,CACL39D,QAAS29D,EAAQn4D,GACjBk4D,UAAWC,EAAQD,UACnBJ,aAAcK,EAAQL,aACtBv4B,OAAQ44B,EAAQ54B,OAAOnjC,KAAI,SAACyS,GAAW,IAAD,MACpC,MAAO,CACL05B,UAAS,OAAE15B,QAAF,IAAEA,GAAF,UAAEA,EAAOqT,eAAT,aAAE,EAAgBliB,GAC3ByoC,QAAO,OAAE55B,QAAF,IAAEA,GAAF,UAAEA,EAAOqT,eAAT,aAAE,EAAgBumB,QACzB3M,QAAO,OAAEjtB,QAAF,IAAEA,OAAF,EAAEA,EAAOitB,QAChBg8B,aAAY,OAAEjpD,QAAF,IAAEA,OAAF,EAAEA,EAAOipD,aACrB5pC,OAAM,OAAErf,QAAF,IAAEA,GAAF,UAAEA,EAAOqT,eAAT,aAAE,EAAgBgM,YAZvB+pC,EArCe,gDAuDxB58D,QAAQC,MAAR,MACAwZ,EAAOmjD,EAxDiB,iCA2DnBnjD,GA3DmB,yDAAH,sDA2EVsjD,EAbS,uCAAG,WAAO59D,EAAiB4vC,GAAxB,6BAAAvuD,EAAA,6DACnBw8E,EAAwB/tB,YAAiBF,GADtB,SAEakuB,YAAkCD,EAAuB79D,GAFtE,cAEnB+9D,EAFmB,OAGnBC,EAAqBD,EAAwBp0D,QAAO,SAAC0K,GAAD,OAAWA,EAAMk8B,YAAYrmC,OAAS,KAC1F+zD,EAA0BD,EAAmBp8D,KAAI,SAACyS,GAAD,OAAWA,EAAM67B,WAJ/C,SAMOX,YAAuB0uB,GAN9B,cAMnBC,EANmB,iBAOGV,EAAoBx9D,GAPvB,eAOnBm+D,EAPmB,OAQnBC,EAAkBrB,EAAiCiB,EAAoBG,EAAcp5B,OAAQm5B,GAC7FG,EATmB,2BASgBF,GAThB,IAS+Bp5B,OAAQq5B,IATvC,kBAUlBC,GAVkB,4CAAH,wDCpGlBr+E,EAA6B,CACjC4vD,iBAAkB,KAClB0uB,iBAAiB,EACjBzuB,8BAA+B,KAC/B0uB,aAAc,CACZ1+C,WAAW,EACXkuB,UAAW,KACXra,OAAQvyB,IAAc6rB,QACtBghB,UAAW,GACXC,QAAS,GACTC,kBAAmB,GACnBC,gBAAiB,GACjBC,YAAa,GACbC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,YAAa,KACbC,eAAgB,GAChBC,uBAAwB,GACxBC,iBAAkB,GAClB4B,YAAa,CACX1wB,WAAW,EACX4wB,QAAS,KAGb+tB,cAAe,KACfC,gBAAiB,CAAEz+D,QAAS,GAAI09D,UAAW,GAAIJ,aAAc,GAAIv4B,OAAQ,KAG9D25B,EAAsBthC,YACjC,8BADiD,uCAEjD,+BAAA/7C,EAAA,6DAASuuD,EAAT,EAASA,iBAAT,SAC4BR,YAAaQ,GADzC,cACQ+uB,EADR,yBAESA,GAFT,2CAFiD,uDAQtCC,EAAwBxhC,YAAoC,gCAApB,sBAAqD,4BAAA/7C,EAAA,sEACvEsuD,cADuE,cAClGkvB,EADkG,yBAEjGA,GAFiG,4CAK7FC,EAA+B1hC,YAG1C,uCAH0D,uCAGlB,uCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAAS4vC,EAAlB,EAAkBA,iBAAlB,SACTguB,EAAmB59D,EAAS4vC,GADnB,UAClCmvB,EADkC,OAElCC,EAFkC,UAEAD,EAAiBh6B,cAFjB,aAEA,EAAyBziC,MAAK,SAAC+R,GAAD,OAAWA,EAAM05B,YAAc6B,MAC/FW,EAHkC,OAGpByuB,QAHoB,IAGpBA,OAHoB,EAGpBA,EAAiCvuB,UAGV,IAAvBF,EAAYrmC,OANQ,yCAO/B,CAAEqmC,YAAa,KAAM0uB,cAAeF,IAPL,gCAUjC,CAAExuB,cAAa0uB,cAAeF,IAVG,2CAHkB,uDAgB/CG,EAAuB9hC,YAClC,+BADkD,uCAElD,+BAAA/7C,EAAA,6DAASuuD,EAAT,EAASA,iBAAT,SAC0BuvB,YAAiBvvB,GAD3C,cACQwvB,EADR,yBAESA,GAFT,2CAFkD,uDAQvCC,EAAqBjiC,YAGhC,6BAHgD,uCAGlB,iCAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAAS4vC,EAAlB,EAAkBA,iBAAlB,SACFguB,EAAmB59D,EAAS4vC,GAD1B,cACxBqvB,EADwB,yBAEvBA,GAFuB,2CAHkB,uDAQrCK,EAA4BliC,YAAgB,oEAEvD,6BAAA/7C,EAAA,6DAASi9E,EAAT,EAASA,gBAAT,kBACS,CAAEA,oBADX,2CAFuD,uDAO5CiB,EAAe/hC,YAAY,CACtC7jB,KAAM,UACN35B,eACAy9C,SAAU,CACR+hC,qBAAsB,SAACt+E,EAAO2gC,GACpBA,EAAOC,UAGnBgc,cAAe,SAACpc,GACdA,EAAQC,QAAQ+8C,EAAoBhoD,WAAW,SAACx1B,EAAO2gC,GACrD3gC,EAAMq9E,aAAN,2BAA0Br9E,EAAMq9E,cAAiB18C,EAAOC,YAE1DJ,EAAQC,QAAQi9C,EAAsBloD,WAAW,SAACx1B,EAAO2gC,GACvD3gC,EAAM0uD,iBAAmB/tB,EAAOC,QAAQ8tB,iBACxC1uD,EAAM2uD,8BAAgChuB,EAAOC,QAAQ+tB,iCAEvDnuB,EAAQC,QACNm9C,EAA6BpoD,WAC7B,SAACx1B,EAAO2gC,GACN3gC,EAAMq9E,aAAahuB,YAAY1wB,WAAY,EAC3C3+B,EAAMq9E,aAAahuB,YAAYE,QAAU5uB,EAAOC,QAAQyuB,YACxDrvD,EAAMu9E,gBAAkB58C,EAAOC,QAAQm9C,iBAG3Cv9C,EAAQC,QAAQu9C,EAAqBxoD,WAAW,SAACx1B,EAAO2gC,GACtD3gC,EAAMs9E,cAAgB38C,EAAOC,WAE/BJ,EAAQC,QAAQ09C,EAAmB3oD,WAAW,SAACx1B,EAAO2gC,GACpD3gC,EAAMu9E,gBAAkB58C,EAAOC,WAEjCJ,EAAQC,QACN29C,EAA0B5oD,WAC1B,SAACx1B,EAAO2gC,GACN3gC,EAAMo9E,gBAAkBz8C,EAAOC,QAAQw8C,sBAOPiB,EAAaxhC,QAAtCyhC,qBAEAD,MAAf,S,gFCnIMtoD,EAAUxzB,YAAOwgE,IAAPxgE,CAAH,kGAcEg8E,IARc,WAC3B,OACE,cAACxoD,EAAD,UACE,cAAC,KAAD,Q,mKCIOyoD,EAAkBtiC,YAC7B,+BAD6C,uCAE7C,WAAOp9B,GAAP,iBAAA3e,EAAA,6DAEQs+E,EAAoBl9E,OAAOC,KAAKk4D,KAAYh5C,IAAxB,iBAAAnf,OAAA,IAAAA,CAAA,UAA4B,WAAOm9E,GAAP,+BAAAv+E,EAAA,6DACnCw+E,EAAejlB,IAAWglB,GAAnCj4E,QACFA,EAAUD,YAAWm4E,GACrBljE,EAAWsI,YAAkBtd,GAE7Bm4E,EAL8C,+BAAAz+E,EAAA,MAK1B,WAAO82C,GAAP,mBAAA92C,EAAA,+EAEoBsb,EAASojE,oBAAoB//D,EAASm4B,GAF1D,cAEhB6nC,EAFgB,OAGhB3qB,EAAU2qB,EAAU36E,WAHJ,SAKE6wD,YAAgBvuD,EAAS0tD,GAL3B,cAKhB4qB,EALgB,yBAMf,CAAC5qB,EAAS4qB,EAAU5kB,aANL,yCAQtBx6C,QAAQC,MAAM,oBAAd,MARsB,kBASf,MATe,0DAL0B,+DAkBpBnE,EAASE,UAAUmD,GAlBC,UAkB9CkgE,EAlB8C,OAqBlC,KAFZrjE,EAAYqjE,EAAkB76E,YAnBgB,0CAsB3C,IAtB2C,QA4BpD,IAHM86E,EAAuB,GAGpBpmD,EAAI,EAAGA,EAAIld,EAAWkd,IAC7BomD,EAAqB76C,KAAKw6C,EAAkB/lD,IA7BM,iBAgC9Bwf,QAAQC,IAAI2mC,GAhCkB,eAgC9CC,EAhC8C,yBAiC7CA,GAjC6C,4CAA5B,uDAF5B,SAsC8B7mC,QAAQC,IAAImmC,GAtC1C,cAsCQU,EAtCR,yBAwCSA,EAAcC,QAxCvB,2CAF6C,uDA8ClCC,EAAoB/iC,YAAY,CAC3C7jB,KAAM,eACN35B,aAzDsC,CACtC22D,eAAe,EACf92B,WAAW,EACXx9B,KAAM,IAuDNo7C,SAAU,GACVK,cAAe,SAACpc,GACdA,EAAQC,QAAQ+9C,EAAgBjpD,SAAS,SAACv1B,GACxCA,EAAM2+B,WAAY,KAEpB6B,EAAQC,QAAQ+9C,EAAgBhpD,WAAW,SAACx1B,EAAO2gC,GACjD3gC,EAAM2+B,WAAY,EAClB3+B,EAAMy1D,eAAgB,EACtBz1D,EAAMmB,KAAOw/B,EAAOC,QAAQjE,QAAO,SAAC6b,EAAO8mC,GACzC,IAAKA,EACH,OAAO9mC,EAGT,MAA8B8mC,EAA9B,mBAAOnrB,EAAP,KAAgBgG,EAAhB,KAEA,OAAO,2BACF3hB,GADL,kBAEG2hB,EAAa3hB,EAAM2hB,GAAN,sBAAwB3hB,EAAM2hB,IAA9B,CAA2ChG,IAAW,CAACA,OAEtE,UAKMkrB,MAAf,S,6BC3FA,gFAca59C,EAAiBn+B,YAO3B,+BACU2+B,EAAuB3+B,YAAmC,qCACpCA,YAIhC,oCAC+BA,YAI/B,oC,6BChCH,gFAcam+B,EAAiBn+B,YAO3B,+BACU2+B,EAAuB3+B,YAAmC,qCACpCA,YAIhC,oCAC+BA,YAI/B,oC,sSCDGi8E,EAAiBh9E,YAAOQ,IAAPR,CAAH,6CASb,SAASi9E,EAAT,GAAkF,IAAnDtkD,EAAkD,EAAlDA,KAAkD,IAA5Cu8C,qBAA4C,SAC9E34D,EAAYnZ,cAAZmZ,QAEA7c,EAAMC,cAAND,EAEFi0B,EAAYuhD,EAAgBv8C,EAAKC,OAAS6P,YAAe9P,EAAKC,QAC9DhF,EAAYshD,EAAgBv8C,EAAKE,OAAS4P,YAAe9P,EAAKE,QAEpE,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,IAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmB3wD,IAAKmiD,YAAYwO,EAAgBrwD,IAAKN,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/rB,IAAI,OAAhB,UACE,cAACq8E,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9lE,MAAM,YAAY43B,MAAI,EAA5B,SACGpvC,EAAE,kCAIT,eAACs9E,EAAD,CAAgB1lE,QAAS,kBAAM6lE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBvpD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMiiC,OAAK,EAAC5+C,MAAM,aAAlB,UACGyc,EAAUvqB,OADb,IACsBwqB,EAAUxqB,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOg0E,EAAkBA,EAAgBrhC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYp7C,IAAI,MAAhB,UACE,eAACq8E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOswE,EAAmB,UAAMA,EAAoBjuE,QAAQ,GAAlC,KAA0C,SAEtE,eAACi7E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO9oC,EAAUvqB,SAD1C,OAGCo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAGJ,eAACihC,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO7oC,EAAUxqB,SAD1C,OAGCq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMhN,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,UAA1C,UACE,sBAAMqhB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPh+E,EACC,qNASC,SAASi+E,EAAT,GAAkE,IAAtChlD,EAAqC,EAArCA,KAASphB,EAA4B,iBACtEgF,EAAYnZ,cAAZmZ,QAEFoX,EAAY8U,YAAe9P,EAAKC,QAChChF,EAAY6U,YAAe9P,EAAKE,QAEtC,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,IAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM1pD,MAAO,CAAExzB,aAAc,SAAcgX,GAA3C,cACE,eAAC,IAAD,CAAMw5B,eAAe,gBAAgB2sC,KAAK,SAASpmE,QAAS,kBAAM6lE,GAAaD,IAAWxjD,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM6W,cAAc,SAApB,UACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoBhb,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMib,MAAI,EAACO,GAAG,MAAd,SACI1b,GAAcC,EAAf,UAAqDD,EAAUvqB,OAA/D,YAAyEwqB,EAAUxqB,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,gBACGkmE,QADH,IACGA,OADH,EACGA,EAAiBrhC,cAAc,QAGnCmhC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYv8E,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,QAAxC,UACE,eAAC28E,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUgG,IACpC,eAAC,KAAD,CAAMzc,MAAM,aAAam4B,GAAG,MAA5B,oBACU1b,EAAUvqB,aAGrBo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUiG,IACpC,eAAC,KAAD,CAAM1c,MAAM,aAAam4B,GAAG,MAA5B,oBACUzb,EAAUxqB,aAGrBq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,cAAC,KAAD,CAAM9lE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG84D,EAAmB,UACsB,SAAnCA,EAAoBjuE,QAAQ,GAAgB,QAAUiuE,EAAoBjuE,QAAQ,GADrE,KAEhB,SAIPq7E,GAAmB3wD,IAAKmiD,YAAYwO,EAAgBrwD,IAAKsB,MACxD,eAAC,IAAD,CAAMkiB,cAAc,SAApB,UACE,cAAC,IAAD,CACEoB,GAAIC,IACJC,GAAE,kBAAazR,YAAWzM,GAAxB,YAAsCyM,YAAWxM,IACnDqZ,QAAQ,UACR/sC,MAAM,OACNyuC,GAAG,MALL,oBASA,cAAC,IAAD,CACEgD,GAAIC,IACJC,GAAE,eAAUzR,YAAWzM,GAArB,YAAmCyM,YAAWxM,IAChDqZ,QAAQ,OACRE,UAAW,cAAC,IAAD,CAASj2B,MAAM,YAC1BhX,MAAM,OALR,+C,uSCrNR88E,EAAiBh9E,YAAOQ,IAAPR,CAAH,6CASb,SAASi9E,EAAT,GAAkF,IAAnDtkD,EAAkD,EAAlDA,KAAkD,IAA5Cu8C,qBAA4C,SAC9E34D,EAAYnZ,cAAZmZ,QAEA7c,EAAMC,cAAND,EAEFi0B,EAAYuhD,EAAgBv8C,EAAKC,OAAS6P,YAAe9P,EAAKC,QAC9DhF,EAAYshD,EAAgBv8C,EAAKE,OAAS4P,YAAe9P,EAAKE,QAEpE,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,IAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmB3wD,IAAKmiD,YAAYwO,EAAgBrwD,IAAKN,IAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/rB,IAAI,OAAhB,UACE,cAACq8E,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9lE,MAAM,YAAY43B,MAAI,EAA5B,SACGpvC,EAAE,kCAIT,eAACs9E,EAAD,CAAgB1lE,QAAS,kBAAM6lE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBvpD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMiiC,OAAK,EAAC5+C,MAAM,aAAlB,UACGyc,EAAUvqB,OADb,IACsBwqB,EAAUxqB,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOg0E,EAAkBA,EAAgBrhC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYp7C,IAAI,MAAhB,UACE,eAACq8E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOswE,EAAmB,UAAMA,EAAoBjuE,QAAQ,GAAlC,KAA0C,SAEtE,eAACi7E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO9oC,EAAUvqB,SAD1C,OAGCo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAGJ,eAACihC,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO7oC,EAAUxqB,SAD1C,OAGCq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMhN,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,UAA1C,UACE,sBAAMqhB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPh+E,EACC,qNASC,SAASi+E,EAAT,GAAkE,IAAtChlD,EAAqC,EAArCA,KAASphB,EAA4B,iBACtEgF,EAAYnZ,cAAZmZ,QAEFoX,EAAY8U,YAAe9P,EAAKC,QAChChF,EAAY6U,YAAe9P,EAAKE,QAEtC,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,IAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,IAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM1pD,MAAO,CAAExzB,aAAc,SAAcgX,GAA3C,cACE,eAAC,IAAD,CAAMw5B,eAAe,gBAAgB2sC,KAAK,SAASpmE,QAAS,kBAAM6lE,GAAaD,IAAWxjD,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM6W,cAAc,SAApB,UACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoBhb,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMib,MAAI,EAACO,GAAG,MAAd,SACI1b,GAAcC,EAAf,UAAqDD,EAAUvqB,OAA/D,YAAyEwqB,EAAUxqB,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,gBACGkmE,QADH,IACGA,OADH,EACGA,EAAiBrhC,cAAc,QAGnCmhC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYv8E,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,QAAxC,UACE,eAAC28E,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUgG,IACpC,eAAC,KAAD,CAAMzc,MAAM,aAAam4B,GAAG,MAA5B,oBACU1b,EAAUvqB,aAGrBo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUiG,IACpC,eAAC,KAAD,CAAM1c,MAAM,aAAam4B,GAAG,MAA5B,oBACUzb,EAAUxqB,aAGrBq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,cAAC,KAAD,CAAM9lE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG84D,EAAmB,UACsB,SAAnCA,EAAoBjuE,QAAQ,GAAgB,QAAUiuE,EAAoBjuE,QAAQ,GADrE,KAEhB,SAIPq7E,GAAmB3wD,IAAKmiD,YAAYwO,EAAgBrwD,IAAKsB,MACxD,eAAC,IAAD,CAAMkiB,cAAc,SAApB,UACE,cAAC,IAAD,CACEoB,GAAIC,IACJC,GAAE,qBAAgBzR,YAAWzM,GAA3B,YAAyCyM,YAAWxM,IACtDqZ,QAAQ,UACR/sC,MAAM,OACNyuC,GAAG,MALL,oBASA,cAAC,IAAD,CACEgD,GAAIC,IACJC,GAAE,2BAAsBzR,YAAWzM,GAAjC,YAA+CyM,YAAWxM,IAC5DqZ,QAAQ,OACRE,UAAW,cAAC,IAAD,CAASj2B,MAAM,YAC1BhX,MAAM,OALR,+C,uSCrNR88E,EAAiBh9E,YAAOQ,IAAPR,CAAH,6CASb,SAASi9E,EAAT,GAAkF,IAAnDtkD,EAAkD,EAAlDA,KAAkD,IAA5Cu8C,qBAA4C,SAC9E34D,EAAYnZ,cAAZmZ,QAEA7c,EAAMC,cAAND,EAEFi0B,EAAYuhD,EAAgBv8C,EAAKC,OAAS6P,YAAe9P,EAAKC,QAC9DhF,EAAYshD,EAAgBv8C,EAAKE,OAAS4P,YAAe9P,EAAKE,QAEpE,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,UAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmB3wD,OAAKmiD,YAAYwO,EAAgBrwD,IAAKN,OAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/rB,IAAI,OAAhB,UACE,cAACq8E,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9lE,MAAM,YAAY43B,MAAI,EAA5B,SACGpvC,EAAE,kCAIT,eAACs9E,EAAD,CAAgB1lE,QAAS,kBAAM6lE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBvpD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMiiC,OAAK,EAAC5+C,MAAM,aAAlB,UACGyc,EAAUvqB,OADb,IACsBwqB,EAAUxqB,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOg0E,EAAkBA,EAAgBrhC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYp7C,IAAI,MAAhB,UACE,eAACq8E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOswE,EAAmB,UAAMA,EAAoBjuE,QAAQ,GAAlC,KAA0C,SAEtE,eAACi7E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO9oC,EAAUvqB,SAD1C,OAGCo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAGJ,eAACihC,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO7oC,EAAUxqB,SAD1C,OAGCq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMhN,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,UAA1C,UACE,sBAAMqhB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPh+E,EACC,qNASC,SAASi+E,EAAT,GAAkE,IAAtChlD,EAAqC,EAArCA,KAASphB,EAA4B,iBACtEgF,EAAYnZ,cAAZmZ,QAEFoX,EAAY8U,YAAe9P,EAAKC,QAChChF,EAAY6U,YAAe9P,EAAKE,QAEtC,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,UAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM1pD,MAAO,CAAExzB,aAAc,SAAcgX,GAA3C,cACE,eAAC,IAAD,CAAMw5B,eAAe,gBAAgB2sC,KAAK,SAASpmE,QAAS,kBAAM6lE,GAAaD,IAAWxjD,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM6W,cAAc,SAApB,UACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoBhb,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMib,MAAI,EAACO,GAAG,MAAd,SACI1b,GAAcC,EAAf,UAAqDD,EAAUvqB,OAA/D,YAAyEwqB,EAAUxqB,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,gBACGkmE,QADH,IACGA,OADH,EACGA,EAAiBrhC,cAAc,QAGnCmhC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYv8E,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,QAAxC,UACE,eAAC28E,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUgG,IACpC,eAAC,KAAD,CAAMzc,MAAM,aAAam4B,GAAG,MAA5B,oBACU1b,EAAUvqB,aAGrBo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUiG,IACpC,eAAC,KAAD,CAAM1c,MAAM,aAAam4B,GAAG,MAA5B,oBACUzb,EAAUxqB,aAGrBq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,cAAC,KAAD,CAAM9lE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG84D,EAAmB,UACsB,SAAnCA,EAAoBjuE,QAAQ,GAAgB,QAAUiuE,EAAoBjuE,QAAQ,GADrE,KAEhB,SAIPq7E,GAAmB3wD,OAAKmiD,YAAYwO,EAAgBrwD,IAAKsB,MACxD,eAAC,IAAD,CAAMkiB,cAAc,SAApB,UACE,cAAC,IAAD,CACEoB,GAAIC,IACJC,GAAE,uBAAkBzR,YAAWzM,GAA7B,YAA2CyM,YAAWxM,IACxDqZ,QAAQ,UACR/sC,MAAM,OACNyuC,GAAG,MALL,oBASA,cAAC,IAAD,CACEgD,GAAIC,IACJC,GAAE,6BAAwBzR,YAAWzM,GAAnC,YAAiDyM,YAAWxM,IAC9DqZ,QAAQ,OACRE,UAAW,cAAC,IAAD,CAASj2B,MAAM,YAC1BhX,MAAM,OALR,+C,uSCrNR88E,EAAiBh9E,YAAOQ,IAAPR,CAAH,6CASb,SAASi9E,EAAT,GAAkF,IAAnDtkD,EAAkD,EAAlDA,KAAkD,IAA5Cu8C,qBAA4C,SAC9E34D,EAAYnZ,cAAZmZ,QAEA7c,EAAMC,cAAND,EAEFi0B,EAAYuhD,EAAgBv8C,EAAKC,OAAS6P,YAAe9P,EAAKC,QAC9DhF,EAAYshD,EAAgBv8C,EAAKE,OAAS4P,YAAe9P,EAAKE,QAEpE,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,UAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,mCACGL,GAAmB3wD,OAAKmiD,YAAYwO,EAAgBrwD,IAAKN,OAAKC,OAAO,IACpE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/rB,IAAI,OAAhB,UACE,cAACq8E,EAAD,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM9lE,MAAM,YAAY43B,MAAI,EAA5B,SACGpvC,EAAE,kCAIT,eAACs9E,EAAD,CAAgB1lE,QAAS,kBAAM6lE,GAAaD,IAA5C,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAoBvpD,UAAWA,EAAWC,UAAWA,EAAWH,QAAM,EAACI,KAAM,KAC7E,eAAC,KAAD,CAAMiiC,OAAK,EAAC5+C,MAAM,aAAlB,UACGyc,EAAUvqB,OADb,IACsBwqB,EAAUxqB,OADhC,YAIF,cAAC,IAAD,UACE,cAAC,KAAD,UAAOg0E,EAAkBA,EAAgBrhC,cAAc,GAAK,WAGhE,eAAC,IAAD,CAAYp7C,IAAI,MAAhB,UACE,eAACq8E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBADL,OAGA,cAAC,KAAD,UAAOswE,EAAmB,UAAMA,EAAoBjuE,QAAQ,GAAlC,KAA0C,SAEtE,eAACi7E,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO9oC,EAAUvqB,SAD1C,OAGCo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAGJ,eAACihC,EAAD,WACE,eAAC,KAAD,CAAM9lE,MAAM,aAAa4+C,OAAK,EAA9B,UACGp2D,EAAE,iBAAkB,CAAE+8D,MAAO7oC,EAAUxqB,SAD1C,OAGCq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,iBAQZ,cAAC,IAAD,UACE,eAAC,KAAD,CAAMhN,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,UAA1C,UACE,sBAAMqhB,KAAK,MAAM,aAAW,eAA5B,0BAEQ,IACPh+E,EACC,qNASC,SAASi+E,EAAT,GAAkE,IAAtChlD,EAAqC,EAArCA,KAASphB,EAA4B,iBACtEgF,EAAYnZ,cAAZmZ,QAEFoX,EAAY8U,YAAe9P,EAAKC,QAChChF,EAAY6U,YAAe9P,EAAKE,QAEtC,EAAgCx7B,oBAAS,GAAzC,mBAAO6/E,EAAP,KAAiBC,EAAjB,KAEMC,EAAkBpgE,YAAe,OAACT,QAAD,IAACA,SAAWrf,EAAWy7B,EAAK2vB,gBAC7D+0B,EAAkBvlE,YAAe6gB,EAAK2vB,gBAEtC0nB,EACFoN,GAAqBC,GAAmB5wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACnG,IAAIP,UAAQ4wD,EAAgBrwD,IAAKswD,EAAgBtwD,UACjD7vB,EAEN,EACIy7B,GACA0kD,GACAD,GAEF3wD,OAAK6wD,mBAAmBD,EAAgBtwD,IAAKqwD,EAAgBrwD,KACzD,CACE4L,EAAK4kD,kBAAkB5kD,EAAKC,OAAQykD,EAAiBD,GAAiB,GACtEzkD,EAAK4kD,kBAAkB5kD,EAAKE,OAAQwkD,EAAiBD,GAAiB,IAExE,MAAClgF,OAAWA,GAVlB,mBAAOsgF,EAAP,KAAwBC,EAAxB,KAYA,OACE,eAAC,IAAD,yBAAM1pD,MAAO,CAAExzB,aAAc,SAAcgX,GAA3C,cACE,eAAC,IAAD,CAAMw5B,eAAe,gBAAgB2sC,KAAK,SAASpmE,QAAS,kBAAM6lE,GAAaD,IAAWxjD,EAAE,OAA5F,UACE,eAAC,IAAD,CAAM6W,cAAc,SAApB,UACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,MAA7B,UACE,cAAC,IAAD,CAAoBhb,UAAWA,EAAWC,UAAWA,EAAWC,KAAM,KACtE,cAAC,KAAD,CAAMib,MAAI,EAACO,GAAG,MAAd,SACI1b,GAAcC,EAAf,UAAqDD,EAAUvqB,OAA/D,YAAyEwqB,EAAUxqB,QAAxD,cAAC,IAAD,2BAGhC,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,gBACGkmE,QADH,IACGA,OADH,EACGA,EAAiBrhC,cAAc,QAGnCmhC,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,OAGjCA,GACC,eAAC,IAAD,CAAYv8E,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,QAAxC,UACE,eAAC28E,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUgG,IACpC,eAAC,KAAD,CAAMzc,MAAM,aAAam4B,GAAG,MAA5B,oBACU1b,EAAUvqB,aAGrBo0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMnuC,GAAG,MAAT,gBAAgBmuC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiBzhC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcnpD,KAAK,OAAOlG,SAAUiG,IACpC,eAAC,KAAD,CAAM1c,MAAM,aAAam4B,GAAG,MAA5B,oBACUzb,EAAUxqB,aAGrBq0E,EACC,cAAC,IAAD,UACE,cAAC,KAAD,CAAMpuC,GAAG,MAAT,gBAAgBouC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAiB1hC,cAAc,OAGjD,OAIJ,eAACihC,EAAD,WACE,cAAC,KAAD,CAAM9lE,MAAM,aAAZ,2BACA,cAAC,KAAD,UACG84D,EAAmB,UACsB,SAAnCA,EAAoBjuE,QAAQ,GAAgB,QAAUiuE,EAAoBjuE,QAAQ,GADrE,KAEhB,SAIPq7E,GAAmB3wD,OAAKmiD,YAAYwO,EAAgBrwD,IAAKsB,MACxD,eAAC,IAAD,CAAMkiB,cAAc,SAApB,UACE,cAAC,IAAD,CACEoB,GAAIC,IACJC,GAAE,wBAAmBzR,YAAWzM,GAA9B,YAA4CyM,YAAWxM,IACzDqZ,QAAQ,UACR/sC,MAAM,OACNyuC,GAAG,MALL,oBASA,cAAC,IAAD,CACEgD,GAAIC,IACJC,GAAE,8BAAyBzR,YAAWzM,GAApC,YAAkDyM,YAAWxM,IAC/DqZ,QAAQ,OACRE,UAAW,cAAC,IAAD,CAASj2B,MAAM,YAC1BhX,MAAM,OALR,+C,mSC/OD09E,EAAY,uCAAG,8CAAAhgF,EAAA,6DAAOq0C,EAAP,+BAAe,EAAG2N,EAAlB,+BAAyB,EAAGniD,EAA5B,+BAAoCmtC,IAAcizC,OAAlD,SACwBrhC,IAChDsI,IACAhF,cAFwD,IAAD,whBA2BvD,CAAE7N,QAAO2N,OAAMniD,UA5BS,cACpB0sC,EADoB,yBA8BnBA,EAAS2zC,WA9BU,2CAAH,qDAiCZC,EAAW,uCAAG,WAAOh8D,GAAP,eAAAnkB,EAAA,sEACsB4+C,IAC7CsI,IACAhF,cAFqD,IAAD,gVAqBpD,CAAE/9B,OAtBqB,cACnBooB,EADmB,yBAwBlBA,EAAS6zC,UAxBS,2CAAH,sDA2BXC,EAAQ,uCAAG,WAAOhsC,EAAe2N,EAAcD,GAApC,eAAA/hD,EAAA,sEACoB4+C,IACxCsI,IACAhF,cAFgD,IAAD,kYAoB/C,CAAE7N,QAAO2N,OAAMD,UArBK,cAChBxV,EADgB,yBAuBfA,EAAS+zC,OAvBM,2CAAH,0DA0BRC,EAA2B,uCAAG,WACzCD,EACA96C,GAFyC,qBAAAxlC,EAAA,8DAIrBwlC,EAJqB,qCAILz/B,IAAkB82B,iBAJb,iCAInCnV,EAJmC,KAMnC84D,EAAgBF,EAAM//D,KAAI,SAACkgE,GAAD,cAAW,CACzCn6E,QAASm6E,EAAKC,MACdC,iBAAgB,UAAEF,EAAKG,gBAAP,aAAE,EAAeD,iBACjCE,MAAK,UAAEJ,EAAKG,gBAAP,aAAE,EAAeE,gBATiB,SAWlB1sB,MAAM,GAAD,OAAIpN,IAAJ,WAAkC,CAC5DpN,OAAQ,OACRmnC,QAAS,CACP,eAAgB,oBAElBC,KAAM54D,KAAKC,UAAU,CACnBmd,MAAO9d,EACP44D,MAAOE,MAlB8B,WAWnCj0C,EAXmC,QAsB3B8nB,GAtB2B,uBAuBjC,IAAInyD,MAAMqqC,EAAS00C,YAvBc,yBA0BtB10C,EAAS+nB,OA1Ba,eA0BnCtzD,EA1BmC,yBA2BlCs/E,EAAM9jD,QAAO,SAAC6b,EAAOooC,GAAU,IAAD,EACnC,OAAO,2BACFpoC,GADL,kBAEGooC,EAAKt8D,IAAsD,KAAjD,UAAAnjB,EAAKA,KAAKy/E,EAAKC,MAAMroD,sBAArB,eAAqCk8C,aAEjD,KAhCsC,4CAAH,wDAmC3B2M,EAAW,uCAAG,WAAOC,EAAoB37C,GAA3B,2BAAAxlC,EAAA,6DAA2CohF,EAA3C,+BAA2D,IAA3D,kBAElB,IAAIlpC,SAAQ,SAACmpC,EAASC,GAC3B,IAAIhB,EAAgB,GAEdiB,EAAc,uCAAG,WAAOC,GAAP,eAAAxhF,EAAA,+EAEKqgF,EAASe,EAAeI,EAAS,CAAEpB,SAAUe,IAFlD,OAIM,KAFnBM,EAFa,QAIL54D,OACZw4D,EAAQf,IAERA,EAAK,sBAAOA,GAAP,YAAiBmB,IACtBF,EAAeC,EAAUJ,IARR,gDAWnBE,EAAO,EAAD,IAXa,yDAAH,sDAepBC,EAAe,OApBQ,2CAAH,wDCzHlB5iF,EAA4B,CAChC+iF,sBAAuBz0C,IAAyB4qC,QAChDqI,UAAW,GACXyB,kBAAmB10C,IAAyB4qC,QAC5CyI,MAAO,IAIIsB,EAAiB7lC,YAC5B,wBAD4C,uCAE5C,uCAAA/7C,EAAA,6DAASq0C,EAAT,EAASA,MAAT,IAAgB2N,YAAhB,MAAuB,EAAvB,MAA0BniD,aAA1B,MAAkCmtC,IAAcizC,OAAhD,WACyBD,EAAa3rC,EAAO2N,EAAMniD,GADnD,cACQ0sC,EADR,yBAESA,GAFT,2CAF4C,uDAQjCs1C,EAAgB9lC,YAAmC,uBAAnB,uCAA2C,WAAOolC,GAAP,eAAAnhF,EAAA,sEAC/DmgF,EAAYgB,GADmD,cAChF50C,EADgF,yBAE/EA,GAF+E,2CAA3C,uDAKhCu1C,EAAa/lC,YAGxB,oBAHwC,uCAGnB,iCAAA/7C,EAAA,6DAASmhF,EAAT,EAASA,WAAY37C,EAArB,EAAqBA,MAArB,SACE07C,EAAYC,EAAY37C,GAD1B,cACf+G,EADe,yBAEd,CAAE+zC,MAAO/zC,EAAU40C,eAFL,2CAHmB,uDAQ7BY,EAAchmC,YAIzB,qBAJyC,uCAInB,yCAAA/7C,EAAA,6DAASmhF,EAAT,EAASA,WAAYa,EAArB,EAAqBA,SAAc3nC,EAAnC,EAAmCA,SACnDx6C,EAAQw6C,IACR4nC,EAAgBpiF,EAAMsmC,OAAOm6C,MAAMa,GAFnB,SAGCZ,EAA4B0B,EAAe3tC,OAAO0tC,IAHnD,cAGhBz1C,EAHgB,yBAIf,CAAEniB,QAASmiB,EAAU40C,eAJN,2CAJmB,yDAW9Be,EAAc/lC,YAAY,CACrC7jB,KAAM,SACN35B,eACAy9C,SAAU,GACVK,cAAe,SAACpc,GAEdA,EAAQC,QAAQyhD,EAAY1sD,WAAW,SAACx1B,EAAO2gC,GAC7C,MAAgCA,EAAOC,QAA/B0gD,EAAR,EAAQA,WAAY/2D,EAApB,EAAoBA,QAEhBvqB,EAAMygF,MAAMa,KACdthF,EAAMygF,MAAMa,GAActhF,EAAMygF,MAAMa,GAAY5gE,KAAI,SAACkgE,GACrD,OAAO,2BACFA,GADL,IAEE0B,UAA+B,IAArB/3D,EAAQq2D,EAAKt8D,aAO/Bkc,EAAQC,QAAQshD,EAAexsD,SAAS,SAACv1B,GACvCA,EAAM6hF,sBAAwBz0C,IAAyBkqB,WAEzD92B,EAAQC,QAAQshD,EAAevsD,WAAW,SAACx1B,EAAO2gC,GAChD,IAAM0/C,EAAY1/C,EAAOC,QAAQjE,QAAO,SAAC6b,EAAO+nC,GAC9C,OAAO,2BACF/nC,GADL,kBAEG+nC,EAASj8D,GAAKi8D,MAEhB,IAEHvgF,EAAMqgF,UAAYjV,gBAAM,GAAIprE,EAAMqgF,UAAWA,GAC7CrgF,EAAM6hF,sBAAwBz0C,IAAyBm1C,QAIzD/hD,EAAQC,QAAQuhD,EAAczsD,SAAS,SAACv1B,GACtCA,EAAM6hF,sBAAwBz0C,IAAyBkqB,WAEzD92B,EAAQC,QAAQuhD,EAAcxsD,WAAW,SAACx1B,EAAO2gC,GAC/C3gC,EAAMqgF,UAAU1/C,EAAOC,QAAQtc,IAAMqc,EAAOC,QAC5C5gC,EAAM6hF,sBAAwBz0C,IAAyBm1C,QAIzD/hD,EAAQC,QAAQwhD,EAAW1sD,SAAS,SAACv1B,GACnCA,EAAM8hF,kBAAoB10C,IAAyBkqB,WAErD92B,EAAQC,QAAQwhD,EAAWzsD,WAAW,SAACx1B,EAAO2gC,GAC5C,MAA8BA,EAAOC,QAA7B6/C,EAAR,EAAQA,MAAOa,EAAf,EAAeA,WAEfthF,EAAMygF,MAAN,2BACKzgF,EAAMygF,OADX,kBAEGa,EAAab,IAEhBzgF,EAAM8hF,kBAAoB10C,IAAyBm1C,WAK1CF,MAAf,S,iCCzGA,0GAYa/mC,EAAa,SACxBF,EACAonC,EACA7qC,EACAjN,GAEA,IAAM+3C,EAA0B,IAAI9+E,IAAU6+E,GAAkB5+E,MAAM8mC,GAAe9mC,MAAM27B,KACrFmjD,EAA0B,IAAI/+E,IAAUy3C,GAAmBx3C,MAAM+zC,GACjE3kB,EAAMyvD,EAAwBx/E,IAAIy/E,GAAyB9+E,MAAM,KACvE,OAAOovB,EAAI6sB,UAAY7sB,EAAI2vD,WAAa,KAAO3vD,EAAI7uB,YAUxCy+E,EAAa,SACxBnyB,EACA+R,EACAqgB,EACAC,GACsD,IAAD,EAE/CC,EAD6BvjD,IAAc57B,MAAM6sD,GACL7sD,MAAM4+D,GAAcv/D,IAAI4/E,GAAkBj/E,MAAM,KAC9Fo/E,EAAyB,KAK7B,OAJKD,EAAeljC,SAAWkjC,EAAeJ,aAC5CK,EAAyBD,EAAe5+E,YAGnC,CAAE4+E,eAAgBC,EAAwBC,aAD/B,UAAGC,EAAM,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAahT,4BAAvB,QAA+C,K,8JCtC7DnjB,EAAkB/mC,cAEXu9D,EAA4B,SAACC,GACxC,kBAAmDA,EAAnD,GAAOC,EAAP,KAAkBC,EAAlB,KAAiCC,EAAjC,KAEA,OAAa,OAATF,QAAS,IAATA,OAAA,EAAAA,EAAWr6D,QAAS,EACfq6D,EAAU3iE,KAAI,SAAC8iE,EAAUvsC,GAC9B,MAAO,CACL3yB,GAAIk/D,EAAS1hF,WACb0C,OAAQ8+E,EAAcrsC,GAAOn1C,WAC7B0wC,OAAQ+wC,EAAetsC,OAItB,IAGIwsC,EAAwB,uCAAG,WACtC3kE,EACA+tC,EACAyc,EACAoa,GAJsC,eAAAvjF,EAAA,+EAOjBwsD,EAAgB82B,yBAAyB3kE,EAAS+tC,EAAWyc,EAAQoa,GAPpD,cAO9BviF,EAP8B,yBAQ7BgiF,EAA0BhiF,IARG,uCAUpCwe,QAAQC,MAAM,2BAAd,MAVoC,kBAW7B,MAX6B,yDAAH,4DAexB+jE,EAA2B,uCAAG,WAAO7kE,EAAiB+tC,GAAxB,qBAAA1sD,EAAA,sDACrCmpE,EAAS,EACTsa,EAActlB,IACZulB,EAAa,GAHsB,UAKlCD,IAAgBtlB,IALkB,iCAOhBmlB,EAAyB3kE,EAAS+tC,EAAWyc,EAAQhL,KAPrC,OAOjC5xB,EAPiC,OAQvC48B,GAAUhL,IACVslB,EAAcl3C,EAAS1jB,OACvB66D,EAAWz/C,KAAX,MAAAy/C,EAAU,YAASn3C,IAVoB,gDAalCm3C,GAbkC,4CAAH,wDAgB3BjH,EAAiC,uCAAG,WAC/CkH,EACAhlE,GAF+C,qBAAA3e,EAAA,sDAIzC4jF,EAA2B,GACxBlrD,EAAI,EALkC,YAK/BA,EAAIirD,EAAW96D,QALgB,wBAMvCgmC,EAAU80B,EAAWjrD,GANkB,SAQf8qD,EAA4B7kE,EAASkwC,GARtB,OAQvCg1B,EARuC,OAS7CD,EAAyB3/C,KAAK,CAC5B4qB,UACAK,YAAa20B,IAX8B,OAKRnrD,GAAK,EALG,gDAcxCkrD,GAdwC,4CAAH,yD,+BCrD9C,aAGM9Q,EAAUgR,cAEDhR,O,6BCLf,gFAcaxxC,EAAiBn+B,YAO3B,+BACU2+B,EAAuB3+B,YAAmC,qCACpCA,YAIhC,oCAC+BA,YAI/B,oC,0LCjBU4gF,EAA0B,uCAAG,WAAOplE,GAAP,iBAAA3e,EAAA,+EAEf4+C,kBACrBkI,IACA5E,cAF6B,IAAD,wPAa5B,CACEvjC,QAASA,EAAQ0Z,gBAhBiB,uBAE9BY,EAF8B,EAE9BA,KAF8B,kBAoB/BA,EAAKg7B,QApB0B,yDAsB/B,MAtB+B,yDAAH,sDA6B1B+vB,EAAe,uCAAG,WAAOrlE,GAAP,eAAA3e,EAAA,sEACK+jF,EAA2BplE,GADhC,UACvBslE,EADuB,gDAIpB,IAJoB,gCAOtBA,EAAoBznD,QAAO,SAAC6b,EAAO6rC,GACxC,IAAK5Z,IAAY7pE,IAAIyjF,EAAU1tB,YAC7B,OAAOne,EAGT,IAAMw5B,EAAevH,IAAYpqE,IAAIgkF,EAAU1tB,YAE/C,MAAM,GAAN,mBACKne,GADL,CAEE,CACEl0B,GAAI+/D,EAAU1tB,WACdvoC,KAAM4jD,EAAa5jD,KACnB3nB,QAAS49E,EAAU//D,GACnBysB,MAAOqgC,YAAoBY,GAC3BjY,YAAasX,YAA0BW,GACvCxH,MAAOwH,EAAaxH,MACpBpW,OAAQ3f,OAAO4vC,EAAUjwB,aAG5B,KA1B0B,2CAAH,sDCpCfkwB,EAAmBhoC,YAAY,CAC1C7jB,KAAM,eACN35B,aANqC,CACrCqC,KAAM,IAMNo7C,SAAU,CACRgoC,eAAgB,SAACvkF,EAAO2gC,GACtB3gC,EAAMmB,KAAKijC,KAAKzD,EAAOC,UAEzB4jD,gBAAiB,SAACxkF,EAAO2gC,GACvB3gC,EAAMmB,KAAN,sBAAiBnB,EAAMmB,MAAvB,YAAgCw/B,EAAOC,WAEzC6jD,gBAAiB,SAACzkF,EAAO2gC,GACvB3gC,EAAMmB,KAAOw/B,EAAOC,SAEtB8jD,kBAAmB,SAAC1kF,GAClBA,EAAMmB,KAAO,OAMZ,EAAgFmjF,EAAiBznC,QAAzF0nC,EAAR,EAAQA,eAAiCE,GAAzC,EAAwBD,gBAAxB,EAAyCC,iBAGnCE,GAHN,EAA0DD,kBAGhC,SAAC5lE,GAAD,8CAAqB,WAAOuB,GAAP,eAAAlgB,EAAA,+EAEvBgkF,EAAgBrlE,GAFO,OAE5C2mB,EAF4C,OAGlDplB,EAASokE,EAAgBh/C,IAHyB,gDAKlD9lB,QAAQC,MAAR,MALkD,yDAArB,wDASlB0kE,MAAf,S,iECnCevxB,IAFO,SAACnyC,GAAD,OAAiBA,GAHN,KAGyCA,GAF3C,M,oJCSzBgkE,EAAwC,SAC5CC,EACA5H,GAGA,GAA6B,IAAzBA,EAAcj0D,OAChB,OAAO67D,EAASnkE,KAAI,SAACu7D,GACnB,MAAO,CACLlvB,QAASkvB,EAAUlvB,QACnBO,YAAa2uB,EAAU3uB,YAAYxrD,WACnCgrD,UAAWmvB,EAAUnvB,UACrBta,OAAQypC,EAAUzpC,OAClBluB,GAAI23D,EAAUpvB,UAAU/qD,WACxBgjF,YAAa7I,EAAUjvB,kBACvBovB,aAAc,GACd2I,WAAY,GACZC,eAAgB,OAMtB,IAAMC,EAA0BJ,EAASnkE,KAAI,SAACwkE,GAC5C,IAAMC,EAAiBlI,EAAc77D,MAAK,SAACgkE,GAAD,OAAwBA,EAAmB9gE,KAAO4gE,EAAcr4B,aAC1G,MAAO,CACLE,QAASm4B,EAAcn4B,QACvBO,YAAa43B,EAAc53B,YAAYxrD,WACvCgrD,UAAWo4B,EAAcp4B,UACzBta,OAAQ0yC,EAAc1yC,OACtBluB,GAAI4gE,EAAcr4B,UAClBi4B,YAAW,OAAEK,QAAF,IAAEA,OAAF,EAAEA,EAAgBL,YAC7B1I,aAAY,OAAE+I,QAAF,IAAEA,OAAF,EAAEA,EAAgB/I,aAC9B2I,WAAU,OAAEI,QAAF,IAAEA,OAAF,EAAEA,EAAgBJ,WAC5BC,eAAc,OAAEG,QAAF,IAAEA,OAAF,EAAEA,EAAgBH,mBAKpC,EAAgCC,EAAwBpvC,OAAO,GAAxDwvC,EAAP,oBACMC,EAA6BrI,EAChCv8D,KAAI,SAAC27D,GAAD,cAAgBA,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAY/3D,MAChC+C,QAFgC,OAExBg+D,QAFwB,IAExBA,OAFwB,EAExBA,EAAuB/gE,IAE5BihE,EAA0BtI,EAAgBA,EAAcuI,OAAOF,EAA6B,GAAK,GAEvG,MADoB,sBAAOL,GAAP,YAAmCM,KAI5CE,EAAiB,uCAAG,8CAAAtlF,EAAA,6DAC/Bq0C,EAD+B,+BArDS,IAuDxC2N,EAF+B,+BAExB,EACPD,EAH+B,+BAGP,GAHO,kBAMNnD,kBACrBmI,IACA7E,cAF6B,IAAD,+bAiB5B,CAAEF,OAAM3N,QAAO0N,UAvBY,cAMvBxV,EANuB,yBAyBtBA,EAASwxC,WAzBa,yCA2B7Bv+D,QAAQC,MAAR,MA3B6B,kBA4BtB,IA5BsB,0DAAH,qDAgCxBq+D,EAAgB,uCAAG,WAAOvvB,GAAP,qBAAAvuD,EAAA,6DACjBulF,EAAkB92B,YAAiBF,GADlB,SAEAL,YAAuBq3B,GAFvB,cAEjBb,EAFiB,gBAGKY,IAHL,cAGjBxI,EAHiB,OAIjB0I,EAAaf,EAAsCC,EAAU5H,GAJ5C,kBAKhB0I,GALgB,2CAAH,sDAQP1H,O,iGC9FT2H,EAAiBrjF,IAAOU,IAAV,8RAOJ,qBAAG6zB,MAAkBwxC,QAAQC,SACvB,qBAAGzxC,MAAkBG,OAAO4uD,kBAElC,qBAAG/uD,MAAkBG,OAAOoiC,SAItCysB,EAAwBvjF,IAAOU,IAAV,wTAKX,qBAAG6zB,MAAkBG,OAAOoiC,SAC/B,qBAAGviC,MAAkBivD,SAASvuD,YAOvC,qBAAGV,MAAkBurC,aAAahN,MAKhC2wB,EAAoBzjF,IAAOU,IAAV,4VAEZ,qBAAGR,SAEE,qBAAGq0B,MAAkBG,OAAOoiC,SAMxC,qBAAGviC,MAAkBurC,aAAahN,MAIlC,SAACv7C,GAAD,OACAA,EAAMmsE,QACNC,YADA,+XAEIN,GAC2B,qBAAG9uD,MAAkBG,OAAO4uD,kBACzC,qBAAG/uD,MAAkBkB,QAAQmuD,YAI3CL,GAIoB,qBAAGhvD,MAAkBG,OAAO4uD,kBAGlC,qBAAG/uD,MAAkBkB,QAAQmuD,gBAY7CC,EAAe7jF,IAAO8jF,GAAV,qGAIL,qBAAGvvD,MAAkBivD,SAASvuD,YAGrC8uD,EAAW/jF,IAAOgkF,GAAV,+GAII,qBAAGzvD,MAAkBG,OAAO4uD,kBA0E/BW,IA5DsC,SAAC,GAA2B,IAAzB7hF,EAAwB,EAAxBA,QAASmtC,EAAe,EAAfA,SACzD20C,EAAexgF,iBAAO,MACtBygF,EAAczgF,iBAAO,MAC3B,EAA4BrG,oBAAS,GAArC,mBAAOqmF,EAAP,KAAeU,EAAf,KACA,EAAsD/mF,mBAAS,GAA/D,mBAAOgnF,EAAP,KAA4BC,EAA5B,KACA,EAA0CjnF,mBAAS,CAAE6C,MAAO,EAAG20E,OAAQ,IAAvE,mBAAO0P,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,SAAC5f,GAChBuf,GAAWV,GACX7e,EAAM6f,mBA4BR,OAhBA/mF,qBAAU,WACR6mF,EAAiB,CACftkF,MAAOikF,EAAYrgF,QAAQ6gF,YAC3B9P,OAAQsP,EAAYrgF,QAAQ8gF,eAG9B,IAAMC,EAAqB,WACzBT,GAAU,IAIZ,OADAvW,SAASE,iBAAiB,QAAS8W,GAC5B,WACLhX,SAASG,oBAAoB,QAAS6W,MAEvC,IAGD,eAACpB,EAAD,yBAAmBC,OAAQA,EAAQ/tD,IAAKuuD,GAAkBK,GAA1D,cAC2B,IAAxBA,EAAcrkF,OACb,cAACmjF,EAAD,CAAgB/rE,QAASmtE,EAAzB,SACE,cAAC,KAAD,UAAOriF,EAAQiiF,GAAqBje,UAGxC,cAAC,IAAD,CAAmBlvD,MAAM,OAAOI,QAASmtE,IACzC,cAAClB,EAAD,UACE,cAACM,EAAD,CAAcluD,IAAKwuD,EAAnB,SACG/hF,EAAQ+b,KAAI,SAAC2mE,EAAQpwC,GAAT,OACXA,IAAU2vC,EACR,cAACN,EAAD,CAAUzsE,SArCGytE,EAqCsBrwC,EArCI,WACjD4vC,EAAuBS,GACvBX,GAAU,GAEN70C,GACFA,EAASntC,EAAQ2iF,MAgCT,SACE,cAAC,KAAD,UAAOD,EAAO1e,SADgC0e,EAAO1e,OAGrD,KAxCU,IAAC2e,e,kTCtGrBC,EAAehlF,IAAOU,IAAV,0MAQL,qBAAGukF,IAAiB,MAAQ,OAGnCC,EAAYllF,YAAOmlF,IAAPnlF,CAAH,mGAIH,qBAAGu0B,MAAkBG,OAAOlN,WAGlC49D,EAAeplF,IAAOU,IAAV,0KASH,SAAS2kF,EAAT,GAYX,IAAD,IAXD5lE,EAWC,EAXDA,MACAsU,EAUC,EAVDA,MACAkxD,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAGF4uE,EAAoB5oC,cACpBoN,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MAGjE0yC,EAAUp/C,YAAoB3mB,GAC9BkY,EAAWmO,YAAiBrmB,GAElC,OACE,eAACulE,EAAD,CAAcjxD,MAAOA,EAArB,UACE,cAACD,EAAA,EAAD,CAAcnG,SAAUlO,EAAOoU,KAAK,OAAOE,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYtkF,IAAI,MAAMozB,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOxlE,EAAMrW,SACb,cAAC,KAAD,CAAM8N,MAAM,eAAem4B,GAAG,MAA9B,SACE,cAAC+1C,EAAD,CAAc52C,MAAO/uB,EAAMyW,KAA3B,SAAkCzW,EAAMyW,YAG3C4c,GAAQA,EAAKL,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMqjB,OAAK,EAAC1oB,GAAG,MAAMl2B,MAAM,aAA3B,UACGxX,EAAE,OADL,IACcozC,EAAK5c,QAEnB,cAAC,IAAD,CAAUuc,QAASK,EAAKL,QAAS5e,KAAK,eAI1C8D,GAAa6tD,EAab,eAAC,IAAD,CAAUzxD,MAAO,CAAEihD,SAAU,eAA7B,UACE,cAACkQ,EAAD,IACA,cAAC,KAAD,CAAMhuE,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEhX,MAAM,cACNoX,QAAS,WACHiuE,GACFA,EAAe9lE,GAEjB6lE,KANJ,SASG5lF,EAAE,eC3Eb,SAASgmF,EAAY/3D,GACnB,OAAOA,aAAoBllB,IAAQklB,EAASzpB,QAAUypB,IAAaC,IAAQ,QAAU,GAGvF,IAAM+3D,EAAoB3lF,YAAO4lF,KAAP5lF,CAAH,yHAOjB6lF,EAAkB7lF,IAAOU,IAAV,gIAQrB,SAASuW,EAAT,GAA4D,IAAzCtV,EAAwC,EAAxCA,QACjB,OAAO,cAACgkF,EAAD,CAAmBn3C,MAAO7sC,EAAQozE,UAAlC,SAA8CpzE,EAAQo6C,cAAc,KAG7E,IAAM+pC,EAAW9lF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG0uE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGn6C,EAAH,EAAGA,MAAH,SAAUm6C,UAA4Bn6C,EAAMG,OAAOC,cAE9D,gBAAG+5C,EAAH,EAAGA,SAAUlJ,EAAb,EAAaA,SAAb,OAA6BkJ,GAAYlJ,EAAW,GAAM,KAGvE,SAASugB,EAAT,GAYI,IAXFp4D,EAWC,EAXDA,SACAq4D,EAUC,EAVDA,SACAC,EASC,EATDA,WACAC,EAQC,EARDA,cACAnyD,EAOC,EAPDA,MAQQxX,EAAYnZ,cAAZmZ,QACF5d,EAAM+mF,EAAY/3D,GAClBw4D,EAAoB5gD,cACpB6gD,EAAmB34D,YAAc04D,EAAmBx4D,GACpD04D,EAAcjgD,YAAoBzY,GAClChsB,EAAU6iD,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWywB,GAGzD,OACE,eAACm4D,EAAD,CACE/xD,MAAOA,EACPizC,UAAS,qBAAgBroE,GACzB2Y,QAAS,kBAAO2uE,EAAa,KAAOD,KACpCtX,SAAUuX,EACVzgB,SAAU0gB,EALZ,UAOE,cAAC,IAAD,CAAcv4D,SAAUA,EAAUkG,KAAK,SACvC,eAACxrB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMymC,MAAI,EAAV,SAAYnhB,EAASvkB,SACrB,eAAC,KAAD,CAAM8N,MAAM,aAAa4+C,OAAK,EAACwwB,UAAQ,EAAC53C,SAAS,QAAjD,WACI03C,GAAoBC,GAAe,uBADvC,IAC2D14D,EAASuI,WAGtE,cAAC,IAAD,CAAUnC,MAAO,CAAEwyD,YAAa,YAAhC,SACG5kF,EAAU,cAACsV,EAAD,CAAStV,QAASA,IAAc4a,EAAU,cAAC4zB,EAAA,EAAD,IAAmB,UAMjE,SAASq2C,EAAT,GAsBX,IArBF3R,EAqBC,EArBDA,OACA1wB,EAoBC,EApBDA,WACAwiB,EAmBC,EAnBDA,iBACAN,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAigB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACApB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAoB,EAYC,EAZDA,WAaMC,EAAqCpmE,mBAAQ,WACjD,IAAIqmE,EAAsCH,EAAO,CAAII,IAASl5D,OAAb,mBAAuBu2B,IAAcA,EAItF,YAHmBjnD,IAAfypF,IACFE,EAAS,sBAAOA,EAAUvzC,MAAM,EAAGqzC,IAA1B,MAAuCzpF,GAAvC,YAAqD2pF,EAAUvzC,MAAMqzC,EAAYE,EAAUpgE,WAE/FogE,IACN,CAACF,EAAYxiC,EAAYuiC,IAEpBnjF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAEF+lC,EAEFD,cAEEzlC,EAAMrB,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAM81C,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MACRpG,EAAqB/uB,EAAK81C,GAC1BuxC,EAAa7/D,QAAQugD,GAAoBtgC,YAAesgC,EAAkBh5C,IAC1Eu4D,EAAgB9/D,QAAQogD,GAAiBngC,YAAemgC,EAAe74C,IAGvElO,EAAQ4oB,YAAgB1a,EAAUpqB,GAElCwjF,EAAathD,GAAkBhmB,GAASzgB,OAAOC,KAAKwmC,GAAgB7D,SAASniB,EAAMvb,SAEzF,OAAIwwC,IAAUiyC,GAAe/nF,EAkBzBmoF,GAActnE,EAEd,cAAC4lE,EAAD,CAAWtxD,MAAOA,EAAOtU,MAAOA,EAAO6lE,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACEhyD,MAAOA,EACPpG,SAAUA,EACVs4D,WAAYA,EACZD,SAlCiB,kBAAM3f,EAAiB14C,IAmCxCu4D,cAAeA,IA3Bf,cAACL,EAAD,CAAiB9xD,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe1zB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMu1D,OAAK,EAAX,SAAap2D,EAAE,gDACf,cAACy1B,EAAA,EAAD,CACEC,KAAM11B,EACJ,sGAEF2vC,GAAG,iBAuBjB,CACE9rC,EACAkiC,EACA4gC,EACAG,EACAG,EACA4e,EACAD,EACAqB,EACAjnF,IAIEsnF,EAAUtoF,uBAAY,SAACg2C,EAAe91C,GAAhB,OAA8B8mF,EAAY9mF,EAAK81C,MAAS,IAEpF,OACE,cAAC,IAAD,CACEmgC,OAAQA,EACRl/C,IAAK8wD,EACLvmF,MAAM,OACN0mF,SAAUA,EACVK,UAAWL,EAASngE,OACpBygE,SAAU,GACVF,QAASA,EAPX,SASGjnF,I,aC7JQonF,MAXf,SAA4BvrC,GAC1B,IAAMiI,EAAWY,cACX2iC,EAAa5mE,mBAAQ,kBAxB7B,SAA4BqjC,GAG1B,OAAO,SAAoB5qB,EAAeC,GAKxC,IArBuBmuD,EAAwBC,EAwBzCC,GAxBiBF,EAqBNxjC,EAAS5qB,EAAO/0B,SArBcojF,EAsB9BzjC,EAAS3qB,EAAOh1B,SArB/BmjF,GAAYC,EACPD,EAASzY,YAAY0Y,IAAa,EAAID,EAAS3pB,QAAQ4pB,GAAY,EAAI,EAE5ED,GAAYA,EAASzY,YAAY,MAC3B,EAEN0Y,GAAYA,EAAS1Y,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB2Y,EAA0BA,EAE1BtuD,EAAO7vB,QAAU8vB,EAAO9vB,OAEnB6vB,EAAO7vB,OAAO6sB,cAAgBiD,EAAO9vB,OAAO6sB,eAAiB,EAAI,EAEnEgD,EAAO7vB,QAAc8vB,EAAO9vB,QAAX,EAAyB,GAMlBo+E,CAAkB,OAAC3jC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOrjC,mBAAQ,WACb,OAAIo7B,EACK,SAAC3iB,EAAeC,GAAhB,OAAgE,EAA9BkuD,EAAWnuD,EAAQC,IAEvDkuD,IACN,CAACxrC,EAAUwrC,KCtBVK,EAAY,IAAIC,MAAM,YA+IbC,MA7If,YAMyB,IALvBhhB,EAKsB,EALtBA,iBACAN,EAIsB,EAJtBA,iBACAO,EAGsB,EAHtBA,sBACA0e,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ7lF,EAAMC,cAAND,EAIFkoF,GAHcxkF,cAAZG,QAGUG,oBAElB,EAAsCrG,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACMC,EAAiB38C,YAAYlF,EAAa,KAEhD,EAA4B5oC,oBAAkB,GAAvC0qF,EAAP,oBAEMx0C,EAAYla,cAGZ2uD,EAAclhD,YAASghD,GACvBG,EAAqB7hD,YAAoB4hD,GAE/C,EAAoBrxD,cAAbC,EAAP,oBAEM8vD,EAAmBlmE,mBAAQ,WAC/B,IAAMyhB,EAAI6lD,EAAe7xD,cAAc8xC,OACvC,MAAa,KAAN9lC,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAAC6lD,IAEEI,EAAkBf,EAAmBY,GAErCI,EAA0B3nE,mBAAQ,WACtC,OAAO0lB,YAAalnC,OAAOmnC,OAAOoN,GAAYu0C,KAC7C,CAACv0C,EAAWu0C,IAETM,EAAwB5nE,mBAAQ,WACpC,OAAO2nE,EAAe7hE,KAAK4hE,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB1gB,YAAuBygB,EAAcN,GAE5D3Z,EAAuBzvE,uBAC3B,SAACivB,GACC04C,EAAiB14C,GACbiJ,GACF6wD,EAAUa,SAGd,CAAC1xD,EAAWyvC,IAIRkiB,EAAW7kF,mBAEjB/F,qBAAU,WACR4qF,EAASzkF,QAAQ0kF,UAChB,IAEH,IAAMC,EAAc/pF,uBAAY,SAACmmE,GAAW,IAAD,EACnC/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,GACnC,UAAA8wB,EAAU9jF,eAAV,SAAmB6kF,SAAS,KAC3B,IAEGC,EAAclqF,uBAClB,SAACytE,GACC,GAAc,UAAVA,EAAExtE,IAEJ,GAAU,QADAmpF,EAAe7xD,cAAc8xC,OAErCoG,EAAqBvgD,UAChB,GAAIy6D,EAAqB5hE,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA4hE,EAAqB,GAAGj/E,cAAxB,eAAgC6sB,iBAAkB6xD,EAAe/f,OAAO9xC,eACxC,IAAhCoyD,EAAqB5hE,QAErB0nD,EAAqBka,EAAqB,OAKlD,CAACA,EAAsBla,EAAsB2Z,IAIzCriD,EAAiBO,YAAuB8hD,GACxCe,EAAkClhB,YAAuBliC,EAAgBqiD,GAE/E,OACE,mCACE,gCACE,cAAC,IAAD,CAAYnnF,IAAI,OAAhB,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACH6iD,YAAallE,EAAE,gCACfsxC,MAAM,KACNi0B,aAAa,MACbxlE,MAAOwmC,EACPtQ,IAAK4yD,EACLh5C,SAAUk5C,EACVK,UAAWF,QAKhBZ,IAAgBC,EACf,cAAC5/E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,SAAUw0E,OAAQ,QAA5C,SACE,cAACwQ,EAAD,CAAW5lE,MAAOuoE,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsB5hE,QAAS,IAA2B,OAAtBoiE,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBpiE,QAAS,EACvE,cAAC,IAAD,CAAKgN,OAAO,aAAZ,SACE,cAAC+yD,EAAD,CACE3R,OAAQ,IACR6R,QAASA,EACTviC,WACE0kC,EAAyBR,EAAqBnuD,OAAO2uD,GAA0BR,EAEjF1B,WAAYlhD,GAAkB4iD,EAAuBA,EAAqB5hE,YAASvpB,EACnFmpE,iBAAkB8H,EAClB3H,cAAeI,EACfD,iBAAkBA,EAClB8f,aAAcmB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACl9E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,OAAQw0E,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM39D,MAAM,aAAamlD,UAAU,SAAS1tB,GAAG,OAA/C,SACGjvC,EAAE,+B,qGC3GFqjE,I,SAAAA,GAzCf,WACE,IAAQz/D,EAAY0/D,cAAZ1/D,QACAC,EAAYH,cAAZG,QACFua,EAAWgI,eAEXm9C,EAAcvkE,uBAClB,SAACstC,GACC,GAAIzoC,IAAYY,IAAQC,QACtB,MAAM,IAAItE,MAAM,4CAElB,OAAOk6D,aAAsBhuB,EAAS1oC,KAExC,CAACC,EAASD,IAIZ,OAAO5E,sBAAW,yCAChB,WAAOyiC,GAAP,8BAAAvjC,EAAA,6DAAwBslE,IAAxB,iCACQ7hC,EAAY8hC,eACdD,GACFplD,EAASiV,KAAeC,QAAQ,CAAEqO,YAAWC,IAAKH,KAHtD,kBAKS44B,aAAa54B,EAAS8hC,GAC1B/4B,MAAK,SAAC3I,GAIL,OAHI2hC,GACFplD,EAASiV,KAAeE,UAAU,CAAEqO,IAAKH,EAASI,YAAWF,eAExDE,KAERwI,OAAM,SAAC1sB,GAKN,MAJAD,QAAQC,MAAR,oCAA2C8jB,GAAW9jB,GAClD6lD,GACFplD,EAASiV,KAAeG,SAAS,CAAEoO,IAAKH,EAASE,YAAWS,aAAczkB,EAAM47C,WAE5E57C,MAjBZ,2CADgB,sDAqBhB,CAACS,EAAUmlD,K,mBCxBf,IAAMzvC,GAAUxzB,YAAOqI,IAAPrI,CAAH,+DAKP+oF,GAAa/oF,YAAOD,IAAPC,CAAH,4LACM,gBAAGgpF,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAAM,UAAMz0D,EAAMG,OAAOlN,QAAnB,MAAiC,iBAEnE,gBAAGwhE,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAASz0D,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOu0D,YAOvF,SAASC,GAAiB/nD,GACxB,MAAM,YAAN,OAAmBA,EAAQ7hC,QAAQ,MAAO,MAG5C,IAAM6pF,GAAU9uD,gBAAK,YAAoD,IAvB/CoH,EAuBcN,EAAgC,EAAhCA,QAChCioD,EAAa1qE,cAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SACtFpjB,EAAWgI,eACjB,EAAkDsjE,EAAWjoD,GAA5C2R,EAAjB,EAAQhvC,QAA8BkvB,EAAtC,EAAuBgO,cAEjBrJ,EAAWqc,YAAgB7S,GAEzBzhC,EAAMC,cAAND,EAEF2pF,EAAyB3qF,uBAAY,WACpCs0B,GACLlV,EAASyV,aAAiB4N,MACzB,CAACrjB,EAAUqjB,EAASnO,IAEjBs2D,EAAmB5qF,uBAAY,WAE/BkwC,OAAO26C,QAAQ,sDACjBzrE,EAASsV,aAAW+N,MAErB,CAACrjB,EAAUqjB,IAERqoD,EAAmB9qF,uBAAY,WACnCof,EAASuV,aAAW8N,MACnB,CAACrjB,EAAUqjB,IAERsoD,EAAoB/qF,uBAAY,WACpCof,EAASwV,aAAY6N,MACpB,CAACrjB,EAAUqjB,IAEd,EAA+C9L,aAC7C,gCACE,cAAC,KAAD,UAAOyd,IAtDarR,EAsDYqR,EAAKrR,QArDnC,IAAN,OAAWA,EAAQioD,MAAnB,YAA4BjoD,EAAQkoD,MAApC,YAA6CloD,EAAQmoD,UAsDjD,cAAC,KAAD,CAAc/zB,UAAQ,EAAC3lB,KAAI,gDAA2C/O,GAAtE,SACGzhC,EAAE,SAEL,cAAC,IAAD,CAAQutC,QAAQ,SAAS+D,MAAM,KAAK15B,QAASgyE,EAAkB5a,SAA6C,IAAnC1vE,OAAOC,KAAKmqF,GAAY3iE,OAAjG,SACG/mB,EAAE,YAEJszB,GACC,cAAC,IAAD,CAAQia,QAAQ,OAAO31B,QAAS+xE,EAAwBt1D,MAAO,CAAEgb,SAAU,QAA3E,SACGrvC,EAAE,oBAIT,CAAE41B,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAKod,EAGH,eAACi2C,GAAD,CAAYC,OAAQrxD,EAAwB5V,GAAImnE,GAAiB/nD,GAAjE,UACGzL,GAAkBD,EAClBqd,EAAKL,QACJ,cAAC,IAAD,CAAU5e,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUye,QAASK,EAAKL,QAASiV,IAAG,UAAK5U,EAAK5c,KAAV,gBAEhF,qBAAKnC,MAAO,CAAE7zB,MAAO,OAAQ20E,OAAQ,OAAQ7gD,YAAa,UAE5D,eAAC3rB,EAAA,EAAD,CAAQ0rB,MAAO,CAAE81D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/6C,MAAI,EAAV,SAAYgE,EAAK5c,SAEnB,eAAC,IAAD,CAAUkZ,GAAG,MAAb,UACE,eAAC,KAAD,CAAML,SAAS,OAAO3B,GAAG,MAAM08C,cAAc,YAA7C,UACGh3C,EAAKxuC,OAAOmiB,OADf,IACwB/mB,EAAE,aAE1B,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAASte,MAAM,OAAOhX,MAAM,iBAIlC,cAAC,KAAD,CACEovC,QAAS3X,EACT4X,SAAU,WACJ5X,EACF8xD,IAEAD,SA1B2BroD,GAHnB,QAqCd4oD,GAAgB/pF,IAAOU,IAAV,sFAqKJspF,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC9sF,mBAAiB,IAAzD,mBAAO+sF,EAAP,KAAqBC,EAArB,KAEQ3qF,EAAMC,cAAND,EAEF6kC,EAAQyO,cAGR5R,EAAiBsS,cACvB,EAAoCr2C,qBAApC,mBAAOitF,EAAP,KAAmBC,EAAnB,KACA5sF,qBAAU,YACH2sF,GAAclpD,GACjBmpD,EAAcnpD,KAEf,CAACkpD,EAAYlpD,IAEhB,IAAMqnD,EAAc/pF,uBAAY,SAACytE,GAC/Bke,EAAgBle,EAAEpH,OAAOtlE,SACxB,IAEG+qF,EAAYznB,KAEZ0nB,EAAoBjqE,mBAAQ,WAChC,OAAOkmC,aAAU0jC,GAAc3jE,OAAS,GAAKL,QAAQ6gC,aAAgBmjC,MACpE,CAACA,IAEEM,EAAclqE,mBAAQ,WAE1B,OADiBxhB,OAAOC,KAAKslC,GAE1Bre,QAAO,SAACib,GAEP,OAAO/a,QAAQme,EAAMpD,GAASr9B,WAAamwB,KAAsB2N,SAAST,MAE3E7a,MAAK,SAACqkE,EAAIC,GACT,IAAiBC,EAAOtmD,EAAMomD,GAAtB7mF,QACSgnF,EAAOvmD,EAAMqmD,GAAtB9mF,QAGR,OAAc,OAAVwmF,QAAU,IAAVA,OAAA,EAAAA,EAAY1oD,SAAS+oD,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAASgpD,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAAS+oD,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY1oD,SAASgpD,IAC7C,EAGLC,GAAMC,EACDD,EAAG30D,KAAKD,cAAgB60D,EAAG50D,KAAKD,eAClC,EACD40D,EAAG30D,KAAKD,gBAAkB60D,EAAG50D,KAAKD,cAClC,EACA,EAEF40D,GAAY,EACZC,EAAW,EACR,OAEV,CAACvmD,EAAO+lD,IAGX,EAAgCjtF,qBAAhC,mBAAO0tF,EAAP,KAAiBC,EAAjB,KACA,EAAgC3tF,qBAAhC,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEAvtF,qBAAU,WAAM,8CACd,uBAAAC,EAAA,sDACE4sF,EAAUJ,GAAc,GACrBlgD,MAAK,SAAC4I,GAAD,OAAUk4C,EAAYl4C,MAC3B/I,OAAM,kBAAMmhD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAY9tF,GACS,KAAjBktF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYhuF,KAEb,CAACstF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAapsF,OAAOC,KAAKslC,GAAO3C,SAASwoD,GAGzCiB,EAAe3sF,uBAAY,WAC1BqsF,IACLb,EAAca,GACdd,EAAap/D,KAAkBygE,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACv3D,GAAD,WACE,eAAC,IAAD,CAAY7yB,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,iBACHivB,MAAM,KACN4zB,YAAallE,EAAE,mCACfD,MAAO2qF,EACP76C,SAAUk5C,MAGbwC,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAYh3D,MAAO,CAAEqlD,WAAY,GAAjC,SACE,cAAC3kD,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG0qF,EAASt4C,SAAW,cAAC,IAAD,CAAUA,QAASs4C,EAASt4C,QAAS5e,KAAK,SAC/D,eAAC,IAAD,CAAYlzB,IAAI,MAAMozB,MAAO,CAAE03D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAM38C,MAAI,EAAV,SAAYi8C,EAAS70D,OACrB,eAAC,KAAD,CAAMhf,MAAM,aAAa4+C,OAAK,EAACg0B,cAAc,YAA7C,UACGiB,EAASzmF,OAAOmiB,OADnB,IAC4B/mB,EAAE,mBAIjC0rF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAelrF,MAAM,OAAOktC,GAAG,SAC/B,cAAC,KAAD,UAAO1tC,EAAE,eAGX,cAAC,IAAD,CAAQQ,MAAM,cAAcoX,QAAS+zE,EAArC,SACG3rF,EAAE,mBAOf,cAACqqF,GAAD,UACE,cAAC,IAAD,CAAYppF,IAAI,KAAhB,SACG+pF,EAAYvsE,KAAI,SAACgjB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,oBC7QpB3N,GAAUxzB,IAAOU,IAAV,4HAOPgrF,GAAS1rF,IAAOU,IAAV,gKASG,SAASirF,GAAT,GAMX,IALF1B,EAKC,EALDA,aACA1E,EAIC,EAJDA,eAKQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KAGMU,EAAW7kF,mBACX+kF,EAAc/pF,uBAAY,SAACmmE,GAC/B,IAAM/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,KAClC,IAGGkxB,EAAclhD,YAASb,GAGvBf,EAA2BC,eAC3BymD,EAAcnzD,eAEdozD,EAAkBntF,uBAAY,WAC9B6E,GAAW2hC,GACbA,EAAgB/mB,KAAI,SAACsB,GACnB,OAAOmsE,EAAYroF,EAASkc,EAAMvb,cAGrC,CAAC0nF,EAAa1mD,EAAiB3hC,IAE5Bg+B,EAAY/gB,mBAAQ,WACxB,OACEjd,GACA2hC,EAAgB/mB,KAAI,SAACsB,GAAD,OAClB,eAAC,IAAD,CAAgCvf,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcytB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,CAAMgiC,UAAQ,EAAC3lB,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAU2T,MAAM,aAAam4B,GAAG,OAA9F,SACG5vB,EAAMrW,YAGX,eAAC,IAAD,WACE,cAAC,KAAD,CAAY6jC,QAAQ,OAAO31B,QAAS,kBAAMs0E,EAAYroF,EAASkc,EAAMvb,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,UAXhDkc,EAAMvb,cAgB1B,CAACghC,EAAiB3hC,EAASqoF,IAExBE,EAAiC,KAAhB7lD,GAAsBta,YAAUsa,GAEvD,OACE,cAAC,GAAD,UACE,eAAC59B,EAAA,EAAD,CAAQ0rB,MAAO,CAAE7zB,MAAO,OAAQ2pF,KAAM,OAAtC,UACE,eAAC,IAAD,CAAYlpF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACHivB,MAAM,KACN4zB,YAAY,SACZnlE,MAAOwmC,EACPg/B,aAAa,MACbtvC,IAAK4yD,EACLh5C,SAAUk5C,EACVvP,WAAY4S,OAGdA,GAAkB,cAAC,KAAD,CAAM50E,MAAM,UAAZ,SAAuBxX,EAAE,+BAC5CsoF,GACC,cAAC3C,EAAD,CACE5lE,MAAOuoE,EACP1C,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,EAChBxxD,MAAO,CAAE8gD,OAAQ,oBAItBtzC,EACD,eAACmqD,GAAD,WACE,eAAC,KAAD,CAAM58C,MAAI,EAAC53B,MAAM,aAAjB,iBACGguB,QADH,IACGA,OADH,EACGA,EAAiBze,OADpB,IACwD,IAA3Bye,EAAgBze,OAAe/mB,EAAE,gBAAkBA,EAAE,oBAEjFwlC,EAAgBze,OAAS,GACxB,cAAC,IAAD,CAAQwmB,QAAQ,WAAW31B,QAASu0E,EAApC,SACGnsF,EAAE,uBCnHjB,IAAMssF,GAAmBhsF,YAAOisF,IAAPjsF,CAAH,8CAIP,SAASksF,GAAT,GAUX,IATFjC,EASC,EATDA,aACAC,EAQC,EARDA,cACA3E,EAOC,EAPDA,eACA4E,EAMC,EANDA,WAOA,EAAkC9sF,oBAAS,GAA3C,mBAAO8uF,EAAP,KAAkBC,EAAlB,KAEQ1sF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACssF,GAAD,CACE/gB,YAAakhB,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAAC9uE,GAAD,OAAWA,MAC3C0zB,MAAM,KACN/D,QAAQ,SACR0B,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBzuC,MAAM,MAAtB,SAA6BR,EAAE,WAC/B,cAAC,IAAD,CAAgBQ,MAAM,MAAtB,SAA6BR,EAAE,eAEhCysF,EACC,cAAC,GAAD,CAAalC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAc1E,eAAgBA,O,mBCtB5D/xD,GAAUxzB,IAAOU,IAAV,qEAKP4rF,GAAUtsF,IAAOU,IAAV,8GAGS,qBAAG6zB,MAAkBG,OAAOU,QA4GnCm3D,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS15C,EAA+B,EAA/BA,KAAM25C,EAAyB,EAAzBA,SAC3Bl4D,EAAUH,eAAVG,MACFzW,EAAWgI,eAETpmB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEM7pC,EAAQyO,cACRw3C,EAAYznB,KAGZ2pB,EAAStmE,QAAO,UAACme,EAAMioD,UAAP,aAAC,EAAgBzrD,kBACvC,EAAgC1jC,mBAAwB,MAAxD,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgBjuF,uBAAY,WAC5BguF,IACJxB,EAAY,MACZV,EAAUgC,GACPtiD,MAAK,WACJpsB,EAASuV,aAAWm5D,IACpBC,OAED1iD,OAAM,SAAC1sB,GACN6tE,EAAY7tE,EAAM47C,SAClBn7C,EAASsV,aAAWo5D,UAEvB,CAACE,EAAQ5uE,EAAU0sE,EAAWgC,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAY9rF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAAC8zB,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGyyC,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SACvD,eAAC,IAAD,CAAYlzB,IAAI,KAAKozB,MAAO,CAAE03D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM38C,MAAI,EAAC1B,GAAG,MAAd,SACG0F,EAAK5c,OAER,cAACo2D,GAAD,IACA,eAAC,KAAD,CAAMx2B,OAAK,EAAC5+C,MAAM,aAAam4B,GAAG,MAAlC,UACGyD,EAAKxuC,OAAOmiB,OADf,gBAIF,cAAC,KAAD,CACEqvC,OAAK,EACLD,UAAQ,EACRywB,UAAQ,EACR53C,SAAS,MACTwB,KAAI,gDAA2Cs8C,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASv/C,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMsD,cAAc,SAApB,UACE,cAAC,KAAD,CAAMxB,SAAS,OAAOstB,UAAU,SAASnlD,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAAzE,SACGjvC,EAAE,6BAEL,cAAC,KAAD,CAAMwX,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,MAAtC,SACGjvC,EACC,6NAGJ,cAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAM+C,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,IAC9BG,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,0BAMX,cAAC,IAAD,CAAQgvE,UAAW79B,EAAWv5B,QAASq1E,EAAvC,SACGjtF,EAAE,YAEJurF,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aCrGR2B,IANS5sF,IAAOU,IAAV,+FAEU,qBAAG6zB,MAAkBG,OAAOG,iBAIrB70B,YAAO6sF,KAAP7sF,CAAH,oEAKpB8sF,GAAkB9sF,YAAO+sF,KAAP/sF,CAAH,gDAUN,SAASknE,GAAT,GAKe,IAAD,MAJ3Br5B,iBAI2B,MAJf,kBAAM,MAIS,EAH3Bw4B,EAG2B,EAH3BA,iBACAM,EAE2B,EAF3BA,iBACAC,EAC2B,EAD3BA,sBAEA,EAAkCvpE,mBAA4BwtB,KAAkBqwC,QAAhF,mBAAO8xB,EAAP,KAAkB/C,EAAlB,KAEM9b,EAAuBzvE,uBAC3B,SAACivB,GACCkgB,IACAw4B,EAAiB14C,KAEnB,CAACkgB,EAAWw4B,IAIR4mB,EAAWC,YAAYF,GAG7B,EAAsC3vF,qBAAtC,mBAAO0uF,EAAP,KAAoBxG,EAApB,KAGA,EAAoCloF,qBAApC,mBAAOiuF,EAAP,KAAmBpB,EAAnB,KACA,EAA8B7sF,qBAA9B,mBAAOmvF,EAAP,KAAgBrC,EAAhB,KAEQzqF,EAAMC,cAAND,EAEFsiB,GAAM,mBACT6I,KAAkBqwC,OAAS,CAAE1sB,MAAO9uC,EAAE,kBAAmB+uC,YAAQvxC,IADxD,cAET2tB,KAAkBsiE,OAAS,CAAE3+C,MAAO9uC,EAAE,UAAW+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAFrF,cAGTrwC,KAAkBkhE,YAAc,CAC/Bv9C,MAAO9uC,EAAE,iBACT+uC,OAAQ,kBACNw7C,EAAagD,GAAYA,IAAapiE,KAAkBkhE,YAAckB,EAAWpiE,KAAkBqwC,WAN7F,cAQTrwC,KAAkBygE,WAAa,CAAE98C,MAAO9uC,EAAE,eAAgB+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAR9F,GAWZ,OACE,eAAC0xB,GAAD,CAAsB5X,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGhzD,EAAOgrE,GAAWv+C,QAAU,cAAC,KAAD,CAAiBA,OAAQzsB,EAAOgrE,GAAWv+C,SACxE,cAAC,IAAD,UAAUzsB,EAAOgrE,GAAWx+C,WAE9B,cAAC,KAAD,CAAkBX,UAAWA,OAE/B,cAACi/C,GAAD,UACGE,IAAcniE,KAAkBqwC,OAC/B,cAAC,EAAD,CACEmL,iBAAkB8H,EAClBxH,iBAAkBA,EAClBC,sBAAuBA,EACvB0e,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,IAEhByH,IAAcniE,KAAkBkhE,aAAeA,EACjD,cAAC,IAAD,CAAaznF,OAAQ,CAACynF,GAAc5d,qBAAsBA,IACxD6e,IAAcniE,KAAkBygE,YAAcA,GAAckB,EAC9D,cAAC,GAAD,CAAY15C,KAAMw4C,EAAYkB,QAASA,EAASC,SAAU,kBAAMxC,EAAap/D,KAAkBsiE,WAC7FH,IAAcniE,KAAkBsiE,OAClC,cAACjB,GAAD,CACEjC,aAAcA,EACd1E,eAAgBA,EAChB2E,cAAeA,EACfC,WAAYA,IAGd,U,ySCrGJnF,EAAehlF,IAAOU,IAAV,0MAQL,qBAAGukF,IAAiB,MAAQ,OAGnCC,EAAYllF,YAAOmlF,IAAPnlF,CAAH,mGAIH,qBAAGu0B,MAAkBG,OAAOlN,WAGlC49D,EAAeplF,IAAOU,IAAV,0KASH,SAAS2kF,EAAT,GAYX,IAAD,IAXD5lE,EAWC,EAXDA,MACAsU,EAUC,EAVDA,MACAkxD,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAGF4uE,EAAoB5oC,cACpBoN,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MAGjE0yC,EAAUp/C,YAAoB3mB,GAC9BkY,EAAWmO,YAAiBrmB,GAElC,OACE,eAACulE,EAAD,CAAcjxD,MAAOA,EAArB,UACE,cAAC,IAAD,CAAcpG,SAAUlO,EAAOoU,KAAK,OAAOE,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYtkF,IAAI,MAAMozB,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOxlE,EAAMrW,SACb,cAAC,KAAD,CAAM8N,MAAM,eAAem4B,GAAG,MAA9B,SACE,cAAC+1C,EAAD,CAAc52C,MAAO/uB,EAAMyW,KAA3B,SAAkCzW,EAAMyW,YAG3C4c,GAAQA,EAAKL,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMqjB,OAAK,EAAC1oB,GAAG,MAAMl2B,MAAM,aAA3B,UACGxX,EAAE,OADL,IACcozC,EAAK5c,QAEnB,cAAC,IAAD,CAAUuc,QAASK,EAAKL,QAAS5e,KAAK,eAI1C8D,GAAa6tD,EAab,eAAC,IAAD,CAAUzxD,MAAO,CAAEihD,SAAU,eAA7B,UACE,cAACkQ,EAAD,IACA,cAAC,KAAD,CAAMhuE,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEhX,MAAM,cACNoX,QAAS,WACHiuE,GACFA,EAAe9lE,GAEjB6lE,KANJ,SASG5lF,EAAE,eC3Eb,SAASgmF,EAAY/3D,GACnB,OAAOA,aAAoBllB,QAAQklB,EAASzpB,QAAUypB,IAAaC,QAAQ,QAAU,GAGvF,IAAM+3D,EAAoB3lF,YAAO4lF,KAAP5lF,CAAH,yHAOjB6lF,EAAkB7lF,IAAOU,IAAV,gIAQrB,SAASuW,EAAT,GAA4D,IAAzCtV,EAAwC,EAAxCA,QACjB,OAAO,cAACgkF,EAAD,CAAmBn3C,MAAO7sC,EAAQozE,UAAlC,SAA8CpzE,EAAQo6C,cAAc,KAG7E,IAAM+pC,EAAW9lF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG0uE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGn6C,EAAH,EAAGA,MAAH,SAAUm6C,UAA4Bn6C,EAAMG,OAAOC,cAE9D,gBAAG+5C,EAAH,EAAGA,SAAUlJ,EAAb,EAAaA,SAAb,OAA6BkJ,GAAYlJ,EAAW,GAAM,KAGvE,SAASugB,EAAT,GAYI,IAXFp4D,EAWC,EAXDA,SACAq4D,EAUC,EAVDA,SACAC,EASC,EATDA,WACAC,EAQC,EARDA,cACAnyD,EAOC,EAPDA,MAQQxX,EAAYnZ,cAAZmZ,QACF5d,EAAM+mF,EAAY/3D,GAClBw4D,EAAoB5gD,cACpB6gD,EAAmB34D,YAAc04D,EAAmBx4D,GACpD04D,EAAcjgD,YAAoBzY,GAClChsB,EAAU6iD,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWywB,GAGzD,OACE,eAACm4D,EAAD,CACE/xD,MAAOA,EACPizC,UAAS,qBAAgBroE,GACzB2Y,QAAS,kBAAO2uE,EAAa,KAAOD,KACpCtX,SAAUuX,EACVzgB,SAAU0gB,EALZ,UAOE,cAAC,IAAD,CAAcv4D,SAAUA,EAAUkG,KAAK,SACvC,eAACxrB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMymC,MAAI,EAAV,SAAYnhB,EAASvkB,SACrB,eAAC,KAAD,CAAM8N,MAAM,aAAa4+C,OAAK,EAACwwB,UAAQ,EAAC53C,SAAS,QAAjD,WACI03C,GAAoBC,GAAe,uBADvC,IAC2D14D,EAASuI,WAGtE,cAAC,IAAD,CAAUnC,MAAO,CAAEwyD,YAAa,YAAhC,SACG5kF,EAAU,cAACsV,EAAD,CAAStV,QAASA,IAAc4a,EAAU,cAAC4zB,EAAA,EAAD,IAAmB,UAMjE,SAASq2C,EAAT,GAsBX,IArBF3R,EAqBC,EArBDA,OACA1wB,EAoBC,EApBDA,WACAwiB,EAmBC,EAnBDA,iBACAN,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAigB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACApB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAoB,EAYC,EAZDA,WAaMC,EAAqCpmE,mBAAQ,WACjD,IAAIqmE,EAAsCH,EAAO,CAAII,WAASl5D,OAAb,mBAAuBu2B,IAAcA,EAItF,YAHmBjnD,IAAfypF,IACFE,EAAS,sBAAOA,EAAUvzC,MAAM,EAAGqzC,IAA1B,MAAuCzpF,GAAvC,YAAqD2pF,EAAUvzC,MAAMqzC,EAAYE,EAAUpgE,WAE/FogE,IACN,CAACF,EAAYxiC,EAAYuiC,IAEpBnjF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAEF+lC,EAEFD,cAEEzlC,EAAMrB,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAM81C,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MACRpG,EAAqB/uB,EAAK81C,GAC1BuxC,EAAa7/D,QAAQugD,GAAoBtgC,yBAAesgC,EAAkBh5C,IAC1Eu4D,EAAgB9/D,QAAQogD,GAAiBngC,yBAAemgC,EAAe74C,IAGvElO,EAAQ4oB,YAAgB1a,EAAUpqB,GAElCwjF,EAAathD,GAAkBhmB,GAASzgB,OAAOC,KAAKwmC,GAAgB7D,SAASniB,EAAMvb,SAEzF,OAAIwwC,IAAUiyC,GAAe/nF,EAkBzBmoF,GAActnE,EAEd,cAAC4lE,EAAD,CAAWtxD,MAAOA,EAAOtU,MAAOA,EAAO6lE,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACEhyD,MAAOA,EACPpG,SAAUA,EACVs4D,WAAYA,EACZD,SAlCiB,kBAAM3f,EAAiB14C,IAmCxCu4D,cAAeA,IA3Bf,cAACL,EAAD,CAAiB9xD,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe1zB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMu1D,OAAK,EAAX,SAAap2D,EAAE,gDACf,cAACy1B,EAAA,EAAD,CACEC,KAAM11B,EACJ,sGAEF2vC,GAAG,iBAuBjB,CACE9rC,EACAkiC,EACA4gC,EACAG,EACAG,EACA4e,EACAD,EACAqB,EACAjnF,IAIEsnF,EAAUtoF,uBAAY,SAACg2C,EAAe91C,GAAhB,OAA8B8mF,EAAY9mF,EAAK81C,MAAS,IAEpF,OACE,cAAC,IAAD,CACEmgC,OAAQA,EACRl/C,IAAK8wD,EACLvmF,MAAM,OACN0mF,SAAUA,EACVK,UAAWL,EAASngE,OACpBygE,SAAU,GACVF,QAASA,EAPX,SASGjnF,I,aC7JQonF,MAXf,SAA4BvrC,GAC1B,IAAMiI,EAAWY,cACX2iC,EAAa5mE,mBAAQ,kBAxB7B,SAA4BqjC,GAG1B,OAAO,SAAoB5qB,EAAeC,GAKxC,IArBuBmuD,EAAwBC,EAwBzCC,GAxBiBF,EAqBNxjC,EAAS5qB,EAAO/0B,SArBcojF,EAsB9BzjC,EAAS3qB,EAAOh1B,SArB/BmjF,GAAYC,EACPD,EAASzY,YAAY0Y,IAAa,EAAID,EAAS3pB,QAAQ4pB,GAAY,EAAI,EAE5ED,GAAYA,EAASzY,YAAY,MAC3B,EAEN0Y,GAAYA,EAAS1Y,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB2Y,EAA0BA,EAE1BtuD,EAAO7vB,QAAU8vB,EAAO9vB,OAEnB6vB,EAAO7vB,OAAO6sB,cAAgBiD,EAAO9vB,OAAO6sB,eAAiB,EAAI,EAEnEgD,EAAO7vB,QAAc8vB,EAAO9vB,QAAX,EAAyB,GAMlBo+E,CAAkB,OAAC3jC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOrjC,mBAAQ,WACb,OAAIo7B,EACK,SAAC3iB,EAAeC,GAAhB,OAAgE,EAA9BkuD,EAAWnuD,EAAQC,IAEvDkuD,IACN,CAACxrC,EAAUwrC,KCtBVK,EAAY,IAAIC,MAAM,YA+IbC,MA7If,YAMyB,IALvBhhB,EAKsB,EALtBA,iBACAN,EAIsB,EAJtBA,iBACAO,EAGsB,EAHtBA,sBACA0e,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ7lF,EAAMC,cAAND,EAIFkoF,GAHcxkF,cAAZG,QAGUG,oBAElB,EAAsCrG,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACMC,EAAiB38C,YAAYlF,EAAa,KAEhD,EAA4B5oC,oBAAkB,GAAvC0qF,EAAP,oBAEMx0C,EAAYla,cAGZ2uD,EAAclhD,YAASghD,GACvBG,EAAqB7hD,YAAoB4hD,GAE/C,EAAoBrxD,cAAbC,EAAP,oBAEM8vD,EAAmBlmE,mBAAQ,WAC/B,IAAMyhB,EAAI6lD,EAAe7xD,cAAc8xC,OACvC,MAAa,KAAN9lC,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAAC6lD,IAEEI,EAAkBf,EAAmBY,GAErCI,EAA0B3nE,mBAAQ,WACtC,OAAO0lB,YAAalnC,OAAOmnC,OAAOoN,GAAYu0C,KAC7C,CAACv0C,EAAWu0C,IAETM,EAAwB5nE,mBAAQ,WACpC,OAAO2nE,EAAe7hE,KAAK4hE,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB1gB,YAAuBygB,EAAcN,GAE5D3Z,EAAuBzvE,uBAC3B,SAACivB,GACC04C,EAAiB14C,GACbiJ,GACF6wD,EAAUa,SAGd,CAAC1xD,EAAWyvC,IAIRkiB,EAAW7kF,mBAEjB/F,qBAAU,WACR4qF,EAASzkF,QAAQ0kF,UAChB,IAEH,IAAMC,EAAc/pF,uBAAY,SAACmmE,GAAW,IAAD,EACnC/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,GACnC,UAAA8wB,EAAU9jF,eAAV,SAAmB6kF,SAAS,KAC3B,IAEGC,EAAclqF,uBAClB,SAACytE,GACC,GAAc,UAAVA,EAAExtE,IAEJ,GAAU,QADAmpF,EAAe7xD,cAAc8xC,OAErCoG,EAAqBvgD,cAChB,GAAIy6D,EAAqB5hE,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA4hE,EAAqB,GAAGj/E,cAAxB,eAAgC6sB,iBAAkB6xD,EAAe/f,OAAO9xC,eACxC,IAAhCoyD,EAAqB5hE,QAErB0nD,EAAqBka,EAAqB,OAKlD,CAACA,EAAsBla,EAAsB2Z,IAIzCriD,EAAiBO,YAAuB8hD,GACxCe,EAAkClhB,YAAuBliC,EAAgBqiD,GAE/E,OACE,mCACE,gCACE,cAAC,IAAD,CAAYnnF,IAAI,OAAhB,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACH6iD,YAAallE,EAAE,gCACfsxC,MAAM,KACNi0B,aAAa,MACbxlE,MAAOwmC,EACPtQ,IAAK4yD,EACLh5C,SAAUk5C,EACVK,UAAWF,QAKhBZ,IAAgBC,EACf,cAAC5/E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,SAAUw0E,OAAQ,QAA5C,SACE,cAACwQ,EAAD,CAAW5lE,MAAOuoE,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsB5hE,QAAS,IAA2B,OAAtBoiE,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBpiE,QAAS,EACvE,cAAC,IAAD,CAAKgN,OAAO,aAAZ,SACE,cAAC+yD,EAAD,CACE3R,OAAQ,IACR6R,QAASA,EACTviC,WACE0kC,EAAyBR,EAAqBnuD,OAAO2uD,GAA0BR,EAEjF1B,WAAYlhD,GAAkB4iD,EAAuBA,EAAqB5hE,YAASvpB,EACnFmpE,iBAAkB8H,EAClB3H,cAAeI,EACfD,iBAAkBA,EAClB8f,aAAcmB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACl9E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,OAAQw0E,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM39D,MAAM,aAAamlD,UAAU,SAAS1tB,GAAG,OAA/C,SACGjvC,EAAE,+B,oGC3GFqjE,I,SAAAA,GAzCf,WACE,IAAQz/D,EAAY0/D,cAAZ1/D,QACAC,EAAYH,cAAZG,QACFua,EAAWgI,eAEXm9C,EAAcvkE,uBAClB,SAACstC,GACC,GAAIzoC,IAAYY,UAAQC,QACtB,MAAM,IAAItE,MAAM,4CAElB,OAAOk6D,aAAsBhuB,EAAS1oC,KAExC,CAACC,EAASD,IAIZ,OAAO5E,sBAAW,wCAChB,WAAOyiC,GAAP,6BAAAvjC,EAAA,6DAAwBslE,IAAxB,iCACQ7hC,EAAY8hC,eACdD,GACFplD,EAASiV,KAAeC,QAAQ,CAAEqO,YAAWC,IAAKH,KAHtD,kBAKS44B,aAAa54B,EAAS8hC,GAC1B/4B,MAAK,SAAC3I,GAIL,OAHI2hC,GACFplD,EAASiV,KAAeE,UAAU,CAAEqO,IAAKH,EAASI,YAAWF,eAExDE,KAERwI,OAAM,SAAC1sB,GAKN,MAJAD,QAAQC,MAAR,oCAA2C8jB,GAAW9jB,GAClD6lD,GACFplD,EAASiV,KAAeG,SAAS,CAAEoO,IAAKH,EAASE,YAAWS,aAAczkB,EAAM47C,WAE5E57C,MAjBZ,2CADgB,sDAqBhB,CAACS,EAAUmlD,K,mBCxBf,IAAMzvC,GAAUxzB,YAAOqI,IAAPrI,CAAH,+DAKP+oF,GAAa/oF,YAAOD,IAAPC,CAAH,4LACM,gBAAGgpF,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAAM,UAAMz0D,EAAMG,OAAOlN,QAAnB,MAAiC,iBAEnE,gBAAGwhE,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAASz0D,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOu0D,YAOvF,SAASC,GAAiB/nD,GACxB,MAAM,YAAN,OAAmBA,EAAQ7hC,QAAQ,MAAO,MAG5C,IAAM6pF,GAAU9uD,gBAAK,YAAoD,IAvB/CoH,EAuBcN,EAAgC,EAAhCA,QAChCioD,EAAa1qE,cAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SACtFpjB,EAAWgI,eACjB,EAAkDsjE,EAAWjoD,GAA5C2R,EAAjB,EAAQhvC,QAA8BkvB,EAAtC,EAAuBgO,cAEjBrJ,EAAWqc,YAAgB7S,GAEzBzhC,EAAMC,cAAND,EAEF2pF,EAAyB3qF,uBAAY,WACpCs0B,GACLlV,EAASyV,aAAiB4N,MACzB,CAACrjB,EAAUqjB,EAASnO,IAEjBs2D,EAAmB5qF,uBAAY,WAE/BkwC,OAAO26C,QAAQ,sDACjBzrE,EAASsV,aAAW+N,MAErB,CAACrjB,EAAUqjB,IAERqoD,EAAmB9qF,uBAAY,WACnCof,EAASuV,aAAW8N,MACnB,CAACrjB,EAAUqjB,IAERsoD,EAAoB/qF,uBAAY,WACpCof,EAASwV,aAAY6N,MACpB,CAACrjB,EAAUqjB,IAEd,EAA+C9L,aAC7C,gCACE,cAAC,KAAD,UAAOyd,IAtDarR,EAsDYqR,EAAKrR,QArDnC,IAAN,OAAWA,EAAQioD,MAAnB,YAA4BjoD,EAAQkoD,MAApC,YAA6CloD,EAAQmoD,UAsDjD,cAAC,KAAD,CAAc/zB,UAAQ,EAAC3lB,KAAI,gDAA2C/O,GAAtE,SACGzhC,EAAE,SAEL,cAAC,IAAD,CAAQutC,QAAQ,SAAS+D,MAAM,KAAK15B,QAASgyE,EAAkB5a,SAA6C,IAAnC1vE,OAAOC,KAAKmqF,GAAY3iE,OAAjG,SACG/mB,EAAE,YAEJszB,GACC,cAAC,IAAD,CAAQia,QAAQ,OAAO31B,QAAS+xE,EAAwBt1D,MAAO,CAAEgb,SAAU,QAA3E,SACGrvC,EAAE,oBAIT,CAAE41B,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAKod,EAGH,eAACi2C,GAAD,CAAYC,OAAQrxD,EAAwB5V,GAAImnE,GAAiB/nD,GAAjE,UACGzL,GAAkBD,EAClBqd,EAAKL,QACJ,cAAC,IAAD,CAAU5e,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUye,QAASK,EAAKL,QAASiV,IAAG,UAAK5U,EAAK5c,KAAV,gBAEhF,qBAAKnC,MAAO,CAAE7zB,MAAO,OAAQ20E,OAAQ,OAAQ7gD,YAAa,UAE5D,eAAC3rB,EAAA,EAAD,CAAQ0rB,MAAO,CAAE81D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/6C,MAAI,EAAV,SAAYgE,EAAK5c,SAEnB,eAAC,IAAD,CAAUkZ,GAAG,MAAb,UACE,eAAC,KAAD,CAAML,SAAS,OAAO3B,GAAG,MAAM08C,cAAc,YAA7C,UACGh3C,EAAKxuC,OAAOmiB,OADf,IACwB/mB,EAAE,aAE1B,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAASte,MAAM,OAAOhX,MAAM,iBAIlC,cAAC,KAAD,CACEovC,QAAS3X,EACT4X,SAAU,WACJ5X,EACF8xD,IAEAD,SA1B2BroD,GAHnB,QAqCd4oD,GAAgB/pF,IAAOU,IAAV,sFAqKJspF,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC9sF,mBAAiB,IAAzD,mBAAO+sF,EAAP,KAAqBC,EAArB,KAEQ3qF,EAAMC,cAAND,EAEF6kC,EAAQyO,cAGR5R,EAAiBsS,cACvB,EAAoCr2C,qBAApC,mBAAOitF,EAAP,KAAmBC,EAAnB,KACA5sF,qBAAU,YACH2sF,GAAclpD,GACjBmpD,EAAcnpD,KAEf,CAACkpD,EAAYlpD,IAEhB,IAAMqnD,EAAc/pF,uBAAY,SAACytE,GAC/Bke,EAAgBle,EAAEpH,OAAOtlE,SACxB,IAEG+qF,EAAYznB,KAEZ0nB,EAAoBjqE,mBAAQ,WAChC,OAAOkmC,aAAU0jC,GAAc3jE,OAAS,GAAKL,QAAQ6gC,aAAgBmjC,MACpE,CAACA,IAEEM,EAAclqE,mBAAQ,WAE1B,OADiBxhB,OAAOC,KAAKslC,GAE1Bre,QAAO,SAACib,GAEP,OAAO/a,QAAQme,EAAMpD,GAASr9B,WAAamwB,KAAsB2N,SAAST,MAE3E7a,MAAK,SAACqkE,EAAIC,GACT,IAAiBC,EAAOtmD,EAAMomD,GAAtB7mF,QACSgnF,EAAOvmD,EAAMqmD,GAAtB9mF,QAGR,OAAc,OAAVwmF,QAAU,IAAVA,OAAA,EAAAA,EAAY1oD,SAAS+oD,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAASgpD,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAAS+oD,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY1oD,SAASgpD,IAC7C,EAGLC,GAAMC,EACDD,EAAG30D,KAAKD,cAAgB60D,EAAG50D,KAAKD,eAClC,EACD40D,EAAG30D,KAAKD,gBAAkB60D,EAAG50D,KAAKD,cAClC,EACA,EAEF40D,GAAY,EACZC,EAAW,EACR,OAEV,CAACvmD,EAAO+lD,IAGX,EAAgCjtF,qBAAhC,mBAAO0tF,EAAP,KAAiBC,EAAjB,KACA,EAAgC3tF,qBAAhC,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEAvtF,qBAAU,WAAM,6CACd,sBAAAC,EAAA,sDACE4sF,EAAUJ,GAAc,GACrBlgD,MAAK,SAAC4I,GAAD,OAAUk4C,EAAYl4C,MAC3B/I,OAAM,kBAAMmhD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAY9tF,GACS,KAAjBktF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYhuF,KAEb,CAACstF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAapsF,OAAOC,KAAKslC,GAAO3C,SAASwoD,GAGzCiB,EAAe3sF,uBAAY,WAC1BqsF,IACLb,EAAca,GACdd,EAAap/D,KAAkBygE,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACv3D,GAAD,WACE,eAAC,IAAD,CAAY7yB,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,iBACHivB,MAAM,KACN4zB,YAAallE,EAAE,mCACfD,MAAO2qF,EACP76C,SAAUk5C,MAGbwC,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAYh3D,MAAO,CAAEqlD,WAAY,GAAjC,SACE,cAAC3kD,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG0qF,EAASt4C,SAAW,cAAC,IAAD,CAAUA,QAASs4C,EAASt4C,QAAS5e,KAAK,SAC/D,eAAC,IAAD,CAAYlzB,IAAI,MAAMozB,MAAO,CAAE03D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAM38C,MAAI,EAAV,SAAYi8C,EAAS70D,OACrB,eAAC,KAAD,CAAMhf,MAAM,aAAa4+C,OAAK,EAACg0B,cAAc,YAA7C,UACGiB,EAASzmF,OAAOmiB,OADnB,IAC4B/mB,EAAE,mBAIjC0rF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAelrF,MAAM,OAAOktC,GAAG,SAC/B,cAAC,KAAD,UAAO1tC,EAAE,eAGX,cAAC,IAAD,CAAQQ,MAAM,cAAcoX,QAAS+zE,EAArC,SACG3rF,EAAE,mBAOf,cAACqqF,GAAD,UACE,cAAC,IAAD,CAAYppF,IAAI,KAAhB,SACG+pF,EAAYvsE,KAAI,SAACgjB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,6BC7QpB3N,GAAUxzB,IAAOU,IAAV,4HAOPgrF,GAAS1rF,IAAOU,IAAV,gKASG,SAASirF,GAAT,GAMX,IALF1B,EAKC,EALDA,aACA1E,EAIC,EAJDA,eAKQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KAGMU,EAAW7kF,mBACX+kF,EAAc/pF,uBAAY,SAACmmE,GAC/B,IAAM/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,KAClC,IAGGkxB,EAAclhD,YAASb,GAGvBf,EAA2BC,eAC3BymD,EAAcnzD,eAEdozD,EAAkBntF,uBAAY,WAC9B6E,GAAW2hC,GACbA,EAAgB/mB,KAAI,SAACsB,GACnB,OAAOmsE,EAAYroF,EAASkc,EAAMvb,cAGrC,CAAC0nF,EAAa1mD,EAAiB3hC,IAE5Bg+B,EAAY/gB,mBAAQ,WACxB,OACEjd,GACA2hC,EAAgB/mB,KAAI,SAACsB,GAAD,OAClB,eAAC,IAAD,CAAgCvf,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAcytB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,CAAMgiC,UAAQ,EAAC3lB,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAU2T,MAAM,aAAam4B,GAAG,OAA9F,SACG5vB,EAAMrW,YAGX,eAAC,IAAD,WACE,cAAC,KAAD,CAAY6jC,QAAQ,OAAO31B,QAAS,kBAAMs0E,EAAYroF,EAASkc,EAAMvb,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,UAXhDkc,EAAMvb,cAgB1B,CAACghC,EAAiB3hC,EAASqoF,IAExBE,EAAiC,KAAhB7lD,GAAsBta,YAAUsa,GAEvD,OACE,cAAC,GAAD,UACE,eAAC59B,EAAA,EAAD,CAAQ0rB,MAAO,CAAE7zB,MAAO,OAAQ2pF,KAAM,OAAtC,UACE,eAAC,IAAD,CAAYlpF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACHivB,MAAM,KACN4zB,YAAY,SACZnlE,MAAOwmC,EACPg/B,aAAa,MACbtvC,IAAK4yD,EACLh5C,SAAUk5C,EACVvP,WAAY4S,OAGdA,GAAkB,cAAC,KAAD,CAAM50E,MAAM,UAAZ,SAAuBxX,EAAE,+BAC5CsoF,GACC,cAAC3C,EAAD,CACE5lE,MAAOuoE,EACP1C,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,EAChBxxD,MAAO,CAAE8gD,OAAQ,oBAItBtzC,EACD,eAACmqD,GAAD,WACE,eAAC,KAAD,CAAM58C,MAAI,EAAC53B,MAAM,aAAjB,iBACGguB,QADH,IACGA,OADH,EACGA,EAAiBze,OADpB,IACwD,IAA3Bye,EAAgBze,OAAe/mB,EAAE,gBAAkBA,EAAE,oBAEjFwlC,EAAgBze,OAAS,GACxB,cAAC,IAAD,CAAQwmB,QAAQ,WAAW31B,QAASu0E,EAApC,SACGnsF,EAAE,uBCnHjB,IAAMssF,GAAmBhsF,YAAOisF,IAAPjsF,CAAH,8CAIP,SAASksF,GAAT,GAUX,IATFjC,EASC,EATDA,aACAC,EAQC,EARDA,cACA3E,EAOC,EAPDA,eACA4E,EAMC,EANDA,WAOA,EAAkC9sF,oBAAS,GAA3C,mBAAO8uF,EAAP,KAAkBC,EAAlB,KAEQ1sF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACssF,GAAD,CACE/gB,YAAakhB,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAAC9uE,GAAD,OAAWA,MAC3C0zB,MAAM,KACN/D,QAAQ,SACR0B,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBzuC,MAAM,MAAtB,SAA6BR,EAAE,WAC/B,cAAC,IAAD,CAAgBQ,MAAM,MAAtB,SAA6BR,EAAE,eAEhCysF,EACC,cAAC,GAAD,CAAalC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAc1E,eAAgBA,O,mBCtB5D/xD,GAAUxzB,IAAOU,IAAV,qEAKP4rF,GAAUtsF,IAAOU,IAAV,8GAGS,qBAAG6zB,MAAkBG,OAAOU,QA4GnCm3D,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS15C,EAA+B,EAA/BA,KAAM25C,EAAyB,EAAzBA,SAC3Bl4D,EAAUH,eAAVG,MACFzW,EAAWgI,eAETpmB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEM7pC,EAAQyO,cACRw3C,EAAYznB,KAGZ2pB,EAAStmE,QAAO,UAACme,EAAMioD,UAAP,aAAC,EAAgBzrD,kBACvC,EAAgC1jC,mBAAwB,MAAxD,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgBjuF,uBAAY,WAC5BguF,IACJxB,EAAY,MACZV,EAAUgC,GACPtiD,MAAK,WACJpsB,EAASuV,aAAWm5D,IACpBC,OAED1iD,OAAM,SAAC1sB,GACN6tE,EAAY7tE,EAAM47C,SAClBn7C,EAASsV,aAAWo5D,UAEvB,CAACE,EAAQ5uE,EAAU0sE,EAAWgC,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAY9rF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAAC8zB,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGyyC,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SACvD,eAAC,IAAD,CAAYlzB,IAAI,KAAKozB,MAAO,CAAE03D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM38C,MAAI,EAAC1B,GAAG,MAAd,SACG0F,EAAK5c,OAER,cAACo2D,GAAD,IACA,eAAC,KAAD,CAAMx2B,OAAK,EAAC5+C,MAAM,aAAam4B,GAAG,MAAlC,UACGyD,EAAKxuC,OAAOmiB,OADf,gBAIF,cAAC,KAAD,CACEqvC,OAAK,EACLD,UAAQ,EACRywB,UAAQ,EACR53C,SAAS,MACTwB,KAAI,gDAA2Cs8C,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASv/C,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMsD,cAAc,SAApB,UACE,cAAC,KAAD,CAAMxB,SAAS,OAAOstB,UAAU,SAASnlD,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAAzE,SACGjvC,EAAE,6BAEL,cAAC,KAAD,CAAMwX,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,MAAtC,SACGjvC,EACC,6NAGJ,cAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAM+C,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,IAC9BG,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,0BAMX,cAAC,IAAD,CAAQgvE,UAAW79B,EAAWv5B,QAASq1E,EAAvC,SACGjtF,EAAE,YAEJurF,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aCrGR2B,IANS5sF,IAAOU,IAAV,+FAEU,qBAAG6zB,MAAkBG,OAAOG,iBAIrB70B,YAAO6sF,KAAP7sF,CAAH,oEAKpB8sF,GAAkB9sF,YAAO+sF,KAAP/sF,CAAH,gDAUN,SAASknE,GAAT,GAKe,IAAD,MAJ3Br5B,iBAI2B,MAJf,kBAAM,MAIS,EAH3Bw4B,EAG2B,EAH3BA,iBACAM,EAE2B,EAF3BA,iBACAC,EAC2B,EAD3BA,sBAEA,EAAkCvpE,mBAA4BwtB,KAAkBqwC,QAAhF,mBAAO8xB,EAAP,KAAkB/C,EAAlB,KAEM9b,EAAuBzvE,uBAC3B,SAACivB,GACCkgB,IACAw4B,EAAiB14C,KAEnB,CAACkgB,EAAWw4B,IAIR4mB,EAAWC,YAAYF,GAG7B,EAAsC3vF,qBAAtC,mBAAO0uF,EAAP,KAAoBxG,EAApB,KAGA,EAAoCloF,qBAApC,mBAAOiuF,EAAP,KAAmBpB,EAAnB,KACA,EAA8B7sF,qBAA9B,mBAAOmvF,EAAP,KAAgBrC,EAAhB,KAEQzqF,EAAMC,cAAND,EAEFsiB,GAAM,mBACT6I,KAAkBqwC,OAAS,CAAE1sB,MAAO9uC,EAAE,kBAAmB+uC,YAAQvxC,IADxD,cAET2tB,KAAkBsiE,OAAS,CAAE3+C,MAAO9uC,EAAE,UAAW+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAFrF,cAGTrwC,KAAkBkhE,YAAc,CAC/Bv9C,MAAO9uC,EAAE,iBACT+uC,OAAQ,kBACNw7C,EAAagD,GAAYA,IAAapiE,KAAkBkhE,YAAckB,EAAWpiE,KAAkBqwC,WAN7F,cAQTrwC,KAAkBygE,WAAa,CAAE98C,MAAO9uC,EAAE,eAAgB+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAR9F,GAWZ,OACE,eAAC0xB,GAAD,CAAsB5X,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGhzD,EAAOgrE,GAAWv+C,QAAU,cAAC,KAAD,CAAiBA,OAAQzsB,EAAOgrE,GAAWv+C,SACxE,cAAC,IAAD,UAAUzsB,EAAOgrE,GAAWx+C,WAE9B,cAAC,KAAD,CAAkBX,UAAWA,OAE/B,cAACi/C,GAAD,UACGE,IAAcniE,KAAkBqwC,OAC/B,cAAC,EAAD,CACEmL,iBAAkB8H,EAClBxH,iBAAkBA,EAClBC,sBAAuBA,EACvB0e,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,IAEhByH,IAAcniE,KAAkBkhE,aAAeA,EACjD,cAAC,IAAD,CAAaznF,OAAQ,CAACynF,GAAc5d,qBAAsBA,IACxD6e,IAAcniE,KAAkBygE,YAAcA,GAAckB,EAC9D,cAAC,GAAD,CAAY15C,KAAMw4C,EAAYkB,QAASA,EAASC,SAAU,kBAAMxC,EAAap/D,KAAkBsiE,WAC7FH,IAAcniE,KAAkBsiE,OAClC,cAACjB,GAAD,CACEjC,aAAcA,EACd1E,eAAgBA,EAChB2E,cAAeA,EACfC,WAAYA,IAGd,U,ySCrGJnF,EAAehlF,IAAOU,IAAV,0MAQL,qBAAGukF,IAAiB,MAAQ,OAGnCC,EAAYllF,YAAOmlF,IAAPnlF,CAAH,mGAIH,qBAAGu0B,MAAkBG,OAAOlN,WAGlC49D,EAAeplF,IAAOU,IAAV,0KASH,SAAS2kF,EAAT,GAYX,IAAD,IAXD5lE,EAWC,EAXDA,MACAsU,EAUC,EAVDA,MACAkxD,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAGF4uE,EAAoB5oC,cACpBoN,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MAGjE0yC,EAAUp/C,YAAoB3mB,GAC9BkY,EAAWmO,YAAiBrmB,GAElC,OACE,eAACulE,EAAD,CAAcjxD,MAAOA,EAArB,UACE,cAAC,IAAD,CAAcpG,SAAUlO,EAAOoU,KAAK,OAAOE,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYtkF,IAAI,MAAMozB,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOxlE,EAAMrW,SACb,cAAC,KAAD,CAAM8N,MAAM,eAAem4B,GAAG,MAA9B,SACE,cAAC+1C,EAAD,CAAc52C,MAAO/uB,EAAMyW,KAA3B,SAAkCzW,EAAMyW,YAG3C4c,GAAQA,EAAKL,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMqjB,OAAK,EAAC1oB,GAAG,MAAMl2B,MAAM,aAA3B,UACGxX,EAAE,OADL,IACcozC,EAAK5c,QAEnB,cAAC,IAAD,CAAUuc,QAASK,EAAKL,QAAS5e,KAAK,eAI1C8D,GAAa6tD,EAab,eAAC,IAAD,CAAUzxD,MAAO,CAAEihD,SAAU,eAA7B,UACE,cAACkQ,EAAD,IACA,cAAC,KAAD,CAAMhuE,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEhX,MAAM,cACNoX,QAAS,WACHiuE,GACFA,EAAe9lE,GAEjB6lE,KANJ,SASG5lF,EAAE,eC3Eb,SAASgmF,EAAY/3D,GACnB,OAAOA,aAAoBllB,QAAQklB,EAASzpB,QAAUypB,IAAaC,QAAQ,QAAU,GAGvF,IAAM+3D,EAAoB3lF,YAAO4lF,KAAP5lF,CAAH,yHAOjB6lF,EAAkB7lF,IAAOU,IAAV,gIAQrB,SAASuW,EAAT,GAA4D,IAAzCtV,EAAwC,EAAxCA,QACjB,OAAO,cAACgkF,EAAD,CAAmBn3C,MAAO7sC,EAAQozE,UAAlC,SAA8CpzE,EAAQo6C,cAAc,KAG7E,IAAM+pC,EAAW9lF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG0uE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGn6C,EAAH,EAAGA,MAAH,SAAUm6C,UAA4Bn6C,EAAMG,OAAOC,cAE9D,gBAAG+5C,EAAH,EAAGA,SAAUlJ,EAAb,EAAaA,SAAb,OAA6BkJ,GAAYlJ,EAAW,GAAM,KAGvE,SAASugB,EAAT,GAYI,IAXFp4D,EAWC,EAXDA,SACAq4D,EAUC,EAVDA,SACAC,EASC,EATDA,WACAC,EAQC,EARDA,cACAnyD,EAOC,EAPDA,MAQQxX,EAAYnZ,cAAZmZ,QACF5d,EAAM+mF,EAAY/3D,GAClBw4D,EAAoB5gD,cACpB6gD,EAAmB34D,YAAc04D,EAAmBx4D,GACpD04D,EAAcjgD,YAAoBzY,GAClChsB,EAAU6iD,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWywB,GAGzD,OACE,eAACm4D,EAAD,CACE/xD,MAAOA,EACPizC,UAAS,qBAAgBroE,GACzB2Y,QAAS,kBAAO2uE,EAAa,KAAOD,KACpCtX,SAAUuX,EACVzgB,SAAU0gB,EALZ,UAOE,cAAC,IAAD,CAAcv4D,SAAUA,EAAUkG,KAAK,SACvC,eAACxrB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMymC,MAAI,EAAV,SAAYnhB,EAASvkB,SACrB,eAAC,KAAD,CAAM8N,MAAM,aAAa4+C,OAAK,EAACwwB,UAAQ,EAAC53C,SAAS,QAAjD,WACI03C,GAAoBC,GAAe,uBADvC,IAC2D14D,EAASuI,WAGtE,cAAC,IAAD,CAAUnC,MAAO,CAAEwyD,YAAa,YAAhC,SACG5kF,EAAU,cAACsV,EAAD,CAAStV,QAASA,IAAc4a,EAAU,cAAC4zB,EAAA,EAAD,IAAmB,UAMjE,SAASq2C,EAAT,GAsBX,IArBF3R,EAqBC,EArBDA,OACA1wB,EAoBC,EApBDA,WACAwiB,EAmBC,EAnBDA,iBACAN,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAigB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACApB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAoB,EAYC,EAZDA,WAaMC,EAAqCpmE,mBAAQ,WACjD,IAAIqmE,EAAsCH,EAAO,CAAII,WAASl5D,OAAb,mBAAuBu2B,IAAcA,EAItF,YAHmBjnD,IAAfypF,IACFE,EAAS,sBAAOA,EAAUvzC,MAAM,EAAGqzC,IAA1B,MAAuCzpF,GAAvC,YAAqD2pF,EAAUvzC,MAAMqzC,EAAYE,EAAUpgE,WAE/FogE,IACN,CAACF,EAAYxiC,EAAYuiC,IAEpBnjF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAEF+lC,EAEFD,cAEEzlC,EAAMrB,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAM81C,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MACRpG,EAAqB/uB,EAAK81C,GAC1BuxC,EAAa7/D,QAAQugD,GAAoBtgC,yBAAesgC,EAAkBh5C,IAC1Eu4D,EAAgB9/D,QAAQogD,GAAiBngC,yBAAemgC,EAAe74C,IAGvElO,EAAQ4oB,YAAgB1a,EAAUpqB,GAElCwjF,EAAathD,GAAkBhmB,GAASzgB,OAAOC,KAAKwmC,GAAgB7D,SAASniB,EAAMvb,SAEzF,OAAIwwC,IAAUiyC,GAAe/nF,EAkBzBmoF,GAActnE,EAEd,cAAC4lE,EAAD,CAAWtxD,MAAOA,EAAOtU,MAAOA,EAAO6lE,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACEhyD,MAAOA,EACPpG,SAAUA,EACVs4D,WAAYA,EACZD,SAlCiB,kBAAM3f,EAAiB14C,IAmCxCu4D,cAAeA,IA3Bf,cAACL,EAAD,CAAiB9xD,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe1zB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMu1D,OAAK,EAAX,SAAap2D,EAAE,gDACf,cAACy1B,EAAA,EAAD,CACEC,KAAM11B,EACJ,sGAEF2vC,GAAG,iBAuBjB,CACE9rC,EACAkiC,EACA4gC,EACAG,EACAG,EACA4e,EACAD,EACAqB,EACAjnF,IAIEsnF,EAAUtoF,uBAAY,SAACg2C,EAAe91C,GAAhB,OAA8B8mF,EAAY9mF,EAAK81C,MAAS,IAEpF,OACE,cAAC,IAAD,CACEmgC,OAAQA,EACRl/C,IAAK8wD,EACLvmF,MAAM,OACN0mF,SAAUA,EACVK,UAAWL,EAASngE,OACpBygE,SAAU,GACVF,QAASA,EAPX,SASGjnF,I,aC7JQonF,MAXf,SAA4BvrC,GAC1B,IAAMiI,EAAWY,cACX2iC,EAAa5mE,mBAAQ,kBAxB7B,SAA4BqjC,GAG1B,OAAO,SAAoB5qB,EAAeC,GAKxC,IArBuBmuD,EAAwBC,EAwBzCC,GAxBiBF,EAqBNxjC,EAAS5qB,EAAO/0B,SArBcojF,EAsB9BzjC,EAAS3qB,EAAOh1B,SArB/BmjF,GAAYC,EACPD,EAASzY,YAAY0Y,IAAa,EAAID,EAAS3pB,QAAQ4pB,GAAY,EAAI,EAE5ED,GAAYA,EAASzY,YAAY,MAC3B,EAEN0Y,GAAYA,EAAS1Y,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB2Y,EAA0BA,EAE1BtuD,EAAO7vB,QAAU8vB,EAAO9vB,OAEnB6vB,EAAO7vB,OAAO6sB,cAAgBiD,EAAO9vB,OAAO6sB,eAAiB,EAAI,EAEnEgD,EAAO7vB,QAAc8vB,EAAO9vB,QAAX,EAAyB,GAMlBo+E,CAAkB,OAAC3jC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOrjC,mBAAQ,WACb,OAAIo7B,EACK,SAAC3iB,EAAeC,GAAhB,OAAgE,EAA9BkuD,EAAWnuD,EAAQC,IAEvDkuD,IACN,CAACxrC,EAAUwrC,KCtBVK,EAAY,IAAIC,MAAM,YA+IbC,MA7If,YAMyB,IALvBhhB,EAKsB,EALtBA,iBACAN,EAIsB,EAJtBA,iBACAO,EAGsB,EAHtBA,sBACA0e,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ7lF,EAAMC,cAAND,EAIFkoF,GAHcxkF,cAAZG,QAGUG,oBAElB,EAAsCrG,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACMC,EAAiB38C,YAAYlF,EAAa,KAEhD,EAA4B5oC,oBAAkB,GAAvC0qF,EAAP,oBAEMx0C,EAAYla,cAGZ2uD,EAAclhD,YAASghD,GACvBG,EAAqB7hD,YAAoB4hD,GAE/C,EAAoBrxD,cAAbC,EAAP,oBAEM8vD,EAAmBlmE,mBAAQ,WAC/B,IAAMyhB,EAAI6lD,EAAe7xD,cAAc8xC,OACvC,MAAa,KAAN9lC,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAAC6lD,IAEEI,EAAkBf,EAAmBY,GAErCI,EAA0B3nE,mBAAQ,WACtC,OAAO0lB,YAAalnC,OAAOmnC,OAAOoN,GAAYu0C,KAC7C,CAACv0C,EAAWu0C,IAETM,EAAwB5nE,mBAAQ,WACpC,OAAO2nE,EAAe7hE,KAAK4hE,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB1gB,YAAuBygB,EAAcN,GAE5D3Z,EAAuBzvE,uBAC3B,SAACivB,GACC04C,EAAiB14C,GACbiJ,GACF6wD,EAAUa,SAGd,CAAC1xD,EAAWyvC,IAIRkiB,EAAW7kF,mBAEjB/F,qBAAU,WACR4qF,EAASzkF,QAAQ0kF,UAChB,IAEH,IAAMC,EAAc/pF,uBAAY,SAACmmE,GAAW,IAAD,EACnC/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,GACnC,UAAA8wB,EAAU9jF,eAAV,SAAmB6kF,SAAS,KAC3B,IAEGC,EAAclqF,uBAClB,SAACytE,GACC,GAAc,UAAVA,EAAExtE,IAEJ,GAAU,QADAmpF,EAAe7xD,cAAc8xC,OAErCoG,EAAqBvgD,cAChB,GAAIy6D,EAAqB5hE,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA4hE,EAAqB,GAAGj/E,cAAxB,eAAgC6sB,iBAAkB6xD,EAAe/f,OAAO9xC,eACxC,IAAhCoyD,EAAqB5hE,QAErB0nD,EAAqBka,EAAqB,OAKlD,CAACA,EAAsBla,EAAsB2Z,IAIzCriD,EAAiBO,YAAuB8hD,GACxCe,EAAkClhB,YAAuBliC,EAAgBqiD,GAE/E,OACE,mCACE,gCACE,cAAC,IAAD,CAAYnnF,IAAI,OAAhB,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACH6iD,YAAallE,EAAE,gCACfsxC,MAAM,KACNi0B,aAAa,MACbxlE,MAAOwmC,EACPtQ,IAAK4yD,EACLh5C,SAAUk5C,EACVK,UAAWF,QAKhBZ,IAAgBC,EACf,cAAC5/E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,SAAUw0E,OAAQ,QAA5C,SACE,cAACwQ,EAAD,CAAW5lE,MAAOuoE,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsB5hE,QAAS,IAA2B,OAAtBoiE,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBpiE,QAAS,EACvE,cAAC,IAAD,CAAKgN,OAAO,aAAZ,SACE,cAAC+yD,EAAD,CACE3R,OAAQ,IACR6R,QAASA,EACTviC,WACE0kC,EAAyBR,EAAqBnuD,OAAO2uD,GAA0BR,EAEjF1B,WAAYlhD,GAAkB4iD,EAAuBA,EAAqB5hE,YAASvpB,EACnFmpE,iBAAkB8H,EAClB3H,cAAeI,EACfD,iBAAkBA,EAClB8f,aAAcmB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACl9E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,OAAQw0E,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM39D,MAAM,aAAamlD,UAAU,SAAS1tB,GAAG,OAA/C,SACGjvC,EAAE,+B,oGC3GFqjE,I,SAAAA,GAzCf,WACE,IAAQz/D,EAAY0/D,cAAZ1/D,QACAC,EAAYH,cAAZG,QACFua,EAAWgI,eAEXm9C,EAAcvkE,uBAClB,SAACstC,GACC,GAAIzoC,IAAYY,UAAQC,QACtB,MAAM,IAAItE,MAAM,4CAElB,OAAOk6D,aAAsBhuB,EAAS1oC,KAExC,CAACC,EAASD,IAIZ,OAAO5E,sBAAW,wCAChB,WAAOyiC,GAAP,6BAAAvjC,EAAA,6DAAwBslE,IAAxB,iCACQ7hC,EAAY8hC,eACdD,GACFplD,EAASiV,KAAeC,QAAQ,CAAEqO,YAAWC,IAAKH,KAHtD,kBAKS44B,aAAa54B,EAAS8hC,GAC1B/4B,MAAK,SAAC3I,GAIL,OAHI2hC,GACFplD,EAASiV,KAAeE,UAAU,CAAEqO,IAAKH,EAASI,YAAWF,eAExDE,KAERwI,OAAM,SAAC1sB,GAKN,MAJAD,QAAQC,MAAR,oCAA2C8jB,GAAW9jB,GAClD6lD,GACFplD,EAASiV,KAAeG,SAAS,CAAEoO,IAAKH,EAASE,YAAWS,aAAczkB,EAAM47C,WAE5E57C,MAjBZ,2CADgB,sDAqBhB,CAACS,EAAUmlD,K,mBCxBf,IAAMzvC,GAAUxzB,YAAOqI,IAAPrI,CAAH,+DAKP+oF,GAAa/oF,YAAOD,IAAPC,CAAH,4LACM,gBAAGgpF,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAAM,UAAMz0D,EAAMG,OAAOlN,QAAnB,MAAiC,iBAEnE,gBAAGwhE,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAASz0D,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOu0D,YAOvF,SAASC,GAAiB/nD,GACxB,MAAM,YAAN,OAAmBA,EAAQ7hC,QAAQ,MAAO,MAG5C,IAAM6pF,GAAU9uD,gBAAK,YAAoD,IAvB/CoH,EAuBcN,EAAgC,EAAhCA,QAChCioD,EAAa1qE,cAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SACtFpjB,EAAWgI,eACjB,EAAkDsjE,EAAWjoD,GAA5C2R,EAAjB,EAAQhvC,QAA8BkvB,EAAtC,EAAuBgO,cAEjBrJ,EAAWqc,YAAgB7S,GAEzBzhC,EAAMC,cAAND,EAEF2pF,EAAyB3qF,uBAAY,WACpCs0B,GACLlV,EAASyV,aAAiB4N,MACzB,CAACrjB,EAAUqjB,EAASnO,IAEjBs2D,EAAmB5qF,uBAAY,WAE/BkwC,OAAO26C,QAAQ,sDACjBzrE,EAASsV,aAAW+N,MAErB,CAACrjB,EAAUqjB,IAERqoD,EAAmB9qF,uBAAY,WACnCof,EAASuV,aAAW8N,MACnB,CAACrjB,EAAUqjB,IAERsoD,EAAoB/qF,uBAAY,WACpCof,EAASwV,aAAY6N,MACpB,CAACrjB,EAAUqjB,IAEd,EAA+C9L,aAC7C,gCACE,cAAC,KAAD,UAAOyd,IAtDarR,EAsDYqR,EAAKrR,QArDnC,IAAN,OAAWA,EAAQioD,MAAnB,YAA4BjoD,EAAQkoD,MAApC,YAA6CloD,EAAQmoD,UAsDjD,cAAC,KAAD,CAAc/zB,UAAQ,EAAC3lB,KAAI,gDAA2C/O,GAAtE,SACGzhC,EAAE,SAEL,cAAC,IAAD,CAAQutC,QAAQ,SAAS+D,MAAM,KAAK15B,QAASgyE,EAAkB5a,SAA6C,IAAnC1vE,OAAOC,KAAKmqF,GAAY3iE,OAAjG,SACG/mB,EAAE,YAEJszB,GACC,cAAC,IAAD,CAAQia,QAAQ,OAAO31B,QAAS+xE,EAAwBt1D,MAAO,CAAEgb,SAAU,QAA3E,SACGrvC,EAAE,oBAIT,CAAE41B,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAKod,EAGH,eAACi2C,GAAD,CAAYC,OAAQrxD,EAAwB5V,GAAImnE,GAAiB/nD,GAAjE,UACGzL,GAAkBD,EAClBqd,EAAKL,QACJ,cAAC,IAAD,CAAU5e,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUye,QAASK,EAAKL,QAASiV,IAAG,UAAK5U,EAAK5c,KAAV,gBAEhF,qBAAKnC,MAAO,CAAE7zB,MAAO,OAAQ20E,OAAQ,OAAQ7gD,YAAa,UAE5D,eAAC3rB,EAAA,EAAD,CAAQ0rB,MAAO,CAAE81D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/6C,MAAI,EAAV,SAAYgE,EAAK5c,SAEnB,eAAC,IAAD,CAAUkZ,GAAG,MAAb,UACE,eAAC,KAAD,CAAML,SAAS,OAAO3B,GAAG,MAAM08C,cAAc,YAA7C,UACGh3C,EAAKxuC,OAAOmiB,OADf,IACwB/mB,EAAE,aAE1B,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAASte,MAAM,OAAOhX,MAAM,iBAIlC,cAAC,KAAD,CACEovC,QAAS3X,EACT4X,SAAU,WACJ5X,EACF8xD,IAEAD,SA1B2BroD,GAHnB,QAqCd4oD,GAAgB/pF,IAAOU,IAAV,sFAqKJspF,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC9sF,mBAAiB,IAAzD,mBAAO+sF,EAAP,KAAqBC,EAArB,KAEQ3qF,EAAMC,cAAND,EAEF6kC,EAAQyO,cAGR5R,EAAiBsS,cACvB,EAAoCr2C,qBAApC,mBAAOitF,EAAP,KAAmBC,EAAnB,KACA5sF,qBAAU,YACH2sF,GAAclpD,GACjBmpD,EAAcnpD,KAEf,CAACkpD,EAAYlpD,IAEhB,IAAMqnD,EAAc/pF,uBAAY,SAACytE,GAC/Bke,EAAgBle,EAAEpH,OAAOtlE,SACxB,IAEG+qF,EAAYznB,KAEZ0nB,EAAoBjqE,mBAAQ,WAChC,OAAOkmC,aAAU0jC,GAAc3jE,OAAS,GAAKL,QAAQ6gC,aAAgBmjC,MACpE,CAACA,IAEEM,EAAclqE,mBAAQ,WAE1B,OADiBxhB,OAAOC,KAAKslC,GAE1Bre,QAAO,SAACib,GAEP,OAAO/a,QAAQme,EAAMpD,GAASr9B,WAAamwB,KAAsB2N,SAAST,MAE3E7a,MAAK,SAACqkE,EAAIC,GACT,IAAiBC,EAAOtmD,EAAMomD,GAAtB7mF,QACSgnF,EAAOvmD,EAAMqmD,GAAtB9mF,QAGR,OAAc,OAAVwmF,QAAU,IAAVA,OAAA,EAAAA,EAAY1oD,SAAS+oD,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAASgpD,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAAS+oD,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY1oD,SAASgpD,IAC7C,EAGLC,GAAMC,EACDD,EAAG30D,KAAKD,cAAgB60D,EAAG50D,KAAKD,eAClC,EACD40D,EAAG30D,KAAKD,gBAAkB60D,EAAG50D,KAAKD,cAClC,EACA,EAEF40D,GAAY,EACZC,EAAW,EACR,OAEV,CAACvmD,EAAO+lD,IAGX,EAAgCjtF,qBAAhC,mBAAO0tF,EAAP,KAAiBC,EAAjB,KACA,EAAgC3tF,qBAAhC,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEAvtF,qBAAU,WAAM,6CACd,sBAAAC,EAAA,sDACE4sF,EAAUJ,GAAc,GACrBlgD,MAAK,SAAC4I,GAAD,OAAUk4C,EAAYl4C,MAC3B/I,OAAM,kBAAMmhD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAY9tF,GACS,KAAjBktF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYhuF,KAEb,CAACstF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAapsF,OAAOC,KAAKslC,GAAO3C,SAASwoD,GAGzCiB,EAAe3sF,uBAAY,WAC1BqsF,IACLb,EAAca,GACdd,EAAap/D,KAAkBygE,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACv3D,GAAD,WACE,eAAC,IAAD,CAAY7yB,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,iBACHivB,MAAM,KACN4zB,YAAallE,EAAE,mCACfD,MAAO2qF,EACP76C,SAAUk5C,MAGbwC,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAYh3D,MAAO,CAAEqlD,WAAY,GAAjC,SACE,cAAC3kD,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG0qF,EAASt4C,SAAW,cAAC,IAAD,CAAUA,QAASs4C,EAASt4C,QAAS5e,KAAK,SAC/D,eAAC,IAAD,CAAYlzB,IAAI,MAAMozB,MAAO,CAAE03D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAM38C,MAAI,EAAV,SAAYi8C,EAAS70D,OACrB,eAAC,KAAD,CAAMhf,MAAM,aAAa4+C,OAAK,EAACg0B,cAAc,YAA7C,UACGiB,EAASzmF,OAAOmiB,OADnB,IAC4B/mB,EAAE,mBAIjC0rF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAelrF,MAAM,OAAOktC,GAAG,SAC/B,cAAC,KAAD,UAAO1tC,EAAE,eAGX,cAAC,IAAD,CAAQQ,MAAM,cAAcoX,QAAS+zE,EAArC,SACG3rF,EAAE,mBAOf,cAACqqF,GAAD,UACE,cAAC,IAAD,CAAYppF,IAAI,KAAhB,SACG+pF,EAAYvsE,KAAI,SAACgjB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,6BC7QpB3N,GAAUxzB,IAAOU,IAAV,4HAOPgrF,GAAS1rF,IAAOU,IAAV,gKASG,SAASirF,GAAT,GAMX,IALF1B,EAKC,EALDA,aACA1E,EAIC,EAJDA,eAKQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KAGMU,EAAW7kF,mBACX+kF,EAAc/pF,uBAAY,SAACmmE,GAC/B,IAAM/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,KAClC,IAGGkxB,EAAclhD,YAASb,GAGvBf,EAA2BC,eAC3BymD,EAAcnzD,eAEdozD,EAAkBntF,uBAAY,WAC9B6E,GAAW2hC,GACbA,EAAgB/mB,KAAI,SAACsB,GACnB,OAAOmsE,EAAYroF,EAASkc,EAAMvb,cAGrC,CAAC0nF,EAAa1mD,EAAiB3hC,IAE5Bg+B,EAAY/gB,mBAAQ,WACxB,OACEjd,GACA2hC,EAAgB/mB,KAAI,SAACsB,GAAD,OAClB,eAAC,IAAD,CAAgCvf,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAcytB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,CAAMgiC,UAAQ,EAAC3lB,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAU2T,MAAM,aAAam4B,GAAG,OAA9F,SACG5vB,EAAMrW,YAGX,eAAC,IAAD,WACE,cAAC,KAAD,CAAY6jC,QAAQ,OAAO31B,QAAS,kBAAMs0E,EAAYroF,EAASkc,EAAMvb,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,UAXhDkc,EAAMvb,cAgB1B,CAACghC,EAAiB3hC,EAASqoF,IAExBE,EAAiC,KAAhB7lD,GAAsBta,YAAUsa,GAEvD,OACE,cAAC,GAAD,UACE,eAAC59B,EAAA,EAAD,CAAQ0rB,MAAO,CAAE7zB,MAAO,OAAQ2pF,KAAM,OAAtC,UACE,eAAC,IAAD,CAAYlpF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACHivB,MAAM,KACN4zB,YAAY,SACZnlE,MAAOwmC,EACPg/B,aAAa,MACbtvC,IAAK4yD,EACLh5C,SAAUk5C,EACVvP,WAAY4S,OAGdA,GAAkB,cAAC,KAAD,CAAM50E,MAAM,UAAZ,SAAuBxX,EAAE,+BAC5CsoF,GACC,cAAC3C,EAAD,CACE5lE,MAAOuoE,EACP1C,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,EAChBxxD,MAAO,CAAE8gD,OAAQ,oBAItBtzC,EACD,eAACmqD,GAAD,WACE,eAAC,KAAD,CAAM58C,MAAI,EAAC53B,MAAM,aAAjB,iBACGguB,QADH,IACGA,OADH,EACGA,EAAiBze,OADpB,IACwD,IAA3Bye,EAAgBze,OAAe/mB,EAAE,gBAAkBA,EAAE,oBAEjFwlC,EAAgBze,OAAS,GACxB,cAAC,IAAD,CAAQwmB,QAAQ,WAAW31B,QAASu0E,EAApC,SACGnsF,EAAE,uBCnHjB,IAAMssF,GAAmBhsF,YAAOisF,IAAPjsF,CAAH,8CAIP,SAASksF,GAAT,GAUX,IATFjC,EASC,EATDA,aACAC,EAQC,EARDA,cACA3E,EAOC,EAPDA,eACA4E,EAMC,EANDA,WAOA,EAAkC9sF,oBAAS,GAA3C,mBAAO8uF,EAAP,KAAkBC,EAAlB,KAEQ1sF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACssF,GAAD,CACE/gB,YAAakhB,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAAC9uE,GAAD,OAAWA,MAC3C0zB,MAAM,KACN/D,QAAQ,SACR0B,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBzuC,MAAM,MAAtB,SAA6BR,EAAE,WAC/B,cAAC,IAAD,CAAgBQ,MAAM,MAAtB,SAA6BR,EAAE,eAEhCysF,EACC,cAAC,GAAD,CAAalC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAc1E,eAAgBA,O,mBCtB5D/xD,GAAUxzB,IAAOU,IAAV,qEAKP4rF,GAAUtsF,IAAOU,IAAV,8GAGS,qBAAG6zB,MAAkBG,OAAOU,QA4GnCm3D,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS15C,EAA+B,EAA/BA,KAAM25C,EAAyB,EAAzBA,SAC3Bl4D,EAAUH,eAAVG,MACFzW,EAAWgI,eAETpmB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEM7pC,EAAQyO,cACRw3C,EAAYznB,KAGZ2pB,EAAStmE,QAAO,UAACme,EAAMioD,UAAP,aAAC,EAAgBzrD,kBACvC,EAAgC1jC,mBAAwB,MAAxD,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgBjuF,uBAAY,WAC5BguF,IACJxB,EAAY,MACZV,EAAUgC,GACPtiD,MAAK,WACJpsB,EAASuV,aAAWm5D,IACpBC,OAED1iD,OAAM,SAAC1sB,GACN6tE,EAAY7tE,EAAM47C,SAClBn7C,EAASsV,aAAWo5D,UAEvB,CAACE,EAAQ5uE,EAAU0sE,EAAWgC,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAY9rF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAAC8zB,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGyyC,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SACvD,eAAC,IAAD,CAAYlzB,IAAI,KAAKozB,MAAO,CAAE03D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM38C,MAAI,EAAC1B,GAAG,MAAd,SACG0F,EAAK5c,OAER,cAACo2D,GAAD,IACA,eAAC,KAAD,CAAMx2B,OAAK,EAAC5+C,MAAM,aAAam4B,GAAG,MAAlC,UACGyD,EAAKxuC,OAAOmiB,OADf,gBAIF,cAAC,KAAD,CACEqvC,OAAK,EACLD,UAAQ,EACRywB,UAAQ,EACR53C,SAAS,MACTwB,KAAI,gDAA2Cs8C,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASv/C,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMsD,cAAc,SAApB,UACE,cAAC,KAAD,CAAMxB,SAAS,OAAOstB,UAAU,SAASnlD,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAAzE,SACGjvC,EAAE,6BAEL,cAAC,KAAD,CAAMwX,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,MAAtC,SACGjvC,EACC,6NAGJ,cAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAM+C,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,IAC9BG,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,0BAMX,cAAC,IAAD,CAAQgvE,UAAW79B,EAAWv5B,QAASq1E,EAAvC,SACGjtF,EAAE,YAEJurF,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aCrGR2B,IANS5sF,IAAOU,IAAV,+FAEU,qBAAG6zB,MAAkBG,OAAOG,iBAIrB70B,YAAO6sF,KAAP7sF,CAAH,oEAKpB8sF,GAAkB9sF,YAAO+sF,KAAP/sF,CAAH,gDAUN,SAASknE,GAAT,GAKe,IAAD,MAJ3Br5B,iBAI2B,MAJf,kBAAM,MAIS,EAH3Bw4B,EAG2B,EAH3BA,iBACAM,EAE2B,EAF3BA,iBACAC,EAC2B,EAD3BA,sBAEA,EAAkCvpE,mBAA4BwtB,KAAkBqwC,QAAhF,mBAAO8xB,EAAP,KAAkB/C,EAAlB,KAEM9b,EAAuBzvE,uBAC3B,SAACivB,GACCkgB,IACAw4B,EAAiB14C,KAEnB,CAACkgB,EAAWw4B,IAIR4mB,EAAWC,YAAYF,GAG7B,EAAsC3vF,qBAAtC,mBAAO0uF,EAAP,KAAoBxG,EAApB,KAGA,EAAoCloF,qBAApC,mBAAOiuF,EAAP,KAAmBpB,EAAnB,KACA,EAA8B7sF,qBAA9B,mBAAOmvF,EAAP,KAAgBrC,EAAhB,KAEQzqF,EAAMC,cAAND,EAEFsiB,GAAM,mBACT6I,KAAkBqwC,OAAS,CAAE1sB,MAAO9uC,EAAE,kBAAmB+uC,YAAQvxC,IADxD,cAET2tB,KAAkBsiE,OAAS,CAAE3+C,MAAO9uC,EAAE,UAAW+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAFrF,cAGTrwC,KAAkBkhE,YAAc,CAC/Bv9C,MAAO9uC,EAAE,iBACT+uC,OAAQ,kBACNw7C,EAAagD,GAAYA,IAAapiE,KAAkBkhE,YAAckB,EAAWpiE,KAAkBqwC,WAN7F,cAQTrwC,KAAkBygE,WAAa,CAAE98C,MAAO9uC,EAAE,eAAgB+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAR9F,GAWZ,OACE,eAAC0xB,GAAD,CAAsB5X,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGhzD,EAAOgrE,GAAWv+C,QAAU,cAAC,KAAD,CAAiBA,OAAQzsB,EAAOgrE,GAAWv+C,SACxE,cAAC,IAAD,UAAUzsB,EAAOgrE,GAAWx+C,WAE9B,cAAC,KAAD,CAAkBX,UAAWA,OAE/B,cAACi/C,GAAD,UACGE,IAAcniE,KAAkBqwC,OAC/B,cAAC,EAAD,CACEmL,iBAAkB8H,EAClBxH,iBAAkBA,EAClBC,sBAAuBA,EACvB0e,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,IAEhByH,IAAcniE,KAAkBkhE,aAAeA,EACjD,cAAC,IAAD,CAAaznF,OAAQ,CAACynF,GAAc5d,qBAAsBA,IACxD6e,IAAcniE,KAAkBygE,YAAcA,GAAckB,EAC9D,cAAC,GAAD,CAAY15C,KAAMw4C,EAAYkB,QAASA,EAASC,SAAU,kBAAMxC,EAAap/D,KAAkBsiE,WAC7FH,IAAcniE,KAAkBsiE,OAClC,cAACjB,GAAD,CACEjC,aAAcA,EACd1E,eAAgBA,EAChB2E,cAAeA,EACfC,WAAYA,IAGd,U,uSCrGJnF,EAAehlF,IAAOU,IAAV,0MAQL,qBAAGukF,IAAiB,MAAQ,OAGnCC,EAAYllF,YAAOmlF,IAAPnlF,CAAH,mGAIH,qBAAGu0B,MAAkBG,OAAOlN,WAGlC49D,EAAeplF,IAAOU,IAAV,0KASH,SAAS2kF,EAAT,GAYX,IAAD,IAXD5lE,EAWC,EAXDA,MACAsU,EAUC,EAVDA,MACAkxD,EASC,EATDA,IACAK,EAQC,EARDA,eACAC,EAOC,EAPDA,eASQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAGF4uE,EAAoB5oC,cACpBoN,EAAOvvC,IAAO,OAAI+qE,QAAJ,IAAIA,GAAJ,UAAIA,EAAoB/qE,UAAxB,iBAAI,EAA+Bkc,EAAMvb,gBAAzC,aAAI,EAA+C4uC,MAGjE0yC,EAAUp/C,YAAoB3mB,GAC9BkY,EAAWmO,YAAiBrmB,GAElC,OACE,eAACulE,EAAD,CAAcjxD,MAAOA,EAArB,UACE,cAACD,EAAA,EAAD,CAAcnG,SAAUlO,EAAOoU,KAAK,OAAOE,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,OAC3E,eAAC,IAAD,CAAYtkF,IAAI,MAAMozB,MAAO,CAAE0xD,QAASR,EAAM,MAAQ,KAAtD,UACE,eAAC,IAAD,WACE,cAAC,KAAD,UAAOxlE,EAAMrW,SACb,cAAC,KAAD,CAAM8N,MAAM,eAAem4B,GAAG,MAA9B,SACE,cAAC+1C,EAAD,CAAc52C,MAAO/uB,EAAMyW,KAA3B,SAAkCzW,EAAMyW,YAG3C4c,GAAQA,EAAKL,SACZ,eAAC,IAAD,WACE,eAAC,KAAD,CAAMqjB,OAAK,EAAC1oB,GAAG,MAAMl2B,MAAM,aAA3B,UACGxX,EAAE,OADL,IACcozC,EAAK5c,QAEnB,cAAC,IAAD,CAAUuc,QAASK,EAAKL,QAAS5e,KAAK,eAI1C8D,GAAa6tD,EAab,eAAC,IAAD,CAAUzxD,MAAO,CAAEihD,SAAU,eAA7B,UACE,cAACkQ,EAAD,IACA,cAAC,KAAD,CAAMhuE,MAAM,UAAZ,uBAdF,cAAC,IAAD,CACEhX,MAAM,cACNoX,QAAS,WACHiuE,GACFA,EAAe9lE,GAEjB6lE,KANJ,SASG5lF,EAAE,eC3Eb,SAASgmF,EAAY/3D,GACnB,OAAOA,aAAoBllB,IAAQklB,EAASzpB,QAAUypB,IAAaC,IAAQ,QAAU,GAGvF,IAAM+3D,EAAoB3lF,YAAO4lF,KAAP5lF,CAAH,yHAOjB6lF,EAAkB7lF,IAAOU,IAAV,gIAQrB,SAASuW,EAAT,GAA4D,IAAzCtV,EAAwC,EAAxCA,QACjB,OAAO,cAACgkF,EAAD,CAAmBn3C,MAAO7sC,EAAQozE,UAAlC,SAA8CpzE,EAAQo6C,cAAc,KAG7E,IAAM+pC,EAAW9lF,YAAOQ,IAAPR,CAAH,+QAMF,qBAAG0uE,UAA4B,aACvB,qBAAGA,UAA2B,UAE1B,gBAAGn6C,EAAH,EAAGA,MAAH,SAAUm6C,UAA4Bn6C,EAAMG,OAAOC,cAE9D,gBAAG+5C,EAAH,EAAGA,SAAUlJ,EAAb,EAAaA,SAAb,OAA6BkJ,GAAYlJ,EAAW,GAAM,KAGvE,SAASugB,EAAT,GAYI,IAXFp4D,EAWC,EAXDA,SACAq4D,EAUC,EAVDA,SACAC,EASC,EATDA,WACAC,EAQC,EARDA,cACAnyD,EAOC,EAPDA,MAQQxX,EAAYnZ,cAAZmZ,QACF5d,EAAM+mF,EAAY/3D,GAClBw4D,EAAoB5gD,cACpB6gD,EAAmB34D,YAAc04D,EAAmBx4D,GACpD04D,EAAcjgD,YAAoBzY,GAClChsB,EAAU6iD,YAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWywB,GAGzD,OACE,eAACm4D,EAAD,CACE/xD,MAAOA,EACPizC,UAAS,qBAAgBroE,GACzB2Y,QAAS,kBAAO2uE,EAAa,KAAOD,KACpCtX,SAAUuX,EACVzgB,SAAU0gB,EALZ,UAOE,cAAC,IAAD,CAAcv4D,SAAUA,EAAUkG,KAAK,SACvC,eAACxrB,EAAA,EAAD,WACE,cAAC,KAAD,CAAMymC,MAAI,EAAV,SAAYnhB,EAASvkB,SACrB,eAAC,KAAD,CAAM8N,MAAM,aAAa4+C,OAAK,EAACwwB,UAAQ,EAAC53C,SAAS,QAAjD,WACI03C,GAAoBC,GAAe,uBADvC,IAC2D14D,EAASuI,WAGtE,cAAC,IAAD,CAAUnC,MAAO,CAAEwyD,YAAa,YAAhC,SACG5kF,EAAU,cAACsV,EAAD,CAAStV,QAASA,IAAc4a,EAAU,cAAC4zB,EAAA,EAAD,IAAmB,UAMjE,SAASq2C,EAAT,GAsBX,IArBF3R,EAqBC,EArBDA,OACA1wB,EAoBC,EApBDA,WACAwiB,EAmBC,EAnBDA,iBACAN,EAkBC,EAlBDA,iBACAG,EAiBC,EAjBDA,cACAigB,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,QACApB,EAcC,EAdDA,eACAC,EAaC,EAbDA,eACAoB,EAYC,EAZDA,WAaMC,EAAqCpmE,mBAAQ,WACjD,IAAIqmE,EAAsCH,EAAO,CAAII,IAASl5D,OAAb,mBAAuBu2B,IAAcA,EAItF,YAHmBjnD,IAAfypF,IACFE,EAAS,sBAAOA,EAAUvzC,MAAM,EAAGqzC,IAA1B,MAAuCzpF,GAAvC,YAAqD2pF,EAAUvzC,MAAMqzC,EAAYE,EAAUpgE,WAE/FogE,IACN,CAACF,EAAYxiC,EAAYuiC,IAEpBnjF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAEF+lC,EAEFD,cAEEzlC,EAAMrB,uBACV,YAA6B,IAA1BE,EAAyB,EAAzBA,KAAM81C,EAAmB,EAAnBA,MAAO3gB,EAAY,EAAZA,MACRpG,EAAqB/uB,EAAK81C,GAC1BuxC,EAAa7/D,QAAQugD,GAAoBtgC,YAAesgC,EAAkBh5C,IAC1Eu4D,EAAgB9/D,QAAQogD,GAAiBngC,YAAemgC,EAAe74C,IAGvElO,EAAQ4oB,YAAgB1a,EAAUpqB,GAElCwjF,EAAathD,GAAkBhmB,GAASzgB,OAAOC,KAAKwmC,GAAgB7D,SAASniB,EAAMvb,SAEzF,OAAIwwC,IAAUiyC,GAAe/nF,EAkBzBmoF,GAActnE,EAEd,cAAC4lE,EAAD,CAAWtxD,MAAOA,EAAOtU,MAAOA,EAAO6lE,eAAgBA,EAAgBC,eAAgBA,EAAgBN,KAAG,IAI5G,cAACc,EAAD,CACEhyD,MAAOA,EACPpG,SAAUA,EACVs4D,WAAYA,EACZD,SAlCiB,kBAAM3f,EAAiB14C,IAmCxCu4D,cAAeA,IA3Bf,cAACL,EAAD,CAAiB9xD,MAAOA,EAAxB,SACE,cAAC,IAAD,CAAe1zB,QAAQ,WAAWE,aAAa,MAA/C,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAMu1D,OAAK,EAAX,SAAap2D,EAAE,gDACf,cAACy1B,EAAA,EAAD,CACEC,KAAM11B,EACJ,sGAEF2vC,GAAG,iBAuBjB,CACE9rC,EACAkiC,EACA4gC,EACAG,EACAG,EACA4e,EACAD,EACAqB,EACAjnF,IAIEsnF,EAAUtoF,uBAAY,SAACg2C,EAAe91C,GAAhB,OAA8B8mF,EAAY9mF,EAAK81C,MAAS,IAEpF,OACE,cAAC,IAAD,CACEmgC,OAAQA,EACRl/C,IAAK8wD,EACLvmF,MAAM,OACN0mF,SAAUA,EACVK,UAAWL,EAASngE,OACpBygE,SAAU,GACVF,QAASA,EAPX,SASGjnF,I,aC7JQonF,MAXf,SAA4BvrC,GAC1B,IAAMiI,EAAWY,cACX2iC,EAAa5mE,mBAAQ,kBAxB7B,SAA4BqjC,GAG1B,OAAO,SAAoB5qB,EAAeC,GAKxC,IArBuBmuD,EAAwBC,EAwBzCC,GAxBiBF,EAqBNxjC,EAAS5qB,EAAO/0B,SArBcojF,EAsB9BzjC,EAAS3qB,EAAOh1B,SArB/BmjF,GAAYC,EACPD,EAASzY,YAAY0Y,IAAa,EAAID,EAAS3pB,QAAQ4pB,GAAY,EAAI,EAE5ED,GAAYA,EAASzY,YAAY,MAC3B,EAEN0Y,GAAYA,EAAS1Y,YAAY,KAC5B,EAEF,GAeL,OAAoB,IAAhB2Y,EAA0BA,EAE1BtuD,EAAO7vB,QAAU8vB,EAAO9vB,OAEnB6vB,EAAO7vB,OAAO6sB,cAAgBiD,EAAO9vB,OAAO6sB,eAAiB,EAAI,EAEnEgD,EAAO7vB,QAAc8vB,EAAO9vB,QAAX,EAAyB,GAMlBo+E,CAAkB,OAAC3jC,QAAD,IAACA,IAAY,MAAK,CAACA,IACtE,OAAOrjC,mBAAQ,WACb,OAAIo7B,EACK,SAAC3iB,EAAeC,GAAhB,OAAgE,EAA9BkuD,EAAWnuD,EAAQC,IAEvDkuD,IACN,CAACxrC,EAAUwrC,KCtBVK,EAAY,IAAIC,MAAM,YA+IbC,I,MAAAA,EA7If,YAMyB,IALvBhhB,EAKsB,EALtBA,iBACAN,EAIsB,EAJtBA,iBACAO,EAGsB,EAHtBA,sBACA0e,EAEsB,EAFtBA,eACAC,EACsB,EADtBA,eAEQ7lF,EAAMC,cAAND,EAIFkoF,GAHcxkF,cAAZG,QAGUG,oBAElB,EAAsCrG,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACMC,EAAiB38C,YAAYlF,EAAa,KAEhD,EAA4B5oC,oBAAkB,GAAvC0qF,EAAP,oBAEMx0C,EAAYla,cAGZ2uD,EAAclhD,YAASghD,GACvBG,EAAqB7hD,YAAoB4hD,GAE/C,EAAoBrxD,cAAbC,EAAP,oBAEM8vD,EAAmBlmE,mBAAQ,WAC/B,IAAMyhB,EAAI6lD,EAAe7xD,cAAc8xC,OACvC,MAAa,KAAN9lC,GAAkB,MAANA,GAAmB,OAANA,GAAoB,QAANA,IAC7C,CAAC6lD,IAEEI,EAAkBf,EAAmBY,GAErCI,EAA0B3nE,mBAAQ,WACtC,OAAO0lB,YAAalnC,OAAOmnC,OAAOoN,GAAYu0C,KAC7C,CAACv0C,EAAWu0C,IAETM,EAAwB5nE,mBAAQ,WACpC,OAAO2nE,EAAe7hE,KAAK4hE,KAC1B,CAACC,EAAgBD,IAEdG,EAAuB1gB,YAAuBygB,EAAcN,GAE5D3Z,EAAuBzvE,uBAC3B,SAACivB,GACC04C,EAAiB14C,GACbiJ,GACF6wD,EAAUa,SAGd,CAAC1xD,EAAWyvC,IAIRkiB,EAAW7kF,mBAEjB/F,qBAAU,WACR4qF,EAASzkF,QAAQ0kF,UAChB,IAEH,IAAMC,EAAc/pF,uBAAY,SAACmmE,GAAW,IAAD,EACnC/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,GACnC,UAAA8wB,EAAU9jF,eAAV,SAAmB6kF,SAAS,KAC3B,IAEGC,EAAclqF,uBAClB,SAACytE,GACC,GAAc,UAAVA,EAAExtE,IAEJ,GAAU,QADAmpF,EAAe7xD,cAAc8xC,OAErCoG,EAAqBvgD,UAChB,GAAIy6D,EAAqB5hE,OAAS,EAAG,CAAC,IAAD,GAExC,UAAA4hE,EAAqB,GAAGj/E,cAAxB,eAAgC6sB,iBAAkB6xD,EAAe/f,OAAO9xC,eACxC,IAAhCoyD,EAAqB5hE,QAErB0nD,EAAqBka,EAAqB,OAKlD,CAACA,EAAsBla,EAAsB2Z,IAIzCriD,EAAiBO,YAAuB8hD,GACxCe,EAAkClhB,YAAuBliC,EAAgBqiD,GAE/E,OACE,mCACE,gCACE,cAAC,IAAD,CAAYnnF,IAAI,OAAhB,SACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACH6iD,YAAallE,EAAE,gCACfsxC,MAAM,KACNi0B,aAAa,MACbxlE,MAAOwmC,EACPtQ,IAAK4yD,EACLh5C,SAAUk5C,EACVK,UAAWF,QAKhBZ,IAAgBC,EACf,cAAC5/E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,SAAUw0E,OAAQ,QAA5C,SACE,cAACwQ,EAAD,CAAW5lE,MAAOuoE,EAAa1C,eAAgBA,EAAgBC,eAAgBA,OAE3D,OAApB8C,QAAoB,IAApBA,OAAA,EAAAA,EAAsB5hE,QAAS,IAA2B,OAAtBoiE,QAAsB,IAAtBA,OAAA,EAAAA,EAAwBpiE,QAAS,EACvE,cAAC,IAAD,CAAKgN,OAAO,aAAZ,SACE,cAAC+yD,EAAD,CACE3R,OAAQ,IACR6R,QAASA,EACTviC,WACE0kC,EAAyBR,EAAqBnuD,OAAO2uD,GAA0BR,EAEjF1B,WAAYlhD,GAAkB4iD,EAAuBA,EAAqB5hE,YAASvpB,EACnFmpE,iBAAkB8H,EAClB3H,cAAeI,EACfD,iBAAkBA,EAClB8f,aAAcmB,EACdtC,eAAgBA,EAChBC,eAAgBA,MAIpB,cAACl9E,EAAA,EAAD,CAAQ0rB,MAAO,CAAE1zB,QAAS,OAAQw0E,OAAQ,QAA1C,SACE,cAAC,KAAD,CAAM39D,MAAM,aAAamlD,UAAU,SAAS1tB,GAAG,OAA/C,SACGjvC,EAAE,+B,wGCvIjB,IAAM8zB,GAAUxzB,YAAOqI,IAAPrI,CAAH,6DAKP+oF,GAAa/oF,YAAOD,IAAPC,CAAH,0LACM,gBAAGgpF,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAAM,UAAMz0D,EAAMG,OAAOlN,QAAnB,MAAiC,iBAEnE,gBAAGwhE,EAAH,EAAGA,OAAQz0D,EAAX,EAAWA,MAAX,OAAwBy0D,EAASz0D,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOu0D,YAOvF,SAASC,GAAiB/nD,GACxB,MAAM,YAAN,OAAmBA,EAAQ7hC,QAAQ,MAAO,MAG5C,IAAM6pF,GAAU9uD,gBAAK,YAAoD,IAvB/CoH,EAuBcN,EAAgC,EAAhCA,QAChCioD,EAAa1qE,cAAkD,SAACjhB,GAAD,OAAWA,EAAM8mC,MAAMrD,SACtFpjB,EAAWgI,eACjB,EAAkDsjE,EAAWjoD,GAA5C2R,EAAjB,EAAQhvC,QAA8BkvB,EAAtC,EAAuBgO,cAEjBrJ,EAAWqc,YAAgB7S,GAEzBzhC,EAAMC,cAAND,EAEF2pF,EAAyB3qF,uBAAY,WACpCs0B,GACLlV,EAASyV,aAAiB4N,MACzB,CAACrjB,EAAUqjB,EAASnO,IAEjBs2D,EAAmB5qF,uBAAY,WAE/BkwC,OAAO26C,QAAQ,sDACjBzrE,EAASsV,aAAW+N,MAErB,CAACrjB,EAAUqjB,IAERqoD,EAAmB9qF,uBAAY,WACnCof,EAASuV,aAAW8N,MACnB,CAACrjB,EAAUqjB,IAERsoD,EAAoB/qF,uBAAY,WACpCof,EAASwV,aAAY6N,MACpB,CAACrjB,EAAUqjB,IAEd,EAA+C9L,aAC7C,gCACE,cAAC,KAAD,UAAOyd,IAtDarR,EAsDYqR,EAAKrR,QArDnC,IAAN,OAAWA,EAAQioD,MAAnB,YAA4BjoD,EAAQkoD,MAApC,YAA6CloD,EAAQmoD,UAsDjD,cAAC,KAAD,CAAc/zB,UAAQ,EAAC3lB,KAAI,gDAA2C/O,GAAtE,SACGzhC,EAAE,SAEL,cAAC,IAAD,CAAQutC,QAAQ,SAAS+D,MAAM,KAAK15B,QAASgyE,EAAkB5a,SAA6C,IAAnC1vE,OAAOC,KAAKmqF,GAAY3iE,OAAjG,SACG/mB,EAAE,YAEJszB,GACC,cAAC,IAAD,CAAQia,QAAQ,OAAO31B,QAAS+xE,EAAwBt1D,MAAO,CAAEgb,SAAU,QAA3E,SACGrvC,EAAE,oBAIT,CAAE41B,UAAW,YAAaC,QAAS,UAf7BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAkB5B,OAAKod,EAGH,eAACi2C,GAAD,CAAYC,OAAQrxD,EAAwB5V,GAAImnE,GAAiB/nD,GAAjE,UACGzL,GAAkBD,EAClBqd,EAAKL,QACJ,cAAC,IAAD,CAAU5e,KAAK,OAAOE,MAAO,CAAEC,YAAa,QAAUye,QAASK,EAAKL,QAASiV,IAAG,UAAK5U,EAAK5c,KAAV,gBAEhF,qBAAKnC,MAAO,CAAE7zB,MAAO,OAAQ20E,OAAQ,OAAQ7gD,YAAa,UAE5D,eAAC3rB,EAAA,EAAD,CAAQ0rB,MAAO,CAAE81D,KAAM,KAAvB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CAAM/6C,MAAI,EAAV,SAAYgE,EAAK5c,SAEnB,eAAC,IAAD,CAAUkZ,GAAG,MAAb,UACE,eAAC,KAAD,CAAML,SAAS,OAAO3B,GAAG,MAAM08C,cAAc,YAA7C,UACGh3C,EAAKxuC,OAAOmiB,OADf,IACwB/mB,EAAE,aAE1B,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAASte,MAAM,OAAOhX,MAAM,iBAIlC,cAAC,KAAD,CACEovC,QAAS3X,EACT4X,SAAU,WACJ5X,EACF8xD,IAEAD,SA1B2BroD,GAHnB,QAqCd4oD,GAAgB/pF,IAAOU,IAAV,oFAqKJspF,I,SAAAA,GA/Jf,YAQI,IAPFC,EAOC,EAPDA,aACAC,EAMC,EANDA,cACAC,EAKC,EALDA,WAMA,EAAwC9sF,mBAAiB,IAAzD,mBAAO+sF,EAAP,KAAqBC,EAArB,KAEQ3qF,EAAMC,cAAND,EAEF6kC,EAAQyO,cAGR5R,EAAiBsS,cACvB,EAAoCr2C,qBAApC,mBAAOitF,EAAP,KAAmBC,EAAnB,KACA5sF,qBAAU,YACH2sF,GAAclpD,GACjBmpD,EAAcnpD,KAEf,CAACkpD,EAAYlpD,IAEhB,IAAMqnD,EAAc/pF,uBAAY,SAACytE,GAC/Bke,EAAgBle,EAAEpH,OAAOtlE,SACxB,IAEG+qF,EAAYznB,eAEZ0nB,EAAoBjqE,mBAAQ,WAChC,OAAOkmC,aAAU0jC,GAAc3jE,OAAS,GAAKL,QAAQ6gC,aAAgBmjC,MACpE,CAACA,IAEEM,EAAclqE,mBAAQ,WAE1B,OADiBxhB,OAAOC,KAAKslC,GAE1Bre,QAAO,SAACib,GAEP,OAAO/a,QAAQme,EAAMpD,GAASr9B,WAAamwB,KAAsB2N,SAAST,MAE3E7a,MAAK,SAACqkE,EAAIC,GACT,IAAiBC,EAAOtmD,EAAMomD,GAAtB7mF,QACSgnF,EAAOvmD,EAAMqmD,GAAtB9mF,QAGR,OAAc,OAAVwmF,QAAU,IAAVA,OAAA,EAAAA,EAAY1oD,SAAS+oD,OAAO,OAACL,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAASgpD,KAC5C,IAEN,OAACN,QAAD,IAACA,OAAD,EAACA,EAAY1oD,SAAS+oD,MAAtB,OAA6BL,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAY1oD,SAASgpD,IAC7C,EAGLC,GAAMC,EACDD,EAAG30D,KAAKD,cAAgB60D,EAAG50D,KAAKD,eAClC,EACD40D,EAAG30D,KAAKD,gBAAkB60D,EAAG50D,KAAKD,cAClC,EACA,EAEF40D,GAAY,EACZC,EAAW,EACR,OAEV,CAACvmD,EAAO+lD,IAGX,EAAgCjtF,qBAAhC,mBAAO0tF,EAAP,KAAiBC,EAAjB,KACA,EAAgC3tF,qBAAhC,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEAvtF,qBAAU,WAAM,8CACd,uBAAAC,EAAA,sDACE4sF,EAAUJ,GAAc,GACrBlgD,MAAK,SAAC4I,GAAD,OAAUk4C,EAAYl4C,MAC3B/I,OAAM,kBAAMmhD,EAAY,2BAH7B,4CADc,sBAOVT,EAPW,WAAD,wBAQZU,IAEAH,OAAY9tF,GACS,KAAjBktF,GACFc,EAAY,8BAKK,KAAjBd,GACFc,OAAYhuF,KAEb,CAACstF,EAAWJ,EAAcK,IAG7B,IAAMW,EAAapsF,OAAOC,KAAKslC,GAAO3C,SAASwoD,GAGzCiB,EAAe3sF,uBAAY,WAC1BqsF,IACLb,EAAca,GACdd,EAAap/D,KAAkBygE,YAC/BnB,EAAWC,MACV,CAACA,EAAcF,EAAeC,EAAYF,EAAcc,IAE3D,OACE,eAACv3D,GAAD,WACE,eAAC,IAAD,CAAY7yB,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,iBACHivB,MAAM,KACN4zB,YAAallE,EAAE,mCACfD,MAAO2qF,EACP76C,SAAUk5C,MAGbwC,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,QAELF,GACC,cAAC,IAAD,CAAYh3D,MAAO,CAAEqlD,WAAY,GAAjC,SACE,cAAC3kD,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACG0qF,EAASt4C,SAAW,cAAC,IAAD,CAAUA,QAASs4C,EAASt4C,QAAS5e,KAAK,SAC/D,eAAC,IAAD,CAAYlzB,IAAI,MAAMozB,MAAO,CAAE03D,WAAY,QAA3C,UACE,cAAC,KAAD,CAAM38C,MAAI,EAAV,SAAYi8C,EAAS70D,OACrB,eAAC,KAAD,CAAMhf,MAAM,aAAa4+C,OAAK,EAACg0B,cAAc,YAA7C,UACGiB,EAASzmF,OAAOmiB,OADnB,IAC4B/mB,EAAE,mBAIjC0rF,EACC,eAAC,IAAD,WACE,cAAC,IAAD,CAAelrF,MAAM,OAAOktC,GAAG,SAC/B,cAAC,KAAD,UAAO1tC,EAAE,eAGX,cAAC,IAAD,CAAQQ,MAAM,cAAcoX,QAAS+zE,EAArC,SACG3rF,EAAE,mBAOf,cAACqqF,GAAD,UACE,cAAC,IAAD,CAAYppF,IAAI,KAAhB,SACG+pF,EAAYvsE,KAAI,SAACgjB,GAAD,OACf,cAAC,GAAD,CAAuBA,QAASA,GAAlBA,c,UC7QpB3N,GAAUxzB,IAAOU,IAAV,4HAOPgrF,GAAS1rF,IAAOU,IAAV,gKASG,SAASirF,GAAT,GAMX,IALF1B,EAKC,EALDA,aACA1E,EAIC,EAJDA,eAKQhiF,EAAYH,cAAZG,QAEA7D,EAAMC,cAAND,EAER,EAAsCrC,mBAAiB,IAAvD,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KAGMU,EAAW7kF,mBACX+kF,EAAc/pF,uBAAY,SAACmmE,GAC/B,IAAM/N,EAAQ+N,EAAME,OAAOtlE,MACrBipF,EAAmB/8D,YAAUmrC,GACnC+wB,EAAea,GAAoB5xB,KAClC,IAGGkxB,EAAclhD,YAASb,GAGvBf,EAA2BC,eAC3BymD,EAAcnzD,cAEdozD,EAAkBntF,uBAAY,WAC9B6E,GAAW2hC,GACbA,EAAgB/mB,KAAI,SAACsB,GACnB,OAAOmsE,EAAYroF,EAASkc,EAAMvb,cAGrC,CAAC0nF,EAAa1mD,EAAiB3hC,IAE5Bg+B,EAAY/gB,mBAAQ,WACxB,OACEjd,GACA2hC,EAAgB/mB,KAAI,SAACsB,GAAD,OAClB,eAAC,IAAD,CAAgCvf,MAAM,OAAtC,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAcytB,SAAUlO,EAAOoU,KAAK,SACpC,cAAC,KAAD,CAAMgiC,UAAQ,EAAC3lB,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,GAAU2T,MAAM,aAAam4B,GAAG,OAA9F,SACG5vB,EAAMrW,YAGX,eAAC,IAAD,WACE,cAAC,KAAD,CAAY6jC,QAAQ,OAAO31B,QAAS,kBAAMs0E,EAAYroF,EAASkc,EAAMvb,UAArE,SACE,cAAC,IAAD,MAEF,cAAC,KAAD,CAAcgsC,KAAMtkB,YAAenM,EAAMvb,QAAS,UAAWX,UAXhDkc,EAAMvb,cAgB1B,CAACghC,EAAiB3hC,EAASqoF,IAExBE,EAAiC,KAAhB7lD,GAAsBta,YAAUsa,GAEvD,OACE,cAAC,GAAD,UACE,eAAC59B,EAAA,EAAD,CAAQ0rB,MAAO,CAAE7zB,MAAO,OAAQ2pF,KAAM,OAAtC,UACE,eAAC,IAAD,CAAYlpF,IAAI,OAAhB,UACE,cAAC,IAAD,UACE,cAAC,KAAD,CACEohB,GAAG,qBACHivB,MAAM,KACN4zB,YAAY,SACZnlE,MAAOwmC,EACPg/B,aAAa,MACbtvC,IAAK4yD,EACLh5C,SAAUk5C,EACVvP,WAAY4S,OAGdA,GAAkB,cAAC,KAAD,CAAM50E,MAAM,UAAZ,SAAuBxX,EAAE,+BAC5CsoF,GACC,cAAC3C,EAAD,CACE5lE,MAAOuoE,EACP1C,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,EAChBxxD,MAAO,CAAE8gD,OAAQ,oBAItBtzC,EACD,eAACmqD,GAAD,WACE,eAAC,KAAD,CAAM58C,MAAI,EAAC53B,MAAM,aAAjB,iBACGguB,QADH,IACGA,OADH,EACGA,EAAiBze,OADpB,IACwD,IAA3Bye,EAAgBze,OAAe/mB,EAAE,gBAAkBA,EAAE,oBAEjFwlC,EAAgBze,OAAS,GACxB,cAAC,IAAD,CAAQwmB,QAAQ,WAAW31B,QAASu0E,EAApC,SACGnsF,EAAE,uBCnHjB,IAAMssF,GAAmBhsF,YAAOisF,IAAPjsF,CAAH,8CAIP,SAASksF,GAAT,GAUX,IATFjC,EASC,EATDA,aACAC,EAQC,EARDA,cACA3E,EAOC,EAPDA,eACA4E,EAMC,EANDA,WAOA,EAAkC9sF,oBAAS,GAA3C,mBAAO8uF,EAAP,KAAkBC,EAAlB,KAEQ1sF,EAAMC,cAAND,EAER,OACE,eAAC,KAAD,WACE,eAACssF,GAAD,CACE/gB,YAAakhB,EAAY,EAAI,EAC7BE,YAAa,kBAAMD,GAAa,SAAC9uE,GAAD,OAAWA,MAC3C0zB,MAAM,KACN/D,QAAQ,SACR0B,GAAG,OALL,UAOE,cAAC,IAAD,CAAgBzuC,MAAM,MAAtB,SAA6BR,EAAE,WAC/B,cAAC,IAAD,CAAgBQ,MAAM,MAAtB,SAA6BR,EAAE,eAEhCysF,EACC,cAAC,GAAD,CAAalC,aAAcA,EAAcC,cAAeA,EAAeC,WAAYA,IAEnF,cAACwB,GAAD,CAAc1B,aAAcA,EAAc1E,eAAgBA,O,mBCtB5D/xD,GAAUxzB,IAAOU,IAAV,qEAKP4rF,GAAUtsF,IAAOU,IAAV,8GAGS,qBAAG6zB,MAAkBG,OAAOU,QA4GnCm3D,I,SAAAA,GAxGf,YAA+D,IAAD,EAAxCC,EAAwC,EAAxCA,QAAS15C,EAA+B,EAA/BA,KAAM25C,EAAyB,EAAzBA,SAC3Bl4D,EAAUH,eAAVG,MACFzW,EAAWgI,eAETpmB,EAAMC,cAAND,EAGR,EAAkCrC,oBAAS,GAA3C,mBAAOwzC,EAAP,KAAkBu9B,EAAlB,KAEM7pC,EAAQyO,cACRw3C,EAAYznB,eAGZ2pB,EAAStmE,QAAO,UAACme,EAAMioD,UAAP,aAAC,EAAgBzrD,kBACvC,EAAgC1jC,mBAAwB,MAAxD,mBAAO4tF,EAAP,KAAiBC,EAAjB,KAEMyB,EAAgBjuF,uBAAY,WAC5BguF,IACJxB,EAAY,MACZV,EAAUgC,GACPtiD,MAAK,WACJpsB,EAASuV,aAAWm5D,IACpBC,OAED1iD,OAAM,SAAC1sB,GACN6tE,EAAY7tE,EAAM47C,SAClBn7C,EAASsV,aAAWo5D,UAEvB,CAACE,EAAQ5uE,EAAU0sE,EAAWgC,EAASC,IAE1C,OACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAY9rF,IAAI,KAAhB,SACE,eAAC,IAAD,CAAYA,IAAI,KAAhB,UACE,cAAC8zB,EAAA,EAAD,CAAMp0B,QAAQ,YAAd,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACGyyC,EAAKL,SAAW,cAAC,IAAD,CAAUA,QAASK,EAAKL,QAAS5e,KAAK,SACvD,eAAC,IAAD,CAAYlzB,IAAI,KAAKozB,MAAO,CAAE03D,WAAY,QAA1C,UACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM38C,MAAI,EAAC1B,GAAG,MAAd,SACG0F,EAAK5c,OAER,cAACo2D,GAAD,IACA,eAAC,KAAD,CAAMx2B,OAAK,EAAC5+C,MAAM,aAAam4B,GAAG,MAAlC,UACGyD,EAAKxuC,OAAOmiB,OADf,gBAIF,cAAC,KAAD,CACEqvC,OAAK,EACLD,UAAQ,EACRywB,UAAQ,EACR53C,SAAS,MACTwB,KAAI,gDAA2Cs8C,GALjD,SAOGA,cAOX,cAAC,KAAD,CAASv/C,QAAQ,SAAjB,SACE,eAAC,IAAD,CAAMsD,cAAc,SAApB,UACE,cAAC,KAAD,CAAMxB,SAAS,OAAOstB,UAAU,SAASnlD,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAAzE,SACGjvC,EAAE,6BAEL,cAAC,KAAD,CAAMwX,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,MAAtC,SACGjvC,EACC,6NAGJ,cAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAOqd,EAAMG,OAAOqb,QAASpB,GAAG,OAA3C,SACG,WAEH,eAAC,IAAD,CAAM+C,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASuB,EACTtB,SAAU,kBAAM6+B,GAAcv9B,IAC9BG,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,0BAMX,cAAC,IAAD,CAAQgvE,UAAW79B,EAAWv5B,QAASq1E,EAAvC,SACGjtF,EAAE,YAEJurF,EACC,cAAC,KAAD,CAAM/zE,MAAM,UAAU6c,MAAO,CAAEw3D,aAAc,WAAYC,SAAU,UAAnE,SACGP,IAED,aCrGR2B,IANS5sF,IAAOU,IAAV,+FAEU,qBAAG6zB,MAAkBG,OAAOG,iBAIrB70B,YAAO6sF,KAAP7sF,CAAH,oEAKpB8sF,GAAkB9sF,YAAO+sF,KAAP/sF,CAAH,gDAUN,SAASknE,GAAT,GAKe,IAAD,MAJ3Br5B,iBAI2B,MAJf,kBAAM,MAIS,EAH3Bw4B,EAG2B,EAH3BA,iBACAM,EAE2B,EAF3BA,iBACAC,EAC2B,EAD3BA,sBAEA,EAAkCvpE,mBAA4BwtB,KAAkBqwC,QAAhF,mBAAO8xB,EAAP,KAAkB/C,EAAlB,KAEM9b,EAAuBzvE,uBAC3B,SAACivB,GACCkgB,IACAw4B,EAAiB14C,KAEnB,CAACkgB,EAAWw4B,IAIR4mB,EAAWC,YAAYF,GAG7B,EAAsC3vF,qBAAtC,mBAAO0uF,EAAP,KAAoBxG,EAApB,KAGA,EAAoCloF,qBAApC,mBAAOiuF,EAAP,KAAmBpB,EAAnB,KACA,EAA8B7sF,qBAA9B,mBAAOmvF,EAAP,KAAgBrC,EAAhB,KAEQzqF,EAAMC,cAAND,EAEFsiB,GAAM,mBACT6I,KAAkBqwC,OAAS,CAAE1sB,MAAO9uC,EAAE,kBAAmB+uC,YAAQvxC,IADxD,cAET2tB,KAAkBsiE,OAAS,CAAE3+C,MAAO9uC,EAAE,UAAW+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAFrF,cAGTrwC,KAAkBkhE,YAAc,CAC/Bv9C,MAAO9uC,EAAE,iBACT+uC,OAAQ,kBACNw7C,EAAagD,GAAYA,IAAapiE,KAAkBkhE,YAAckB,EAAWpiE,KAAkBqwC,WAN7F,cAQTrwC,KAAkBygE,WAAa,CAAE98C,MAAO9uC,EAAE,eAAgB+uC,OAAQ,kBAAMw7C,EAAap/D,KAAkBqwC,WAR9F,GAWZ,OACE,eAAC0xB,GAAD,CAAsB5X,SAAS,QAA/B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACGhzD,EAAOgrE,GAAWv+C,QAAU,cAAC,KAAD,CAAiBA,OAAQzsB,EAAOgrE,GAAWv+C,SACxE,cAAC,IAAD,UAAUzsB,EAAOgrE,GAAWx+C,WAE9B,cAAC,KAAD,CAAkBX,UAAWA,OAE/B,cAACi/C,GAAD,UACGE,IAAcniE,KAAkBqwC,OAC/B,cAAC,EAAD,CACEmL,iBAAkB8H,EAClBxH,iBAAkBA,EAClBC,sBAAuBA,EACvB0e,eAAgB,kBAAM2E,EAAap/D,KAAkBkhE,cACrDxG,eAAgBA,IAEhByH,IAAcniE,KAAkBkhE,aAAeA,EACjD,cAAC7d,GAAA,EAAD,CAAa5pE,OAAQ,CAACynF,GAAc5d,qBAAsBA,IACxD6e,IAAcniE,KAAkBygE,YAAcA,GAAckB,EAC9D,cAAC,GAAD,CAAY15C,KAAMw4C,EAAYkB,QAASA,EAASC,SAAU,kBAAMxC,EAAap/D,KAAkBsiE,WAC7FH,IAAcniE,KAAkBsiE,OAClC,cAACjB,GAAD,CACEjC,aAAcA,EACd1E,eAAgBA,EAChB2E,cAAeA,EACfC,WAAYA,IAGd,U,yNClGKiD,EAN+B,SAAC,GAAmC,IAAD,IAAhCC,kBAAgC,MAAnB,GAAmB,EAAZ91E,EAAY,iBAC/E,OACE,cAAC,IAAD,aAAiB+1E,YAAa,cAAC,KAAD,eAAWD,IAAgBE,SAAS,kBAAkBC,WAAW,OAAUj2E,K,OCTvGk2E,E,KAAyBztF,EAAOU,IAAV,woGAOV,qBAAG6zB,MAAkBm5D,KAAK/4D,cACxB,qBAAGJ,MAAkBG,OAAOK,cACnC,qBAAGR,MAAkBG,OAAOU,QAKvB,qBAAGb,MAAkBG,OAAOoiC,SAC1B,qBAAGviC,MAAkBG,OAAOK,cASnC,qBAAGR,MAAkBG,OAAOU,QAOjB,qBAAGb,MAAkBG,OAAOK,cAKzB,qBAAGR,MAAkBG,OAAOK,cAe/B,qBAAGR,MAAkBG,OAAOmb,WAe5B,qBAAGtb,MAAkBG,OAAOi5D,iBAO5B,qBAAGp5D,MAAkBG,OAAOk5D,aAQ5B,qBAAGr5D,MAAkBG,OAAOk5D,aA2BrCC,EAJU,WACvB,OAAO,cAACJ,EAAD,CAAwB1rE,GAAG,qB,OCzFrB+rE,EAf+B,SAACv2E,GAC7C,IAAQ7X,EAAMC,cAAND,EAER,OACE,cAAC,EAAD,aACEquF,gBAAc,EACdC,oBAAkB,EAClBC,cAAe,GACfC,YAAaxuF,EAAE,QACf8tF,WAAW,OACPj2E,M,oGCPK,SAAS+9C,IACtB,IAAMrnB,EAAMvvB,aAA8B,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKuB,gBAC1Dm9B,ECJO,WAA4D,IAAD,IAClE1vC,EAAY8E,cAClB,iBAAOrC,YAAoBzC,EAAW,mCAAtC,iBAAO,EAA4DiB,cAAnE,aAAO,EAAqE,GDErD0uC,GACvB,OAAOh1C,mBAAQ,WACb,GAAI+0C,GAAkBtnB,EAAK,OAAOsnB,EAAelpC,IAAI4hB,KAEpD,CAACsnB,EAAgBtnB,M,mGENP,SAASqnB,IACtB,IAAMrnB,EAAMvvB,aAA8B,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKuB,gBAC1Dm9B,ECJO,WAA4D,IAAD,IAClE1vC,EAAY8E,cAClB,iBAAOrC,YAAoBzC,EAAW,mCAAtC,iBAAO,EAA4DiB,cAAnE,aAAO,EAAqE,GDErD0uC,GACvB,OAAOh1C,mBAAQ,WACb,GAAI+0C,GAAkBtnB,EAAK,OAAOsnB,EAAelpC,IAAI4hB,KAEpD,CAACsnB,EAAgBtnB,M,mGENP,SAASqnB,IACtB,IAAMrnB,EAAMvvB,aAA8B,SAACjhB,GAAD,OAAWA,EAAMo5B,KAAKuB,gBAC1Dm9B,ECJO,WAA4D,IAAD,IAClE1vC,EAAY8E,cAClB,iBAAOrC,YAAoBzC,EAAW,mCAAtC,iBAAO,EAA4DiB,cAAnE,aAAO,EAAqE,GDErD0uC,GACvB,OAAOh1C,mBAAQ,WACb,GAAI+0C,GAAkBtnB,EAAK,OAAOsnB,EAAelpC,IAAI4hB,KAEpD,CAACsnB,EAAgBtnB,M,o71FEXhBkgD,EAA6B,oBAAqBtgB,SAExD,SAASugB,IACP,OAAQD,GAA2D,WAA7BtgB,SAASwgB,gBAMlC,SAASC,IACtB,MAA8BjxF,mBAAkB+wF,KAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EAAW/vF,uBAAY,WAC3B8vF,EAAWJ,OACV,CAACI,IAWJ,OATA7wF,qBAAU,WACR,GAAKwwF,EAGL,OADAtgB,SAASE,iBAAiB,mBAAoB0gB,GACvC,WACL5gB,SAASG,oBAAoB,mBAAoBygB,MAElD,CAACA,IAEGF,E,aCnBM,SAASG,IACtB,MAA6BtrF,cAArBE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXua,EAAWgI,cAEX6oE,EAAgBL,IAEtB,EAA0BjxF,mBAAsE,CAC9FkG,UACA+hB,YAAa,OAFf,mBAAO7nB,EAAP,KAAcC,EAAd,KAKMkxF,EAAsBlwF,uBAC1B,SAAC4mB,GACC5nB,GAAS,SAAC4f,GACR,OAAI/Z,IAAY+Z,EAAK/Z,QACa,kBAArB+Z,EAAKgI,YAAiC,CAAE/hB,UAAS+hB,eACrD,CAAE/hB,UAAS+hB,YAAaqL,KAAKgC,IAAIrN,EAAahI,EAAKgI,cAErDhI,OAGX,CAAC/Z,EAAS7F,IAIZC,qBAAU,WACR,GAAK2F,GAAYC,GAAYorF,EAU7B,OARAjxF,EAAS,CAAE6F,UAAS+hB,YAAa,OAEjChiB,EACGm3B,iBACAyP,KAAK0kD,GACL7kD,OAAM,SAAC1sB,GAAD,OAAWD,QAAQC,MAAR,kDAAyD9Z,GAAW8Z,MAExF/Z,EAAQurF,GAAG,QAASD,GACb,WACLtrF,EAAQwrF,eAAe,QAASF,MAEjC,CAAC9wE,EAAUva,EAASD,EAASsrF,EAAqBD,IAErD,IAAMI,EAAiB5jD,YAAY1tC,EAAO,KAO1C,OALAE,qBAAU,WACHoxF,EAAexrF,SAAYwrF,EAAezpE,aAAgBqpE,GAC/D7wE,EAASqgB,YAAkB,CAAE56B,QAASwrF,EAAexrF,QAAS+hB,YAAaypE,EAAezpE,iBACzF,CAACqpE,EAAe7wE,EAAUixE,EAAezpE,YAAaypE,EAAexrF,UAEjE,K,2DCzCM,SAASmrF,IACtB,IAAQprF,EAAY0/D,cAAZ1/D,QACFwa,EAAWgI,cACXsoE,EAAkBE,IAGlB/pD,EAAQyO,cACR5R,EAAiBsS,cAGvBlO,cAEA,IAAMglD,EAAYznB,cAmDlB,OC3Ea,SAAqBisB,EAAsB9rC,GAAuC,IAAjB+rC,IAAgB,yDACxFC,EAAgBxrF,mBAGtB/F,qBAAU,WACRuxF,EAAcprF,QAAUkrF,IACvB,CAACA,IAGJrxF,qBAAU,WACR,SAASwxF,IACP,IAAQrrF,EAAYorF,EAAZprF,QACJA,GACFA,IAIJ,GAAc,OAAVo/C,EAAgB,CACd+rC,GAASE,IACb,IAAMptE,EAAK2qB,YAAYyiD,EAAMjsC,GAC7B,OAAO,kBAAMtW,cAAc7qB,OAG5B,CAACmhC,EAAO+rC,IDUXG,CAR8B1wF,uBAAY,WACnC0vF,GACLpvF,OAAOC,KAAKslC,GAAOrlC,SAAQ,SAACoiC,GAAD,OACzBkpD,EAAUlpD,GAAKyI,OAAM,SAAC1sB,GAAD,OAAWD,QAAQsK,MAAM,+BAAgCrK,WAE/E,CAACmtE,EAAW4D,EAAiB7pD,IAGGjhC,EAAU,IAAiB,MAG9D3F,qBAAU,WACRqB,OAAOC,KAAKslC,GAAOrlC,SAAQ,SAACiiC,GAC1B,IAAM2R,EAAOvO,EAAMpD,GACd2R,EAAKhvC,SAAYgvC,EAAK/R,kBAAqB+R,EAAKz1B,OACnDmtE,EAAUrpD,GAAS4I,OAAM,SAAC1sB,GAAD,OAAWD,QAAQsK,MAAM,4BAA6BrK,WAGlF,CAACS,EAAU0sE,EAAWlnF,EAASihC,IAGlC5mC,qBAAU,WACRqB,OAAOC,KAAKg1B,KAAuB/0B,SAAQ,SAACiiC,GAC1C,IAAM2R,EAAOvO,EAAMpD,GACd2R,IAAUA,EAAKhvC,SAAYgvC,EAAK/R,kBAAqB+R,EAAKz1B,QAC7DmtE,EAAUrpD,GAAS4I,OAAM,SAAC1sB,GAAD,OAAWD,QAAQsK,MAAM,4BAA6BrK,WAGlF,CAACS,EAAU0sE,EAAWlnF,EAASihC,IAGlC5mC,qBAAU,WACRqB,OAAOC,KAAKslC,GAAOrlC,SAAQ,SAACiiC,GAC1B,IAAM2R,EAAOvO,EAAMpD,GACnB,GAAI2R,EAAKhvC,SAAWgvC,EAAK9R,cAGvB,OAFaQ,YAAkBsR,EAAKhvC,QAAQ29B,QAASqR,EAAK9R,cAAcS,UAGtE,KAAKC,IAAeC,KAClB,MAAM,IAAI7hC,MAAM,8BAElB,KAAK4hC,IAAe2tD,MACpB,KAAK3tD,IAAe4tD,MACpB,KAAK5tD,IAAe6tD,MAClBzxE,EAASyV,YAAiB4N,UAIjC,CAACrjB,EAAUymB,EAAOnD,IAEd,K,qEEvET,SAASouD,EAAWC,EAAa98D,GAC/B,OALY+8D,EAKAD,EAAM9+D,KAAKC,MAAMD,KAAKg/D,SAAWh/D,KAAKgC,IAAI,EAAGA,EAAM88D,IAJxD,IAAI35C,SAAQ,SAACmpC,GAAD,OAAa37B,WAAW27B,EAASyQ,MADtD,IAAcA,EAWP,IAAME,EAAb,kDACE,aAAe,uCACP,aAFV,sBAAoC9vF,QASvB+vF,EAAb,wIAAoC/vF,Q,0ECKpC,WACEwkD,EACAwrC,EACAC,GAHF,qBAAAnyF,EAAA,6DAKEwf,QAAQsK,MAAM,iBAAkB48B,EAAmBwrC,EAAOC,GAL5D,kBAU6CzrC,EAAkBluB,UACzD05D,EAAM3xE,KAAI,SAAC6xE,GAAD,MAAS,CAACA,EAAI9rF,QAAS8rF,EAAI9nE,cAX3C,mCAUK+nE,EAVL,KAUyB55D,EAVzB,6DAcIjZ,QAAQsK,MAAM,qCAAd,MAdJ,kBAiBMuoE,EAAmBruF,WAAamuF,GAjBtC,uBAkBI3yE,QAAQsK,MAAR,gDAAuDuoE,EAAmB1wF,WAA1E,gBAA4FwwF,IACtF,IAAIF,EAAe,gCAnB7B,iCAqBS,CAAE7nE,QAASqO,EAAY/Q,YAAa2qE,EAAmBruF,aArBhE,2D,sBAyFe,SAAS8sF,IACtB,IAAM5wE,EAAWgI,cACXroB,EAAQihB,aAA6C,SAACujB,GAAD,OAAOA,EAAEpc,aAE9DqqE,EAAqB/kD,YAAY1tC,EAAM8kC,cAAe,KACtDhb,EAAoBa,cAClB7kB,EAAYH,cAAZG,QACF+gD,EAAoB35B,cACpBwlE,EAAgBzsF,mBAEhB0sF,EAA+C5vE,mBAAQ,WAC3D,OAtEG,SACL6vE,EACA9sF,GAEA,IAAK8sF,IAAiB9sF,EAAS,MAAO,GACtC,IAAM++B,EAAY+tD,EAAa9sF,GAC/B,OAAK++B,EAEEtjC,OAAOC,KAAKqjC,GAAWlI,QAAsC,SAACC,EAAMmI,GACzE,IAAM8tD,EAAehuD,EAAUE,GAW/B,OATAnI,EAAKmI,GAAWxjC,OAAOC,KAAKqxF,GACzBpqE,QAAO,SAACvnB,GACP,IAAM6mB,EAAiBzhB,SAASpF,GAChC,QAAI6mB,GAAkB,IACf8qE,EAAa9qE,GAAkB,KAEvC4U,QAAO,SAACm2D,EAAazsF,GACpB,OAAO6sB,KAAK8+D,IAAIc,EAAaxsF,SAASD,MACrC2hB,KACE4U,IACN,IAfoB,GAgEdm2D,CAAoBN,EAAoB3sF,KAC9C,CAAC2sF,EAAoB3sF,IAElBktF,EAA+BjwE,mBAAQ,WAC3C,OA3CG,SACLoF,EACAwqE,EACA7sF,EACAgkB,GAEA,OAAKhkB,GAAYgkB,EACD3B,EAAYriB,GAIrBvE,OAAOC,KAAKmxF,GAAelqE,QAAO,SAACsc,GACxC,IAAMhd,EAAiB4qE,EAAc5tD,GAE/B5jC,EAAOgnB,EAAYriB,GAASi/B,GAElC,IAAK5jC,EAAM,OAAO,EAElB,IAAM8xF,EAAqBnpE,GAAqB/B,EAAiB,GAGjE,QAAI5mB,EAAK8jC,qBAAuB9jC,EAAK8jC,qBAAuBguD,MAGpD9xF,EAAK0mB,aAAe1mB,EAAK0mB,YAAcorE,MAf5B1xF,OAAOC,KAAKmxF,GAHU,GAqClCO,CAAsBlzF,EAAMmoB,YAAawqE,EAAe7sF,EAASgkB,KACvE,CAAChkB,EAAS9F,EAAMmoB,YAAawqE,EAAe7oE,IAEzCqpE,EAA6BpwE,mBACjC,kBAAMwF,KAAKC,UAAUwqE,EAA6BnqE,UAClD,CAACmqE,IAwEH,OArEA9yF,qBAAU,WAAO,IAAD,EACd,GAAK4pB,GAAsBhkB,GAAY+gD,EAAvC,CAEA,IAAMusC,EAA6B7qE,KAAKQ,MAAMoqE,GAC9C,GAAgC,IAA5BC,EAAiBpqE,OAArB,CACA,IAI8D,IAJxDd,EAAQkrE,EAAiB1yE,KAAI,SAACxf,GAAD,OAAS+nB,YAAa/nB,MAEnDmyF,EChJK,SAAuBC,EAAYC,GAChD,GAAIA,EAAe,EAAG,MAAM,IAAIlxF,MAAM,8BACtC,GAAIixF,EAAMtqE,QAAUuqE,EAAc,MAAO,CAACD,GAE1C,IAAME,EAAoBtgE,KAAKugE,KAAKH,EAAMtqE,OAASuqE,GAC7CG,EAAYxgE,KAAKugE,KAAKH,EAAMtqE,OAASwqE,GAE3C,OAAO,YAAIjsE,MAAMisE,GAAWhyF,QAAQkf,KAAI,SAACizE,GAAD,OAAQL,EAAMz9C,MAAM89C,EAAKD,EAAWC,EAAKD,EAAYA,MDyItEE,CAAW1rE,EA/HZ,KAiIpB,IAAI,UAAAwqE,EAAcrsF,eAAd,eAAuBwhB,eAAgBiC,EACzC,UAAA4oE,EAAcrsF,eAAd,mBAAuBqsF,qBAAvB,SAAsCjxF,SAAQ,SAACinB,GAAD,OAAOA,OAGvDrI,EACE2kB,YAAyB,CACvB9c,QACApiB,UACAm/B,oBAAqBnb,KAIzB4oE,EAAcrsF,QAAU,CACtBwhB,YAAaiC,EACb4oE,cAAeW,EAAa3yE,KAAI,SAAC2xE,EAAOp7C,GACtC,MDpID,SACL48C,EADK,GAGyC,IAE1CC,EAHFC,EAC2C,EAD3CA,EAAGC,EACwC,EADxCA,QAASC,EAC+B,EAD/BA,QAEVC,GAAY,EA2BhB,MAAO,CACLC,QA1Bc,IAAI97C,QAAJ,uCAAe,WAAOmpC,EAASC,GAAhB,eAAAthF,EAAA,sDAC7B2zF,EAAkBrS,EADW,cAGvBp4D,OAHuB,oBAKVwqE,IALU,cAKzBxqE,EALyB,OAMpB6qE,IACH1S,EAAQn4D,GACR6qE,GAAY,GARW,2DAYrBA,EAZqB,0DAerBH,GAAK,IAAO,gBAAiB3B,EAfR,wBAgBvB3Q,EAAO,EAAD,IACNyS,GAAY,EAjBW,6BAoBzBH,IApByB,yBAsBrBhC,EAAWiC,EAASC,GAtBC,iFAAf,yDA2BdG,OAAQ,WACFF,IACJA,GAAY,EACZJ,EAAgB,IAAI3B,MCgGUkC,EAAM,kB,+CAAMC,CAAWztC,EAAmBwrC,EAAOvoE,KAAoB,CAC/FiqE,EAAG/rE,IACHgsE,QAAS,KACTC,QAAS,OAHHG,EAAR,EAAQA,OAwCR,OAxCA,EAAgBD,QAMb1nD,MAAK,YAA6D,IAAjD7T,EAAgD,EAAzDrO,QAAkCgqE,EAAuB,EAApC1sE,YAC5B6qE,EAAcrsF,QAAU,CAAEqsF,cAAe,GAAI7qE,YAAaiC,GAG1D,IAAM0qE,EAAoBnB,EAAax9C,MAAM,EAAGoB,GAAOta,QAAe,SAACC,EAAMskC,GAAP,OAAgBtkC,EAAOskC,EAAKl4C,SAAQ,GACpGyrE,EAAmBD,EAAoB57D,EAAW5P,OAExD3I,EACE8kB,YAAuB,CACrBr/B,UACAykB,QAAS6oE,EACNv9C,MAAM2+C,EAAmBC,GACzB93D,QAA6C,SAACC,EAAMmI,EAASlM,GAAO,IAAD,EAElE,OADA+D,EAAKmI,GAAL,UAAgBnM,EAAWC,UAA3B,QAAiC,KAC1B+D,IACN,IACL/U,YAAa0sE,QAIlBjoD,OAAM,SAAC1sB,GACFA,aAAiBuyE,EACnBxyE,QAAQsK,MAAM,kCAAmCH,IAGnDnK,QAAQC,MAAM,kCAAmCyyE,EAAOvsF,EAAS8Z,GACjES,EACE6kB,YAA8B,CAC5Bhd,MAAOmqE,EACPvsF,UACAm/B,oBAAqBnb,SAItBsqE,UAGV,CAACtuF,EAAS+gD,EAAmBxmC,EAAU8yE,EAA4BrpE,IAE/D,K,2CEjLM,SAASmnE,IACtB,MAA6BtrF,cAArBE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEX4uF,EAAkB/pE,cAElBtK,EAAWgI,cACXroB,EAAQihB,aAAgD,SAACujB,GAAD,OAAOA,EAAE9C,gBAEjEA,EAAe3e,mBAAQ,wBAAOjd,GAAO,UAAG9F,EAAM8F,UAAT,QAA0B,KAAK,CAACA,EAAS9F,IAEpF,EAAqCg/B,cAA7B27B,EAAR,EAAQA,WAAY8L,EAApB,EAAoBA,aAmDpB,OAjDAvmE,qBAAU,WACH4F,GAAYD,GAAY6uF,GAE7BnzF,OAAOC,KAAKkgC,GACTjZ,QAAO,SAACkZ,GAAD,OArCP,SACL+yD,EACAvyD,GAEA,GAAIA,EAAGG,QAAS,OAAO,EACvB,IAAKH,EAAGC,uBAAwB,OAAO,EACvC,IAAMuyD,EAAmBD,EAAkBvyD,EAAGC,uBAC9C,GAAIuyD,EAAmB,EAAG,OAAO,EACjC,IAAMC,IAAkB,IAAI7zD,MAAOC,UAAYmB,EAAGH,WAAa,IAAO,GACtE,OAAI4yD,EAAiB,GAEZD,EAAmB,IAExBC,EAAiB,IAEZD,EAAmB,EAsBNE,CAAYH,EAAiBhzD,EAAaC,OAC3DlgC,SAAQ,SAACkgC,GACR97B,EACGivF,sBAAsBnzD,GACtB8K,MAAK,SAACnK,GACS,IAAD,IAATA,GACFjiB,EACEgiB,YAAoB,CAClBv8B,UACA67B,OACAW,QAAS,CACPyyD,UAAWzyD,EAAQyyD,UACnBltE,YAAaya,EAAQza,YACrB9C,gBAAiBud,EAAQvd,gBACzB5f,KAAMm9B,EAAQn9B,KACdqtC,OAAQlQ,EAAQkQ,OAChB4B,GAAI9R,EAAQ8R,GACZ4gD,gBAAiB1yD,EAAQ0yD,gBACzBC,iBAAkB3yD,EAAQ2yD,sBAKC,IAAnB3yD,EAAQkQ,OAAei0B,EAAe9L,GAElD,sBACA,eAAC,IAAD,CAAM7nB,cAAc,SAApB,UACE,cAAC,KAAD,8BAAOpR,EAAaC,UAApB,aAAO,EAAoBE,eAA3B,wBAA+CF,EAAKkU,MAAM,EAAG,GAA7D,cAAqElU,EAAKkU,MAAM,GAAI,OACnF/vC,GACC,cAAC,KAAD,CAAMsyD,UAAQ,EAAC3lB,KAAMtkB,YAAewT,EAAM,cAAe77B,GAAzD,kCAONua,EAAS6hB,YAAmB,CAAEp8B,UAAS67B,OAAM9Z,YAAa6sE,QAG7DpoD,OAAM,SAAC1sB,GACND,QAAQC,MAAR,4CAAmD+hB,GAAQ/hB,WAGlE,CAAC9Z,EAASD,EAAS67B,EAAcgzD,EAAiBr0E,EAAUomD,EAAc9L,IAEtE,K,uBCxEGu6B,G,uCChBNC,GAAqB,uCAAG,sBAAAh1F,EAAA,+EAC5B,IAAIk4C,SAAc,SAACmpC,GAAD,OAChBjgF,OAAO6zF,eAAejkD,OAAQ,eAAgB,CAC5C9wC,IAD4C,WAE1C,OAAO00C,KAAKsgD,KAEdj2F,IAJ4C,SAIxCi2F,GACFtgD,KAAKsgD,IAAMA,EAEX7T,WATsB,2CAAH,qDAqCZ8T,GAvBS,WACtB,IAAQn1D,EAAUD,eAAVC,MAERjgC,qBAAU,WACR,IAAMq1F,EAAcpkD,OAAOtwC,aAAay4D,QAAQ2B,MAEhD,GAAIs6B,EAAa,CACf,IAAMC,EAA0BD,IAAgB7xB,IAAeG,IACzD4xB,EAAwBC,QAAQ90F,IAAIuwC,OAAQ,gBAIlD,GAAIqkD,IAA4BC,EAG9B,YAFAN,KAAwB1oD,MAAK,kBAAMtM,EAAMo1D,MAK3Cp1D,EAAMo1D,MAEP,CAACp1D,K,uDCDSw1D,GA5BKC,aAAH,gmB,mCC8CFrxE,GApDqC,SAACtiB,GAAD,MAAO,CACzD,CACE0mE,MAAO1mE,EAAE,QACT4zF,KAAM,WACNpjD,KAAM,KAER,CACEk2B,MAAO1mE,EAAE,SACT4zF,KAAM,YACNvC,MAAO,CACL,CACE3qB,MAAO1mE,EAAE,YACTwwC,KAAM,SAER,CACEk2B,MAAO1mE,EAAE,aACTwwC,KAAM,WAIZ,CACEk2B,MAAO1mE,EAAE,oBACT4zF,KAAM,WACNpjD,KAAM,WAER,CACEk2B,MAAO1mE,EAAE,iBACT4zF,KAAM,WACNpjD,KAAM,cAER,CACEk2B,MAAO1mE,EAAE,aACT4zF,KAAM,kBACNpjD,KAAM,iBACND,OAAQ,CACN7a,KAAM11B,EAAE,OAAO6zF,oBACfr8E,MAAO,YAGX,CACEkvD,MAAO1mE,EAAE,eACT4zF,KAAM,UACNpjD,KAAM,gBAER,CACEk2B,MAAO1mE,EAAE,cACT4zF,KAAM,WACNpjD,KAAM,iB,+GCEKsjD,GArCa,WAC1B,MAA4Dn2F,mBAA4B,IAAxF,mBAAOo2F,EAAP,KAA+BC,EAA/B,KACA,EAAsCr2F,mBAAiB,MAAvD,mBAAOs2F,EAAP,KAAoBC,EAApB,KACQr3E,EAAYlZ,eAAZkZ,QACAY,EAAgBnF,eAAhBmF,YA8BR,OA5BAxf,qBAAU,WAuBJ4e,GAtBe,uCAAG,oCAAA3e,EAAA,6DACd+nB,EAAQ1H,IAAYE,KAAI,SAACe,GAAD,MAAW,CACvChb,QAASgB,eACTgxB,KAAM,cACNC,OAAQ,CAACjX,EAAKb,IAAK9B,OAJD,SAOKsJ,aAAUguE,GAAeluE,GAP9B,OAOdmuE,EAPc,OAQd9rE,EAAU/J,IAAYE,KAAI,SAACe,EAAMw1B,GAAP,oBAAC,gBAAsBx1B,GAAvB,IAA6Bvd,QAAS,IAAIP,KAAU0yF,EAAWp/C,SACzFq/C,EAAoB/rE,EAAQ9B,QAAO,SAAC8tE,GAAD,OAAiBA,EAAYryF,QAAQkwB,GAAG,MAC3EoiE,EAAcF,EAAkB35D,QAAO,SAAC6b,EAAOi+C,GACnD,IAAMC,EAAgB,IAAI/yF,KAAU8yF,EAAQvyF,SAC5C,OAAIwyF,EAAczyC,GAAG,GACZzL,EAEFA,EAAQk+C,EAAczzF,IAAI28B,MAAuBz7B,aACvD,GAEH8xF,EAA0BK,GAC1BH,EAAeK,GAnBK,2CAAH,oDAuBjBG,KAED,CAAC73E,EAASY,IAEN,CAAEs2E,yBAAwBE,gB,wBCxC7BngE,GAAUxzB,aAAOoxC,IAAPpxC,CAAH,8HAES,qBAAGu0B,MAAkBG,OAAOC,cAK5C0/D,GAAUr0F,KAAOU,IAAV,6iBAQA,qBAAG6zB,MAAkBG,OAAOU,QAejC,qBAAGb,MAAkBG,OAAOC,cAC5B,qBAAGJ,MAAkBG,OAAOC,cAY9B2/D,GAAUt0F,KAAOU,IAAV,4OACA,qBAAG6zF,mBAA+C,eAAiB,UAM1D,qBAAGhgE,MAAkBG,OAAO8/D,YACvC,qBAAGjgE,MAAkBG,OAAOghC,oBA8CxB++B,GAxCiC,SAAC,GAA2B,IAAzBl4E,EAAwB,EAAxBA,QAAYhF,EAAY,mBACzE,EAAoDla,oBAAS,GAA7D,mBAAOk3F,EAAP,KAA2BG,EAA3B,KACQh1F,EAAMC,eAAND,EAgBR,SAASi1F,IACPD,GAAsB,GACtBpxC,YAAW,WACToxC,GAAsB,KACrB,KAGL,OACE,eAAC,IAAD,2BAAKh3C,SAAS,YAAenmC,GAA7B,cACE,eAACic,GAAD,WACE,cAAC6gE,GAAD,CAAS7lD,MAAOjyB,EAAhB,SACE,uBAAOsP,KAAK,OAAO+oE,UAAQ,EAACn1F,MAAO8c,MAErC,cAAC,KAAD,CAAY0wB,QAAQ,OAAO31B,QA3Bb,WAClB,GAAIu9E,UAAUC,WAAaD,UAAUE,YACnCF,UAAUC,UAAUE,UAAUz4E,GAAS2tB,MAAK,kBAAMyqD,YAC7C,GAAI9mB,SAASonB,sBAAsB,QAAS,CACjD,IAAMC,EAAMrnB,SAASsnB,cAAc,YACnCD,EAAIz1F,MAAQ8c,EACZsxD,SAAS+Q,KAAKwW,YAAYF,GAC1BA,EAAIG,SACJxnB,SAASynB,YAAY,QACrBznB,SAAS+Q,KAAK2W,YAAYL,GAC1BP,MAiBE,SACE,cAAC,IAAD,CAAUz9E,MAAM,UAAUhX,MAAM,cAGpC,cAACo0F,GAAD,CAASC,mBAAoBA,EAA7B,SAAkD70F,EAAE,iBC+C3C81F,GA7H+B,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,iBAAkB5nD,EAAgB,EAAhBA,UACzDnuC,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAAkClf,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAqCl5D,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACdz2D,EAAYwa,eAAZxa,QACSi0F,EAAgB54E,aAAgB3Y,gBAAzC1C,QACAk8B,EAAWF,eAAXE,OACR,EAAiE21D,KAAzDC,EAAR,EAAQA,uBAAqCoC,EAA7C,EAAgClC,YAE1Bv9C,EAAqBntB,cACrB6sE,EAAgBx1E,eAChBy1E,EAAe,IAAI30F,KAAUy0F,GAAiBjmE,aAAakmE,GAC3DE,EAAoBvC,EAAuBhtE,OAOjD,EALqB/mB,EAAE,8CAA+C,CACpEq2F,aAAcA,EAAax2F,WAC3B02F,MAAOD,EAAoB,EAAIA,EAAoB,GACnDr3E,MAA6B,IAAtBq3E,GAA2BA,EAAoB,EAAI,QAAU,SAExB9yF,MAAM6yF,EAAax2F,YAAjE,mBAAO22F,EAAP,KAAgBC,EAAhB,KACMC,EAAgBL,EAAar1F,IAAIo1F,GAMjCO,EAAkB33F,sBAAW,sBAAC,gCAAAd,EAAA,sDAClC+3F,GAAa,GADqB,eAGJlC,GAHI,gEAGvB6C,EAHuB,0BAMxBrwC,aAAY7P,EAAoBkgD,EAAgBj4E,KANxB,OAO9B6lD,EAAa,GAAD,OACPxkE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE0J,OAAQ,gBATzC,kDAY9BgvD,EAAW14D,EAAE,SAAUA,EAAE,uFAZK,+IAelCi2F,GAAa,GAfqB,uEAgBjC,CAAClC,EAAwBr9C,EAAoB8tB,EAAc9L,EAAY14D,IAE1E,OACE,qCACE,cAAC,KAAD,CAAMwX,MAAM,YAAY63B,SAAS,OAAO+6C,cAAc,YAAYyM,WAAW,OAAO5nD,GAAG,MAAvF,SACGjvC,EAAE,kBAEL,cAAC,GAAD,CAAa6c,QAASA,EAASoyB,GAAG,SACjC8mD,GACC,cAAC,KAAD,CAASxoD,QAAQ,UAAU0B,GAAG,OAA9B,SACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAM4nD,WAAW,OAAjB,SAAyB72F,EAAE,qBAC3B,cAAC,KAAD,CAAMiyC,GAAG,IAAT,SAAcjyC,EAAE,6CAItB,eAAC,IAAD,CAAMgyC,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAM75B,MAAM,aAAZ,SAA0BxX,EAAE,iBAC5B,cAAC,KAAD,UAAOmC,aAAsBF,EAAS,GAAI,QAE5C,eAAC,IAAD,CAAM+vC,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAM75B,MAAM,aAAZ,SAA0BxX,EAAE,wBAC5B,cAAC,KAAD,UAAOmC,aAAsB+zF,EAAa,GAAI,QAGhD,eAAC,IAAD,CAAMlkD,WAAW,SAASX,eAAe,gBAAzC,UACA,cAAC,KAAD,CAAO75B,MAAM,aAAb,SACSi/E,IAEFD,GACC,cAAC,KAAD,CAAOh/E,MAAM,aAAb,SACGg/E,IAGHH,IAAiBA,EAAaz4C,QAC9B,cAACrmC,GAAA,EAAD,CACE9V,SAAU40F,EAAalkE,GAAG,GAAK,EAAI,EACnCkd,SAAS,OACTD,MAAI,EACJz3B,OAAQ0+E,EAAalkE,GAAG,GAAK,KAAO,IACpC2kE,WAAW,IACX/2F,MAAOs2F,EAAan0F,aAGpB,cAAC,KAAD,CAAU1B,MAAO,GAAI20E,OAAQ,GAAIjB,GAAG,WAGtC,eAAC,IAAD,CAAMliC,WAAW,SAASX,eAAe,gBAAiBpC,GAAG,OAA7D,UACN,cAAC,KAAD,CAAMz3B,MAAM,aAAZ,SAA0BxX,EAAE,2BAC3B02F,IAAkBA,EAAc94C,QAC3B,cAACrmC,GAAA,EAAD,CACE9V,SAAUi1F,EAAcvkE,GAAG,GAAK,EAAI,EACpCkd,SAAS,OACTD,MAAI,EACJ0nD,WAAW,IACX/2F,MAAO22F,EAAcx0F,aAGrB,cAAC,KAAD,CAAU1B,MAAO,GAAI20E,OAAQ,GAAIjB,GAAG,WAGnC,cAAC,IAAD,CACH1zE,MAAO,CAAC,OAAQ,KAAM,KAAM,QAC5B6hB,GAAG,cACH4sB,GAAG,MACHvS,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEw3D,SAAUgnB,EACVp+E,QAAS++E,EAPN,SASH,cAAC,KAAD,CAAMn/E,MAAM,mBAAmB43B,MAAI,EAAnC,SACepvC,EAAZg2F,EAAc,aAAkB,mBAI3C,cAAC,IAAD,CAAQzoD,QAAQ,YAAY/sC,MAAM,OAAOoX,QA/FxB,WACnBu2B,IACAhQ,KA6FE,SACGn+B,EAAE,2B,oBCnILg3F,GAAU12F,aAAOoxC,IAAPpxC,CAAH,oFAMP22F,GAAU32F,KAAOU,IAAV,4DAKPk2F,GAAU52F,aAAO4xC,KAAP5xC,CAAH,8KAEF,qBAAGu0B,MAAkBG,OAAOU,QAUjCyhE,GAAa,SAACC,GAA6B,IAAD,IAC9C,OAAKA,EAAI/2D,QAIsB,KAAxB,UAAA+2D,EAAI/2D,eAAJ,eAAakQ,SAA+C,qBAA/B,UAAO6mD,EAAI/2D,eAAX,aAAO,EAAakQ,QACtD,cAAC,IAAD,CAAqB/4B,MAAM,UAAUhX,MAAM,SAE3C,cAAC,IAAD,CAAWgX,MAAM,UAAUhX,MAAM,SAN1B,cAAC,KAAD,CAAau2F,MAAI,EAACv2F,MAAM,UA4BpB62F,GAlBuC,SAAC,GAAa,IAAD,EAAVD,EAAU,EAAVA,IAC/CvzF,EAAYH,cAAZG,QAER,OAAKuzF,EAKH,eAACF,GAAD,CAAS1mD,KAAMtkB,YAAekrE,EAAI13D,KAAM,cAAe77B,GAAUsyD,UAAQ,EAAzE,UACE,cAAC6gC,GAAD,UAAUG,GAAWC,KACrB,cAACH,GAAD,oBAAUG,EAAIx3D,eAAd,QAAyBw3D,EAAI13D,OAC7B,cAACs3D,GAAD,UACE,cAAC,KAAD,CAAax2F,MAAM,OAAOgX,MAAM,iBAR7B,MCLI8/E,GAlCsB,WACnC,IAAQzzF,EAAYH,cAAZG,QACFua,EAAWgI,cACTpmB,EAAMC,eAAND,EACF+wC,EAAkBC,eAClBumD,EAAqBC,mBAAQzmD,EAAiB,YAAa,QAQjE,OACE,eAAC,IAAD,CAAK0mD,UAAU,QAAf,UACE,eAAC,IAAD,CAAMzlD,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACE,cAAC,KAAD,CAAMz3B,MAAM,YAAY63B,SAAS,OAAO+6C,cAAc,YAAYyM,WAAW,OAA7E,SACG72F,EAAE,yBAEJu3F,EAAmBxwE,OAAS,GAC3B,cAAC,IAAD,CAAQuqB,MAAM,KAAK15B,QAbJ,WACjB/T,GACFua,EAAS4hB,YAAqB,CAAEn8B,cAWgB0pC,QAAQ,OAAOk8B,GAAG,IAA9D,SACGzpE,EAAE,kBAIRu3F,EAAmBxwE,OAAS,EAC3BwwE,EAAmB94E,KAAI,SAAC24E,GAAD,OAAS,cAAC,GAAD,CAA+BA,IAAKA,GAAfA,EAAI13D,SAEzD,cAAC,KAAD,CAAMi9B,UAAU,SAAhB,SAA0B38D,EAAE,iC,SRnBxBizF,O,6BAAAA,I,gCAAAA,Q,KASL,I,sDSzBKyE,GTyBCC,GAAkB,IAAIj2F,KAAU,cAEvCk2F,GAAct3F,aAAOu3F,KAAPv3F,CAAH,6BAGXw3F,GAAOx3F,KAAOU,IAAV,iHACY,qBAAG6zB,MAAkBG,OAAOC,cACrB,qBAAGJ,MAAkBG,OAAOk5D,aAsC1C6J,GAlCiC,SAAC,GAAyD,IAAD,IAAtDC,mBAAsD,MAAxC/E,GAAWgF,YAA6B,EAAhB9pD,EAAgB,EAAhBA,UACvF,EAAwBxwC,mBAASq6F,GAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACQn4F,EAAMC,eAAND,EACR,EAAiCyc,eAAzBxa,EAAR,EAAQA,QACF8zF,EADN,EAAiBp5E,cACwBxE,KAAYgF,SAAWlb,EAAQ8kD,IAAI4wC,IAM5E,OACE,eAAC,KAAD,CAAgB7oD,MAAO9uC,EAAE,YAAas1E,SAAS,QAA/C,UACE,eAACsiB,GAAD,WACE,cAAC,KAAD,UACE,cAAC,IAAD,UAAU53F,EAAE,mBAEd,cAAC,KAAD,CAAYutC,QAAQ,OAAO31B,QAASu2B,EAApC,SACE,cAAC,IAAD,CAAW3tC,MAAM,OAAOgX,MAAM,cAGlC,cAACsgF,GAAD,UACE,eAAC,IAAD,CAAYxmD,MAAM,KAAK/D,QAAQ,SAASo/C,YAf1B,SAACyL,GACnBD,EAAQC,IAc8D7sB,YAAa2sB,EAAMG,WAAS,EAA9F,UACE,cAAC,IAAD,UAAiBr4F,EAAE,YACnB,cAAC,IAAD,UAAiBA,EAAE,uBAGvB,eAAC,KAAD,CAAWg6B,EAAE,OAAOgV,SAAS,QAAQxuC,MAAM,OAA3C,UACG03F,IAASjF,GAAWgF,aAAe,cAAC,GAAD,CAAYlC,iBAAkBA,EAAkB5nD,UAAWA,IAC9F+pD,IAASjF,GAAWqF,cAAgB,cAAC,GAAD,WU9C9BC,GAb+C,SAAC,GAAgD,IAA9CxC,EAA6C,EAA7CA,iBAAkByC,EAA2B,EAA3BA,qBACzEx4F,EAAMC,eAAND,EAER,OACE,cAAC,KAAD,CAAciyC,GAAG,SAASr6B,QAAS4gF,EAAnC,SACE,eAAC,IAAD,CAAMxmD,WAAW,SAASX,eAAe,gBAAgB7wC,MAAM,OAA/D,UACGR,EAAE,UACF+1F,GAAoB,cAAC,KAAD,CAAav+E,MAAM,UAAUhX,MAAM,eCmCjDi4F,GAhCE,WACf,IAAQz4F,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACAshB,EAAWF,eAAXE,OACR,EAAiC1hB,eAAzBxa,EAAR,EAAQA,QAAS0a,EAAjB,EAAiBA,YACjB,EAA8C0M,eAAZ0a,GAAlC,EAAQyvB,cAAR,EAAuB92B,UAAvB,EAAkCqH,SAClC,EAA+BgM,aAAS,cAAC,GAAD,CAAaioD,YAAa/E,GAAWgF,eAAtEO,EAAP,oBACA,EAAoCzoD,aAAS,cAAC,GAAD,CAAaioD,YAAa/E,GAAWqF,gBAA3EI,EAAP,oBAEMC,EAAY50D,GAAWA,EAAQivB,IAAnB,uBAAyCjvB,EAAQivB,IAAIG,OAAOC,SAAO51D,EAC/Eu4F,EAAmBp5E,IAAgBxE,KAAYgF,SAAWlb,EAAQ8kD,IAAI4wC,IAE5E,OAAK96E,EAKH,eAAC,KAAD,CAAeA,QAASA,EAAS87E,UAAWA,EAA5C,UACE,cAAC,GAAD,CAAoB5C,iBAAkBA,EAAkByC,qBAAsBA,IAC9E,cAAC,KAAD,CAAcvmD,GAAG,SAASr6B,QAAS8gF,EAAnC,SACG14F,EAAE,kBAEL,cAAC,KAAD,CAAciyC,GAAG,SAASr6B,QAASumB,EAAnC,SACE,eAAC,IAAD,CAAM6T,WAAW,SAASX,eAAe,gBAAgB7wC,MAAM,OAA/D,UACGR,EAAE,cACH,cAAC,KAAD,YAZC,cAACg+B,GAAA,EAAD,CAAqBsT,MAAM,QCMvBsnD,GA5BF,SAAC/gF,GAAW,IAAD,EACtB,EAAgC6c,eAAxBE,EAAR,EAAQA,OAAQ7I,EAAhB,EAAgBA,YACVw0C,EAAe3/C,eACbmjB,EAAY1a,eAAZ0a,QACR,EAA4C9jC,eAApClD,EAAR,EAAQA,gBAAiB0B,EAAzB,EAAyBA,YAAauB,EAAtC,EAAsCA,EAEtC,OACE,cAAC,KAAD,cACE64F,SAAU,cAAC,GAAD,IACVjkE,OAAQA,EACR7I,YAAaA,EACb+sE,YAAa/7F,EAAgBmqD,KAC7B6xC,MAAO5xC,KACP6xC,QAASv6F,EACT8hE,aAAcA,EAAar+D,WAC3B+2F,MAAO32E,GAAOtiB,GACd+jC,QAAS,CACP0uB,SAAQ,OAAE1uB,QAAF,IAAEA,OAAF,EAAEA,EAAS0uB,SACnBlV,OAAc,OAAPxZ,QAAO,IAAPA,OAAA,EAAAA,EAASivB,KAAT,iCAA+BjvB,EAAQivB,WAAvC,aAA+B,EAAaG,OAAOC,SAAO51D,EACjE07F,YAAa,WACbC,cAAe,WACfC,UAAS,OAACr1D,QAAD,IAACA,OAAD,EAACA,EAAS0uB,YAEjB56C,K,SCgBKwhF,G,kDA1Cb,WAAYxhF,GAAQ,IAAD,8BACjB,cAAMA,IACD9Z,MAAQ,CAAEu7F,UAAU,GAFR,E,sDAUnB,SAAkB37E,GAAQ,IAAD,EACjB47E,EAAoC,mBAAf57E,EAAM6Y,KAC3BgjE,EAAqC,0BAAf77E,EAAMupC,KAC5BuyC,EAAmBF,GAAsBC,EAIzCE,KAA8B,UAACxqD,OAAO8hC,QAAQjzE,aAAhB,aAAC,EAAsB27F,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAMC,EAAS,6BAAQzqD,OAAO8hC,QAAQjzE,OAAvB,IAA8B27F,4BAA4B,IAGzE,OAFAxqD,OAAO8hC,QAAQ4oB,aAAaD,EAAW,SACvCzqD,OAAOo8B,SAASuuB,SAIlB,MAAMl8E,I,oBAGR,WACE,IAAQ27E,EAAaxmD,KAAK/0C,MAAlBu7F,SACAQ,EAAahnD,KAAKj7B,MAAlBiiF,SAER,OAAIR,EACKQ,EAGF,cAAC,WAAD,gBAAchnD,KAAKj7B,W,uCAjC5B,WAEE,MAAO,CAAEyhF,UAAU,O,GARcr0B,IAAM80B,W,oBCHrCC,GAA2C,SAACniF,GAChD,MAAwBla,oBAAS,GAAjC,mBAAOsyC,EAAP,KAAagqD,EAAb,KACMC,EAAel7F,uBAAY,kBAAMi7F,GAAQ,KAAO,CAACA,IAGvD,OAFAE,aAAmBD,GAEfjqD,EAEA,qBAAKmqD,eAAgB,kBAAMH,GAAQ,IAAnC,SACE,cAAC,IAAD,gBAAoBpiF,MAInB,MAGMotD,OAAMtqC,KAAKq/D,I,yKCEpBK,GAAO/5F,KAAOU,IAAV,4JAOJs5F,GAAWh6F,KAAOU,IAAV,6BAERu5F,GAAiBj6F,KAAOU,IAAV,oDAIdw5F,GAAal6F,KAAO8jF,GAAV,2QAiBH,qBAAGvvD,MAAkBG,OAAO8vC,cA6M1B21B,GAzM+C,SAAC,GAYxD,IAXLtsD,EAWI,EAXJA,UACAzc,EAUI,EAVJA,WACAX,EASI,EATJA,IACA2pE,EAQI,EARJA,WACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,SAMI,IALJC,0BAKI,MALiB,OAKjB,MAJJ1pE,wBAII,MAJe,EAIf,MAHJC,yBAGI,MAHgB,EAGhB,MAFJR,sBAEI,MAFa,EAEb,MADJkqE,cACI,SACI96F,EAAMC,eAAND,EACFqxB,EAAiC,IAAOK,EAExCqpE,EAA2BxpE,aAAyC,CACxEC,aAAc,EACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIoqE,EAA2BzpE,aAAyC,CACxEC,aAAc,EACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIqqE,EAA4B1pE,aAAyC,CACzEC,aAAc,GACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAEIU,EAA6BC,aAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTW,aACAP,mBACAC,oBACAR,mBAGF,OACE,eAAC,KAAD,CAAOke,MAAO9uC,EAAE,OAAQmuC,UAAWA,EAAnC,UACG2sD,GACC,eAAC,IAAD,WACE,eAAC,IAAD,CAAM7rD,GAAG,MAAMoC,eAAe,gBAA9B,UACE,cAAC,KAAD,CAAM+kB,OAAK,EAAC5+C,MAAM,aAAlB,SACGxX,EAAE,4BAEL,eAAC,KAAD,CAAMo2D,OAAK,EAAX,UAAaskC,EAAb,UAEF,eAAC,IAAD,CAAMzrD,GAAG,OAAOoC,eAAe,gBAA/B,UACE,cAAC,KAAD,CAAM+kB,OAAK,EAAC5+C,MAAM,aAAlB,SACGxX,EAAE,2BAEL,eAAC,KAAD,CAAMo2D,OAAK,EAAX,UAAarlC,EAAI1uB,QAAQ8uB,GAAzB,aAIN,eAACkpE,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAMlrD,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAa4yE,cAAc,YAAYn7C,GAAG,OAA3E,SACGjvC,EAAE,iBAGP,cAACu6F,GAAD,UACE,cAAC,KAAD,CACE59B,UAAU,QACVttB,SAAS,OACTD,MAAI,EACJ53B,MAAM,aACN4yE,cAAc,YACd18C,GAAG,OACHiC,GAAG,OACHV,GAAG,OARL,SAUGjvC,EAAE,WAGP,cAACu6F,GAAD,UACE,cAAC,KAAD,CAAM59B,UAAU,QAAQttB,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAa4yE,cAAc,YAAYn7C,GAAG,OAA7F,SACGjvC,EAAE,sBAAuB,CAAE0J,OAAQmxF,QAIxC,cAACP,GAAD,UACE,cAAC,KAAD,UAAOt6F,EAAE,SAAU,CAAE6sB,IAAK,QAE5B,cAACytE,GAAD,UACE,eAAC,KAAD,CAAM39B,UAAU,QAAQjvB,GAAG,OAAOiC,GAAG,OAArC,UACGhe,aAAO,CAAEC,aAAcmpE,EAA0BlpE,eAAgBR,IAAkChvB,QAClG8uB,GAFJ,SAOF,cAACmpE,GAAD,UACE,cAAC,KAAD,CAAM39B,UAAU,QAAhB,SAAyBo+B,MAG3B,cAACT,GAAD,UACE,cAAC,KAAD,UAAOt6F,EAAE,SAAU,CAAE6sB,IAAK,QAE5B,cAACytE,GAAD,UACE,eAAC,KAAD,CAAM39B,UAAU,QAAQjvB,GAAG,OAAOiC,GAAG,OAArC,UACGhe,aAAO,CAAEC,aAAcopE,EAA0BnpE,eAAgBR,IAAkChvB,QAClG8uB,GAFJ,SAOF,cAACmpE,GAAD,UACE,cAAC,KAAD,CAAM39B,UAAU,QAAhB,SAAyBq+B,MAG3B,cAACV,GAAD,UACE,cAAC,KAAD,UAAOt6F,EAAE,SAAU,CAAE6sB,IAAK,SAE5B,cAACytE,GAAD,UACE,eAAC,KAAD,CAAM39B,UAAU,QAAQjvB,GAAG,OAAOiC,GAAG,OAArC,UACGhe,aAAO,CACNC,aAAcqpE,EACdppE,eAAgBR,IACfhvB,QAAQ8uB,GAJb,SAQF,cAACmpE,GAAD,UACE,cAAC,KAAD,CAAM39B,UAAU,QAAhB,SAAyBs+B,MAG3B,cAACX,GAAD,CAAUjmE,MAAO,CAAE2a,SAAU,SAA7B,SACE,cAAC,KAAD,UAAOhvC,EAAE,kBAEX,cAACs6F,GAAD,UACE,eAAC,KAAD,CAAM39B,UAAU,QAAQjvB,GAAG,OAAOiC,GAAG,OAArC,UACGhe,aAAO,CACNC,aAAcN,EACdO,eAAgBR,IACfhvB,QAAQ8uB,GAJb,SAQF,cAACmpE,GAAD,UACE,cAAC,KAAD,CAAM39B,UAAU,QAAhB,SAAyBrrC,SAG7B,cAAC,IAAD,CAAM+f,eAAe,SAArB,SACE,cAAC,IAAD,CAAKpC,GAAG,OAAOD,SAAS,QAAQhV,EAAE,MAAlC,SACE,eAACwgE,GAAD,WACE,6BACE,cAAC,KAAD,CAAMnrD,SAAS,OAAOstB,UAAU,SAASnlD,MAAM,aAAa4vD,QAAQ,SAApE,SACGpnE,EAAE,0CAGP,6BACE,cAAC,KAAD,CAAMqvC,SAAS,OAAOstB,UAAU,SAASnlD,MAAM,aAAa4vD,QAAQ,SAApE,SACGpnE,EAAE,6BAA8B,CAAEk7F,KAAM9pE,EAAkBvuB,uBAG9Di4F,GACC,6BACE,cAAC,KAAD,CAAMzrD,SAAS,OAAOstB,UAAU,SAASnlD,MAAM,aAAa4vD,QAAQ,SAApE,SACGpnE,EAAE,0FAIT,6BACE,cAAC,KAAD,CAAMqvC,SAAS,OAAOstB,UAAU,SAASnlD,MAAM,aAAa4vD,QAAQ,SAApE,SACGpnE,EACC,mHAIL4wB,EAAiB,GAChB,6BACE,cAAC,KAAD,CAAM8e,GAAG,OAAOL,SAAS,OAAOstB,UAAU,SAASnlD,MAAM,aAAa4vD,QAAQ,SAA9E,SACGpnE,EAAE,gFAA4E,CAC7Em7F,IAAKvqE,eAQnB,cAAC,IAAD,CAAMygB,eAAe,SAArB,SACE,cAAC,KAAD,CAAcb,KAAMoqD,EAApB,SAA+BD,U,SC1LxBS,GAjDuB,SAAC,GAAkC,IAAhC54E,EAA+B,EAA/BA,KAA+B,IAAzBoO,sBAAyB,MAAR,EAAQ,EAC9D5wB,EAAMC,eAAND,EACA6nC,EAAgFrlB,EAAhFqlB,aAAcC,EAAkEtlB,EAAlEslB,aAAchV,EAAoDtQ,EAApDsQ,WAAY/B,EAAwCvO,EAAxCuO,IAAKD,EAAmCtO,EAAnCsO,kBAAmBD,EAAgBrO,EAAhBqO,YAElEwqE,EACFr7F,EADmB6wB,EACjB,uHACA,iFAEN,EAA+C8E,aAAW0lE,EAAgB,CAAEzlE,UAAW,iBAA/EE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAE5B,EAAkFrF,aAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDmqE,EAAe1zD,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,QAEzG,EAA4BurC,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAaA,OACE,eAAC,IAAD,CAAMohB,WAAW,SAASX,eAAe,gBAAzC,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAM91B,EAAjB6wB,EAAmB,MAAiB,OAAzB,OACxCiC,IAAe/B,EACd,cAAC,KAAD,CAAUvwB,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CAAMnjC,WAAW,SAAjB,SACE,cAACz6B,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAOu7F,EACP75F,SAAU,EACViW,KAAK,IACL03B,MAAI,UCpDHosD,GAAal7F,aAAOy0B,IAAPz0B,CAAH,iOAOZ,gBAAGwyB,EAAH,EAAGA,WAAH,SAAe+B,MAAkBG,OAAOlC,EAAa,UAAY,gBAExE,qBAAG+B,MAAkBurC,aAAahN,M,oBCqBhCqoC,GAAkBn7F,aAAOoxC,IAAPpxC,CAAH,kFAOfo7F,GAAgD,SAAC,GAAuB,IAAD,EAApBl5E,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrD7c,EAAMC,eAAND,EACA2yB,EAAiBwa,eAAjBxa,aACR,EAGIiJ,eAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAIRiX,EASErlB,EATFqlB,aACAC,EAQEtlB,EARFslB,aACA4N,EAOElzB,EAPFkzB,YAGAI,GAIEtzB,EANFoQ,WAMEpQ,EALFqQ,SAKErQ,EAJFszB,cACAhzB,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACAoO,EACErO,EADFqO,YAGIvX,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GACzEm3F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eAC3B8zF,KAAqB,UAAC3sD,OAAO2N,gBAAR,aAAC,EAAiBigB,YACvCg/B,EAA8B,IAAXr5E,EAEzB,EACEiQ,aAAiBlQ,EAAMmQ,GAEzB,GAHA,EAAQI,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,gBAGtCuC,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,kBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIL,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKF,OACE,eAACylE,GAAD,CAAiB5qD,cAAc,SAA/B,UACE,eAAC,IAAD,CAAM5B,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMokB,OAAK,EAAX,UAAap2D,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMgyC,WAAW,aAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS6+C,OAAK,EAACr2D,MA1BG,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UAkBlB06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UACnF,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,MAAMD,GAAG,aAI1D,cAAC,KAAD,CAAUlvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAGjClmD,GAAgBA,EAAa3jB,GAAG,IAC/B,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAM+kB,OAAK,EAAX,UAAap2D,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMo2D,OAAK,EAAX,mBAAgBj0D,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAA3E,YAAiFomC,EAAan+B,aAGjGmnB,GACC,eAAC,IAAD,CAAMoe,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,YAMN,cAAC,IAAD,CAAMqe,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAAOgnB,OAAK,EAAhE,SACGp2D,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EACNgnB,OAAK,EAHP,SAKGp2D,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM+3B,eAAe,WAArB,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAU63B,SAAS,OAA/B,SACGrvC,EAAE,qBAEL,cAAC,KAAD,CAAc2vC,GAAG,iBAQds1B,OAAMtqC,KAAK+gE,ICtJpBU,GAA0B97F,aAAOoxC,IAAPpxC,CAAH,4HAyCd0rF,GAjCuB,SAAC,GAAuB,IAArBxpE,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrCgU,EAAgBrO,EAAhBqO,YACA7wB,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAO0+F,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAA+C21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAC3G3mE,UAAW,WADLE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAComE,GAAD,WACE,eAAC,IAAD,CAAMpqD,WAAW,SAAjB,UACGnhB,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCmF,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU6Z,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,cAAC,IAAD,CAAiBilF,SAAUJ,EAAYzkF,QAAS,kBAAM0kF,GAAeD,IAArE,SACgBr8F,EAAbq8F,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB75E,KAAMA,EAAM3F,QAASA,QC7CpDiX,GAAUxzB,aAAOo8F,IAAPp8F,CAAH,wGACG,gBAAGwyB,EAAH,EAAGA,WAAYmC,EAAf,EAAeA,WAAYJ,EAA3B,EAA2BA,MAA3B,OACZ/B,EAAa+B,EAAMG,OAAO2nE,mBAAqB9nE,EAAMG,OAAO4nE,UAAU3nE,MACvD,gBAAGJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMgoE,MAAM7O,KAA9B,YAAsCn5D,EAAMgoE,MAAM7O,KAAlD,WAyDJ8O,GA9CV,SAAC,GAAoH,IAAlHjC,EAAiH,EAAjHA,mBAAoBkC,EAA6F,EAA7FA,mBAAoBx6F,EAAyE,EAAzEA,OAAyE,IAAjEuwB,kBAAiE,aAA7CjC,mBAA6C,aAAxBmsE,iBAAwB,SAC/Gh9F,EAAMC,eAAND,EACFi9F,EAAepsE,EAAW,SAE5B,UAAGtuB,EAAH,QAAgBsrE,oBACdqvB,EAAoC,SAAvBrC,GAAwD,SAAvBkC,EAC9C9nE,EAAa+nE,EAAY,YAAc,aAyB7C,OACE,cAAC,GAAD,CAASlqE,WAAYA,EAAYmC,WAAYA,EAA7C,SACA,eAAC,IAAD,CAAM+c,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAApB,UACE,cAAC,IAAD,CAASr5B,MAAOsb,EAAa,eAAiB,OAAQwe,MAAM,KAA5D,mBAxBKtxC,EAFL6wB,EAEO,OAEPqsE,EAEO,SAGF,QAiBL,YAC4BrC,KAE5B,cAAC,KAAD,CAAMrjF,MAAOsb,EAAa,eAAiB,aAA3C,SAhBAjC,EACK7wB,EAAE,uBAEPk9F,EACKl9F,EAAE,yBAEJA,EAAE,iBAAkB,CAAE0J,OAAQqzF,SAYnC,cAAC,KAAD,CAAOvmC,IAAG,wBAAmBymC,GAAgBj1C,IAAKzlD,EAAQ/B,MAAO,GAAI20E,OAAQ,W,+ECjDtEgoB,GAAiB,SAACC,EAAsB36E,EAAQo4E,GAC3D,MAAkDl9F,oBAAS,GAA3D,mBAAO0/F,EAAP,KAA0BC,EAA1B,KACA,EAAqCvgE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd14D,EAAMC,eAAND,EACFoe,EAAWC,eACTxB,EAAYlZ,eAAZkZ,QACF0gF,EAAmB/zE,YAAY/G,GA0BrC,MAAO,CAAE+6E,cAxBax+F,sBAAW,sBAAC,8BAAAd,EAAA,sEAE9Bo/F,GAAqB,GAFS,SAGbF,EAAWnzD,QAAQszD,EAAiB/4F,QAASvB,KAAOw6F,UAAUrzD,YAHjD,cAGxBlK,EAHwB,gBAIRA,EAAGgmB,OAJK,OAIxB7lB,EAJwB,OAM9BjiB,EAASw7B,aAAoBn3B,EAAQ5F,IACjCwjB,EAAQkQ,QACVi0B,EACExkE,EAAE,oBACFA,EAAE,0CAA2C,CAAE0J,OAAQmxF,KAEzDyC,GAAqB,KAGrB5kC,EAAW14D,EAAE,SAAUA,EAAE,uFACzBs9F,GAAqB,IAhBO,kDAmB9B5/E,QAAQC,MAAR,MACA+6C,EAAW14D,EAAE,SAAUA,EAAE,uFApBK,0DAsB/B,CAAC6c,EAASuB,EAAUg/E,EAAYG,EAAkB96E,EAAQo4E,EAAoB76F,EAAG04D,EAAY8L,IAExE64B,sBAIbK,GAAkB,SAAC1gF,GAC9B,MAAkDrf,oBAAS,GAA3D,mBAAO0/F,EAAP,KAA0BC,EAA1B,KACQt9F,EAAMC,eAAND,EACR,EAAqC+8B,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WAChBtgB,EAAoBvuB,cACpBpR,EAAe0Q,cAgBrB,MAAO,CAAEq0E,cAdU,uCAAG,4BAAAt/F,EAAA,sEACHua,EAAawxB,QAAQmO,EAAkB5zC,QAASvB,KAAOw6F,UAAUrzD,YAD9D,cACdlK,EADc,OAEpBo9D,GAAqB,GAFD,SAGEp9D,EAAGgmB,OAHL,cAIR3V,QACVi0B,EAAaxkE,EAAE,oBAAqBA,EAAE,2CAA4C,CAAE0J,OAAQ,UAC5FsT,IACAsgF,GAAqB,KAErB5kC,EAAW14D,EAAE,SAAUA,EAAE,uFACzBs9F,GAAqB,IAVH,2CAAH,qDAcKD,sBAGbM,GAA8B,WACzC,MAA8ChgG,oBAAS,GAAvD,mBAAOigG,EAAP,KAAwBC,EAAxB,KACQhhF,EAAYlZ,eAAZkZ,QACFpE,EAAe0Q,cACfivB,EAAoBvuB,cAC1B,EAAwC/M,eAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAerB,OAdA/e,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,+EAEDua,EAAagH,UAAU5C,EAASu7B,EAAkB5zC,SAFjD,OAElBimC,EAFkB,OAGlBlB,EAAmB,IAAI7nC,KAAU+oC,EAAS5qC,YAChDg+F,EAAmBt0D,EAAiBpX,GAAG,IAJf,gDAMxB0rE,GAAmB,GANK,yDAAH,qDAUzBC,KACC,CAACjhF,EAASpE,EAAc2/B,EAAmBr7B,IAEvC,CAAE6gF,kBAAiB5gF,mBCrDb+gF,GAzBuC,SAAC,GAAiC,IAA/Bv7E,EAA8B,EAA9BA,KAA8B,IAAxBka,iBAAwB,SAC7Eja,EAAuCD,EAAvCC,OAAQolB,EAA+BrlB,EAA/BqlB,aAAcC,EAAiBtlB,EAAjBslB,aACtB9nC,EAAMC,eAAND,EACFg+F,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAA6C24F,GAAea,EAAsBv7E,EAAQqlB,EAAap+B,QAA/F8zF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG3gE,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAW2gE,EACXnoB,QAASmoB,EAAoB,cAAC,IAAD,CAAetG,MAAI,EAACv/E,MAAM,iBAAoB,KAC3Ew3D,SAAUquB,EACVzlF,QAAS4lF,EACTh9F,MAAM,OALR,SAOGR,EAAE,eCYEi+F,IAhCI39F,aAAO4xC,KAAP5xC,CAAH,+CAIkD,SAAC,GAAgC,IAA9B+8C,EAA6B,EAA7BA,YAAalP,EAAgB,EAAhBA,UACxEnuC,EAAMC,eAAND,EACU00B,eAAVG,MAER,OACE,eAAC,KAAD,CACEia,MAAO9uC,EAAE,oBAAqB,CAAE0J,OAAQ2zC,IACxClP,UAAWA,EAFb,UAIE,cAAC,KAAD,CAAM32B,MAAM,UAAU43B,MAAI,EAA1B,SACGpvC,EAAE,gCAAiC,CAAE0J,OAAQ2zC,MAEhD,cAAC,KAAD,CAAM3N,GAAG,OAAT,SAAiB1vC,EAAE,mDAA+C,CAAE0J,OAAQ2zC,MAC5E,cAAC,KAAD,UACGr9C,EAAE,kFAA8E,CAC/E0J,OAAQ2zC,MAGZ,eAAC,IAAD,CAAQ3N,GAAG,OAAOuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAvC,UACGxwC,EAAE,OADL,IACcq9C,KAEd,cAAC,IAAD,CAAQ9P,QAAQ,OAAO31B,QAASu2B,EAAhC,SACGnuC,EAAE,uBC7BLk+F,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAYH69F,GAR2C,SAAC,GAA2B,IAAzBzgG,EAAwB,EAAxBA,SAAUka,EAAc,EAAdA,QACrE,OACE,cAACsmF,GAAD,CAAc5sD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAASA,EAA3E,SACGla,KCJD0gG,GAAS,uCAAG,WAAOb,EAAkB/7F,GAAzB,+BAAAtD,EAAA,6DAAiCuD,EAAjC,+BAA4C,GAA5C,SACC87F,EAAiBp3C,QAAQ,IAAIzkD,KAAUF,GAAQG,MAAMC,KAAQC,IAAIJ,IAAW5B,YAD7E,cACVqgC,EADU,gBAEMA,EAAGgmB,OAFT,cAEV7lB,EAFU,yBAGTA,EAAQkQ,QAHC,2CAAH,wDAMT8tD,GAAY,uCAAG,WAAOd,EAAkB/7F,GAAzB,iBAAAtD,EAAA,sEACFq/F,EAAiBp3C,QAAQ,IAAIzkD,KAAUF,GAAQG,MAAMg8B,MAAuB99B,YAD1E,cACbqgC,EADa,gBAEGA,EAAGgmB,OAFN,cAEb7lB,EAFa,yBAGZA,EAAQkQ,QAHI,2CAAH,wDA8BH+tD,GAxBM,SAAC77E,GAAwC,IAAxB87E,EAAuB,wDACrDngF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF65B,EAAqBntB,cACrBg0E,EAAmB/zE,YAAY/G,GAE/B+7E,EAAcx/F,sBAAW,uCAC7B,WAAOwC,EAAgBC,GAAvB,SAAAvD,EAAA,yDACiB,IAAXukB,EADN,gCAEUujC,aAAUtP,EAAoB,EAAGl1C,GAF3C,kCAGa+8F,EAHb,iCAIUF,GAAad,EAAkB/7F,GAJzC,gDAMU48F,GAAUb,EAAkB/7F,EAAQC,GAN9C,QAQE2c,EAAS27B,aAAwBt3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IATrC,4CAD6B,wDAY7B,CAACA,EAASuB,EAAUmgF,EAAY7nD,EAAoB6mD,EAAkB96E,IAGxE,MAAO,CAAEg8E,QAASD,ICnCdE,GAAW,uCAAG,WAAOnB,EAAkB/7F,EAAQC,GAAjC,iBAAAvD,EAAA,sEACDq/F,EAAiBj3C,SAAS,IAAI5kD,KAAUF,GAAQG,MAAMC,KAAQC,IAAIJ,IAAW5B,YAD5E,cACZqgC,EADY,gBAEIA,EAAGgmB,OAFP,cAEZ7lB,EAFY,yBAGXA,EAAQkQ,QAHG,2CAAH,0DAMXouD,GAAoB,uCAAG,WAAOpB,GAAP,iBAAAr/F,EAAA,sEACVq/F,EAAiBqB,oBADP,cACrB1+D,EADqB,gBAELA,EAAGgmB,OAFE,cAErB7lB,EAFqB,yBAGpBA,EAAQkQ,QAHY,2CAAH,sDA+BXsuD,GAzBQ,SAACp8E,GAA6C,IAArCq8E,EAAoC,wDAC5D1gF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF65B,EAAqBntB,cACrBg0E,EAAmB/zE,YAAY/G,GAE/Bs8E,EAAgB//F,sBAAW,uCAC/B,WAAOwC,EAAgBC,GAAvB,SAAAvD,EAAA,yDACiB,IAAXukB,EADN,gCAEU2jC,aAAY1P,EAAoB,EAAGl1C,GAF7C,kCAGas9F,EAHb,iCAIUH,GAAqBpB,GAJ/B,gDAMUmB,GAAYnB,EAAkB/7F,EAAQC,GANhD,QAQE2c,EAAS27B,aAAwBt3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IACnCuB,EAAS47B,aAAwBv3B,EAAQ5F,IAV3C,4CAD+B,wDAa/B,CAACA,EAASuB,EAAU0gF,EAAyBpoD,EAAoB6mD,EAAkB96E,IAGrF,MAAO,CAAEu8E,UAAWD,ICpBhBE,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,+CAoLD4+F,GAhL+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACA38E,EAKI,EALJA,KACAk3B,EAII,EAJJA,oBACAP,EAGI,EAHJA,kBAGI,IAFJimD,uBAEI,SADJjxD,EACI,EADJA,UAEQ1rB,EAA+DD,EAA/DC,OAAQolB,EAAuDrlB,EAAvDqlB,aAAcnoB,EAAyC8C,EAAzC9C,SAAUo2B,EAA+BtzB,EAA/BszB,aAAchO,EAAiBtlB,EAAjBslB,aAC9C9nC,EAAMC,eAAND,EAEAy+F,GADU/pE,eAAVG,MACYypE,GAAa77E,EAAQ08E,GAAjCV,SACAO,EAAcH,GAAep8E,EAAQD,EAAKs8E,yBAA1CE,UACR,EAAqCjiE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAAyD3hG,oBAAS,GAAlE,mBAAO4hG,EAAP,KAA6BC,EAA7B,KACA,EAA8B7hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACMC,EAA4B,WAChC,OAAIP,EACK1/E,EAASE,cAEXk2B,EAAa3jB,GAAG,IAAMunB,EAAoBvnB,GAAG2jB,GAAgBA,EAAe4D,GAG/EkmD,EAAiBP,GAAe/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMw3C,GAAmBj3C,YAEvGjE,qBAAU,WACR,GAAI63C,EAAa3jB,GAAG,KAAOitE,EAAiB,CAC1C,IAAMS,EAAyBt+F,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACzF+9F,EAAyBK,EAAuBC,KAAKpgF,EAASE,eAAeuS,GAAG2jB,OAEjF,CAACupD,EAAavpD,EAAcp2B,EAAUmoB,EAAcu3D,EAAiBI,IAExE,IAWMO,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBN,IAA4B59F,UAAU,KAAKmuB,aAAa8vE,GACjFE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPG,EAAkB,uCAAG,sBAAAjiG,EAAA,yDACzB+3F,GAAa,IAETmJ,EAHqB,0CAMfJ,EAAUK,EAAax3D,EAAapmC,UANrB,OAOrB+iE,EAAa,GAAD,OACPxkE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnE0J,OAAQo+B,EAAap+B,UAGzBusF,GAAa,GACb9nD,IAdqB,kDAgBrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjBQ,2DAsBfwI,EAAQY,EAAax3D,EAAapmC,UAtBnB,QAuBrB+iE,EAAa,GAAD,OACPxkE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrD0J,OAAQm+B,EAAan+B,UAGzBusF,GAAa,GACb9nD,IA9BqB,mDAgCrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjCQ,kEAAH,qDAsCxB,OACE,eAAC,KAAD,CACEnnD,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIG2H,EAAa3jB,GAAG,KAAOitE,GACtB,cAAC,KAAD,CAAM5nF,MAAM,YAAY43B,MAAI,EAACH,GAAG,OAAO5a,MAAO,CAAEsoC,UAAW,UAAYttB,SAAS,OAAhF,SACGrvC,EAAE,4CAA6C,CAC9CwB,OAAQW,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GACnEse,MAAO8nB,EAAan+B,WAI1B,eAAC,IAAD,CAAMsoC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAzFyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB7+F,aAAiB,IAAIG,KAAU01D,GAAQvvB,EAAapmC,UACrE4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAU49F,KAA6BzvE,aAAa,KAAKhuB,YACtGw9F,EAAWzuE,KAAK8+D,IAAIsQ,EAAY,WAEhCX,EAAW,GAEbJ,EAAeloC,IAkFXkpC,cAAqC,IAAtBnnD,GAAA,WAA+BymD,GAAkB,EAAjD,QACfpmB,UAAW+lB,EACX99F,SAAUomC,EAAapmC,WAExB89F,GACC,cAAC,KAAD,CAAM/nF,MAAM,UAAU63B,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,SAAWjtB,GAAG,MAAxE,SACG1vC,EAAE,wCAAyC,CAC1CwB,OAAQW,aAAsB,IAAIT,KAAUo0C,GAAejO,EAAapmC,SAAU,GAClFse,MAAO8nB,EAAan+B,WAI1B,cAAC,KAAD,CAAMimC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAAtD,SACGjvC,EAAE,qBAAsB,CACvBiC,QAASE,aAAsBw9F,IAA6B93D,EAAapmC,cAG7E,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB93B,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,MAArD,SAA4D//F,EAAE,YAEhE,cAAC,IAAD,CACE08B,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,IAAsBE,EAC3D7vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,GAAD,CAAYjpC,UAAQ,EAAC3lB,KAAK,QAA1B,SACE,cAAC,IAAD,CAAQhwC,MAAM,OAAOkvC,GAAG,MAAMnC,QAAQ,YAAtC,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,iBChFvCg3F,GAhGkC,SAAC,GAO3C,IANLl+E,EAMI,EANJA,KACAk3B,EAKI,EALJA,oBACA95B,EAII,EAJJA,cACAu/E,EAGI,EAHJA,UACAwB,EAEI,EAFJA,SAEI,IADJjkE,iBACI,SACImL,EAAwErlB,EAAxEqlB,aAAcsR,EAA0D32B,EAA1D22B,kBAAmBrD,EAAuCtzB,EAAvCszB,aAAchjB,EAAyBtQ,EAAzBsQ,WAAYpT,EAAa8C,EAAb9C,SAC3D1f,EAAMC,eAAND,EACF4gG,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAAiCsuC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA2BhxD,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,EAAP,oBAUA,EAA+CrrE,aAC7C31B,EAAE,6EACF,CAAE41B,UAAW,WAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBirE,EAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAmD3E,OAAO,cAAC,IAAD,CAAMjF,cAAc,SAApB,SAA8BnU,EAAY,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAhDtEwrB,EACL,eAAC,IAAD,CAAMtvD,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMnB,cAAc,SAApB,SACE,qCACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAO6gG,IAC3B,IAAtBznD,GACC,cAAC,KAAD,CAAM9J,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACV1B,MAAO8gG,EACPlpF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,KAAD,CAAY61B,QAAQ,YAAY31B,QAASopF,EAAkBtzD,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,EACC,sBAAMhrE,IAAKH,EAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EACtD9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,OAAO20E,OAAO,cAIlDn/C,GAAkBD,KAGrB,cAAC,IAAD,CAAQi5C,SAAUl8C,EAAYlb,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAApF,SACG9gG,EAAE,cClGLkhG,GAAW,uCAAG,WAAO3D,GAAP,iBAAAr/F,EAAA,sEACDq/F,EAAiBp3C,QAAQ,KADxB,cACZjmB,EADY,gBAEIA,EAAGgmB,OAFP,cAEZ7lB,EAFY,yBAGXA,EAAQkQ,QAHG,2CAAH,sDAMX4wD,GAAc,uCAAG,WAAO5D,GAAP,iBAAAr/F,EAAA,sEACJq/F,EAAiBp3C,QAAQ,CAAGpmD,MAAOiX,OAD/B,cACfkpB,EADe,gBAECA,EAAGgmB,OAFJ,cAEf7lB,EAFe,yBAGdA,EAAQkQ,QAHM,2CAAH,sDA2BL6wD,GArBQ,SAAC3+E,GAAgC,IAAxB87E,EAAuB,wDAC/CngF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF0gF,EAAmB/zE,YAAY/G,GAC/Bi0B,EAAqBntB,cAErB83E,EAAgBriG,sBAAW,sBAAC,sBAAAd,EAAA,yDACjB,IAAXukB,EAD4B,gCAExB8jC,aAAY7P,EAAoB,GAFR,kCAGrB6nD,EAHqB,iCAIxB4C,GAAe5D,GAJS,gDAMxB2D,GAAY3D,GANY,QAQhCn/E,EAAS47B,aAAwBv3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IATH,4CAU/B,CAACA,EAASuB,EAAUmgF,EAAY7nD,EAAoB6mD,EAAkB96E,IAEzE,MAAO,CAAE6+E,SAAUD,ICsGNE,GA7GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA35D,EAMI,EANJA,aACA45D,EAKI,EALJA,oBACAj/E,EAII,EAJJA,OACA08E,EAGI,EAHJA,UAGI,IAFJwC,sBAEI,SADJxzD,EACI,EADJA,UAEQnuC,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd4oC,EAAaF,GAAe3+E,EAAQ08E,GAApCmC,SACA7C,EAAYH,GAAa77E,EAAQ08E,GAAjCV,QACR,EAAkC9gG,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAA4Ct4F,mBAASgkG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+ClsE,aAC7C,qCACE,cAAC,KAAD,CAAMsZ,GAAG,OAAT,SAAiBjvC,EAAE,yDACnB,cAAC,KAAD,UAAOA,EAAE,uDAEX,CAAE41B,UAAW,aAAcksE,cAAe,CAAC,GAAI,MALzChsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtB+rE,EAAoB,uCAAG,sBAAA7jG,EAAA,yDAC3B+3F,GAAa,IAET2L,EAHuB,0CAKjBnD,EAAQgD,EAAa35D,EAAarmC,UALjB,OAMvB+iE,EAAa,GAAD,OACPxkE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAE0J,OAAQo+B,EAAap+B,UAE1FusF,GAAa,GACb9nD,IAXuB,kDAavBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GAfU,2DAoBjBqL,IApBiB,QAqBvB98B,EAAa,GAAD,OACPxkE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE0J,OAAQo+B,EAAap+B,UAEpFusF,GAAa,GACb9nD,IA1BuB,mDA4BvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEnnD,MAAK,UAAKhH,EAAap+B,OAAlB,YAA6C1J,EAAjB2hG,EAAmB,UAAe,YACnExzD,UAAWA,EAFb,UAGGwzD,GACC,eAAC,IAAD,CAAMtwD,eAAe,SAASW,WAAW,SAAS/C,GAAG,OAArD,UACE,eAAC,IAAD,CACEs8B,YAAaq2B,EAAiB,EAAI,EAClCtwD,MAAM,KACN/D,QAAQ,SACRo/C,YAAa,SAAC33C,GAAD,OAAW6sD,GAAmB7sD,IAJ7C,UAME,cAAC,IAAD,CAAgB/C,GAAG,SAAnB,SAA6BjyC,EAAE,cAC/B,cAAC,IAAD,CAAgBiyC,GAAG,SAAnB,SAA6BjyC,EAAE,gBAEjC,cAAC,IAAD,CAAM2vC,GAAG,OAAO1Z,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUte,MAAM,iBAEjBwe,GAAkBD,KAIvB,eAAC,IAAD,CAAMsb,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBjvC,EAAjB4hG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM/wD,cAAc,SAApB,UACE,eAAC,IAAD,WACG2wD,EADH,IACsB15D,EAAap+B,UAElCg4F,EAAsB,GACrB,cAAC,KAAD,CAAMryD,SAAS,OAAO73B,MAAM,aAA5B,oBAA8ClV,aAAao/F,GAA3D,gBAKN,cAAC,IAAD,CACEhyD,GAAG,MACH93B,QAASmqF,EACTrlE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KAJrE,SAMexX,EAAZg2F,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQzoD,QAAQ,OAAO31B,QAASu2B,EAAW6zD,GAAG,MAA9C,SACGhiG,EAAE,sBC/CIiiG,GAtEuC,SAAC,GAOhD,IANLpiF,EAMI,EANJA,SACAioB,EAKI,EALJA,aACArlB,EAII,EAJJA,OACA08E,EAGI,EAHJA,UACAruE,EAEI,EAFJA,kBAEI,IADJ4L,iBACI,SACI18B,EAAMC,eAAND,EACFkiG,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GAExDC,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UAEpGggG,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D2gG,EAAcviF,EAAS3d,WAAa,EACpCy/F,EAA4B,IAAXl/E,EAEvB,EAA2BstB,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,OACE,eAAC,IAAD,CAAMhxD,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,cAAC,IAAD,CAAM4B,cAAc,SAApB,SACGnU,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,mCACGitB,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IACjDpxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQw3D,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,iBCtErCW,GAAahiG,aAAO4lF,KAAP5lF,CAAH,mDAqEDiiG,GA5DiC,SAAC,GAA6B,IAA3B//E,EAA0B,EAA1BA,KAAM5C,EAAoB,EAApBA,cAC/C6C,EAA2FD,EAA3FC,OAAQolB,EAAmFrlB,EAAnFqlB,aAAcC,EAAqEtlB,EAArEslB,aAAcU,EAAuDhmB,EAAvDgmB,QAAS9lB,EAA8CF,EAA9CE,aAAchD,EAAgC8C,EAAhC9C,SAAUoR,EAAsBtO,EAAtBsO,kBAEvEquE,EAAYz8E,IAAiB5E,KAAa6E,QACxC3iB,EAAMC,eAAND,EACFyf,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE0iC,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KACpG6I,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAC7EwrF,GAAiB/iF,EAAU0S,GAAG,KAAOgtE,EACrCwB,EAAW/gF,EAAcuS,GAAG,GAC5BuK,GAAahd,EAEnB,OACE,cAAC,IAAD,CAAMmxB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGrI,GACC,qCACE,eAAC,IAAD,CAAK4+B,QAAQ,SAAb,UACE,cAACk7B,GAAD,CAAY9qF,MAAM,YAAY4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAtE,mBACMvH,EAAap+B,OADnB,OAGA,cAAC44F,GAAD,CAAY9qF,MAAM,aAAa4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAvE,SACGrvC,EAAE,eAGP,cAAC,GAAD,CACE6f,SAAUA,EACVioB,aAAcA,EACdrlB,OAAQA,EACRqO,kBAAmBA,EACnBquE,UAAWA,EACXziE,UAAWA,OAIjB,eAAC,IAAD,CAAK0qC,QAAQ,SAAb,UACE,eAACk7B,GAAD,CAAY9qF,MAAOmpF,EAAW,YAAc,aAAcvW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,UACGsxD,EAAW94D,EAAan+B,OAAS1J,EAAE,SAAU,OAEhD,cAACsiG,GAAD,CAAY9qF,MAAOmpF,EAAW,aAAe,YAAavW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,SACGsxD,EAAW3gG,EAAE,UAAL,UAAoB6nC,EAAan+B,aAG7C84F,EACC,cAAC,GAAD,CAAgBhgF,KAAMA,EAAMka,UAAWA,IAEvC,cAAC+lE,GAAD,CACE/lE,UAAWA,EACXla,KAAMA,EACNk3B,oBAAqBA,EACrB95B,cAAeA,EACfu/E,UAAWA,EACXwB,SAAUA,UCNP+B,GArD6C,SAAC,GAAuB,IAArBlgF,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QAC3Dta,EAA8HigB,EAA9HjgB,OAAQkgB,EAAsHD,EAAtHC,OAAQolB,EAA8GrlB,EAA9GqlB,aAAcC,EAAgGtlB,EAAhGslB,aAAchV,EAAkFtQ,EAAlFsQ,WAAYpT,EAAsE8C,EAAtE9C,SAASyoB,EAA6D3lB,EAA7D2lB,aAAcC,EAA+C5lB,EAA/C4lB,cAC/EpoC,GAD8HwiB,EAAhC6lB,cAAgC7lB,EAAjB8lB,cACvGroC,eAAND,GACF4f,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF2rF,EAA0B/iF,EAAcuS,GAAG,GAE3C9xB,EAAMC,KAAOU,IAAV,uJAOT,OACE,eAACw6F,GAAD,CACE1oE,WAAYA,GAAyB,IAAXrQ,EAC1BmgF,OAAQ9vE,GAAc,cAAC,IAAD,CAAY+vE,aAAa,eAAentE,KAAM11B,EAAE,cAFxE,UAIE,cAAC,GAAD,CACEuC,OAASA,EACTy6F,UAAW2F,EACX9H,mBAAoB/yD,EAAap+B,OACjCqzF,mBAAoBl1D,EAAan+B,OACjCopB,WAAYA,GAAyB,IAAXrQ,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,IACd,eAACniB,EAAD,WACE,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC2wB,IAED,cAAC,KAAD,CAAMw0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE4wB,OAGJ,cAAC,IAAD,CAAMsH,GAAG,OAAOmB,cAAc,SAA9B,SACGh0B,EACC,cAAC,GAAD,CAAa2F,KAAMA,EAAM5C,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMqvB,GAAG,OAAOm7C,cAAc,YAAY/6C,SAAS,OAAO73B,MAAM,aAAa43B,MAAI,EAAjF,SACGpvC,EAAE,mBAEL,cAACg+B,GAAA,EAAD,YAKR,cAAC8kE,GAAD,CAAYtgF,KAAMA,EAAM3F,QAASA,QC5BxBkmF,GAxB4C,SAAC,GAA2C,IAAD,IAAxCrmE,iBAAwC,SAArB1f,EAAqB,EAArBA,eACvEhd,EAAMC,eAAND,EAER,EAA6C09F,GAAgB1gF,GAArDwgF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG3gE,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAW2gE,EACXnoB,QAASmoB,EAAoB,cAAC,IAAD,CAAetG,MAAI,EAACv/E,MAAM,iBAAoB,KAC3Ew3D,SAAUquB,EACVzlF,QAAS4lF,EACTh9F,MAAM,OALR,SAOGR,EAAE,eCIEgjG,GA5Be,SAACnmE,EAA2B7K,GAAyD,IAAlCyK,EAAiC,uDAAX,OACrG,EAAgD9+B,mBAAS,MAAzD,mBAAOslG,EAAP,KAAyBC,EAAzB,KACA,EAA8CvlG,oBAAS,GAAvD,mBAAOwlG,EAAP,KAAwBC,EAAxB,KACA,EAA4CzlG,mBAASszB,KAAKu5C,MAAM1rC,KAAKS,MAAQ,MAA7E,mBAAO8jE,EAAP,KAAuBC,EAAvB,KAsBA,OApBArlG,qBAAU,WACR,IACMslG,EADa1mE,EAAoBJ,EACG4mE,EACpCG,EAAwBxxE,EAAWG,GAAG,IAAMoxE,EAAuB,EAKnEE,EAAgBz2D,aAAY,WAFhCs2D,GAAkB,SAACI,GAAD,OAAiBA,EAAc,OAEH,KAShD,OARIF,GACFN,EAAoBK,GACpBH,GAAmB,KAEnBA,GAAmB,GACnBl2D,cAAcu2D,IAGT,kBAAMv2D,cAAcu2D,MAC1B,CAAC5mE,EAAmBJ,EAAqBymE,EAAqBG,EAAgBrxE,IAE1E,CAAEmxE,kBAAiBF,qB,UChBbU,GAPoD,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,iBAC5DjjG,EAAMC,eAAND,EACR,EAAiC8pE,aAAem5B,GAAxC54B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAErB,OAAO,cAAC,KAAD,CAAMl7B,SAAS,OAAf,SAAuBrvC,EAAE,+BAAgC,CAAE4jG,IAAKv5B,EAAMw5B,KAAMv5B,EAAOw5B,OAAQv5B,OC8DrFw5B,GA3D2D,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnEhkG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAGI+e,eAHJ,IACElc,SAAYmd,EADd,EACcA,kBAAmB7K,EADjC,EACiCA,WADjC,IAEEsK,KAAQE,EAFV,EAEUA,cAAeC,EAFzB,EAEyBA,oBAEnBwnE,EAAeznE,EAAgB,KAAO,IAC5C,EAA+C7G,aAC7C,qCACE,cAAC,KAAD,CAAMyZ,MAAI,EAACH,GAAG,MAAd,SACGjvC,EAAE,wBAAyB,CAAEm7F,IAAK8I,MAErC,cAAC,KAAD,UACGjkG,EACC,4JAIN,CAAE41B,UAAW,iBAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,EAA8CgtE,GAC5C3+F,SAASw4B,EAAmB,IAC5B7K,EACAyK,GAHMwmE,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,gBAOpBe,EAAarnE,IAAsBsmE,GAAmBnxE,EAAWG,GAAG,GAGpEgyE,EAAkBtnF,GAAWggB,GAAqBsmE,EAYxD,OACE,eAAC,IAAD,CACEnxD,WAAYgyD,EAAiB,aAAe,SAC5C3yD,eAAe,gBACfR,cAAemzD,EAAiB,SAAW,MAH7C,UAKGhuE,GAAkBD,EACnB,eAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAACg0B,cAAc,YAAjD,UACG8Z,EAAa,IAAMD,EADtB,KAfOjkG,EADLkkG,EACO,gBAEPC,EACO,sBAEF,4CAaNA,GAAmB,cAAC,GAAD,CAAoBlB,iBAAkBA,QClBjDmB,GArC+B,SAAC,GAAyC,IAAvCrH,EAAsC,EAAtCA,mBAAoBsC,EAAkB,EAAlBA,YAC3Dr/F,EAAMC,eAAND,EAIFikG,EADFroE,eADFU,KAAQE,cAE2B,IAC/B6nE,GAAa/qD,WAAW+lD,IAAgB4E,EAAe,MAAM5hG,QAAQ,GAC3E,EAA+CszB,aAC7C,qCACE,cAAC,KAAD,CAAMyZ,MAAI,EAACH,GAAG,MAAd,SACGjvC,EAAE,wBAAyB,CAAEm7F,IAAK8I,MAErC,cAAC,KAAD,UACGjkG,EACC,4JAIN,CAAE41B,UAAW,cAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,OACE,qCACE,eAAC,IAAD,CAAM0Z,GAAG,OAAOsC,WAAW,SAASX,eAAe,gBAAnD,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,mBAEL,eAAC,KAAD,CAAMqvC,SAAS,OAAf,UACGgwD,EAAcgF,EAAY,IAD7B,IACmCtH,QAGrC,cAAC,GAAD,QCfAmB,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAIZgkG,GAAc,CAClB/5D,SAAU,OA4LGg6D,GAzLyC,SAAC,GAA8D,IAA5D/hF,EAA2D,EAA3DA,KAAMgiF,EAAqD,EAArDA,WAAqD,IAAzCpF,uBAAyC,SAAhBjxD,EAAgB,EAAhBA,UAC9F/vB,EAAWC,eACTwpB,EAAiBrlB,EAAjBqlB,aACAhrB,EAAYlZ,eAAZkZ,QACFu7B,EAAoBvuB,cAC1B,EAGI+R,eAHJ,IACElc,SAAYmd,EADd,EACcA,kBAAmB7K,EADjC,EACiCA,WAC/BC,EAFF,EAEEA,kBAEMjyB,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAA8B3hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACQyD,EAAoBH,GAAsB3+F,SAASw4B,EAAmB,IAAK7K,GAA3EmxE,gBACF/M,EAAgBx1E,eAChBg/E,EACJxJ,EAAcjkE,GAAG,IAAMktE,EAAc/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMy0F,GAAel0F,YAAc,GAa5G69F,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBuE,EAAWziG,UAAU,KAAKmuB,aAAa8vE,GAChEE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPyE,EAAgB,uCAAG,WAAOC,GAAP,uBAAAxmG,EAAA,yDACvB+3F,GAAa,GACP0O,EAAuBr0E,aAAoBo0E,EAAsBzyE,GAEjE2yE,EAA8B,IAAIljG,KAAU,MAC5CmjG,EAAkB7yE,EAAWK,MAAMsyE,EAAqBl0E,oBACrCo0E,EAAgB99C,IAAI69C,GANtB,0CAUFxsD,EAAkB0sD,YAAYR,IAV5B,cAUbpkE,EAVa,iBAWGA,EAAGgmB,OAXN,eAYP3V,SACVi0B,EAAaxkE,EAAE,aAAcA,EAAE,0DAC/Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,aAAuB,CAAE7e,cAhBjB,kDAmBnB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GApBM,2DA0BF79C,EAAkBkO,SAASq+C,EAAqBl0E,kBAAkB5wB,WAAYykG,IA1B5E,eA0BbpkE,EA1Ba,iBA2BGA,EAAGgmB,OA3BN,eA4BP3V,SACVi0B,EAAaxkE,EAAE,aAAcA,EAAE,0DAC/Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,aAAuB,CAAE7e,cAhCjB,mDAmCnB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GApCM,kEAAH,sDAyChB8O,EAAa,uCAAG,WAAOL,GAAP,eAAAxmG,EAAA,6DACpB+3F,GAAa,GADO,kBAKD79C,EAAkB+N,QAAQu+C,EAAqB7kG,WAAYykG,IAL1D,cAKZpkE,EALY,gBAMIA,EAAGgmB,OANP,cAON3V,SACVi0B,EAAaxkE,EAAE,WAAYA,EAAE,4CAC7Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,aAAuB,CAAE7e,cAXlB,kDAclB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAfK,0DAAH,sDAmBbkK,EAAkB,uCAAG,4BAAAjiG,EAAA,sDACnBwmG,EAAuBnjG,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACnF29F,EAEFqF,EAAiBC,GAGjBK,EAAcL,GAPS,2CAAH,qDAWxB,OACE,eAAC,KAAD,CACE51D,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIE,eAAC,IAAD,CAAM6D,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAlHyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB,IAAI1+F,KAAU01D,GAAOlnC,aAAatuB,KAAQC,IAAIgmC,EAAapmC,WAC5E4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAUyiG,GAAYt0E,aAAa,KAAKhuB,YACrFw9F,EAAWW,EAAa,IAAM,IAAMA,QAEpCX,EAAW,GAEbJ,EAAeloC,IA2GXkpC,cAAelK,EAAcjkE,GAAG,IAAjB,WAA2BytE,GAAkB,EAA7C,QACfn+F,SAAUomC,EAAapmC,WAEzB,cAAC,KAAD,CAAMiuC,GAAG,MAAMC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAA/D,SACGjvC,EAAE,qBAAsB,CAAEiC,QAASE,aAAsBqiG,EAAY38D,EAAapmC,cAErF,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAc4B,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,MAArG,SACG//F,EAAE,YAGNo/F,GAAmB+D,GAClB,cAAC,GAAD,CAAYpG,mBAAoBl1D,EAAan+B,OAAQ21F,YAAaA,IAEpE,cAAC,IAAD,CACE3iE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,GACrC3vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,IAAD,CAAQ1vD,GAAG,MAAMuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAQjD,QAAQ,YAAtD,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,eC7JrCs7F,GAxCyC,SAAC,GAAmC,IAAjCxiF,EAAgC,EAAhCA,KAAMk3B,EAA0B,EAA1BA,oBAC/D,EAGI9d,eAFU5J,EADd,EACEtS,SAAYsS,WACZC,EAFF,EAEEA,kBAEM4V,EAAiBrlB,EAAjBqlB,aACR,EAAiDjY,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnBimE,EAAgBx1E,eAChBqkF,EAAoB7O,EAAcjkE,GAAG,GACvCnwB,aAAiBouB,EAAgBF,aAAakmE,GAAgBvuD,EAAapmC,UAC3E,EAEJ,EAAiCsuC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBACA,EAAyB/wD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAnFu+E,EAAP,oBACA,EAA2BhxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAYp0E,EAAiB5N,KAAMA,EAAM48E,iBAAe,KAAtG4B,EAAP,oBAEA,OACE,eAAC,IAAD,CAAM3vD,eAAe,gBAAgBW,WAAW,SAAhD,UACE,eAAC,IAAD,CAAMnB,cAAc,SAApB,UACE,cAACt5B,GAAA,EAAD,CAAS83B,SAAS,OAAOD,MAAI,EAACrvC,MAAOowB,EAAqB1uB,SAAU,IACpE,cAAC,KAAD,CAAM4tC,SAAS,OAAO73B,MAAM,aAA5B,SACG4+E,EAAcjkE,GAAG,GAChB,cAAC5a,GAAA,EAAD,CAASxX,MAAOklG,EAAmB51D,SAAS,OAAO73B,MAAM,aAAa/V,SAAU,EAAGkW,OAAO,IAAID,KAAK,SAEnG,cAAC,KAAD,CAAUg4B,GAAG,MAAMylC,OAAQ,GAAI30E,MAAO,UAI5C,eAAC,IAAD,WACE,cAAC,KAAD,CAAY+sC,QAAQ,YAAY31B,QAASopF,EAAkBtzD,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAEnC,cAAC,KAAD,CAAY+sC,QAAQ,YAAY31B,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAAtF,SACE,cAAC,IAAD,CAAStpF,MAAM,UAAUhX,MAAM,OAAO20E,OAAO,kBCZxC+vB,GAtB6C,SAAC,GAKtD,IAJL1iF,EAII,EAJJA,KACAk3B,EAGI,EAHJA,oBACAyrD,EAEI,EAFJA,uBAEI,IADJzoE,iBACI,SACImL,EAAiBrlB,EAAjBqlB,aACA7nC,EAAMC,eAAND,EACR,EAAiC+vC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBACA,EAAyB/wD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAnFu+E,EAAP,oBAUA,OAAO,cAAC,IAAD,CAAMlwD,cAAc,SAApB,SAA8BnU,EAAY,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAPtEgwB,EACL,cAAC,GAAD,CAAkB3iF,KAAMA,EAAMk3B,oBAAqBA,IAEnD,cAAC,IAAD,CAAQ9hC,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAA9D,SAAuF9gG,EAAE,cCpBzFsiG,GAAahiG,aAAO4lF,KAAP5lF,CAAH,mDAmDD8kG,GA3CV,SAAC,GAAiD,IAA/C5iF,EAA8C,EAA9CA,KAAM2iF,EAAwC,EAAxCA,uBAAwBzoE,EAAgB,EAAhBA,UAC5BmL,EAA2BrlB,EAA3BqlB,aAAcnoB,EAAa8C,EAAb9C,SACd1f,EAAMC,eAAND,EACF05C,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KAE1G,EAA4C2mF,KAApCC,EAAR,EAAQA,gBAAiB5gF,EAAzB,EAAyBA,eAEzB,OACE,cAAC,IAAD,CAAM6zB,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACE,eAAC,IAAD,CAAKu2B,QAAQ,SAAb,UACE,eAAC,GAAD,CACE5vD,MAAO2tF,EAAyB,YAAc,aAC9C/a,cAAc,YACdh7C,MAAI,EACJC,SAAS,OAJX,UAMG81D,EAAyBt9D,EAAan+B,OAAS1J,EAAE,SAAU,OAE9D,cAAC,GAAD,CACEwX,MAAO2tF,EAAyB,aAAe,YAC/C/a,cAAc,YACdh7C,MAAI,EACJC,SAAS,OAJX,SAMG81D,EAAyBnlG,EAAE,wBAAL,UAAkC6nC,EAAan+B,aAGzEk0F,EACC,cAAC,GAAD,CACElhE,UAAWA,EACXla,KAAMA,EACNk3B,oBAAqBA,EACrByrD,uBAAwBA,IAG1B,cAAC,GAAD,CAAqBzoE,UAAWA,EAAW1f,eAAgBA,UCftDqoF,GA7ByD,SAAC,GAIlE,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,oBAEQxlG,EAAMC,eAAND,EAER,EAA+C21B,aAC7C,qCACE,cAACpe,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOulG,EAAe7jG,SAAU,EAAG2tC,MAAI,EAAC13B,KAAK,gBACtE,cAACH,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOwlG,EAAsB9jG,SAAU,EAAG2tC,MAAI,EAACz3B,OAAO,OAC9E3X,EAAE,iCACH,cAAC,KAAD,UAAOwlG,OAET,CACE5vE,UAAW,eARPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAY5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACE,cAAC7+C,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOulG,UCSzBG,GAlCsB,WACnC,IAAQzlG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAGI+e,eAFF3J,EADF,EACEA,kBADF,IAEEvS,SAAYqS,EAFd,EAEcA,qBAAsBC,EAFpC,EAEoCA,WAAY8K,EAFhD,EAEgDA,mBAE1Cs5D,EAAgBx1E,eACtB,EAAiEkR,aAC/DjV,EACAkV,EACAC,EACAC,EACAmkE,EAAcl0F,YALRgwB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCizE,EAAiB5oE,GAAqD,IAA/Bz4B,SAASy4B,GAEhD0oE,EADqB,IAAI1mE,KAAK4mE,GACW7iG,iBAE/C,OACE,eAAC,IAAD,CAAMmvC,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMhC,SAAS,OAAf,mBAA0BrvC,EAAE,4BAA5B,OACCkyB,GACC,cAAC,GAAD,CACEozE,cAAehzE,EACfizE,qBAAsB9yE,EACtB+yE,oBAAqBA,QCpBzBG,GAAiBrlG,aAAOslG,IAAPtlG,CAAH,mDACJ,qBAAGo8B,UAA6B,IAAM,WAEhDr8B,GAAMC,KAAOU,IAAV,6IAwEM6kG,GA5DiC,SAAC,GAA8B,IAA5BrjF,EAA2B,EAA3BA,KAAMsjF,EAAqB,EAArBA,eAC/C9lG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAGI+e,eAHJ,IACElc,SAAYsS,EADd,EACcA,WAAuB+zE,EADrC,EAC0BrpE,UAChB9L,EAFV,EAEE0L,KAAQ1L,eAGJu0E,EAAyBnzE,GAAcA,EAAWG,GAAG,GACrDuK,GAAala,EAAK9C,UAAYqmF,EAC9BC,EAA0Bp1E,GAAkBA,EAAiB,IAC3DruB,EAAwHigB,EAAxHjgB,OAA0D4lC,GAA8D3lB,EAAhHqlB,aAAgHrlB,EAAlGslB,aAAkGtlB,EAApFsQ,WAAoFtQ,EAAxE9C,SAAwE8C,EAA9D2lB,cAAcC,EAAgD5lB,EAAhD4lB,cAAgD5lB,EAAjC6lB,cAAiC7lB,EAAlB8lB,cAE9G,OAAIw9D,IAAmBX,EACd,KAIP,eAAC3J,GAAD,CAAYvjE,UAAQ,EAApB,UACE,cAAC,GAAD,CACE11B,OAAQA,EACRy6F,UAAWmI,EACXt0E,aAAW,EACXgqE,mBAAmB,aACnBkC,mBAAmB,eAErB,eAAC4I,GAAD,CAAgBjpE,UAAWA,EAA3B,UACE,cAAC,GAAD,CAAQla,KAAMA,EAAMoO,eAAgBo1E,IACpC,eAAC,GAAD,WACE,cAAC,KAAD,CAAMrpC,UAAU,OAAOnlD,MAAM,WAA7B,SACC2wB,IAED,cAAC,KAAD,CAAMw0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE4wB,OAGJ,cAAC,IAAD,CAAKsH,GAAG,OAAR,SACE,cAACu2D,GAAD,MAEF,cAAC,IAAD,CAAKv2D,GAAG,MAAR,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAMA,GAAG,OAAOmB,cAAc,SAA9B,SACGh0B,EACC,cAACqpF,GAAD,CAAkB1jF,KAAMA,EAAM2iF,uBAAwBA,EAAwBzoE,UAAWA,IAEzF,qCACE,cAAC,KAAD,CAAMuS,GAAG,OAAOm7C,cAAc,YAAY/6C,SAAS,OAAO73B,MAAM,aAAa43B,MAAI,EAAjF,SACGpvC,EAAE,mBAEL,cAACg+B,GAAA,EAAD,YAKR,cAAC8kE,GAAD,CAAYtgF,KAAMA,EAAM3F,QAASA,S,SpClF3B66E,K,cAAAA,E,aAAAA,Q,KAUZ,I,yMqCVYA,GrCUNv3B,GAAY7/D,KAAOU,IAAV,yIAIX,qBAAG6zB,MAAkBurC,aAAahN,MAyBvB+yC,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,eAACpmC,GAAD,WACE,cAAC,KAAD,CAAY5yB,QAAQ,OAAO+D,MAAM,KAAKjvB,GAAG,oBAAoBzK,QAAS,kBAAM0uF,EAAa5O,GAAS8O,OAAlG,SACE,cAAC,IAAD,CAAchvF,MAAO4uF,IAAa1O,GAAS8O,KAAO,UAAY,mBAEhE,cAAC,KAAD,CAAYj5D,QAAQ,OAAO+D,MAAM,KAAKjvB,GAAG,qBAAqBzK,QAAS,kBAAM0uF,EAAa5O,GAAS+O,QAAnG,SACE,cAAC,KAAD,CAAcjvF,MAAO4uF,IAAa1O,GAAS+O,MAAQ,UAAY,uBsC9BjEC,GAAgBpmG,KAAOU,IAAV,qIAKfklF,MAKEygB,GAAermG,KAAOU,IAAV,sSAWd,qBAAG6zB,MAAkBurC,aAAahN,MAUhCt/B,GAAUxzB,KAAOU,IAAV,8MAUT,qBAAG6zB,MAAkBurC,aAAahN,MA0CvBwzC,GArCQ,SAAC,GAAmF,IAAjFxuE,EAAgF,EAAhFA,WAAYyuE,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,wBAAyBV,EAA4B,EAA5BA,SAAUW,EAAkB,EAAlBA,YACtF,EAAyBC,eAAjBplE,EAAR,EAAQA,IAAKqlE,EAAb,EAAaA,QACLjnG,EAAMC,eAAND,EAEFknG,EAAiB,cAAC,GAAD,CAAYd,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBQ,EAAYR,MAE3FY,EACJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAY57B,YAAa07B,EAAU,EAAI,EAAG31D,MAAM,KAAK/D,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgB0E,GAAIC,KAAOC,GAAG,aAA9B,SACGnyC,EAAE,UAEL,cAAC,KAAD,CAAiBiwC,KAAM62D,EAAvB,SACE,cAAC,IAAD,CAAgB70D,GAAIC,KAAMC,GAAE,UAAKvQ,EAAL,YAA5B,SACG5hC,EAAE,qBAOPonG,EACJ,eAACV,GAAD,WACE,cAAC,KAAD,CAAQ92D,QAASxX,EAAYyX,SAAU,kBAAMg3D,GAAezuE,IAAakZ,MAAM,OAC/E,eAAC,KAAD,eAAQtxC,EAAE,qBAId,OACE,eAAC2mG,GAAD,WACGO,EACAE,EACAD,MCjEDE,GAAU/mG,KAAOU,IAAV,+GACS,qBAAG6zB,MAAkBG,OAAO2nE,sBAgHnC2K,GA1GiC,SAAC,GAAqC,IAAnCn5D,EAAkC,EAAlCA,UAAWo5D,EAAuB,EAAvBA,iBACpDvnG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAER,GADkB6X,eAAVG,MAC6BkI,eAA7B27B,EAAR,EAAQA,WAAY8L,EAApB,EAAoBA,aACdpsB,EAAoBvuB,cAC1B,EAAkClsB,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAIIr6D,eAHFO,EADF,EACEA,0BACAE,EAFF,EAEEA,wBACQE,EAHV,EAGED,KAAQC,QAEJ65D,EAAgBx1E,eAChB4mF,EAAmBjrE,EAAU,IAC7BkrE,EAAsBzlG,aAAiBq6B,EAAyB,IAEhEqrE,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GACjFs1E,EAAwBF,EAAyB3lG,aAAiB0lG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5lG,aAAiBm6B,EAA2B,IAAM,EAErG,EAA+CxG,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,SACXmyE,eAAgB,CAAEC,MAAO,MAFnBlyE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBmqE,EAAkB,uCAAG,4BAAAjiG,EAAA,6DACzB+3F,GAAa,GADY,kBAGN79C,EAAkB5P,QAAQ,CAAE+B,SAAU,OAHhC,cAGjBrK,EAHiB,gBAIDA,EAAGgmB,OAJF,cAKX3V,SACVi0B,EAAaxkE,EAAE,qBAAsBA,EAAE,oDACvCi2F,GAAa,GACb9nD,KARqB,kDAWvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAZU,0DAAH,qDAgBxB,OACE,eAAC,KAAD,CAAOnnD,MAAO9uC,EAAE,gBAAiBmuC,UAAWA,EAA5C,UACGnY,GAAkBD,EACnB,eAAC,IAAD,CAAMic,WAAW,aAAaX,eAAe,gBAA7C,UACE,cAAC,KAAD,UAAOrxC,EAAE,uBACT,eAAC,IAAD,CAAM6wC,cAAc,SAApB,UACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACrvC,MAAO+nG,EAAqBrmG,SAAU,EAAGiW,KAAK,gBAC5D,cAAC,KAAD,CAAM23B,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACNzX,MAAO8nG,EACPpmG,SAAU,EACViW,KAAK,OACLC,OAAO,cAKf,cAAC0vF,GAAD,IACA,eAAC,IAAD,CAAMr1D,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMhC,SAAS,OAAO73B,MAAM,aAA5B,SACGxX,EAAE,8BAEL,cAACuX,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO0nG,EAAqB/vF,KAAK,mBAE/D,eAAC,IAAD,CAAMs6B,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACE,cAAC,KAAD,CAAMI,SAAS,OAAO73B,MAAM,aAA5B,SACGxX,EAAE,YAEL,eAAC,KAAD,CAAMqvC,SAAS,OAAO73B,MAAM,aAA5B,UACGgwF,EADH,UAID3qF,EACC,cAAC,IAAD,CACE6f,UAAWs5D,EACXhnB,UAAW64B,IAA0BC,IAAwBvrE,EAC7D24C,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTlxD,GAAG,OACH5sB,GAAG,wBANL,SAQeriB,EAAZg2F,EAAc,aAAkB,aAGnC,cAACh4D,GAAA,EAAD,CAAqBiR,GAAG,SAE1B,eAAC,IAAD,CAAMoC,eAAe,SAASW,WAAW,SAAzC,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAak2B,GAAG,MAAjD,SACG1tC,EAAE,uBAEL,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUte,MAAM,wBCvGpBgkF,GAAal7F,aAAOy0B,IAAPz0B,CAAH,gGAGZ,qBAAGu0B,MAAkBurC,aAAahN,MA+FvB60C,GA1FI,WACjB,IAAQjoG,EAAMC,eAAND,EACR,EAGI47B,eAFFO,EADF,EACEA,0BACQI,EAFV,EAEED,KAAQC,QAEJ65D,EAAgBx1E,eAEhB8mF,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GACjFs1E,EAAwBF,EAAyB3lG,aAAiB0lG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5lG,aAAiBm6B,EAA2B,IAAM,EAE/ForE,EAAmB,SAAC,GAAD,IAAGpM,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAMlsD,GAAG,OAAT,SAAiBjvC,EAAE,8EACnB,cAAC,KAAD,CAAMivC,GAAG,OAAT,SACGjvC,EACC,+JAGJ,cAAC,KAAD,CAAMq0B,MAAO,CAAEwiE,WAAY,QAA3B,SACG72F,EAAE,+EAAgF,CAAEm7F,IAAKA,EAAM,YAKtG,EAA+BprD,aAAS,cAAC,GAAD,CAAaw3D,iBAAkBA,KAAhEW,EAAP,oBAEA,EAA+CvyE,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,aACXksE,cAAe,CAAC,GAAI,MAFdhsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM8a,cAAc,SAApB,SACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMI,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAak2B,GAAG,MAAjD,SACG1tC,EAAE,4BAEL,cAAC,IAAD,CAAKi2B,IAAKH,EAAV,SACE,cAAC,IAAD,CAAUte,MAAM,sBAItB,eAAC,IAAD,CAAMw6B,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAASnD,GAAG,OAAhC,UACE,cAAC,IAAD,UACGk6D,EACC,cAACrwF,GAAA,EAAD,CAAS83B,SAAS,OAAOD,MAAI,EAACrvC,MAAO+nG,EAAqBrmG,SAAU,IAEpE,cAAC,KAAD,CAAU0zE,OAAQ,GAAI30E,MAAO,GAAIyuC,GAAG,UAGvC04D,EACC,cAACpwF,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACNzX,MAAO8nG,EACPpmG,SAAU,EACViW,KAAK,OACLC,OAAO,MAGT,cAAC,KAAD,CAAUw9D,OAAQ,GAAI30E,MAAO,QAGjC,cAAC,IAAD,CACEwuE,UAAW64B,IAA0BC,IAAwBvrE,EAC7D3kB,QAASswF,EACT52D,MAAM,KACNjvB,GAAG,wBAJL,SAMGriB,EAAE,uBC3GXmoG,GAAa7nG,aAAO4lF,KAAP5lF,CAAH,oFAEZ,qBAAGu0B,MAAkBurC,aAAaoL,MAKhCyzB,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,kLAQZ,qBAAGu0B,MAAkBurC,aAAahN,MAmBvBg1C,GAdI,WACjB,IAAQpoG,EAAMC,eAAND,EACR,OACE,cAAC,GAAD,CAAYm2D,UAAQ,EAAC3lB,KAAK,8CAA1B,SACE,eAAC,IAAD,CAAQi5B,GAAI,CAAC,OAAQ,KAAM,KAAM,KAAM,QAASl8B,QAAQ,SAAxD,UACE,cAAC46D,GAAD,CAAY3wF,MAAM,gBAAgB43B,MAAI,EAACC,SAAS,OAAhD,SACGrvC,EAAE,UAEL,cAAC,IAAD,CAAUwX,MAAM,gBAAgBm4B,GAAI,CAAC,KAAM,KAAM,KAAM,EAAG,e,qCCrBrD0J,I,OAAa,SACxBF,EACAonC,EACA7qC,EACAjN,GAEA,IAAM+3C,EAA0B,IAAI9+E,KAAU+mC,GAAe9mC,MAAM27B,MAC7DmjD,EAA0B,IAAI/+E,KAAUy3C,GAAmBx3C,MAAM+zC,GACjE3kB,EAAMyvD,EAAwBx/E,IAAIy/E,GAAyB9+E,MAAM,KACvE,OAAOovB,EAAI6sB,UAAY7sB,EAAI2vD,WAAa,KAAO3vD,EAAI7uB,a,uCCXxCqyC,GAAqB,uCAAG,oCAAAr2C,EAAA,6DAC7Bs2C,EAAejyB,KAAYiE,QAAO,SAACwT,GAAD,OAAoB,IAAbA,EAAEvX,UAC3CgyB,EAAkBD,EAAa/1B,KAAI,SAACi2B,GACxC,MAAO,CACLlwC,QAASD,aAAWmwC,EAAW5xB,iBAC/B0T,KAAM,iBAGJme,EAAgBH,EAAa/1B,KAAI,SAACi2B,GACtC,MAAO,CACLlwC,QAASD,aAAWmwC,EAAW5xB,iBAC/B0T,KAAM,oBAXyB,SAedrQ,aAAUyuB,GAAaH,GAfT,cAe7BI,EAf6B,gBAgBhB1uB,aAAUyuB,GAAaD,GAhBP,cAgB7BG,EAhB6B,yBAkB5BN,EAAa/1B,KAAI,SAACs2B,EAAgBC,GACvC,IAAMpiB,EAAaiiB,EAAOG,GACpBniB,EAAWiiB,EAAKE,GACtB,MAAO,CACLvyB,OAAQsyB,EAAetyB,OACvBmQ,WAAY,IAAIlxB,KAAUkxB,GAAYtb,SACtCub,SAAU,IAAInxB,KAAUmxB,GAAUvb,cAxBH,4CAAH,qDA6BrB29B,GAAsB,uCAAG,sCAAA/2C,EAAA,6DAC9Bg3C,EAAc3yB,KAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACvDyrC,EAAU5yB,KAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UAEnD0rC,EAAmBF,EAAYz2B,KAAI,SAACi2B,GACxC,MAAO,CACLlwC,QAASD,aAAWmwC,EAAW7M,aAAarjC,SAC5CgyB,KAAM,YACNC,OAAQ,CAAClyB,aAAWmwC,EAAW5xB,sBAI7BuyB,EAAgBF,EAAQ12B,KAAI,SAACi2B,GACjC,MAAO,CACLlwC,QAASqB,eACT2wB,KAAM,YACNC,OAAQ,CAAClyB,aAAWmwC,EAAW5xB,sBAhBC,SAoBCqD,aAAUmvB,GAASF,GApBpB,cAoB9BG,EApB8B,gBAqBFpvB,aAAUqvB,GAASH,GArBjB,cAqB9BI,EArB8B,+CAwB/BP,EAAYz2B,KAAI,SAACub,EAAGgb,GAAJ,MAAe,CAChCvyB,OAAQuX,EAAEvX,OACVizB,YAAa,IAAIh0C,KAAU6zC,EAAuBP,IAAQ19B,cA1B1B,YA4B/B69B,EAAQ12B,KAAI,SAACub,EAAGgb,GAAJ,MAAe,CAC5BvyB,OAAQuX,EAAEvX,OACVizB,YAAa,IAAIh0C,KAAU+zC,EAAoBT,IAAQ19B,gBA9BvB,4CAAH,qDAmCtBq+B,GAAqB,uCAAG,WAAOlzB,GAAP,iBAAAvkB,EAAA,sEAE3B03C,EAAe7yB,aAAsBN,GAFV,SAGNmzB,EAAaC,mBAHP,cAG3BC,EAH2B,yBAI1B,IAAIp0C,KAAUo0C,EAAaj2C,aAJD,yDAM1BmX,MAN0B,yDAAH,sDAUrB++B,GAAuB,uCAAG,WACrCC,GADqC,mBAAA93C,EAAA,6DAG/B+3C,EAAa1zB,KAChBiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,SAAqBswB,EAAElH,cACpDtM,QAAO,SAACwT,GAAD,OAAQgc,EAAsB9T,SAASlI,EAAEvX,WAI7CyzB,EAAuBD,EAAWx3B,KAAI,SAAC03B,GAAD,OAAeR,GAAsBQ,EAAU1zB,WATtD,SAUT2zB,QAAQC,IAAIH,GAVH,cAU/BI,EAV+B,yBAY9BA,EAAc5b,QAAO,SAAC6b,EAAOT,EAAcd,GAChD,OAAO,6BACFuB,GADL,mBAEGN,EAAWjB,GAAOvyB,OAASqzB,MAE7B,KAjBkC,2CAAH,sD,SCzE9BZ,GAAc3yB,KAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACvD8sC,GAAWj0B,KAAYiE,QAAO,SAACwT,GAAD,MAAiC,QAA1BA,EAAE6N,aAAan+B,UACpD+sC,GAAiBl0B,KAAYiE,QAAO,SAACwT,GAAD,OAAoB,IAAbA,EAAEvX,UAC7Ci0B,GAAqB7yB,eAEd8yB,GAAmB,uCAAG,WAAO95B,GAAP,iBAAA3e,EAAA,6DAC3B+nB,EAAQivB,GAAYz2B,KAAI,SAACub,GAAD,MAAQ,CACpCx1B,QAASD,aAAWy1B,EAAE6N,aAAarjC,SACnCgyB,KAAM,YACNC,OAAQ,CAAC5Z,EAAStY,aAAWy1B,EAAElX,sBAJA,SAORqD,aAAUywB,GAAU3wB,GAPZ,cAO3B4wB,EAP2B,yBAQ1B3B,GAAYxa,QACjB,SAACoc,EAAKt0B,EAAMwyB,GAAZ,oBAAC,gBAA2B8B,GAA5B,mBAAkCt0B,EAAKC,OAAS,IAAI/gB,KAAUm1C,EAAW7B,IAAQ19B,aACjF,KAV+B,2CAAH,sDAcnBy/B,GAAiB,uCAAG,WAAOl6B,GAAP,uBAAA3e,EAAA,6DAEzB+nB,EAAQivB,GAAYz2B,KAAI,SAACub,GAAD,MAAQ,CACpCx1B,QAASD,aAAWy1B,EAAE6N,aAAarjC,SACnCgyB,KAAM,YACNC,OAAQ,CAAC5Z,OALoB,SAOAsJ,aAAUywB,GAAU3wB,GAPpB,cAOzB+wB,EAPyB,OAQzBC,EAAgB/B,GAAYxa,QAChC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,oBAAC,gBAA2B8B,GAA5B,mBAAkCt0B,EAAKC,OAAS,IAAI/gB,KAAUs1C,EAAiBhC,IAAQ19B,aACvF,IAV6B,SAcNrT,KAAkBgZ,WAAWJ,GAdvB,cAczBq6B,EAdyB,OAezBC,EAAcX,GAAS9b,QAC3B,SAACoc,EAAKt0B,GAAN,oBAAC,gBAAoBs0B,GAArB,mBAA2Bt0B,EAAKC,OAAS,IAAI/gB,KAAUw1C,EAAWr3C,YAAYyX,aAC9E,IAjB6B,+CAoBnB2/B,GAAkBE,IApBC,4CAAH,sDAuBjBC,GAAsB,uCAAG,WAAOv6B,GAAP,uBAAA3e,EAAA,6DAC9B+nB,EAAQwwB,GAAeh4B,KAAI,SAACub,GAAD,MAAQ,CACvCx1B,QAASD,aAAWy1B,EAAElX,iBACtB0T,KAAM,WACNC,OAAQ,CAAC5Z,OAJyB,SAMbsJ,aAAUyuB,GAAa3uB,GANV,cAM9BoxB,EAN8B,OAO9BC,EAAiBb,GAAe/b,QACpC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,oBAAC,gBACI8B,GADL,mBAEGt0B,EAAKC,OAAS,IAAI/gB,KAAU21C,EAASrC,GAAOxzC,OAAO+1C,MAAMjgC,aAE5D,IAZkC,SAgBOo/B,GAAmBW,SAAS,IAAKx6B,GAhBxC,uBAgBpB26B,EAhBoB,EAgB5Bh2C,OAhB4B,+CAkBxB81C,GAlBwB,IAkBR,EAAG,IAAI51C,KAAU81C,EAAiB33C,YAAYyX,YAlBtC,4CAAH,sDAqBtBmgC,GAAuB,uCAAG,WAAO56B,GAAP,qBAAA3e,EAAA,6DAC/B+nB,EAAQwwB,GAAeh4B,KAAI,SAACub,GAAD,MAAQ,CACvCx1B,QAASD,aAAWy1B,EAAElX,iBACtB0T,KAAM,gBACNC,OAAQ,CAAC5Z,OAJ0B,SAMnBsJ,aAAUyuB,GAAa3uB,GANJ,cAM/BtM,EAN+B,OAO/B+9B,EAAiBjB,GAAe/b,QACpC,SAACoc,EAAKt0B,EAAMwyB,GAAZ,oBAAC,gBACI8B,GADL,mBAEGt0B,EAAKC,OAAS,IAAI/gB,KAAUiY,EAAIq7B,IAAQ19B,aAE3C,IAZmC,SAgBTo/B,GAAmBiB,YAAY,IAAK96B,GAhB3B,cAgB/B+6B,EAhB+B,sDAkBzBF,GAlByB,IAkBT,EAAG,IAAIh2C,KAAUk2C,EAAc/3C,YAAYyX,YAlBlC,2CAAH,sD,UCnEvBugC,GAAoB,uCAAG,sDAAA35C,EAAA,sEAE1B+nB,EAAQ,CACZ,uBACA,cACA,8BACA,oCACAxH,KAAI,SAACq5B,GAAD,MAAa,CACjBtzC,QAASuD,eACTyuB,KAAMshB,MATwB,SAY+DjhB,aAC7FxS,GACA4B,GAd8B,gEAYxB8xB,EAZwB,2BAYVloB,EAZU,2BAYAsM,EAZA,2BAY6BE,EAZ7B,KAiB1B2b,EAAyBnoB,EAAS,IAAInuB,KAAUmuB,EAAOhwB,YAAcmX,KACrEihC,EAAwBF,EAAa,IAAIr2C,KAAUq2C,EAAWl4C,YAAcmX,KAC5EkhC,EAA2BtoB,aAAoBooB,EAAwBC,GAnB7C,kBAoBzB,CACLnc,YAAakc,EAAuB1gC,SACpC2a,kBAAmBgmB,EAAsB3gC,SACzC2kB,iBAAkBic,EAAyB9nB,gBAAgB9Y,SAC3D6kB,0BAA2B,IAAIz6B,KAAUy6B,EAA0Bt8B,YAAYyX,SAC/E+kB,wBAAyB,IAAI36B,KAAU26B,EAAwBx8B,YAAYyX,WAzB7C,2DA4BzB,CACLwkB,YAAa,KACb7J,kBAAmB,KACnBgK,iBAAkB,KAClBE,0BAA2B,KAC3BE,wBAAyB,OAjCK,0DAAH,qDAsCpB8b,GAAc,uCAAG,gDAAAj6C,EAAA,sEAEpB+nB,EAAQ,CAAC,iBAAkB,UAAW,cAAe,qBAAqBxH,KAAI,SAACq5B,GAAD,MAAa,CAC/FtzC,QAASuD,eACTyuB,KAAMshB,MAJkB,SAO0DjhB,aAAYxS,GAAc4B,GAPpF,gEAOlB2K,EAPkB,2BAOA2L,EAPA,2BAOWC,EAPX,2BAO4BC,EAP5B,uBASnB,CACL7L,eAAgBA,EAAe1uB,WAC/Bq6B,QAASA,EAAQr6B,WACjBs6B,cAAeA,EAAct6B,WAC7Bu6B,oBAAqBA,EAAoBv6B,aAbjB,2DAgBnB,CACL0uB,eAAgB,KAChB2L,QAAS,KACTC,cAAe,KACfC,oBAAqB,OApBG,0DAAH,qDC1CrB2b,GAAoBh0B,eAEpBi0B,GAAc,uCAAG,WAAOx7B,GAAP,eAAA3e,EAAA,+EAEgBk6C,GAAkBf,SAASx6B,GAF3C,cAEby7B,EAFa,yBAGZ,CACL5b,WAAW,EACX1K,WAAY,IAAItwB,KAAU42C,EAAqBzoB,OAAOhwB,YAAYyX,SAClEulB,kBAAmByb,EAAqBzb,kBAAkBh9B,WAC1Di9B,mBAAoBwb,EAAqBxb,mBAAmBj9B,WAC5DkyB,qBAAsB,IAAIrwB,KAAU42C,EAAqBvmB,qBAAqBlyB,YAAYyX,WARzE,yDAWZ,CACLolB,WAAW,EACX1K,WAAY,KACZ6K,kBAAmB,KACnBC,mBAAoB,KACpB/K,qBAAsB,OAhBL,yDAAH,sDAqBLsmB,M,6CCZFs1B,GAAoB,SAACjuD,GAChC,MAAO,CACLD,UAAWC,EAAW,IAAIhe,KAAUge,EAASD,WAAazI,KAC1D0iC,oBAAqBh6B,EAAW,IAAIhe,KAAUge,EAASg6B,qBAAuB1iC,KAC9E4I,cAAeF,EAAW,IAAIhe,KAAUge,EAASE,eAAiB5I,KAClE4gC,cAAel4B,EAAW,IAAIhe,KAAUge,EAASk4B,eAAiB5gC,OAIzDukB,GAAgB,SAAC/Y,GAC5B,IAAQkzB,EAAiDlzB,EAAjDkzB,YAAaI,EAAoCtzB,EAApCszB,aAAcp2B,EAAsB8C,EAAtB9C,SAAa+iC,EAAhD,aAAyDjgC,EAAzD,IAEA,OAAO,6BACFigC,GADL,IAEE/iC,SAAUiuD,GAAkBjuD,GAC5Bg2B,YAAa,IAAIh0C,KAAUg0C,GAC3BI,aAAc,IAAIp0C,KAAUo0C,MCX1Bj5C,GAA2B,CAC/BqC,KAAK,YAAKqjB,MACV+Y,gBAAgB,EAChBtzB,UAAW,CACT8zB,YAAa,KACb7J,kBAAmB,KACnBgK,iBAAkB,KAClBE,0BAA2B,KAC3BE,wBAAyB,KACzBC,KAAM,CACJ1L,eAAgB,KAChB2L,QAAS,KACTC,cAAe,KACfC,oBAAqB,MAEvB/c,SAAU,CACRgd,WAAW,EACX1K,WAAY,KACZD,qBAAsB,KACtB8K,kBAAmB,KACnBC,mBAAoB,QAMb9B,GAA4B,SAACrI,GAAD,8CAA0B,WAAOvU,EAAUm6B,GAAjB,qBAAAr6C,EAAA,sEACvCq2C,KADuC,cAC3DiE,EAD2D,gBAErCvD,KAFqC,OAE3DwD,EAF2D,ODX5Bx5B,ECeCs5B,IAAWt5B,MAAM/f,KAAjDw5C,EDdCz5B,EAAMyb,QAAO,SAACge,EAAQl5B,GAC3B,IAAMouD,EAAoBrpE,aAAWib,EAAKmB,WAAWnc,SAASqpE,oBACxDv0D,EAAe/U,aAAWib,EAAKO,MAAMvb,SAASqpE,oBASpD,OAPKn1B,EAAOk1B,KACVl1B,EAAOk1B,GAAqB,IAAIlsE,KAAU8d,EAAKmB,WAAWX,WAAW9d,YAElEw2C,EAAOp/B,KACVo/B,EAAOp/B,GAAgB,IAAI5X,KAAU8d,EAAKO,MAAMC,WAAW9d,YAGtDw2C,IACN,ICIGE,EAAWr2B,KAAY9D,KAAI,SAAC+D,GAChC,IAAMq2B,EAAaL,EAAYr5B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UAC/Ds2B,EAAeN,EAAct5B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACnEu2B,KAAyBrmB,EAAe,GAAKkmB,IAAalmB,EAAe6f,OAAOqG,EAAWhmB,UAC3FomB,EAAiBz2B,EAAKsQ,YAAckmB,EAEpCE,EAAsB12B,EAAKqlB,aAAarjC,QAAUD,aAAWie,EAAKqlB,aAAarjC,SAAS+xB,cAAgB,KACxG4iB,EAAoBD,EAAsBR,EAAOQ,GAAuB,EAExEE,EAAsB52B,EAAKslB,aAAatjC,QAAUD,aAAWie,EAAKslB,aAAatjC,SAAS+xB,cAAgB,KACxGzF,EAAoBsoB,EAAsBV,EAAOU,GAAwB,EACzEroB,EAAOkoB,EAOT,EANAI,GACEF,EACAroB,EACA9uB,aAAiB,IAAIN,KAAUq3C,EAAarD,aAAclzB,EAAKqlB,aAAapmC,UAC5E63C,WAAW92B,EAAKimB,gBAItB,OAAO,0CACFoQ,GACAE,GAFL,IAGEI,oBACAroB,oBACAC,MACA+B,WAAYmmB,OAIhB76B,EAASm7B,GAAmBX,IApCqC,iCDX7B,IAAC35B,ICW4B,OAA1B,yDA2G5Bwc,GAA2Bwe,aAA4B,4BAAZ,sBAAyC,4BAAA/7C,EAAA,sEACjE25C,KADiE,cACzFqC,EADyF,yBAExFA,GAFwF,4CAKpFve,GAAqBse,aAA4B,sBAAZ,sBAAmC,4BAAA/7C,EAAA,sEAC3Di6C,KAD2D,cAC7EgC,EAD6E,yBAE5EA,GAF4E,4CAKxEze,GAAyBue,aACpC,sBADoD,uCAEpD,+BAAA/7C,EAAA,6DAAS2e,EAAT,EAASA,QAAT,SACyBw7B,GAAex7B,GADxC,cACQ6C,EADR,yBAESA,GAFT,2CAFoD,uDAQzC06B,GAAaC,aAAY,CACpC7jB,KAAM,QACN35B,gBACAy9C,SAAU,CACRf,mBAAoB,SAACx7C,EAAO2gC,GAC1B,IAAM6b,EAAwB7b,EAAOC,QACrC5gC,EAAMmB,KAAOnB,EAAMmB,KAAKuf,KAAI,SAAC+D,GAC3B,IAAMg4B,EAAeD,EAAcp7B,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACzE,OAAO,6BAAKD,GAASg4B,OAGzBb,iBAAkB,SAAC57C,EAAO2gC,GACxB,IAAMhf,EAAWgf,EAAOC,QACxB5gC,EAAMmB,KAAOnB,EAAMmB,KAAKuf,KAAI,SAAC+D,GAC3B,IAAMi4B,EAAe/6B,EAASP,MAAK,SAAC25B,GAAD,OAAWA,EAAMr2B,SAAWD,EAAKC,UACpE,OAAO,6BAAKD,GAAZ,IAAkB9C,SAAU+6B,OAE9B18C,EAAMu9B,gBAAiB,GAEzBue,oBAAqB,SAAC97C,EAAO2gC,GAC3B,MAAiCA,EAAOC,QAAhCkC,EAAR,EAAQA,MAAO9gC,EAAf,EAAeA,MAAO0iB,EAAtB,EAAsBA,OAChBuyB,EAAQj3C,EAAMmB,KAAKw7C,WAAU,SAAC1gB,GAAD,OAAOA,EAAEvX,SAAWA,KAEnDuyB,GAAS,IACXj3C,EAAMmB,KAAK81C,GAAX,6BAAyBj3C,EAAMmB,KAAK81C,IAApC,IAA4Ct1B,SAAS,6BAAM3hB,EAAMmB,KAAK81C,GAAOt1B,UAAzB,mBAAoCmhB,EAAQ9gC,SAItG46C,cAAe,SAACpc,GAEdA,EAAQC,QAAQ/C,GAAyBlI,WAAW,SAACx1B,EAAO2gC,GAC1D3gC,EAAMiK,UAAN,6BAAuBjK,EAAMiK,WAAc02B,EAAOC,YAGpDJ,EAAQC,QAAQ7C,GAAmBpI,WAAW,SAACx1B,EAAO2gC,GACpD,IAAMpC,EAAOoC,EAAOC,QACpB5gC,EAAMiK,UAAN,6BAAuBjK,EAAMiK,WAA7B,IAAwCs0B,YAG1CiC,EAAQC,QAAQ9C,GAAuBnI,WAAW,SAACx1B,EAAO2gC,GACxD,IAAMhf,EAAWgf,EAAOC,QACxBjf,EAASgd,WAAY,EACrB3+B,EAAMiK,UAAN,6BAAuBjK,EAAMiK,WAA7B,IAAwC0X,mBAMvC,GAAsE06B,GAAWQ,QAAzErB,GAAR,GAAQA,mBAAoBI,GAA5B,GAA4BA,iBCxMtB7e,IDwMN,GAA8C+e,oBAEtCO,GAAf,QC1MuC,WACrC,IAAMh8B,EAAWC,eACThG,EAAgBC,eAAhBD,YAERpa,qBAAU,YACkB,uCAAG,4BAAAC,EAAA,sEACD+F,KAAkB82B,iBADjB,OACrBnV,EADqB,OAE3BxH,EAAS4c,GAA0BpV,IAFR,2CAAH,qDAK1BqV,GACA7c,EDuDwC,uCAAM,WAAOA,EAAUm6B,GAAjB,mBAAAr6C,EAAA,6DAC1C83C,EAAwBuC,IAC3Bld,MAAMn8B,KAAKsnB,QAAO,gBAAGsvB,EAAH,EAAGA,aAAH,OAAuC,OAAjBA,QAA0Ct4C,IAAjBs4C,KACjEr3B,KAAI,SAAC+D,GAAD,OAAUA,EAAKC,UAH0B,SAKpBszB,GAAwBC,GALJ,OAK1CM,EAL0C,OAO1CkD,EAAmBj3B,KAAY9D,KAAI,SAAC+D,GACxC,GAAIwzB,EAAsB9T,SAAS1f,EAAKC,QACtC,MAAO,CAAEA,OAAQD,EAAKC,QAExB,IAAMqzB,EAAeQ,EAAc9zB,EAAKC,SAAWzL,KACnD,MAAO,CACLyL,OAAQD,EAAKC,OACbqzB,aAAcA,EAAax+B,aAI/B8G,EAASm7B,GAAmBC,IAlBoB,2CAAN,2DCtDvC,CAACp7B,EAAU/F,MAGH8iB,GAAW,SAACte,GACvB,IAAQY,EAAgBnF,eAAhBmF,YACFW,EAAWC,eACjBpgB,qBAAU,WACJ4e,GACFuB,EDoEJ,SAACvB,GAAD,8CACA,WAAOuB,GAAP,uBAAAlgB,EAAA,sEAC2By4C,GAAoB95B,GAD/C,cACQg6B,EADR,gBAEqCE,GAAkBl6B,GAFvD,cAEQ48B,EAFR,gBAG+BrC,GAAuBv6B,GAHtD,cAGQy6B,EAHR,iBAI+BG,GAAwB56B,GAJvD,QAIQ66B,EAJR,OAMQh4B,EAAW6C,KAAY9D,KAAI,SAAC+D,GAAD,MAAW,CAC1CC,OAAQD,EAAKC,OACbhD,UAAWo3B,EAAWr0B,EAAKC,QAC3Bi3B,oBAAqBD,EAAqBj3B,EAAKC,QAC/C7C,cAAe03B,EAAe90B,EAAKC,QACnCm1B,cAAeF,EAAel1B,EAAKC,YAGrCrE,EAASu7B,GAAiBj6B,IAd5B,4CADA,sDCpEa0b,CAAwBve,MAElC,CAACA,EAASuB,EAAUX,IAEvB,MAAkCuB,aAAY,SAACjhB,GAAD,MAAmB,CAC/Ds9B,MAAOt9B,EAAMs9B,MAAMn8B,KACnBo8B,eAAgBv9B,EAAMs9B,MAAMC,mBAFtBD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,eAIf,MAAO,CAAED,MAAOA,EAAM5c,IAAI8c,IAAgBD,mBAqB/BM,GAAe,WAC1B,MAcI5c,aAAY,SAACjhB,GAAD,OAAkBA,EAAMs9B,MAAMrzB,aAb/B6zB,EADf,EACEC,YACmBC,EAFrB,EAEE9J,kBACkB+J,EAHpB,EAGEC,iBAC2BC,EAJ7B,EAIEC,0BACyBC,EAL3B,EAKEC,wBALF,IAMEC,KAAQ1L,EANV,EAMUA,eAAgB2L,EAN1B,EAM0BA,QAASC,EANnC,EAMmCA,cAAeC,EANlD,EAMkDA,oBANlD,IAOE/c,SACEgd,EARJ,EAQIA,UACYC,EAThB,EASI3K,WACsB4K,EAV1B,EAUI7K,qBACA8K,EAXJ,EAWIA,kBACAC,EAZJ,EAYIA,mBAIEX,EAA4Brb,mBAAQ,WACxC,OAAO,IAAIpf,KAAUw6B,KACpB,CAACA,IAEEG,EAA0Bvb,mBAAQ,WACtC,OAAO,IAAIpf,KAAU06B,KACpB,CAACA,IAsBJ,MAAO,CACLN,YArBkBhb,mBAAQ,WAC1B,OAAO,IAAIpf,KAAUm6B,KACpB,CAACA,IAoBF5J,kBAlBwBnR,mBAAQ,WAChC,OAAO,IAAIpf,KAAUq6B,KACpB,CAACA,IAiBFE,iBAfuBnb,mBAAQ,WAC/B,OAAO,IAAIpf,KAAUs6B,KACpB,CAACA,IAcFG,4BACAE,0BACAC,KAAM,CACJ1L,iBACA2L,UACAC,gBACAC,uBAEF/c,SAAU,CACRgd,YACA1K,WAtBelR,mBAAQ,WACzB,OAAO,IAAIpf,KAAUi7B,KACpB,CAACA,IAqBA5K,qBAnByBjR,mBAAQ,WACnC,OAAO,IAAIpf,KAAUk7B,KACpB,CAACA,IAkBAC,oBACAC,wBC8ESurE,IA1LC/nG,KAAOU,IAAV,+GACS,qBAAG6zB,MAAkBG,OAAO2nE,sBAMN,SAAC,GAAqC,IAAnCxuD,EAAkC,EAAlCA,UAAWo5D,EAAuB,EAAvBA,iBAChDvnG,EAAMC,eAAND,EAGR,GAFoB2D,eAAZkZ,QACU6X,eAAVG,MAC6BkI,eAErC,GAFA,EAAQ27B,WAAR,EAAoB8L,aACM36C,cACQlsB,oBAAS,IAA3C,mBACA,GADA,UAKIi+B,MAHFO,EADF,EACEA,0BACAE,EAFF,EAEEA,wBACQE,EAHV,EAGED,KAAQC,QAEJ65D,EAAgBx1E,eAIhB0nF,GAFsBtmG,aAAiBq6B,EAAyB,IAEjDzb,gBAEf2nF,EADYhnF,eACSrf,WACrBsmG,EAAcF,EAAapmG,WAE3BumG,EADahoF,eACUve,WAEvBwmG,EADa1nF,eACS9e,WAEtBymG,EADY1nF,eACS/e,WAErB0mG,EADY1nF,eACShf,WAErB2mG,EADc9nF,eACW7e,WAEzB4mG,EADgB3nF,eACajf,WAE7B6mG,EADa3nF,eACUlf,WAEvB8mG,EADY3nF,eACSnf,WAErB+mG,EADmB3nF,eACgBpf,WACnCgnG,EAAQlnG,aAAiBsY,aAAS3V,iBAClCwkG,EAAQnnG,aAAiBuY,aAAS5V,iBAClCykG,EAAQpnG,aAAiBwY,aAAS7V,iBAClC0kG,EAAQrnG,aAAiByY,aAAS9V,iBAClC2kG,EAAQtnG,aAAiB0Y,aAAS/V,iBAClC4kG,EAAQvnG,aAAiB2Y,aAAShW,iBAClC6kG,EAASxnG,aAAiB4Y,aAAUjW,iBACpC8kG,EAASznG,aAAiB6Y,aAAUlW,iBACpC+kG,EAAS1nG,aAAiB8Y,aAAUnW,iBACpCglG,EAAS3nG,aAAiB+Y,aAAUpW,iBACpCilG,EAAS5nG,aAAiBgZ,aAAUrW,iBACpCklG,EAAS7nG,aAAiBiZ,aAAUtW,iBACpCmlG,EAAS9nG,aAAiBkZ,aAAUvW,iBACpColG,EAAS/nG,aAAiBmZ,aAAUxW,iBACpCqlG,EAAShoG,aAAiBoZ,aAAUzW,iBACpCslG,EAASjoG,aAAiBqZ,aAAU1W,iBACpCulG,EAASloG,aAAiBsZ,aAAU3W,iBACpCwlG,EAASnoG,aAAiBuZ,aAAU5W,iBACpCylG,EAASpoG,aAAiBwZ,aAAUlW,iBACpC+kG,EAASroG,aAAiByZ,aAAUnW,iBACpCglG,EAAStoG,aAAiB0Z,aAAUpW,iBACpCilG,EAASvoG,aAAiB2Z,aAAUrW,iBACpCklG,EAASxoG,aAAiB4Z,aAAUtW,iBACpCmlG,EAASzoG,aAAiB6Z,aAAUvW,iBACpColG,GAAS1oG,aAAiB8Z,aAAUxW,iBACpCqlG,GAAS3oG,aAAiB+Z,aAAUzW,iBACpCslG,GAAS5oG,aAAiBga,aAAUnW,iBACpCglG,GAAS7oG,aAAiBia,aAAUlW,iBACpC+kG,GAAS9oG,aAAiBka,aAAUjW,iBACpC8kG,GAAS/oG,aAAiBma,aAAUhW,iBACpC6kG,GAAShpG,aAAiBoa,aAAUpX,iBACpCimG,GAASjpG,aAAiBqa,aAAU5V,iBACpCykG,GAASlpG,aAAiBsa,aAAU3V,iBACpCwkG,GAASnpG,aAAiBua,aAAUlW,iBACpC+kG,GAASppG,aAAiBwa,aAAUjW,iBAEpC8kG,GAAWnC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,EAC9JmB,GAAWlB,EAASC,EAASC,EAASC,EAASC,EAASC,EAASC,GAASC,GAC1EY,GAAQF,GAAU7C,EAClBgD,GAAQF,GAAW/C,EAAW,IAC9BkD,GAAWb,GACXc,GAAQd,GAASnC,EACjBkD,GAAWd,GACXe,GAAQf,GAASnC,EACjBmD,GAAWf,GACXgB,GAAQhB,GAASnC,EACjBoD,GAAWhB,GACXiB,GAAQjB,GAASnC,EACjBqD,GAAWjB,GACXkB,GAAQlB,GAASnC,EACjBsD,GAAWlB,GACXmB,GAAQnB,GAASnC,EAAe,IAChCuD,GAAWnB,GACXoB,GAASpB,GAASnC,EAAY,IAC9BwD,GAAYpB,GACZqB,GAASrB,GAASnC,EAClByD,GAAYrB,GACZsB,GAAStB,GAASnC,EAGlBvB,GAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,GAAyBD,GAA4Bn1E,IAAI,GACzDq1E,KAAuBzrE,GAA4BA,EAA0B5J,IAAI,GAIvF,IAH8Bo1E,IAAyB3lG,aAAiB0lG,GAA6B,IACzEE,IAAuB5lG,aAAiBm6B,EAA2B,IAEhDxG,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,SACXmyE,eAAgB,CAAEC,MAAO,OAF3B,GAAQlyE,UAAR,GAAmBC,QAAnB,GAA4BC,eAqB5B,OACE,eAAC,KAAD,CAAO8Y,MAAO9uC,EAAE,gCAAiCmuC,UAAWA,EAA5D,UAEF,eAAC,IAAD,CAAM6D,WAAW,SAASX,eAAe,gBAAzC,UACA,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOwrG,GAAO5zF,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAOsrG,GAAS3zF,KAAK,cAAcjW,SAAU,OAE3E,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOyrG,GAAO7zF,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAkB,IAAXurG,GAAuB5zF,KAAK,OAAOjW,SAAU,OAElF,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOmsG,GAAOv0F,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAOksG,GAAUv0F,KAAK,SAASjW,SAAU,OAEvE,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOysG,GAAQ70F,OAAO,KAAKlW,SAAU,IACxD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAOwsG,GAAW70F,KAAK,OAAOjW,SAAU,OAEtE,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOusG,GAAQ30F,OAAO,KAAKlW,SAAU,IACxD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAmB,IAAZssG,GAAwB30F,KAAK,QAAQjW,SAAU,OAEpF,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOqsG,GAAOz0F,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAmB,IAAZosG,GAAwBz0F,KAAK,WAAWjW,SAAU,OAEvF,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAO6rG,GAAOj0F,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO4rG,GAAUj0F,KAAK,OAAOjW,SAAU,OAErE,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAO2sG,GAAQ/0F,OAAO,KAAKlW,SAAU,IACxD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO0sG,GAAW/0F,KAAK,cAAcjW,SAAU,OAE7E,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAO2rG,GAAO/zF,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO0rG,GAAU/zF,KAAK,QAAQjW,SAAU,OAEtE,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAO+rG,GAAOn0F,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO8rG,GAAUn0F,KAAK,OAAOjW,SAAU,OAErE,eAAC,IAAD,CAAMuwC,WAAW,SAASX,eAAe,gBAAzC,UACJ,cAAC95B,GAAA,EAAD,CAASC,MAAM,UAAUzX,MAAOisG,GAAOr0F,OAAO,KAAKlW,SAAU,IACvD,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAOgsG,GAAUr0F,KAAK,OAAOjW,SAAU,YCnLrE+5F,GAAal7F,KAAOU,IAAV,6EA+DDinG,GAzDI,WACjB,IAAQjoG,EAAMC,eAAND,EACR,EAGI47B,KAFFO,EADF,EACEA,0BACQI,EAFV,EAEED,KAAQC,QAEJ65D,EAAgBx1E,eAEhB8mF,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GAIjFg1E,GAHwBI,GAAyB3lG,aAAiB0lG,EAA6B,IACzEE,GAAuB5lG,aAAiBm6B,EAA2B,IAEtE,SAAC,GAAD,IAAGg/D,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAMlsD,GAAG,OAAT,SAAiBjvC,EAAE,8EACnB,cAAC,KAAD,CAAMivC,GAAG,OAAT,SACGjvC,EACC,+JAGJ,cAAC,KAAD,CAAMq0B,MAAO,CAAEwiE,WAAY,QAA3B,SACG72F,EAAE,+EAAgF,CAAEm7F,IAAKA,EAAM,aAKtG,EAA+BprD,aAAS,cAAC,GAAD,CAAWw3D,iBAAkBA,KAA9DW,EAAP,oBAEA,EAA+CvyE,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,aACXksE,cAAe,CAAC,GAAI,MAFtB,EAAQhsE,UAAR,EAAmBC,QAAnB,EAA4BC,eAK5B,OACE,mCACE,cAAC,GAAD,UACI,cAAC,IAAD,CAAM6a,cAAc,SAApB,SAEE,cAAC,IAAD,CACEj5B,QAASswF,EACT52D,MAAM,KACN/D,QAAQ,UACRlrB,GAAG,wBAJL,SAMGriB,EAAE,c,UC1EX2sG,GAAWrsG,KAAOU,IAAV,uJAUD4rG,GAActsG,aAAOoxC,IAAPpxC,CAAH,6IAIpB4lF,MAKWymB,MCNTE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,uJAIZ,qBAAGu0B,MAAkBurC,aAAahN,MA4DvB05C,GAtD2B,SAAC,GAAc,IAAZtqF,EAAW,EAAXA,KACnCxiB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN1qG,EAAkFigB,EAAlFjgB,OAAQkgB,EAA0ED,EAA1EC,OAAQolB,EAAkErlB,EAAlEqlB,aAAcC,EAAoDtlB,EAApDslB,aAAcpoB,EAAsC8C,EAAtC9C,SAAUoT,EAA4BtQ,EAA5BsQ,WAAYjC,EAAgBrO,EAAhBqO,YAE5DmB,EACV4J,eADFlc,SAAYsS,WAERk7E,EAAiBl7E,GAAcA,EAAWG,GAAG,GAE7C4qE,EAAqBl1D,EAAan+B,OAClCmxF,EAAqB/yD,EAAap+B,OAGlCi3F,IADwB,OAARjhF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,MACzDmb,GAAG,GAC5B2pE,EAA8B,IAAXr5E,EAEnB0qF,EAAgBt8E,EAAcq8E,EAAiBvM,EAEjD7xD,EAAK,UAAM9uC,EAAE,QAAR,YAAmB66F,GACxBjpD,EAAQ,UAAM5xC,EAAE,SAAR,YAAoB+8F,GAC1BqQ,EAA0B,IAAX3qF,GAA4B,IAAXA,IAAiBuqF,IAASC,EAC1DI,EAAW,UAAG9qG,EAAH,QAAgBsrE,oBAWjC,OARIh9C,GACFie,EAAQ9uC,EAAE,mBACV4xC,EAAW5xC,EAAE,wBACJ87F,IACThtD,EAAQ9uC,EAAE,qBACV4xC,EAAQ,UAAM5xC,EAAE,QAAR,uBAA8BA,EAAE,SAAS6tE,oBAAzC,gBAIR,eAACg/B,GAAD,CAAY7uB,KAAK,OAAjB,UACG,cAAC,KAAD,CAAOxnB,IAAG,wBAAmB62C,GAAYrlD,IAAI,OAAOxnD,MAAO,GAAI20E,OAAQ,GAAIznC,GAAG,QAC/E,eAACk/D,GAAD,WACGO,GACC,cAAC,KAAD,CAAM99D,SAAS,OAAOD,MAAI,EAAC53B,MAAOsb,EAAa,UAAY,YAAas3D,cAAc,YAAtF,SACGpqF,EAAE,YAGP,cAAC,KAAD,CAAMovC,MAAO49D,IAASC,EAAM72C,MAAO42C,GAAQC,EAA3C,SACGn+D,IAEFs+D,GACC,cAAC,KAAD,CAAM/9D,SAAS,OAAO73B,MAAM,aAA5B,SACGo6B,WCnDPi7D,GAAavsG,aAAOqsG,GAAPrsG,CAAH,iFAEZ,qBAAGu0B,MAAkBurC,aAAahN,MAKhCk6C,GAAkBhtG,KAAOU,IAAV,sDA0HNusG,GAtHmC,SAAC,GAAuC,IAArC/qF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eAC1Dt7B,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNxqF,EAAiFD,EAAjFC,OAAQqlB,EAAyEtlB,EAAzEslB,aAAcplB,EAA2DF,EAA3DE,aAAchD,EAA6C8C,EAA7C9C,SAAUoR,EAAmCtO,EAAnCsO,kBAAmBD,EAAgBrO,EAAhBqO,YACnEirE,EAA8B,IAAXr5E,EAEnB5C,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UACpG2gG,EAAcvlF,GAAWgD,EAASsS,GAAG,GACnCsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxD/C,EAAYz8E,IAAiB5E,KAAa6E,QAGhD,EAGIiZ,eAHJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAY8K,EADhD,EACgDA,mBAC9C7K,EAFF,EAEEA,kBAEF,EAAiEH,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCizE,EAAiB5oE,GAAqD,IAA/Bz4B,SAASy4B,GAEhD0oE,EADqB,IAAI1mE,KAAK4mE,GACW7iG,iBAEzC2qG,EAAY38E,EAAc7wB,EAAE,4BAA8BA,EAAE,iBAAkB,CAAE+8D,MAAOj1B,EAAap+B,SAC1Gw4F,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA+CxsE,aAC7C,qCACE,cAACpe,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOuyB,EAAmB7wB,SAAU,EAAG2tC,MAAI,EAAC13B,KAAK,gBAC1E,cAACH,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO0yB,EAAkBhxB,SAAU,EAAG2tC,MAAI,EAACz3B,OAAO,OAC1E3X,EAAE,iCACH,cAAC,KAAD,UAAOwlG,OAET,CAAE5vE,UAAW,WAPPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,EAA2B+Z,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgB7F,KARbuG,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYrkB,KAAK,OAAjB,SACE,eAAC4uB,GAAD,WACE,cAAC,KAAD,CAAMv9D,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG6wC,KAEDlyE,GAAkBze,EAClB,cAAC,KAAD,CAAUrc,MAAM,OAAO20E,OAAO,SAE9B,qCACGn/C,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK2X,GAAG,MAAMynC,OAAO,OAAOv9D,SAAUiZ,GAAeuxE,EAjBrC,SAACj9B,GAC3BA,EAAM6f,kBACNqd,UAemG7kG,EAAzF,UACE,cAAC+Z,GAAA,EAAD,CACEm4B,GAAG,MACHN,MAAO49D,IAASC,EAChB59D,SAAU29D,GAAQC,EAAO,OAAS,OAClCz1F,MAAO4qF,EAAc,UAAY,eACjC3gG,SAAU2gG,EAAc,EAAI,EAC5BriG,MAAOqiG,EAAcF,EAAsB,IAE5CE,EACC,mCACGtxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,WAKX,cAAC,KAAD,CAAMg4B,GAAG,MAAML,SAAS,OAAO73B,MAAM,eAArC,sBAKHqZ,GAAeuxE,IAAgB4K,IAASC,GACvC,cAACK,GAAD,CAAiBr3E,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUte,MAAM,6B,wCCnFnBi2F,GAzCiB,SAAC,GAAsD,IAApDjrF,EAAmD,EAAnDA,KAAmD,KAA7CkrF,SAA6C,EAAnC98E,uBAAmC,MAAlB,EAAkB,EAAZ/Y,EAAY,mBAC5EgwB,EAAmErlB,EAAnEqlB,aAAcC,EAAqDtlB,EAArDslB,aAAchV,EAAuCtQ,EAAvCsQ,WAAYhC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAC3D/wB,EAAMC,eAAND,EAER,EAAkF2wB,aAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDmqE,EAAe1zD,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,QAEzG,EAA4BurC,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAcA,OACE,cAAC,IAAD,2BAAMohB,WAAW,SAASX,eAAe,iBAAoBx5B,GAA7D,aACGyjF,GAA+BxoE,EAC9B,mCACE,cAACvb,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAO+yB,EAAa,EAAIwoE,EACxB75F,SAAU,EACViW,KAAK,QAIT,cAAC,KAAD,CAAUlX,MAAM,OAAO20E,OAAO,aCrChC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,sFAEZ,qBAAGu0B,MAAkBurC,aAAapI,MAqBvB21C,GAhByB,SAAC,GAA8B,IAA5BnrF,EAA2B,EAA3BA,KAAMoO,EAAqB,EAArBA,eACvC5wB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNp8E,EAAgBrO,EAAhBqO,YACR,OACE,cAAC,GAAD,CAAYmtD,KAAK,OAAjB,SACE,eAAC4uB,GAAD,WACE,cAAC,KAAD,CAAMv9D,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACiB38D,EAAd6wB,EAAgB,MAAW,SAE9B,cAAC,GAAD,CAAKrO,KAAMA,EAAMoO,eAAgBC,EAAcD,EAAiB,EAAG88E,UAAWV,IAASC,UCfzFJ,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAwCDstG,GApCyC,SAAC,GAAc,IAAZprF,EAAW,EAAXA,KACjDxiB,EAAMC,eAAND,EACAyiB,EAAmDD,EAAnDC,OAAQolB,EAA2CrlB,EAA3CqlB,aAAc6N,EAA6BlzB,EAA7BkzB,YAAa7kB,EAAgBrO,EAAhBqO,YACnCoL,EAAqBL,eAArBK,iBAEF6/D,EAA8B,IAAXr5E,EAEnBorF,EAAqB/sF,mBAAQ,WACjC,GAAI+P,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,YACjD,CAACovB,EAAaoL,EAAkB6/D,EAAkBpmD,EAAa7N,EAAapmC,WAE/E,OACE,cAAC,GAAD,CAAYu8E,KAAK,OAAjB,SACE,eAAC4uB,GAAD,WACE,cAAC,KAAD,CAAMv9D,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG38D,EAAE,kBAEJ01C,GAAeA,EAAYnjB,IAAI,GAC9B,cAAC,IAAD,CAAM4iD,OAAO,OAAOnjC,WAAW,SAA/B,SACE,cAACz6B,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO8tG,EAAoBpsG,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,YAG1F,cAAC,KAAD,CAAUlJ,MAAM,OAAO20E,OAAO,eCjClC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAsDDwtG,GAlD+B,SAAC,GAAc,IAAZtrF,EAAW,EAAXA,KACvCC,EAAwED,EAAxEC,OAAQizB,EAAgElzB,EAAhEkzB,YAAa9iB,EAAmDpQ,EAAnDoQ,WAAYC,EAAuCrQ,EAAvCqQ,SAAUC,EAA6BtQ,EAA7BsQ,WAAWsV,EAAkB5lB,EAAlB4lB,cACtDzV,EAAiBwa,eAAjBxa,aACA3yB,EAAMC,eAAND,EACR,EACE0yB,aAAiBlQ,EAAMmQ,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/E8pE,EAAwB,IAAXz6E,EAEEsQ,GAClB,IACE,IACExb,GAAA,EACA,KACEvX,EAAE,UAGN,IACE,KAEOksB,YAAeiH,EAAiBN,EAAWD,EAAY,aAG5D,MAKN,KAM0B8iB,EAAYvjB,GAAG,GAE5C,OACE,cAAC,GAAD,CAAY6rD,KAAK,OAAjB,SACE,eAAC4uB,GAAD,WACE,cAAC,KAAD,CAAMv9D,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACI38D,EAAE,oBAEN,cAAC,KAAD,CAAMqvC,SAAS,OAAO7uC,MAAM,OAAOgX,MAAM,QAAQmlD,UAAU,OAA3D,SACCv0B,UCnDHykE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,6PAOZ,qBAAGu0B,MAAkBurC,aAAapI,MAOhC+1C,GAAYztG,aAAO0tG,IAAP1tG,CAAH,mEACA,qBAAG6rE,QAAyB,iBAAmB,eAkB/CyhC,GAd0C,SAAC,GAAgC,IAA9BnR,EAA6B,EAA7BA,SAAUwR,EAAmB,EAAnBA,aAC5DjuG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYg+E,KAAK,OAAjB,UACGiwB,GACC,cAAC,KAAD,CAAMz2F,MAAM,UAAU43B,MAAI,EAA1B,SACcpvC,EAAXy8F,EAAa,OAAY,aAG9B,cAACsR,GAAD,CAAWv2F,MAAM,UAAU20D,QAASswB,QCrC7ByR,GAAkB5tG,KAAOU,IAAV,maAEN,qBAAG6zB,MAAkBG,OAAOoiC,SAM9C,qBAAGviC,MAAkBurC,aAAahN,MAQlC,qBAAGv+B,MAAkBurC,aAAa+tC,MASzBC,GAAe9tG,KAAOU,IAAV,wEAKZqtG,GAAgB/tG,KAAOU,IAAV,4GC4IXstG,GAvJoD,SAAC,GAQ7D,IAPL7rF,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAolB,EAKI,EALJA,aACApoB,EAII,EAJJA,SACA4b,EAGI,EAHJA,eACAzK,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEQ9wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAEFgD,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UACpG2gG,EAAcviF,EAASsS,GAAG,GACxBsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxDP,EAA4B,IAAXl/E,EACjB08E,EAAYz8E,IAAiB5E,KAAa6E,QAGhD,EAIIiZ,eAJJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQrB,EAHV,EAGE0L,KAAQ1L,eAEV,EAAiEkB,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQ5CyvE,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA2BpyD,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,EAA+C1sE,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBu4E,EAAc19E,EAClB,cAAC,KAAD,CAAMwe,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,SACGpqF,EAAE,8BAGL,qCACE,eAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGtiD,EAAap+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,eAKT,OAAK6c,EAYAye,EAYH,eAAC4yE,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,CAAMlkB,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,SACE,mCACGpM,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAASu/E,WAAW,IAAI1nD,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IAChEpxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAOPqZ,EACC,eAAC,IAAD,CAAMs5D,KAAK,MAAMt5C,cAAc,SAAS29D,UAAU,aAAax8D,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0BgyD,gBAAc,IACxC,eAAC,IAAD,CAAM/0D,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,eAON,cAAC,IAAD,CAAQo+C,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,mBAzDzC,eAACuM,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,cAACF,GAAD,UACE,cAAC,KAAD,CAAU7tG,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAfnD,eAAC24B,GAAD,WACE,cAACE,GAAD,UAAeG,IACf,eAACF,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQr/B,UAAQ,EAAhB,SAAmChvE,EAAjB2hG,EAAmB,UAAe,oBC7ExD8M,GAAoBnuG,KAAOU,IAAV,iDA+OR0tG,GAtO6C,SAAC,GAA8B,IAA5BlsF,EAA2B,EAA3BA,KAAM8Y,EAAqB,EAArBA,eAEjE7Y,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACAgO,EAMEtzB,EANFszB,aACAhjB,EAKEtQ,EALFsQ,WACApQ,EAIEF,EAJFE,aACAhD,EAGE8C,EAHF9C,SACAy5B,EAEE32B,EAFF22B,kBACAtoB,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAEFmhF,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAAuF24F,GACrFa,EACAv7E,EACAqlB,EAAap+B,QAHQilG,EAAvB,EAAQnR,cAAqDoR,EAA7D,EAA0CvR,kBAM1C,EAA4CM,KAApCC,EAAR,EAAQA,gBAAiB5gF,EAAzB,EAAyBA,eACzB,EACE0gF,GAAgB1gF,GADK6xF,EAAvB,EAAQrR,cAAsDsR,EAA9D,EAA2CzR,kBAGrCG,EAAgB3sE,EAAcg+E,EAAqBF,EACnDtR,EAAoBxsE,EAAci+E,EAAyBF,EAE3DzP,EAAYz8E,IAAiB5E,KAAa6E,QAC1ClD,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE4I,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF+3F,GAAyBl+E,GAAejR,EAAcuS,GAAG,GAEzDunB,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KAEpG4pF,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAGIm6B,eAFU5J,EADd,EACEtS,SAAYsS,WACZC,EAFF,EAEEA,kBAGF,EAAiDrC,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB6+E,EAAkBh9E,GAAcA,EAAWG,GAAG,GAC9C88E,EAAoBp+E,GAAem+E,EACnCE,EAAwBltG,aAAiBouB,EAAgBF,aAAaipB,GAAoBtR,EAAapmC,UAEvG+gG,EAAgB3xE,GAAe+sE,GAAmBn+E,EAAU0S,GAAG,KAAOgtE,EAE5E,EAAiCpvD,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA8BhxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAxF2sF,EAAP,oBAEA,EAA2Bp/D,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,GAAP,oBAUA,GAAgCjxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAYp0E,EAAiB5N,KAAMA,EAAM48E,iBAAe,KAA3GgQ,GAAP,qBAEM3Q,GAAU,WACV5tE,EACFs+E,IAEApO,KAYJ,GAA+CprE,aAC7C31B,EAAE,wEACF,CAAE41B,UAAW,WAFPE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtBirE,GAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAE3E,OAAKj5B,EAeAye,EAeDknE,EAEA,eAAC0L,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/+D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,mBAGP,cAACquG,GAAD,UACE,cAAC,IAAD,CAAQ7tG,MAAM,OAAOwuE,SAAUquB,EAAmBzlF,QAAS4lF,EAAejwD,QAAQ,YAAlF,SACGvtC,EAAE,iBAQT+uG,GAAyBE,EAEzB,eAACf,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAM/+D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGviD,EAAan+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACiBpqF,EAAd6wB,EAAgB,uBAA4B,eAGjD,eAACw9E,GAAD,WACE,eAAC,IAAD,CAAMlkB,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,UACE,cAACj3F,GAAA,EAAD,CACEu/E,WAAW,IACX1nD,MAAI,EACJC,SAAS,OACT5tC,SAAU,EACV1B,MAAO8wB,EAAcV,EAAsBywE,IAE7C,cAACrpF,GAAA,EAAD,CACE83B,SAAS,OACT+3B,QAAQ,SACR5vD,MAAM,aACN/V,SAAU,EACV1B,MAAO8wB,EAAcq+E,EAAwBrO,EAC7CnpF,KAAK,OACLC,OAAO,SAGX,eAAC82F,GAAD,WACE,cAAC,KAAD,CAAYlhE,QAAQ,YAAY31B,QA9FxB,WACZiZ,EACFu+E,KAEApO,MA0F0DtzD,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,GACC,sBAAMhrE,IAAKH,GAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/C9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,cAIpCw1B,IAAkBD,SAOzB,eAACm4E,GAAD,WACE,eAACE,GAAD,WACE,eAAC,KAAD,CAAM/+D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGpqF,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGviD,EAAan+B,YAGlB,cAAC2kG,GAAD,UACE,cAAC,IAAD,CACE7tG,MAAM,OACNoX,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/CvzD,QAAQ,YACRyhC,SAAUl8C,EAJZ,SAMG9yB,EAAE,gBAxGP,eAACkuG,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/+D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAACquG,GAAD,UACE,cAAC,KAAD,CAAU7tG,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAtBnD,eAAC24B,GAAD,WACE,cAACE,GAAD,UACE,cAAC,KAAD,CAAM/+D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAACquG,GAAD,UACE,cAACrwE,GAAA,EAAD,CAAqBx9B,MAAM,eC9G/B6uG,GAAkBhtD,aAAH,yGASfitD,GAAoBjtD,aAAH,yGASjBktD,GAAoBjvG,KAAOU,IAAV,0QACR,qBAAGy7F,SAEVxY,aADI,2EAEAorB,IAEJprB,aAJI,2EAKAqrB,OASR,qBAAGz6E,MAAkBurC,aAAarI,MAMhCm2C,GAAkB5tG,KAAOU,IAAV,uLAIjB,qBAAG6zB,MAAkBurC,aAAahN,MAwBhCo8C,GAAclvG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGu0B,MAAkBurC,aAAarI,MA6JvB03C,GAvJiC,SAAC,GAA8D,IAAD,EAA3D5yF,EAA2D,EAA3DA,QAAS2F,EAAkD,EAAlDA,KAAM8Y,EAA4C,EAA5CA,eAAgBmhE,EAA4B,EAA5BA,SAAUiT,EAAkB,EAAlBA,YAExFjtF,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACA4N,EAMElzB,EANFkzB,YAGAI,GAGEtzB,EALFoQ,WAKEpQ,EAJFqQ,SAIErQ,EAHFszB,cACAhzB,EAEEN,EAFFM,gBACA+N,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACF27F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eACzB4qB,EAAiBwa,eAAjBxa,aACAq6E,EAAqB0C,EAArB1C,KAAMC,EAAeyC,EAAfzC,KAAM0C,EAASD,EAATC,KACdvC,GAAgBJ,GAAQC,IAAoB,IAAXxqF,EAEvC,EACEiQ,aAAiBlQ,EAAMmQ,GAEnBkpE,GAHN,EAAQ9oE,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,mBAG1D,UAAC8b,OAAO2N,gBAAR,aAAC,EAAiBigB,aACvCxjD,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GAE/E,EAGIo3B,eAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAGJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAC7DkrE,EAA8B,IAAXr5E,EAazB,EAIIkT,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKIumE,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAII21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAChE3mE,UAAW,iBAJAg6E,EADb,EACE95E,UACS+5E,EAFX,EAEE95E,QACgB+5E,EAHlB,EAGE95E,eAKI+5E,EAAcj6D,EAAa3jB,GAAG,GAClC,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOrxC,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAUmC,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAArE,YAA2EomC,EAAan+B,aAExF,KAEEsmG,EACJ,eAAC,IAAD,CAAM3+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBjvC,EAAd6wB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CAAKrO,KAAMA,EAAMkrF,UAAQ,EAAC98E,eAAgBC,EAAcm1E,EAA0B,OAIhFiK,EACJ,eAAC,IAAD,CAAM5+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMD,SAAU,CAAC,OAAQ,QAAzB,UAAmChvC,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MApDL,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UA4CV06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UAC7F,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,aAIjD,cAAC,KAAD,CAAUnvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAKpC,OACE,eAACuT,GAAD,CAAmB9S,SAAUA,EAA7B,UACE,eAAC+S,GAAD,WACGO,GACC/C,GAAQC,IAAS+C,GACjBhD,GAAQC,GAAQ0C,IAASM,EAC3B,cAAC,IAAD,CAAMhhE,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAApD,SACGpvC,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EAFR,SAIGpvC,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM21B,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAZ,SAAuBxX,EAAE,qBACzB,cAAC,KAAD,CAAc2vC,GAAG,aAItB9e,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCi/E,GAAqBD,EACtB,sBAAM55E,IAAK25E,EAAX,SACE,cAAC,IAAD,CAAUjgE,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,eAAC,GAAD,WACG41F,GACC,cAAC,KAAD,CAAM19D,GAAG,MAAMT,GAAG,OAAOz3B,MAAM,aAA/B,SACGqZ,EAAc7wB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,uBAAyDA,EAAE,SAAS6tE,oBAApE,iBAGhB,cAACqiC,GAAD,6BAAa1tF,GAAb,IAAmB8Y,eAAgBA,KACnC,cAAC60E,GAAD,CAAO3tF,KAAMA,EAAM8Y,eAAgBA,WC5OrC80E,GAAY9vG,KAAOU,IAAV,uGA2CAqvG,GArCyB,SAAC,GAAuC,IAArC7tF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eACxD,EAAyCyxE,eAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAM0C,EAApB,EAAoBA,KAAMW,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAChC,EAAgC5yG,oBAAS,GAAzC,mBAAO8+F,EAAP,KAAiB+T,EAAjB,KACMC,EAA0B/2C,aAAkB+iC,EAAU,KAOlD7rE,EACNgL,eADFU,KAAQ1L,eAEJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAEnE,OACE,qCACE,eAACw/E,GAAD,CAAWpyB,KAAK,MAAMpmE,QAXH,WACrB44F,GAAY,SAAC5yF,GAAD,OAAWA,MAUrB,UACE,cAAC,GAAD,CAAU4E,KAAMA,IAChB,cAAC,GAAD,CAAcA,KAAMA,EAAM3F,QAASA,EAASye,eAAgBA,IAC5D,cAAC,GAAD,CAAS9Y,KAAMA,EAAMoO,eAAgBo1E,KACnCsK,GAAQC,IAAS,cAAC,GAAD,CAAiB/tF,KAAMA,IACzC+tF,GAAQ,cAAC,GAAD,CAAY/tF,KAAMA,IAC3B,cAACkuF,GAAD,CAAkBjU,SAAUA,EAAUwR,aAAc0B,GAAQW,GAAQC,OAErEE,GACC,cAAC,GAAD,CACE5zF,QAASA,EACT2F,KAAMA,EACN8Y,eAAgBA,EAChBmhE,SAAUA,EACViT,YAAa,CAAE1C,OAAMC,OAAM0C,OAAMW,OAAMC,cC3C3CI,GAAcrwG,KAAOU,IAAV,+JACE,qBAAG6zB,MAAkBgoE,MAAM7O,QAExB,qBAAGn5D,MAAkBm5D,KAAK/4D,cAM1C27E,GAAoBtwG,KAAOU,IAAV,4IACJ,qBAAG6zB,MAAkBgoE,MAAM7O,QACxB,qBAAGn5D,MAAkBG,OAAOK,cAK5Cw7E,GAAwBvwG,KAAOU,IAAV,0HAqCZ8vG,GA9B+B,SAAC,GAAwC,IAAtCz1E,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,eAAgBze,EAAc,EAAdA,QAC9D7c,EAAMC,eAAND,EACF+wG,EAAiB/sG,iBAAuB,MAM9C,OACE,cAAC4sG,GAAD,UACE,eAACD,GAAD,CAAa3yB,KAAK,QAAQ/nD,IAAK86E,EAA/B,UACG11E,EAAM5c,KAAI,SAAC+D,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACN3F,QAASA,EACTye,eAAgBA,GAHX9Y,EAAKqO,YAAc,YAAcrO,EAAKC,WAM/C,cAACouF,GAAD,UACE,eAAC,IAAD,CAAQtjE,QAAQ,OAAO31B,QAjBX,WAClBm5F,EAAe3sG,QAAQ4sG,eAAe,CACpCC,SAAU,YAeN,UACGjxG,EAAE,UACH,cAAC,IAAD,CAAewX,MAAM,uBCxB3B05F,GAAa5wG,aAAOwrE,KAAPxrE,CAAH,2DAIV6wG,GAAe7wG,aAAOoxC,IAAPpxC,CAAH,8VAYhB,qBAAGu0B,MAAkBurC,aAAahN,MAQ9Bg+C,GAAkB9wG,KAAOU,IAAV,iKAMjB,qBAAG6zB,MAAkBurC,aAAahN,MAMhCi+C,GAAe/wG,KAAOU,IAAV,oEACZklF,MAKAorB,GAAiBhxG,aAAOoxC,IAAPpxC,CAAH,6DAgXLixG,GAxWS,WACtB,IAAMjmC,EAAW7P,eACTz7D,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAAyDse,aAASte,GAAnD20F,EAAf,EAAQn2E,MAA8BC,EAAtC,EAAsCA,eACtC,EAAoCwnC,cAAgB,EAAO,CAAEG,gBAAiB,wBAA9E,mBAAO7qC,EAAP,KAAmByuE,EAAnB,KACA,EAAwDlpG,mBAR1B,IAQ9B,mBAAO8zG,EAAP,KAA6BC,EAA7B,KACA,EAA0C/zG,oBAAS,GAAnD,mBAAOg0G,EAAP,KAAsBC,EAAtB,KACMC,EAAc7tG,iBAAuB,MAC3C,EAAgC8+D,aAAgB40B,GAAS+O,MAAO,CAAExjC,gBAAiB,sBAAnF,mBAAOmjC,EAAP,KAAiBW,EAAjB,KACA,EAAsCppG,mBAAS,IAA/C,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACA,EAAoCxqF,mBAAS,OAA7C,mBAAOm0G,EAAP,KAAmBC,EAAnB,KACMC,EAAoBhuG,iBAAO,GACjC,EAKI43B,eALJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAC1BpB,EAFV,EAEE0L,KAAQ1L,eACRqB,EAHF,EAGEA,kBACAgK,EAJF,EAIEA,iBAEIg2E,EAAwBjgF,GAAcA,EAAWG,GAAG,GACpD6zE,EAA0Bp1E,GAAkBA,EAAiB,IAE7DyK,EAAQva,mBAAQ,WACpB,IAAMoxF,EAAWV,EAAsBryF,MAAK,SAACqD,GAAD,OAA0B,IAAhBA,EAAKC,UAE3D,MAAM,CADa,6BAAQyvF,GAAR,IAAkBrhF,aAAa,KAClD,mBAA0B2gF,MACzB,CAACA,IAEEW,EAAc92E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,eAAvBD,EAAKwlB,gBAChEoqE,EAAW/2E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,QAAvBD,EAAKwlB,gBAC7DqqE,EAAiBh3E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,cAAvBD,EAAKylB,gBACnEoO,EAAMhb,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,SAAvBD,EAAK0lB,gBAExDogE,EAAe1nF,eAEf2nF,EADYhnF,eACSrf,WACrBsmG,EAAcF,EAAapmG,WAE3BumG,GADahoF,eACUve,WAEvBwmG,GADa1nF,eACS9e,WAEtBymG,GADY1nF,eACS/e,WAErB0mG,GADY1nF,eACShf,WAErB2mG,GADc9nF,eACW7e,WAEzB4mG,GADgB3nF,eACajf,WAE7B6mG,GADa3nF,eACUlf,WAEvB8mG,GADY3nF,eACSnf,WAErB+mG,GADmB3nF,eACgBpf,WAkDnCowG,IAjDQtwG,aAAiBsY,aAAS3V,iBAC1B3C,aAAiBuY,aAAS5V,iBAC1B3C,aAAiBwY,aAAS7V,iBAC1B3C,aAAiByY,aAAS9V,iBAC1B3C,aAAiB0Y,aAAS/V,iBAC1B3C,aAAiB2Y,aAAShW,iBACzB3C,aAAiB4Y,aAAUjW,iBAC3B3C,aAAiB6Y,aAAUlW,iBAC3B3C,aAAiB8Y,aAAUnW,iBAC3B3C,aAAiB+Y,aAAUpW,iBAC3B3C,aAAiBgZ,aAAUrW,iBAC3B3C,aAAiBiZ,aAAUtW,iBAC3B3C,aAAiBkZ,aAAUvW,iBAC3B3C,aAAiBmZ,aAAUxW,iBAC3B3C,aAAiBoZ,aAAUzW,iBAC3B3C,aAAiBqZ,aAAU1W,iBAC3B3C,aAAiBsZ,aAAU3W,iBAC3B3C,aAAiBuZ,aAAU5W,kBAqBlB6jG,GApBTxmG,aAAiBwZ,aAAUlW,iBAC3BtD,aAAiByZ,aAAUnW,iBAC3BtD,aAAiB0Z,aAAUpW,iBAC3BtD,aAAiB2Z,aAAUrW,iBAC3BtD,aAAiB4Z,aAAUtW,iBAC3BtD,aAAiB6Z,aAAUvW,iBAC3BtD,aAAiB8Z,aAAUxW,iBAC3BtD,aAAiB+Z,aAAUzW,kBAcjBijG,EAAW,IAbrBvmG,aAAiBga,aAAUnW,iBAcnB4iG,GAbRzmG,aAAiBia,aAAUlW,iBAcnB2iG,GAbR1mG,aAAiBka,aAAUjW,iBAcnB0iG,GAbR3mG,aAAiBma,aAAUhW,iBAcnByiG,GAbR5mG,aAAiBoa,aAAUpX,iBAcnB6jG,GAbR7mG,aAAiBqa,aAAU5V,iBAcnBqiG,GAAe,IAbvB9mG,aAAiBsa,aAAU3V,iBAclBoiG,GAAY,IAbrB/mG,aAAiBua,aAAUlW,iBAclB2iG,GAbThnG,aAAiBwa,aAAUjW,iBAclB0iG,GAIxB,GAAmCnoF,mBAAQ,kBAAMyxF,KAAUl3E,GAAO,SAAC7Y,GAAD,OAAUA,EAAKsQ,gBAAa,CAACuI,IAA/F,qBAAOm3E,GAAP,MAAsBC,GAAtB,MACMC,GAA0B5xF,mBAC9B,kBACE0xF,GAAchsF,QAAO,SAAChE,GACpB,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAACH,GAAeP,IAEZW,GAAqB9xF,mBACzB,kBACEu1B,EAAI7vB,QAAO,SAAChE,GACV,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAACt8D,EAAK47D,IAEFnL,GAA0B4L,GAAwB3rF,OAAS,EAEjE7I,eACAsd,eACAV,eAEA78B,qBAAU,WAaH0zG,IACsB,IAAIkB,sBAbT,SAACC,GACrB,YAAgBA,EAAhB,MACUC,gBACRrB,GAAwB,SAACsB,GACvB,OAAIA,GAAyBhB,EAAkB5tG,QACtC4uG,EA9Ia,GAgJfA,OAMsD,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQtB,EAAYztG,SACrCwtG,GAAiB,MAElB,CAACD,IAEJ,IAqDIyB,GArDEC,GAAoB/nC,EAAShL,SAASp+B,SAAS,WAC/CoxE,GAAkBhoC,EAAShL,SAASp+B,SAAS,eAC7CqxE,GAAejoC,EAAShL,SAASp+B,SAAS,YAC1CsxE,GAAqBloC,EAAShL,SAASp+B,SAAS,kBAChDuxE,GAAUnoC,EAAShL,SAASp+B,SAAS,OAsE3C,GAnBEkxE,GADEC,GACYj7E,EAAas6E,GAA0BF,GAEvCp6E,EAAaw6E,GAAqBH,GAE9Ca,KACFF,GAAch7E,EAAaw6E,GAAqBT,GAE9CoB,KACFH,GAAch7E,EAAaw6E,GAAqBR,GAE9CoB,KACFJ,GAAch7E,EAAaw6E,GAAqBP,GAE9CoB,KACFL,GAAch7E,EAAaw6E,GAAqBv8D,GAK9C9P,EAAa,CACf,IAAMmtE,GAAiBv8C,aAAS5wB,EAAYhQ,eAC5C68E,GAAcA,GAAY5sF,QAAO,SAAChE,GAAD,OAC/B20C,aAAS30C,EAAKslB,aAAap+B,OAAO6sB,eAAe2L,SAASwxE,OAI9DN,GAnEkB,SAACO,GACjB,OAAQ7B,GACN,IAAK,MAEH,OAAOta,KACLmc,GACA,SAACnxF,GAAD,OAAiBA,EAAKuO,IAAMJ,aAAWnO,EAAMwjF,GAAyBj1E,IAAM,IAC5E,QAEJ,IAAK,SACH,OAAOymE,KACLmc,GACA,SAACnxF,GACC,OAAKA,EAAK9C,UAAa8C,EAAKsO,kBAGrBtO,EAAKqO,YACRiB,aACEjV,EACAkV,EACAC,EACAC,EACAzP,EAAKsO,mBACL2B,iBACFjQ,EAAK9C,SAASk4B,cAAcj2C,MAAM6gB,EAAKsO,mBAAmB5uB,WAVrD,IAYX,QAEJ,IAAK,cACH,OAAOs1F,KACLmc,GACA,SAACnxF,GAAD,OAAiBA,EAAKqO,YAAcoL,EAAiB/5B,WAAasgB,EAAKkzB,YAAYxzC,aACnF,QAEJ,QACE,OAAOyxG,GAgCCC,CAAUR,IAAax/D,MAAM,EAAG69D,GAC9CO,EAAkB5tG,QAAUgvG,GAAYrsF,OAExC,IAAM8sF,GACJ,cAAC3C,GAAD,UACGkC,GAAY30F,KAAI,SAAC+D,GAAD,OACfA,EAAKqO,YACH,cAAC,GAAD,CAA+BrO,KAAMA,EAAMsjF,eAAgB1tE,GAAxC,aAEnB,cAAC,GAAD,CAA4B5V,KAAMA,EAAM3F,QAASA,GAAlC2F,EAAKC,aAMtBqxF,GAAc,cAAC,GAAD,CAAYz4E,MAAO+3E,GAAav2F,QAASA,EAASye,eAAgBA,IAEtF,OACE,qCACE,cAACuwC,GAAA,EAAD,UACE,eAAC,IAAD,CAAMx6B,eAAe,gBAAgBR,cAAe,CAAC,SAAU,KAAM,KAAM,OAA3E,UACE,eAAC,IAAD,CAAMs5C,KAAK,IAAIt5C,cAAc,SAASnD,GAAI,CAAC,MAAO,GAAlD,UACE,cAAC,IAAD,CAASuE,GAAG,KAAKX,MAAM,MAAM95B,MAAM,YAAYy3B,GAAG,OAAlD,SACGjvC,EAAE,mBAEL,cAAC,IAAD,CAASsxC,MAAM,KAAK95B,MAAM,OAA1B,SACGxX,EAAE,qCAEL,cAAC,IAAD,CAASsxC,MAAM,KAAK95B,MAAM,OAA1B,SACGxX,EAAE,yBAEL,eAAC,IAAD,CAAM0vC,GAAG,MAAT,UACA,cAACn4B,GAAA,EAAD,CAASC,MAAM,UAAUG,OAAO,KAAK03B,SAAS,OAAOD,MAAI,EAACrvC,MAAOuyG,GAAO7wG,SAAU,IAClF,cAACsyG,GAAD,OAEA,cAAC,KAAD,CAAM1kE,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYm4B,GAAG,MAAhD,SACG3vC,EAAE,qCAGP,eAAC,IAAD,CAAMmqF,KAAK,IAAIhV,OAAO,cAAc9jC,eAAe,SAASW,WAAW,SAAStC,GAAI,CAAC,OAAQ,KAAM,KAAnG,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YAIN,eAACoxB,GAAA,EAAD,WACE,eAACqwC,GAAD,WACE,cAAC,GAAD,CACE/4E,WAAYA,EACZyuE,cAAeA,EACfC,wBAAyBA,GACzBV,SAAUA,EACVW,YAAaA,IAEf,eAACqK,GAAD,WACE,eAACC,GAAD,WACE,cAAC,KAAD,CAAMhiE,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAa4yE,cAAc,YAA5D,SACGpqF,EAAE,aAEL,cAACsxG,GAAD,UACE,cAAC/sB,GAAA,EAAD,CACE7hF,QAAS,CACP,CACEgkE,MAAO1mE,EAAE,OACTD,MAAO,OAET,CACE2mE,MAAO1mE,EAAE,OACTD,MAAO,OAET,CACE2mE,MAAO1mE,EAAE,UACTD,MAAO,UAET,CACE2mE,MAAO1mE,EAAE,gBACTD,MAAO,gBAGX8vC,SAtJe,SAACu1C,GAC9B2sB,EAAc3sB,EAAOrlF,eAyJb,eAACsxG,GAAD,CAAch9E,MAAO,CAAE03D,WAAY,IAAnC,UACE,cAAC,KAAD,CAAM18C,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAa4yE,cAAc,YAA5D,SACGpqF,EAAE,YAEL,cAACisE,GAAA,EAAD,CAAap8B,SAlKO,SAACs1B,GAC/BgjB,EAAehjB,EAAME,OAAOtlE,QAiK8BmlE,YAAY,0BAIlE,eAAC,IAAD,CAAMlzB,WAAW,SAASX,eAAe,SAASpC,GAAG,OAAOk7C,KAAK,IAAIhV,OAAO,cAA5E,UACA,cAAC,IAAD,CAAQljC,GAAIC,KAAM1xC,MAAO,GAAI20E,OAAQ,GAAKhjC,GAAG,aAAc5E,QAAQ,YAAYG,GAAI,GAAnF,SACC1tC,EAAE,SAEL,cAAC,IAAD,CAAQiyC,GAAIC,KAAM1xC,MAAO,IAAK20E,OAAQ,GAAKhjC,GAAG,qBAAqB5E,QAAQ,YAAYG,GAAI,GAA3F,SACG1tC,EAAE,gBAEL,cAAC,IAAD,CAAQiyC,GAAIC,KAAM1xC,MAAO,GAAI20E,OAAQ,GAAKhjC,GAAG,kBAAkB5E,QAAQ,YAAYG,GAAI,GAAvF,SACG1tC,EAAE,SAEL,cAAC,IAAD,CAAQiyC,GAAIC,KAAM1xC,MAAO,IAAK20E,OAAQ,GAAKhjC,GAAG,wBAAwB5E,QAAQ,YAAYG,GAAI,GAA9F,SACG1tC,EAAE,kBAGFqzG,IACC,cAAC,KAAD,CAAMhkE,SAAS,OAAO73B,MAAM,UAAUwqF,GAAG,OAAzC,SACGhiG,EAAE,iFAGN6c,IAAYye,GAAkBlD,GAC7B,cAAC,IAAD,CAAMiZ,eAAe,SAASpC,GAAG,MAAjC,SACE,cAAC88B,GAAA,EAAD,MAGHq6B,IAAa1O,GAAS8O,KAAOqN,GAAaC,GAC3C,qBAAK79E,IAAK47E,WCnaLvhF,GAAsB,SACjCzrB,EACAirB,GAGI,IAFJruB,EAEG,uDAFQ,GACXsuB,EACG,uDADe,EAEZC,EAAmBhuB,aAAiB8tB,EAAkBruB,GACtD8uB,EAAiB,IAAI7uB,KAAUmD,EAAK9C,UAAUiuB,IAC9CQ,EAAwBxuB,aAAiBuuB,EAAgB9uB,GACzDgvB,EAAoBlvB,aAAiB,IAAIG,KAAU8uB,GAAwB/uB,GAC3EivB,EAAyBvuB,aAAsBouB,EAAgB9uB,EAAUsuB,GAC/E,MAAO,CAAES,wBAAuBC,oBAAmBC,2BAMxCC,GAAa,SAACnO,EAAYoO,GACrC,IAAQC,EAAwCrO,EAAxCqO,YAAaC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAElCC,EAAmBC,KAAKC,MAAMJ,EAAoB,KAAS,EAC3DK,EAAmBH,EAAmB,EAAI,EAG1CI,EAAoBP,EAVU,IACC,EAWrC,GAAIA,EAAa,CACf,IAAMQ,EAAiC,IAAOP,EACxCQ,EAA6BC,aAAyC,CAC1EC,aAAc,IACdC,QAASV,EACTW,WAAYZ,EACZK,mBACAC,oBACAR,mBAMF,MAAO,CAAEG,IAJOY,aAAO,CACrBC,aAAcN,EACdO,eAAgBR,IAEKL,mBAAkBG,mBAAkBC,qBAE7D,MAAO,CAAEL,MAAKC,mBAAkBG,mBAAkBC,sBAGvCU,GAAuB,SAClCjV,EACAkV,EACAC,EACAC,EACAnB,GAEA,IAAMoB,EACJrV,GAAWkV,GAAwBA,EAAqBI,GAAG,IAAMH,GAAcA,EAAWG,GAAG,GAEzFC,EArE2B,SACjCvC,EACAC,GAGI,IAFJruB,EAEG,uDAFQ,GACXsuB,EACG,uDADe,EAEZC,EAAmBhuB,aAAiB8tB,EAAkBruB,GACtDwuB,EAAe,IAAIvuB,KAAUmuB,EAAOK,aAAaF,IACjDG,EAAsBnuB,aAAiBiuB,EAAcxuB,GACrD2uB,EAAkB7uB,aAAiB,IAAIG,KAAUyuB,GAAsB1uB,GACvE4uB,EAAuBluB,aAAsB8tB,EAAcxuB,EAAUsuB,GAC3E,MAAO,CAAEI,sBAAqBC,kBAAiBC,wBAyDnBT,CAAoBoC,EAAYC,GAApD7B,gBAC+BiC,MAAMN,GACvCO,EAAoBF,EAAeG,IAAI,GAAKvwB,aAAiBowB,EAAgB,IAAM,EAEnFI,EAAgBJ,EAAezwB,MAAMmvB,GAE3C,MAAO,CAAEoB,kBAAiBI,oBAAmBG,iBADpBD,EAAcD,IAAI,GAAKvwB,aAAiBwwB,EAAe,IAAM,IAI3EE,GAAmB,SAAClQ,EAAYmQ,GAC3C,IAAQC,EAAqCpQ,EAArCoQ,WAAYC,EAAyBrQ,EAAzBqQ,SAAUC,EAAetQ,EAAfsQ,WACxBC,EAA2BrM,SAASoM,GAAcF,GAAcC,GAChEG,EAAmB/B,KAAKgC,IAAIL,EAAaD,EAAc,GACvDO,EAAkBjC,KAAKgC,IAAIJ,EAAWF,EAAc,GACpDQ,EAAsC,IAArBH,GAA0BE,EAAkB,EAEnE,MAAO,CAAEH,2BAA0BC,mBAAkBE,kBAAiBC,iBAAgBC,gBAD9DD,EAAiBD,EAAkBF,ICE9CooE,GAvEuB,SAAC,GAAkC,IAAhC54E,EAA+B,EAA/BA,KAA+B,IAAzBoO,sBAAyB,MAAR,EAAQ,EAC9D5wB,EAAMC,eAAND,EACA6nC,EAAiFrlB,EAAjFqlB,aAAcC,EAAmEtlB,EAAnEslB,aAAchV,EAAqDtQ,EAArDsQ,WAAY/B,EAAyCvO,EAAzCuO,IAAKD,EAAoCtO,EAApCsO,kBAAmBD,EAAiBrO,EAAjBqO,YAElEwqE,EACFr7F,EADmB6wB,EACjB,uHACA,iFAEN,EAA+C8E,aAAW0lE,EAAgB,CAAEzlE,UAAW,iBAA/EE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eACpBnZ,EAAYlZ,eAAZkZ,QAER,EAAkF8T,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAC5D,EAAyD+J,aAASte,GAI5D0+E,GAJN,EAAQlgE,MAAR,EAAsCC,eAIjBuM,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,SACnG+T,EAAcH,eACd47F,EAAkBhyG,aAAiB8X,aAAmBnV,iBACtDyxF,EAAgBx1E,eAChBqzF,EAAc17F,EAAcvW,aAAiBuW,GAAe,EAG5D27F,GAFO9d,EAAcz0F,MAAMsyG,GAAatyG,MAAM,KACjCO,WACCk0F,EAAcl0F,YAC5BiyG,EAAenyG,aAAiBgY,aAAgB1U,iBAEhD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBx7F,eAKlBy7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAIrC,EAI1C,EAA4BtkE,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAaA,OACE,eAAC,IAAD,CAAMohB,WAAW,SAASX,eAAe,gBAAzC,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAM91B,EAAjB6wB,EAAmB,MAAiB,OAAzB,OACxCiC,IAAe/B,EACd,cAAC,KAAD,CAAUvwB,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CAAMnjC,WAAW,SAAjB,SACE,cAACz6B,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAOu7F,EAA8BgZ,EACrC7yG,SAAU,EACViW,KAAK,IACL03B,MAAI,UC/EHosD,GAAal7F,aAAOy0B,IAAPz0B,CAAH,iOAOZ,gBAAGwyB,EAAH,EAAGA,WAAH,SAAe+B,MAAkBG,OAAOlC,EAAa,UAAY,gBAExE,qBAAG+B,MAAkBurC,aAAahN,MCqBhCqoC,GAAkBn7F,aAAOoxC,IAAPpxC,CAAH,kFAOfo7F,GAAgD,SAAC,GAAuB,IAAD,EAApBl5E,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrD7c,EAAMC,eAAND,EACA2yB,EAAiBwa,eAAjBxa,aACR,EAGIiJ,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAIRiX,EASErlB,EATFqlB,aACAC,EAQEtlB,EARFslB,aACA4N,EAOElzB,EAPFkzB,YAGAI,GAIEtzB,EANFoQ,WAMEpQ,EALFqQ,SAKErQ,EAJFszB,cACAhzB,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACAoO,EACErO,EADFqO,YAGIvX,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GACzEm3F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eAC3B8zF,KAAqB,UAAC3sD,OAAO2N,gBAAR,aAAC,EAAiBigB,YACvCg/B,EAA8B,IAAXr5E,EAEzB,EACEiQ,aAAiBlQ,EAAMmQ,GAEzB,GAHA,EAAQI,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,gBAGtCuC,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,kBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIL,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKF,OACE,eAAC,GAAD,CAAiB6a,cAAc,SAA/B,UACE,eAAC,IAAD,CAAM5B,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMokB,OAAK,EAAX,UAAap2D,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMgyC,WAAW,aAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS6+C,OAAK,EAACr2D,MA1BG,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UAkBlB06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UACnF,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,MAAMD,GAAG,aAI1D,cAAC,KAAD,CAAUlvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAGjClmD,GAAgBA,EAAa3jB,GAAG,IAC/B,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAM+kB,OAAK,EAAX,UAAap2D,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMo2D,OAAK,EAAX,mBAAgBj0D,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAA3E,YAAiFomC,EAAan+B,aAGjGmnB,GACC,eAAC,IAAD,CAAMoe,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,YAMN,cAAC,IAAD,CAAMqe,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAAOgnB,OAAK,EAAhE,SACGp2D,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EACNgnB,OAAK,EAHP,SAKGp2D,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM+3B,eAAe,WAArB,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAU63B,SAAS,OAA/B,SACGrvC,EAAE,qBAEL,cAAC,KAAD,CAAc2vC,GAAG,iBAQds1B,OAAMtqC,KAAK+gE,ICtJpBU,GAA0B97F,aAAOoxC,IAAPpxC,CAAH,4HAyCd0rF,GAjCuB,SAAC,GAAuB,IAArBxpE,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrCgU,EAAgBrO,EAAhBqO,YACA7wB,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAO0+F,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAA+C21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAC3G3mE,UAAW,WADLE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMgc,WAAW,SAAjB,UACGnhB,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCmF,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU6Z,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,cAAC,IAAD,CAAiBilF,SAAUJ,EAAYzkF,QAAS,kBAAM0kF,GAAeD,IAArE,SACgBr8F,EAAbq8F,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB75E,KAAMA,EAAM3F,QAASA,QC7CpDiX,GAAUxzB,aAAOo8F,IAAPp8F,CAAH,wGACG,gBAAGwyB,EAAH,EAAGA,WAAYmC,EAAf,EAAeA,WAAYJ,EAA3B,EAA2BA,MAA3B,OACZ/B,EAAa+B,EAAMG,OAAO2nE,mBAAqB9nE,EAAMG,OAAO4nE,UAAU3nE,MACvD,gBAAGJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMgoE,MAAM7O,KAA9B,YAAsCn5D,EAAMgoE,MAAM7O,KAAlD,WAyDJ8O,GA9CV,SAAC,GAAoH,IAAlHjC,EAAiH,EAAjHA,mBAAoBkC,EAA6F,EAA7FA,mBAAoBx6F,EAAyE,EAAzEA,OAAyE,IAAjEuwB,kBAAiE,aAA7CjC,mBAA6C,aAAxBmsE,iBAAwB,SAC/Gh9F,EAAMC,eAAND,EACFi9F,EAAepsE,EAAW,SAE5B,UAAGtuB,EAAH,QAAgBsrE,oBACdqvB,EAAoC,SAAvBrC,GAAwD,SAAvBkC,EAC9C9nE,EAAa+nE,EAAY,YAAc,aAyB7C,OACE,cAAC,GAAD,CAASlqE,WAAYA,EAAYmC,WAAYA,EAA7C,SACA,eAAC,IAAD,CAAM+c,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAApB,UACE,cAAC,IAAD,CAASr5B,MAAOsb,EAAa,eAAiB,OAAQwe,MAAM,KAA5D,mBAxBKtxC,EAFL6wB,EAEO,OAEPqsE,EAEO,SAGF,QAiBL,YAC4BrC,KAE5B,cAAC,KAAD,CAAMrjF,MAAOsb,EAAa,eAAiB,aAA3C,SAhBAjC,EACK7wB,EAAE,uBAEPk9F,EACKl9F,EAAE,yBAEJA,EAAE,iBAAkB,CAAE0J,OAAQqzF,SAYnC,cAAC,KAAD,CAAOvmC,IAAG,wBAAmBymC,GAAgBj1C,IAAKzlD,EAAQ/B,MAAO,GAAI20E,OAAQ,WCjDtEgoB,GAAiB,SAACC,EAAsB36E,EAAQo4E,GAC3D,MAAkDl9F,oBAAS,GAA3D,mBAAO0/F,EAAP,KAA0BC,EAA1B,KACA,EAAqCvgE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd14D,EAAMC,eAAND,EACFoe,EAAWC,eACTxB,EAAYlZ,eAAZkZ,QACF0gF,EAAmB/zE,YAAY/G,GA0BrC,MAAO,CAAE+6E,cAxBax+F,sBAAW,sBAAC,8BAAAd,EAAA,sEAE9Bo/F,GAAqB,GAFS,SAGbF,EAAWnzD,QAAQszD,EAAiB/4F,QAASvB,KAAOw6F,UAAUrzD,YAHjD,cAGxBlK,EAHwB,gBAIRA,EAAGgmB,OAJK,OAIxB7lB,EAJwB,OAM9BjiB,EAASw7B,aAAoBn3B,EAAQ5F,IACjCwjB,EAAQkQ,QACVi0B,EACExkE,EAAE,oBACFA,EAAE,0CAA2C,CAAE0J,OAAQmxF,KAEzDyC,GAAqB,KAGrB5kC,EAAW14D,EAAE,SAAUA,EAAE,uFACzBs9F,GAAqB,IAhBO,kDAmB9B5/E,QAAQC,MAAR,MACA+6C,EAAW14D,EAAE,SAAUA,EAAE,uFApBK,0DAsB/B,CAAC6c,EAASuB,EAAUg/E,EAAYG,EAAkB96E,EAAQo4E,EAAoB76F,EAAG04D,EAAY8L,IAExE64B,sBAIbK,GAAkB,SAAC1gF,GAC9B,MAAkDrf,oBAAS,GAA3D,mBAAO0/F,EAAP,KAA0BC,EAA1B,KACQt9F,EAAMC,eAAND,EACR,EAAqC+8B,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WAChBtgB,EAAoBvuB,cACpBpR,EAAe0Q,cAgBrB,MAAO,CAAEq0E,cAdU,uCAAG,4BAAAt/F,EAAA,sEACHua,EAAawxB,QAAQmO,EAAkB5zC,QAASvB,KAAOw6F,UAAUrzD,YAD9D,cACdlK,EADc,OAEpBo9D,GAAqB,GAFD,SAGEp9D,EAAGgmB,OAHL,cAIR3V,QACVi0B,EAAaxkE,EAAE,oBAAqBA,EAAE,2CAA4C,CAAE0J,OAAQ,UAC5FsT,IACAsgF,GAAqB,KAErB5kC,EAAW14D,EAAE,SAAUA,EAAE,uFACzBs9F,GAAqB,IAVH,2CAAH,qDAcKD,sBAGbM,GAA8B,WACzC,MAA8ChgG,oBAAS,GAAvD,mBAAOigG,EAAP,KAAwBC,EAAxB,KACQhhF,EAAYlZ,eAAZkZ,QACFpE,EAAe0Q,cACfivB,EAAoBvuB,cAC1B,EAAwC/M,eAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAerB,OAdA/e,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,+EAEDua,EAAagH,UAAU5C,EAASu7B,EAAkB5zC,SAFjD,OAElBimC,EAFkB,OAGlBlB,EAAmB,IAAI7nC,KAAU+oC,EAAS5qC,YAChDg+F,EAAmBt0D,EAAiBpX,GAAG,IAJf,gDAMxB0rE,GAAmB,GANK,yDAAH,qDAUzBC,KACC,CAACjhF,EAASpE,EAAc2/B,EAAmBr7B,IAEvC,CAAE6gF,kBAAiB5gF,mBCrDb+gF,GAzBuC,SAAC,GAAiC,IAA/Bv7E,EAA8B,EAA9BA,KAA8B,IAAxBka,iBAAwB,SAC7Eja,EAAuCD,EAAvCC,OAAQolB,EAA+BrlB,EAA/BqlB,aAAcC,EAAiBtlB,EAAjBslB,aACtB9nC,EAAMC,eAAND,EACFg+F,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAA6C24F,GAAea,EAAsBv7E,EAAQqlB,EAAap+B,QAA/F8zF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG3gE,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAW2gE,EACXnoB,QAASmoB,EAAoB,cAAC,IAAD,CAAetG,MAAI,EAACv/E,MAAM,iBAAoB,KAC3Ew3D,SAAUquB,EACVzlF,QAAS4lF,EACTh9F,MAAM,OALR,SAOGR,EAAE,eCYEi+F,IAhCI39F,aAAO4xC,KAAP5xC,CAAH,+CAIkD,SAAC,GAAgC,IAA9B+8C,EAA6B,EAA7BA,YAAalP,EAAgB,EAAhBA,UACxEnuC,EAAMC,eAAND,EACU00B,eAAVG,MAER,OACE,eAAC,KAAD,CACEia,MAAO9uC,EAAE,oBAAqB,CAAE0J,OAAQ2zC,IACxClP,UAAWA,EAFb,UAIE,cAAC,KAAD,CAAM32B,MAAM,UAAU43B,MAAI,EAA1B,SACGpvC,EAAE,gCAAiC,CAAE0J,OAAQ2zC,MAEhD,cAAC,KAAD,CAAM3N,GAAG,OAAT,SAAiB1vC,EAAE,mDAA+C,CAAE0J,OAAQ2zC,MAC5E,cAAC,KAAD,UACGr9C,EAAE,kFAA8E,CAC/E0J,OAAQ2zC,MAGZ,eAAC,IAAD,CAAQ3N,GAAG,OAAOuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAvC,UACGxwC,EAAE,OADL,IACcq9C,KAEd,cAAC,IAAD,CAAQ9P,QAAQ,OAAO31B,QAASu2B,EAAhC,SACGnuC,EAAE,uBC7BLk+F,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAYH69F,GAR2C,SAAC,GAA2B,IAAzBzgG,EAAwB,EAAxBA,SAAUka,EAAc,EAAdA,QACrE,OACE,cAAC,GAAD,CAAc05B,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAASA,EAA3E,SACGla,KCJD0gG,GAAS,uCAAG,WAAOb,EAAkB/7F,GAAzB,+BAAAtD,EAAA,6DAAiCuD,EAAjC,+BAA4C,GAA5C,SACC87F,EAAiBp3C,QAAQ,IAAIzkD,KAAUF,GAAQG,MAAMC,KAAQC,IAAIJ,IAAW5B,YAD7E,cACVqgC,EADU,gBAEMA,EAAGgmB,OAFT,cAEV7lB,EAFU,yBAGTA,EAAQkQ,QAHC,2CAAH,wDAMT8tD,GAAY,uCAAG,WAAOd,EAAkB/7F,GAAzB,iBAAAtD,EAAA,sEACFq/F,EAAiBp3C,QAAQ,IAAIzkD,KAAUF,GAAQG,MAAMg8B,MAAuB99B,YAD1E,cACbqgC,EADa,gBAEGA,EAAGgmB,OAFN,cAEb7lB,EAFa,yBAGZA,EAAQkQ,QAHI,2CAAH,wDA8BH+tD,GAxBM,SAAC77E,GAAwC,IAAxB87E,EAAuB,wDACrDngF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF65B,EAAqBntB,cACrBg0E,EAAmB/zE,YAAY/G,GAE/B+7E,EAAcx/F,sBAAW,uCAC7B,WAAOwC,EAAgBC,GAAvB,SAAAvD,EAAA,yDACiB,IAAXukB,EADN,gCAEUujC,aAAUtP,EAAoB,EAAGl1C,GAF3C,kCAGa+8F,EAHb,iCAIUF,GAAad,EAAkB/7F,GAJzC,gDAMU48F,GAAUb,EAAkB/7F,EAAQC,GAN9C,QAQE2c,EAAS27B,aAAwBt3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IATrC,4CAD6B,wDAY7B,CAACA,EAASuB,EAAUmgF,EAAY7nD,EAAoB6mD,EAAkB96E,IAGxE,MAAO,CAAEg8E,QAASD,ICnCdE,GAAW,uCAAG,WAAOnB,EAAkB/7F,EAAQC,GAAjC,iBAAAvD,EAAA,sEACDq/F,EAAiBj3C,SAAS,IAAI5kD,KAAUF,GAAQG,MAAMC,KAAQC,IAAIJ,IAAW5B,YAD5E,cACZqgC,EADY,gBAEIA,EAAGgmB,OAFP,cAEZ7lB,EAFY,yBAGXA,EAAQkQ,QAHG,2CAAH,0DAMXouD,GAAoB,uCAAG,WAAOpB,GAAP,iBAAAr/F,EAAA,sEACVq/F,EAAiBqB,oBADP,cACrB1+D,EADqB,gBAELA,EAAGgmB,OAFE,cAErB7lB,EAFqB,yBAGpBA,EAAQkQ,QAHY,2CAAH,sDA+BXsuD,GAzBQ,SAACp8E,GAA6C,IAArCq8E,EAAoC,wDAC5D1gF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF65B,EAAqBntB,cACrBg0E,EAAmB/zE,YAAY/G,GAE/Bs8E,EAAgB//F,sBAAW,uCAC/B,WAAOwC,EAAgBC,GAAvB,SAAAvD,EAAA,yDACiB,IAAXukB,EADN,gCAEU2jC,aAAY1P,EAAoB,EAAGl1C,GAF7C,kCAGas9F,EAHb,iCAIUH,GAAqBpB,GAJ/B,gDAMUmB,GAAYnB,EAAkB/7F,EAAQC,GANhD,QAQE2c,EAAS27B,aAAwBt3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IACnCuB,EAAS47B,aAAwBv3B,EAAQ5F,IAV3C,4CAD+B,wDAa/B,CAACA,EAASuB,EAAU0gF,EAAyBpoD,EAAoB6mD,EAAkB96E,IAGrF,MAAO,CAAEu8E,UAAWD,ICpBhBE,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,+CAoLD4+F,GAhL+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACA38E,EAKI,EALJA,KACAk3B,EAII,EAJJA,oBACAP,EAGI,EAHJA,kBAGI,IAFJimD,uBAEI,SADJjxD,EACI,EADJA,UAEQ1rB,EAA+DD,EAA/DC,OAAQolB,EAAuDrlB,EAAvDqlB,aAAcnoB,EAAyC8C,EAAzC9C,SAAUo2B,EAA+BtzB,EAA/BszB,aAAchO,EAAiBtlB,EAAjBslB,aAC9C9nC,EAAMC,eAAND,EAEAy+F,GADU/pE,eAAVG,MACYypE,GAAa77E,EAAQ08E,GAAjCV,SACAO,EAAcH,GAAep8E,EAAQD,EAAKs8E,yBAA1CE,UACR,EAAqCjiE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAAyD3hG,oBAAS,GAAlE,mBAAO4hG,EAAP,KAA6BC,EAA7B,KACA,EAA8B7hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACMC,EAA4B,WAChC,OAAIP,EACK1/E,EAASE,cAEXk2B,EAAa3jB,GAAG,IAAMunB,EAAoBvnB,GAAG2jB,GAAgBA,EAAe4D,GAG/EkmD,EAAiBP,GAAe/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMw3C,GAAmBj3C,YAEvGjE,qBAAU,WACR,GAAI63C,EAAa3jB,GAAG,KAAOitE,EAAiB,CAC1C,IAAMS,EAAyBt+F,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACzF+9F,EAAyBK,EAAuBC,KAAKpgF,EAASE,eAAeuS,GAAG2jB,OAEjF,CAACupD,EAAavpD,EAAcp2B,EAAUmoB,EAAcu3D,EAAiBI,IAExE,IAWMO,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBN,IAA4B59F,UAAU,KAAKmuB,aAAa8vE,GACjFE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPG,EAAkB,uCAAG,sBAAAjiG,EAAA,yDACzB+3F,GAAa,IAETmJ,EAHqB,0CAMfJ,EAAUK,EAAax3D,EAAapmC,UANrB,OAOrB+iE,EAAa,GAAD,OACPxkE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnE0J,OAAQo+B,EAAap+B,UAGzBusF,GAAa,GACb9nD,IAdqB,kDAgBrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjBQ,2DAsBfwI,EAAQY,EAAax3D,EAAapmC,UAtBnB,QAuBrB+iE,EAAa,GAAD,OACPxkE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrD0J,OAAQm+B,EAAan+B,UAGzBusF,GAAa,GACb9nD,IA9BqB,mDAgCrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjCQ,kEAAH,qDAsCxB,OACE,eAAC,KAAD,CACEnnD,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIG2H,EAAa3jB,GAAG,KAAOitE,GACtB,cAAC,KAAD,CAAM5nF,MAAM,YAAY43B,MAAI,EAACH,GAAG,OAAO5a,MAAO,CAAEsoC,UAAW,UAAYttB,SAAS,OAAhF,SACGrvC,EAAE,4CAA6C,CAC9CwB,OAAQW,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GACnEse,MAAO8nB,EAAan+B,WAI1B,eAAC,IAAD,CAAMsoC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAzFyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB7+F,aAAiB,IAAIG,KAAU01D,GAAQvvB,EAAapmC,UACrE4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAU49F,KAA6BzvE,aAAa,KAAKhuB,YACtGw9F,EAAWzuE,KAAK8+D,IAAIsQ,EAAY,WAEhCX,EAAW,GAEbJ,EAAeloC,IAkFXkpC,cAAqC,IAAtBnnD,GAAA,WAA+BymD,GAAkB,EAAjD,QACfpmB,UAAW+lB,EACX99F,SAAUomC,EAAapmC,WAExB89F,GACC,cAAC,KAAD,CAAM/nF,MAAM,UAAU63B,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,SAAWjtB,GAAG,MAAxE,SACG1vC,EAAE,wCAAyC,CAC1CwB,OAAQW,aAAsB,IAAIT,KAAUo0C,GAAejO,EAAapmC,SAAU,GAClFse,MAAO8nB,EAAan+B,WAI1B,cAAC,KAAD,CAAMimC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAAtD,SACGjvC,EAAE,qBAAsB,CACvBiC,QAASE,aAAsBw9F,IAA6B93D,EAAapmC,cAG7E,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB93B,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,MAArD,SAA4D//F,EAAE,YAEhE,cAAC,IAAD,CACE08B,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,IAAsBE,EAC3D7vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,GAAD,CAAYjpC,UAAQ,EAAC3lB,KAAK,QAA1B,SACE,cAAC,IAAD,CAAQhwC,MAAM,OAAOkvC,GAAG,MAAMnC,QAAQ,YAAtC,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,iBChFvCg3F,GAhGkC,SAAC,GAO3C,IANLl+E,EAMI,EANJA,KACAk3B,EAKI,EALJA,oBACA95B,EAII,EAJJA,cACAu/E,EAGI,EAHJA,UACAwB,EAEI,EAFJA,SAEI,IADJjkE,iBACI,SACImL,EAAwErlB,EAAxEqlB,aAAcsR,EAA0D32B,EAA1D22B,kBAAmBrD,EAAuCtzB,EAAvCszB,aAAchjB,EAAyBtQ,EAAzBsQ,WAAYpT,EAAa8C,EAAb9C,SAC3D1f,EAAMC,eAAND,EACF4gG,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAAiCsuC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA2BhxD,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,EAAP,oBAUA,EAA+CrrE,aAC7C31B,EAAE,6EACF,CAAE41B,UAAW,WAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBirE,EAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAmD3E,OAAO,cAAC,IAAD,CAAMjF,cAAc,SAApB,SAA8BnU,EAAY,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAhDtEwrB,EACL,eAAC,IAAD,CAAMtvD,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMnB,cAAc,SAApB,SACE,qCACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAO6gG,IAC3B,IAAtBznD,GACC,cAAC,KAAD,CAAM9J,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACV1B,MAAO8gG,EACPlpF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,KAAD,CAAY61B,QAAQ,YAAY31B,QAASopF,EAAkBtzD,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,EACC,sBAAMhrE,IAAKH,EAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EACtD9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,OAAO20E,OAAO,cAIlDn/C,GAAkBD,KAGrB,cAAC,IAAD,CAAQi5C,SAAUl8C,EAAYlb,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAApF,SACG9gG,EAAE,cClGLkhG,GAAW,uCAAG,WAAO3D,GAAP,iBAAAr/F,EAAA,sEACDq/F,EAAiBp3C,QAAQ,KADxB,cACZjmB,EADY,gBAEIA,EAAGgmB,OAFP,cAEZ7lB,EAFY,yBAGXA,EAAQkQ,QAHG,2CAAH,sDAMX4wD,GAAc,uCAAG,WAAO5D,GAAP,iBAAAr/F,EAAA,sEACJq/F,EAAiBp3C,QAAQ,CAAGpmD,MAAOiX,OAD/B,cACfkpB,EADe,gBAECA,EAAGgmB,OAFJ,cAEf7lB,EAFe,yBAGdA,EAAQkQ,QAHM,2CAAH,sDA2BL6wD,GArBQ,SAAC3+E,GAAgC,IAAxB87E,EAAuB,wDAC/CngF,EAAWC,eACjB,EAAoB1a,eAAZkZ,EAAR,EAAQA,QACF0gF,EAAmB/zE,YAAY/G,GAC/Bi0B,EAAqBntB,cAErB83E,EAAgBriG,sBAAW,sBAAC,sBAAAd,EAAA,yDACjB,IAAXukB,EAD4B,gCAExB8jC,aAAY7P,EAAoB,GAFR,kCAGrB6nD,EAHqB,iCAIxB4C,GAAe5D,GAJS,gDAMxB2D,GAAY3D,GANY,QAQhCn/E,EAAS47B,aAAwBv3B,EAAQ5F,IACzCuB,EAAS07B,aAAkBr3B,EAAQ5F,IATH,4CAU/B,CAACA,EAASuB,EAAUmgF,EAAY7nD,EAAoB6mD,EAAkB96E,IAEzE,MAAO,CAAE6+E,SAAUD,ICsGNE,GA7GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA35D,EAMI,EANJA,aACA45D,EAKI,EALJA,oBACAj/E,EAII,EAJJA,OACA08E,EAGI,EAHJA,UAGI,IAFJwC,sBAEI,SADJxzD,EACI,EADJA,UAEQnuC,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd4oC,EAAaF,GAAe3+E,EAAQ08E,GAApCmC,SACA7C,EAAYH,GAAa77E,EAAQ08E,GAAjCV,QACR,EAAkC9gG,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAA4Ct4F,mBAASgkG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+ClsE,aAC7C,qCACE,cAAC,KAAD,CAAMsZ,GAAG,OAAT,SAAiBjvC,EAAE,yDACnB,cAAC,KAAD,UAAOA,EAAE,uDAEX,CAAE41B,UAAW,aAAcksE,cAAe,CAAC,GAAI,MALzChsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtB+rE,EAAoB,uCAAG,sBAAA7jG,EAAA,yDAC3B+3F,GAAa,IAET2L,EAHuB,0CAKjBnD,EAAQgD,EAAa35D,EAAarmC,UALjB,OAMvB+iE,EAAa,GAAD,OACPxkE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAE0J,OAAQo+B,EAAap+B,UAE1FusF,GAAa,GACb9nD,IAXuB,kDAavBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GAfU,2DAoBjBqL,IApBiB,QAqBvB98B,EAAa,GAAD,OACPxkE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE0J,OAAQo+B,EAAap+B,UAEpFusF,GAAa,GACb9nD,IA1BuB,mDA4BvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEnnD,MAAK,UAAKhH,EAAap+B,OAAlB,YAA6C1J,EAAjB2hG,EAAmB,UAAe,YACnExzD,UAAWA,EAFb,UAGGwzD,GACC,eAAC,IAAD,CAAMtwD,eAAe,SAASW,WAAW,SAAS/C,GAAG,OAArD,UACE,eAAC,IAAD,CACEs8B,YAAaq2B,EAAiB,EAAI,EAClCtwD,MAAM,KACN/D,QAAQ,SACRo/C,YAAa,SAAC33C,GAAD,OAAW6sD,GAAmB7sD,IAJ7C,UAME,cAAC,IAAD,CAAgB/C,GAAG,SAAnB,SAA6BjyC,EAAE,cAC/B,cAAC,IAAD,CAAgBiyC,GAAG,SAAnB,SAA6BjyC,EAAE,gBAEjC,cAAC,IAAD,CAAM2vC,GAAG,OAAO1Z,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUte,MAAM,iBAEjBwe,GAAkBD,KAIvB,eAAC,IAAD,CAAMsb,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBjvC,EAAjB4hG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM/wD,cAAc,SAApB,UACE,eAAC,IAAD,WACG2wD,EADH,IACsB15D,EAAap+B,UAElCg4F,EAAsB,GACrB,cAAC,KAAD,CAAMryD,SAAS,OAAO73B,MAAM,aAA5B,oBAA8ClV,aAAao/F,GAA3D,gBAKN,cAAC,IAAD,CACEhyD,GAAG,MACH93B,QAASmqF,EACTrlE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KAJrE,SAMexX,EAAZg2F,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQzoD,QAAQ,OAAO31B,QAASu2B,EAAW6zD,GAAG,MAA9C,SACGhiG,EAAE,sBC/CIiiG,GAtEuC,SAAC,GAOhD,IANLpiF,EAMI,EANJA,SACAioB,EAKI,EALJA,aACArlB,EAII,EAJJA,OACA08E,EAGI,EAHJA,UACAruE,EAEI,EAFJA,kBAEI,IADJ4L,iBACI,SACI18B,EAAMC,eAAND,EACFkiG,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GAExDC,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UAEpGggG,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D2gG,EAAcviF,EAAS3d,WAAa,EACpCy/F,EAA4B,IAAXl/E,EAEvB,EAA2BstB,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,OACE,eAAC,IAAD,CAAMhxD,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,cAAC,IAAD,CAAM4B,cAAc,SAApB,SACGnU,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,mCACGitB,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IACjDpxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQw3D,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,iBChErCW,GAAahiG,aAAO4lF,KAAP5lF,CAAH,mDAqFDiiG,GA5EiC,SAAC,GAA6B,IAA3B//E,EAA0B,EAA1BA,KAAM5C,EAAoB,EAApBA,cAC/C6C,EAA2FD,EAA3FC,OAAQolB,EAAmFrlB,EAAnFqlB,aAAcC,EAAqEtlB,EAArEslB,aAAcU,EAAuDhmB,EAAvDgmB,QAAS9lB,EAA8CF,EAA9CE,aAAchD,EAAgC8C,EAAhC9C,SAE7Dy/E,GAF6F38E,EAAtBsO,kBAE3DpO,IAAiB5E,KAAa6E,SACxC3iB,EAAMC,eAAND,EACFyf,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE0iC,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KACpG6I,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAC7EwrF,GAAiB/iF,EAAU0S,GAAG,KAAOgtE,EACrCwB,EAAW/gF,EAAcuS,GAAG,GAC5BuK,GAAahd,EACbnH,EAAcH,eACd47F,EAAkBhyG,aAAiB8X,aAAmBnV,iBACtDyxF,EAAgBx1E,eAChBqzF,EAAc17F,EAAcvW,aAAiBuW,GAAe,EAG5D27F,GAFO9d,EAAcz0F,MAAMsyG,GAAatyG,MAAM,KACjCO,WACCk0F,EAAcl0F,YAC5BiyG,EAAenyG,aAAiBgY,aAAgB1U,iBAEhD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBx7F,eAKlBy7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAIrC,EAE1C,OACE,cAAC,IAAD,CAAMxjE,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGrI,GACC,qCACE,eAAC,IAAD,CAAK4+B,QAAQ,SAAb,UACE,cAAC,GAAD,CAAY5vD,MAAM,YAAY4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAtE,mBACMvH,EAAap+B,OADnB,OAGA,cAAC,GAAD,CAAY8N,MAAM,aAAa4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAvE,SACGrvC,EAAE,eAGP,cAAC,GAAD,CACE6f,SAAUA,EACVioB,aAAcA,EACdrlB,OAAQA,EACRqO,kBAAmBwjF,EACnBnV,UAAWA,EACXziE,UAAWA,OAIjB,eAAC,IAAD,CAAK0qC,QAAQ,SAAb,UACE,eAAC,GAAD,CAAY5vD,MAAOmpF,EAAW,YAAc,aAAcvW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,UACGsxD,EAAW94D,EAAan+B,OAAS1J,EAAE,SAAU,OAEhD,cAAC,GAAD,CAAYwX,MAAOmpF,EAAW,aAAe,YAAavW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,SACGsxD,EAAW3gG,EAAE,UAAL,UAAoB6nC,EAAan+B,aAG7C84F,EACC,cAAC,GAAD,CAAgBhgF,KAAMA,EAAMka,UAAWA,IAEvC,cAAC,GAAD,CACEA,UAAWA,EACXla,KAAMA,EACNk3B,oBAAqBA,EACrB95B,cAAeA,EACfu/E,UAAWA,EACXwB,SAAUA,UCpBP+B,GA7D6C,SAAC,GAAuB,IAArBlgF,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QAC3Dta,EAA8HigB,EAA9HjgB,OAAQkgB,EAAsHD,EAAtHC,OAAQolB,EAA8GrlB,EAA9GqlB,aAAcC,EAAgGtlB,EAAhGslB,aAAchV,EAAkFtQ,EAAlFsQ,WAAYpT,EAAsE8C,EAAtE9C,SAASyoB,EAA6D3lB,EAA7D2lB,aAAcC,EAA+C5lB,EAA/C4lB,cAAeC,EAAgC7lB,EAAhC6lB,cAAeC,EAAiB9lB,EAAjB8lB,cAC7GtoC,EAAMC,eAAND,EACF4f,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF2rF,EAA0B/iF,EAAcuS,GAAG,GAE3C9xB,EAAMC,KAAOU,IAAV,uJAOT,OACE,eAAC,GAAD,CACE8xB,WAAYA,GAAyB,IAAXrQ,EAC1BmgF,OAAQ9vE,GAAc,cAAC,IAAD,CAAY+vE,aAAa,eAAentE,KAAM11B,EAAE,cAFxE,UAIE,cAAC,GAAD,CACEuC,OAASA,EACTy6F,UAAW2F,EACX9H,mBAAoB/yD,EAAap+B,OACjCqzF,mBAAoBl1D,EAAan+B,OACjCopB,WAAYA,GAAyB,IAAXrQ,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,IACd,eAACniB,EAAD,WACE,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC2wB,IAED,cAAC,KAAD,CAAMw0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE4wB,OAGD,eAAC/nC,EAAD,WACD,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC6wB,IAED,cAAC,KAAD,CAAMs0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE8wB,OAGJ,cAAC,IAAD,CAAMoH,GAAG,OAAOmB,cAAc,SAA9B,SACGh0B,EACC,cAAC,GAAD,CAAa2F,KAAMA,EAAM5C,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMqvB,GAAG,OAAOm7C,cAAc,YAAY/6C,SAAS,OAAO73B,MAAM,aAAa43B,MAAI,EAAjF,SACGpvC,EAAE,mBAEL,cAACg+B,GAAA,EAAD,YAKR,cAAC,GAAD,CAAYxb,KAAMA,EAAM3F,QAASA,QCiBxBu+E,GApEuB,SAAC,GAAkC,IAAhC54E,EAA+B,EAA/BA,KAA+B,IAAzBoO,sBAAyB,MAAR,EAAQ,EAC9D5wB,EAAMC,eAAND,EACA6nC,EAAiFrlB,EAAjFqlB,aAAcC,EAAmEtlB,EAAnEslB,aAAchV,EAAqDtQ,EAArDsQ,WAAY/B,EAAyCvO,EAAzCuO,IAAKD,EAAoCtO,EAApCsO,kBAAmBD,EAAiBrO,EAAjBqO,YAElEwqE,EACFr7F,EADmB6wB,EACjB,uHACA,iFAEN,EAA+C8E,aAAW0lE,EAAgB,CAAEzlE,UAAW,iBAA/EE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eACpBnZ,EAAYlZ,eAAZkZ,QAER,EAAkF8T,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAC5D,EAAyD+J,aAASte,GAI5D0+E,GAJN,EAAQlgE,MAAR,EAAsCC,eAIjBuM,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,SAEnG+vG,GADcn8F,eACCpW,aAAiBkY,cAAiBrU,kBAEjD2uG,EADW/zF,eACUve,WACrBiyG,EAAenyG,aAAiBiY,aAAiB3U,iBAEjD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBt7F,eAKlBu7F,GAHOE,EAAYD,EACXH,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAItC,EAIzC,EAA4BtkE,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAaA,OACE,eAAC,IAAD,CAAMohB,WAAW,SAASX,eAAe,gBAAzC,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAM91B,EAAjB6wB,EAAmB,MAAiB,OAAzB,OACxCiC,IAAe/B,EACd,cAAC,KAAD,CAAUvwB,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CAAMnjC,WAAW,SAAjB,SACE,cAACz6B,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAQu7F,EAA8BgZ,EACtC7yG,SAAU,EACViW,KAAK,IACL03B,MAAI,UC5EHosD,GAAal7F,aAAOy0B,IAAPz0B,CAAH,iOAOZ,gBAAGwyB,EAAH,EAAGA,WAAH,SAAe+B,MAAkBG,OAAOlC,EAAa,UAAY,gBAExE,qBAAG+B,MAAkBurC,aAAahN,MCqBhCqoC,GAAkBn7F,aAAOoxC,IAAPpxC,CAAH,kFAOfo7F,GAAgD,SAAC,GAAuB,IAAD,EAApBl5E,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrD7c,EAAMC,eAAND,EACA2yB,EAAiBwa,eAAjBxa,aACR,EAGIiJ,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAIRiX,EASErlB,EATFqlB,aACAC,EAQEtlB,EARFslB,aACA4N,EAOElzB,EAPFkzB,YAGAI,GAIEtzB,EANFoQ,WAMEpQ,EALFqQ,SAKErQ,EAJFszB,cACAhzB,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACAoO,EACErO,EADFqO,YAGIvX,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GACzEm3F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eAC3B8zF,KAAqB,UAAC3sD,OAAO2N,gBAAR,aAAC,EAAiBigB,YACvCg/B,EAA8B,IAAXr5E,EAEzB,EACEiQ,aAAiBlQ,EAAMmQ,GAEzB,GAHA,EAAQI,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,gBAGtCuC,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,kBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIL,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKF,OACE,eAAC,GAAD,CAAiB6a,cAAc,SAA/B,UACE,eAAC,IAAD,CAAM5B,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMokB,OAAK,EAAX,UAAap2D,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMgyC,WAAW,aAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS6+C,OAAK,EAACr2D,MA1BG,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UAkBlB06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UACnF,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,MAAMD,GAAG,aAI1D,cAAC,KAAD,CAAUlvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAGjClmD,GAAgBA,EAAa3jB,GAAG,IAC/B,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAM+kB,OAAK,EAAX,UAAap2D,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMo2D,OAAK,EAAX,mBAAgBj0D,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAA3E,YAAiFomC,EAAan+B,aAGjGmnB,GACC,eAAC,IAAD,CAAMoe,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,YAMN,cAAC,IAAD,CAAMqe,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAAOgnB,OAAK,EAAhE,SACGp2D,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EACNgnB,OAAK,EAHP,SAKGp2D,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM+3B,eAAe,WAArB,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAU63B,SAAS,OAA/B,SACGrvC,EAAE,qBAEL,cAAC,KAAD,CAAc2vC,GAAG,iBAQds1B,OAAMtqC,KAAK+gE,ICtJpBU,GAA0B97F,aAAOoxC,IAAPpxC,CAAH,4HAyCd0rF,GAjCuB,SAAC,GAAuB,IAArBxpE,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrCgU,EAAgBrO,EAAhBqO,YACA7wB,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAO0+F,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAA+C21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAC3G3mE,UAAW,WADLE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMgc,WAAW,SAAjB,UACGnhB,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCmF,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU6Z,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,cAAC,IAAD,CAAiBilF,SAAUJ,EAAYzkF,QAAS,kBAAM0kF,GAAeD,IAArE,SACgBr8F,EAAbq8F,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB75E,KAAMA,EAAM3F,QAASA,QC7CpDiX,GAAUxzB,aAAOo8F,IAAPp8F,CAAH,wGACG,gBAAGwyB,EAAH,EAAGA,WAAYmC,EAAf,EAAeA,WAAYJ,EAA3B,EAA2BA,MAA3B,OACZ/B,EAAa+B,EAAMG,OAAO2nE,mBAAqB9nE,EAAMG,OAAO4nE,UAAU3nE,MACvD,gBAAGJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMgoE,MAAM7O,KAA9B,YAAsCn5D,EAAMgoE,MAAM7O,KAAlD,WAyDJ8O,GA9CV,SAAC,GAAoH,IAAlHjC,EAAiH,EAAjHA,mBAAoBkC,EAA6F,EAA7FA,mBAAoBx6F,EAAyE,EAAzEA,OAAyE,IAAjEuwB,kBAAiE,aAA7CjC,mBAA6C,aAAxBmsE,iBAAwB,SAC/Gh9F,EAAMC,eAAND,EACFi9F,EAAepsE,EAAW,SAE5B,UAAGtuB,EAAH,QAAgBsrE,oBACdqvB,EAAoC,SAAvBrC,GAAwD,SAAvBkC,EAC9C9nE,EAAa+nE,EAAY,YAAc,aAyB7C,OACE,cAAC,GAAD,CAASlqE,WAAYA,EAAYmC,WAAYA,EAA7C,SACA,eAAC,IAAD,CAAM+c,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAApB,UACE,cAAC,IAAD,CAASr5B,MAAOsb,EAAa,eAAiB,OAAQwe,MAAM,KAA5D,mBAxBKtxC,EAFL6wB,EAEO,OAEPqsE,EAEO,SAGF,QAiBL,YAC4BrC,KAE5B,cAAC,KAAD,CAAMrjF,MAAOsb,EAAa,eAAiB,aAA3C,SAhBAjC,EACK7wB,EAAE,uBAEPk9F,EACKl9F,EAAE,yBAEJA,EAAE,iBAAkB,CAAE0J,OAAQqzF,SAYnC,cAAC,KAAD,CAAOvmC,IAAG,wBAAmBymC,GAAgBj1C,IAAKzlD,EAAQ/B,MAAO,GAAI20E,OAAQ,WCtBpE4oB,GAzBuC,SAAC,GAAiC,IAA/Bv7E,EAA8B,EAA9BA,KAA8B,IAAxBka,iBAAwB,SAC7Eja,EAAuCD,EAAvCC,OAAQolB,EAA+BrlB,EAA/BqlB,aAAcC,EAAiBtlB,EAAjBslB,aACtB9nC,EAAMC,eAAND,EACFg+F,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAA6C24F,GAAea,EAAsBv7E,EAAQqlB,EAAap+B,QAA/F8zF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG3gE,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAW2gE,EACXnoB,QAASmoB,EAAoB,cAAC,IAAD,CAAetG,MAAI,EAACv/E,MAAM,iBAAoB,KAC3Ew3D,SAAUquB,EACVzlF,QAAS4lF,EACTh9F,MAAM,OALR,SAOGR,EAAE,eCYEi+F,IAhCI39F,aAAO4xC,KAAP5xC,CAAH,+CAIkD,SAAC,GAAgC,IAA9B+8C,EAA6B,EAA7BA,YAAalP,EAAgB,EAAhBA,UACxEnuC,EAAMC,eAAND,EACU00B,eAAVG,MAER,OACE,eAAC,KAAD,CACEia,MAAO9uC,EAAE,oBAAqB,CAAE0J,OAAQ2zC,IACxClP,UAAWA,EAFb,UAIE,cAAC,KAAD,CAAM32B,MAAM,UAAU43B,MAAI,EAA1B,SACGpvC,EAAE,gCAAiC,CAAE0J,OAAQ2zC,MAEhD,cAAC,KAAD,CAAM3N,GAAG,OAAT,SAAiB1vC,EAAE,mDAA+C,CAAE0J,OAAQ2zC,MAC5E,cAAC,KAAD,UACGr9C,EAAE,kFAA8E,CAC/E0J,OAAQ2zC,MAGZ,eAAC,IAAD,CAAQ3N,GAAG,OAAOuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAvC,UACGxwC,EAAE,OADL,IACcq9C,KAEd,cAAC,IAAD,CAAQ9P,QAAQ,OAAO31B,QAASu2B,EAAhC,SACGnuC,EAAE,uBC7BLk+F,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAYH69F,GAR2C,SAAC,GAA2B,IAAzBzgG,EAAwB,EAAxBA,SAAUka,EAAc,EAAdA,QACrE,OACE,cAAC,GAAD,CAAc05B,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAASA,EAA3E,SACGla,KCQDuhG,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,+CAoLD4+F,GAhL+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACA38E,EAKI,EALJA,KACAk3B,EAII,EAJJA,oBACAP,EAGI,EAHJA,kBAGI,IAFJimD,uBAEI,SADJjxD,EACI,EADJA,UAEQ1rB,EAA+DD,EAA/DC,OAAQolB,EAAuDrlB,EAAvDqlB,aAAcnoB,EAAyC8C,EAAzC9C,SAAUo2B,EAA+BtzB,EAA/BszB,aAAchO,EAAiBtlB,EAAjBslB,aAC9C9nC,EAAMC,eAAND,EAEAy+F,GADU/pE,eAAVG,MACYypE,GAAa77E,EAAQ08E,GAAjCV,SACAO,EAAcH,GAAep8E,EAAQD,EAAKs8E,yBAA1CE,UACR,EAAqCjiE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAAyD3hG,oBAAS,GAAlE,mBAAO4hG,EAAP,KAA6BC,EAA7B,KACA,EAA8B7hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACMC,EAA4B,WAChC,OAAIP,EACK1/E,EAASE,cAEXk2B,EAAa3jB,GAAG,IAAMunB,EAAoBvnB,GAAG2jB,GAAgBA,EAAe4D,GAG/EkmD,EAAiBP,GAAe/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMw3C,GAAmBj3C,YAEvGjE,qBAAU,WACR,GAAI63C,EAAa3jB,GAAG,KAAOitE,EAAiB,CAC1C,IAAMS,EAAyBt+F,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACzF+9F,EAAyBK,EAAuBC,KAAKpgF,EAASE,eAAeuS,GAAG2jB,OAEjF,CAACupD,EAAavpD,EAAcp2B,EAAUmoB,EAAcu3D,EAAiBI,IAExE,IAWMO,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBN,IAA4B59F,UAAU,KAAKmuB,aAAa8vE,GACjFE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPG,EAAkB,uCAAG,sBAAAjiG,EAAA,yDACzB+3F,GAAa,IAETmJ,EAHqB,0CAMfJ,EAAUK,EAAax3D,EAAapmC,UANrB,OAOrB+iE,EAAa,GAAD,OACPxkE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnE0J,OAAQo+B,EAAap+B,UAGzBusF,GAAa,GACb9nD,IAdqB,kDAgBrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjBQ,2DAsBfwI,EAAQY,EAAax3D,EAAapmC,UAtBnB,QAuBrB+iE,EAAa,GAAD,OACPxkE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrD0J,OAAQm+B,EAAan+B,UAGzBusF,GAAa,GACb9nD,IA9BqB,mDAgCrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjCQ,kEAAH,qDAsCxB,OACE,eAAC,KAAD,CACEnnD,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIG2H,EAAa3jB,GAAG,KAAOitE,GACtB,cAAC,KAAD,CAAM5nF,MAAM,YAAY43B,MAAI,EAACH,GAAG,OAAO5a,MAAO,CAAEsoC,UAAW,UAAYttB,SAAS,OAAhF,SACGrvC,EAAE,4CAA6C,CAC9CwB,OAAQW,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GACnEse,MAAO8nB,EAAan+B,WAI1B,eAAC,IAAD,CAAMsoC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAzFyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB7+F,aAAiB,IAAIG,KAAU01D,GAAQvvB,EAAapmC,UACrE4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAU49F,KAA6BzvE,aAAa,KAAKhuB,YACtGw9F,EAAWzuE,KAAK8+D,IAAIsQ,EAAY,WAEhCX,EAAW,GAEbJ,EAAeloC,IAkFXkpC,cAAqC,IAAtBnnD,GAAA,WAA+BymD,GAAkB,EAAjD,QACfpmB,UAAW+lB,EACX99F,SAAUomC,EAAapmC,WAExB89F,GACC,cAAC,KAAD,CAAM/nF,MAAM,UAAU63B,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,SAAWjtB,GAAG,MAAxE,SACG1vC,EAAE,wCAAyC,CAC1CwB,OAAQW,aAAsB,IAAIT,KAAUo0C,GAAejO,EAAapmC,SAAU,GAClFse,MAAO8nB,EAAan+B,WAI1B,cAAC,KAAD,CAAMimC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAAtD,SACGjvC,EAAE,qBAAsB,CACvBiC,QAASE,aAAsBw9F,IAA6B93D,EAAapmC,cAG7E,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB93B,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,MAArD,SAA4D//F,EAAE,YAEhE,cAAC,IAAD,CACE08B,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,IAAsBE,EAC3D7vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,GAAD,CAAYjpC,UAAQ,EAAC3lB,KAAK,QAA1B,SACE,cAAC,IAAD,CAAQhwC,MAAM,OAAOkvC,GAAG,MAAMnC,QAAQ,YAAtC,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,iBChFvCg3F,GAhGkC,SAAC,GAO3C,IANLl+E,EAMI,EANJA,KACAk3B,EAKI,EALJA,oBACA95B,EAII,EAJJA,cACAu/E,EAGI,EAHJA,UACAwB,EAEI,EAFJA,SAEI,IADJjkE,iBACI,SACImL,EAAwErlB,EAAxEqlB,aAAcsR,EAA0D32B,EAA1D22B,kBAAmBrD,EAAuCtzB,EAAvCszB,aAAchjB,EAAyBtQ,EAAzBsQ,WAAYpT,EAAa8C,EAAb9C,SAC3D1f,EAAMC,eAAND,EACF4gG,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAAiCsuC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA2BhxD,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,EAAP,oBAUA,EAA+CrrE,aAC7C31B,EAAE,6EACF,CAAE41B,UAAW,WAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBirE,EAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAmD3E,OAAO,cAAC,IAAD,CAAMjF,cAAc,SAApB,SAA8BnU,EAAY,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAhDtEwrB,EACL,eAAC,IAAD,CAAMtvD,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMnB,cAAc,SAApB,SACE,qCACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAO6gG,IAC3B,IAAtBznD,GACC,cAAC,KAAD,CAAM9J,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACV1B,MAAO8gG,EACPlpF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,KAAD,CAAY61B,QAAQ,YAAY31B,QAASopF,EAAkBtzD,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,EACC,sBAAMhrE,IAAKH,EAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EACtD9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,OAAO20E,OAAO,cAIlDn/C,GAAkBD,KAGrB,cAAC,IAAD,CAAQi5C,SAAUl8C,EAAYlb,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAApF,SACG9gG,EAAE,cCkCIuhG,GA7GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA35D,EAMI,EANJA,aACA45D,EAKI,EALJA,oBACAj/E,EAII,EAJJA,OACA08E,EAGI,EAHJA,UAGI,IAFJwC,sBAEI,SADJxzD,EACI,EADJA,UAEQnuC,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd4oC,EAAaF,GAAe3+E,EAAQ08E,GAApCmC,SACA7C,EAAYH,GAAa77E,EAAQ08E,GAAjCV,QACR,EAAkC9gG,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAA4Ct4F,mBAASgkG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+ClsE,aAC7C,qCACE,cAAC,KAAD,CAAMsZ,GAAG,OAAT,SAAiBjvC,EAAE,yDACnB,cAAC,KAAD,UAAOA,EAAE,uDAEX,CAAE41B,UAAW,aAAcksE,cAAe,CAAC,GAAI,MALzChsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtB+rE,EAAoB,uCAAG,sBAAA7jG,EAAA,yDAC3B+3F,GAAa,IAET2L,EAHuB,0CAKjBnD,EAAQgD,EAAa35D,EAAarmC,UALjB,OAMvB+iE,EAAa,GAAD,OACPxkE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAE0J,OAAQo+B,EAAap+B,UAE1FusF,GAAa,GACb9nD,IAXuB,kDAavBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GAfU,2DAoBjBqL,IApBiB,QAqBvB98B,EAAa,GAAD,OACPxkE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE0J,OAAQo+B,EAAap+B,UAEpFusF,GAAa,GACb9nD,IA1BuB,mDA4BvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEnnD,MAAK,UAAKhH,EAAap+B,OAAlB,YAA6C1J,EAAjB2hG,EAAmB,UAAe,YACnExzD,UAAWA,EAFb,UAGGwzD,GACC,eAAC,IAAD,CAAMtwD,eAAe,SAASW,WAAW,SAAS/C,GAAG,OAArD,UACE,eAAC,IAAD,CACEs8B,YAAaq2B,EAAiB,EAAI,EAClCtwD,MAAM,KACN/D,QAAQ,SACRo/C,YAAa,SAAC33C,GAAD,OAAW6sD,GAAmB7sD,IAJ7C,UAME,cAAC,IAAD,CAAgB/C,GAAG,SAAnB,SAA6BjyC,EAAE,cAC/B,cAAC,IAAD,CAAgBiyC,GAAG,SAAnB,SAA6BjyC,EAAE,gBAEjC,cAAC,IAAD,CAAM2vC,GAAG,OAAO1Z,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUte,MAAM,iBAEjBwe,GAAkBD,KAIvB,eAAC,IAAD,CAAMsb,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBjvC,EAAjB4hG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM/wD,cAAc,SAApB,UACE,eAAC,IAAD,WACG2wD,EADH,IACsB15D,EAAap+B,UAElCg4F,EAAsB,GACrB,cAAC,KAAD,CAAMryD,SAAS,OAAO73B,MAAM,aAA5B,oBAA8ClV,aAAao/F,GAA3D,gBAKN,cAAC,IAAD,CACEhyD,GAAG,MACH93B,QAASmqF,EACTrlE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KAJrE,SAMexX,EAAZg2F,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQzoD,QAAQ,OAAO31B,QAASu2B,EAAW6zD,GAAG,MAA9C,SACGhiG,EAAE,sBC/CIiiG,GAtEuC,SAAC,GAOhD,IANLpiF,EAMI,EANJA,SACAioB,EAKI,EALJA,aACArlB,EAII,EAJJA,OACA08E,EAGI,EAHJA,UACAruE,EAEI,EAFJA,kBAEI,IADJ4L,iBACI,SACI18B,EAAMC,eAAND,EACFkiG,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GAExDC,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UAEpGggG,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D2gG,EAAcviF,EAAS3d,WAAa,EACpCy/F,EAA4B,IAAXl/E,EAEvB,EAA2BstB,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,OACE,eAAC,IAAD,CAAMhxD,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,cAAC,IAAD,CAAM4B,cAAc,SAApB,SACGnU,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,mCACGitB,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IACjDpxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQw3D,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,iBChErCW,GAAahiG,aAAO4lF,KAAP5lF,CAAH,mDAkFDiiG,GAzEiC,SAAC,GAA6B,IAA3B//E,EAA0B,EAA1BA,KAAM5C,EAAoB,EAApBA,cAC/C6C,EAA2FD,EAA3FC,OAAQolB,EAAmFrlB,EAAnFqlB,aAAcC,EAAqEtlB,EAArEslB,aAAcU,EAAuDhmB,EAAvDgmB,QAAS9lB,EAA8CF,EAA9CE,aAAchD,EAAgC8C,EAAhC9C,SAE7Dy/E,GAF6F38E,EAAtBsO,kBAE3DpO,IAAiB5E,KAAa6E,SACxC3iB,EAAMC,eAAND,EACFyf,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE0iC,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KACpG6I,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAC7EwrF,GAAiB/iF,EAAU0S,GAAG,KAAOgtE,EACrCwB,EAAW/gF,EAAcuS,GAAG,GAC5BuK,GAAahd,EAEb60F,GADcn8F,eACCpW,aAAiBkY,cAAiBrU,kBAEjD2uG,EADW/zF,eACUve,WACrBiyG,EAAenyG,aAAiBiY,aAAiB3U,iBAEjD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBt7F,eAKlBu7F,GAHOE,EAAYD,EACXH,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAItC,EAEzC,OACE,cAAC,IAAD,CAAMxjE,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGrI,GACC,qCACE,eAAC,IAAD,CAAK4+B,QAAQ,SAAb,UACE,cAAC,GAAD,CAAY5vD,MAAM,YAAY4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAtE,mBACMvH,EAAap+B,OADnB,OAGA,cAAC,GAAD,CAAY8N,MAAM,aAAa4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAvE,SACGrvC,EAAE,eAGP,cAAC,GAAD,CACE6f,SAAUA,EACVioB,aAAcA,EACdrlB,OAAQA,EACRqO,kBAAmBwjF,EACnBnV,UAAWA,EACXziE,UAAWA,OAIjB,eAAC,IAAD,CAAK0qC,QAAQ,SAAb,UACE,eAAC,GAAD,CAAY5vD,MAAOmpF,EAAW,YAAc,aAAcvW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,UACGsxD,EAAW94D,EAAan+B,OAAS1J,EAAE,SAAU,OAEhD,cAAC,GAAD,CAAYwX,MAAOmpF,EAAW,aAAe,YAAavW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,SACGsxD,EAAW3gG,EAAE,UAAL,UAAoB6nC,EAAan+B,aAG7C84F,EACC,cAAC,GAAD,CAAgBhgF,KAAMA,EAAMka,UAAWA,IAEvC,cAAC,GAAD,CACEA,UAAWA,EACXla,KAAMA,EACNk3B,oBAAqBA,EACrB95B,cAAeA,EACfu/E,UAAWA,EACXwB,SAAUA,UCjBP8T,GA7D8C,SAAC,GAAuB,IAArBjyF,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QAC5Dta,EAA8HigB,EAA9HjgB,OAAQkgB,EAAsHD,EAAtHC,OAAQolB,EAA8GrlB,EAA9GqlB,aAAcC,EAAgGtlB,EAAhGslB,aAAchV,EAAkFtQ,EAAlFsQ,WAAYpT,EAAsE8C,EAAtE9C,SAASyoB,EAA6D3lB,EAA7D2lB,aAAcC,EAA+C5lB,EAA/C4lB,cAAeC,EAAgC7lB,EAAhC6lB,cAAeC,EAAiB9lB,EAAjB8lB,cAC7GtoC,EAAMC,eAAND,EACF4f,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF2rF,EAA0B/iF,EAAcuS,GAAG,GAE3C9xB,EAAMC,KAAOU,IAAV,uJAOT,OACE,eAAC,GAAD,CACE8xB,WAAYA,GAAyB,IAAXrQ,EAC1BmgF,OAAQ9vE,GAAc,cAAC,IAAD,CAAY+vE,aAAa,eAAentE,KAAM11B,EAAE,cAFxE,UAIE,cAAC,GAAD,CACEuC,OAASA,EACTy6F,UAAW2F,EACX9H,mBAAoB/yD,EAAap+B,OACjCqzF,mBAAoBl1D,EAAan+B,OACjCopB,WAAYA,GAAyB,IAAXrQ,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,IACd,eAACniB,EAAD,WACE,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC2wB,IAED,cAAC,KAAD,CAAMw0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE4wB,OAGD,eAAC/nC,EAAD,WACD,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC6wB,IAED,cAAC,KAAD,CAAMs0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE8wB,OAGJ,cAAC,IAAD,CAAMoH,GAAG,OAAOmB,cAAc,SAA9B,SACGh0B,EACC,cAAC,GAAD,CAAa2F,KAAMA,EAAM5C,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMqvB,GAAG,OAAOm7C,cAAc,YAAY/6C,SAAS,OAAO73B,MAAM,aAAa43B,MAAI,EAAjF,SACGpvC,EAAE,mBAEL,cAACg+B,GAAA,EAAD,YAKR,cAAC,GAAD,CAAYxb,KAAMA,EAAM3F,QAASA,QCiBxBu+E,GApEuB,SAAC,GAAkC,IAAhC54E,EAA+B,EAA/BA,KAA+B,IAAzBoO,sBAAyB,MAAR,EAAQ,EAC9D5wB,EAAMC,eAAND,EACA6nC,EAAiFrlB,EAAjFqlB,aAAcC,EAAmEtlB,EAAnEslB,aAAchV,EAAqDtQ,EAArDsQ,WAAY/B,EAAyCvO,EAAzCuO,IAAKD,EAAoCtO,EAApCsO,kBAAmBD,EAAiBrO,EAAjBqO,YAElEwqE,EACFr7F,EADmB6wB,EACjB,uHACA,iFAEN,EAA+C8E,aAAW0lE,EAAgB,CAAEzlE,UAAW,iBAA/EE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eACpBnZ,EAAYlZ,eAAZkZ,QAER,EAAkF8T,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAC5D,EAAyD+J,aAASte,GAI5D0+E,GAJN,EAAQlgE,MAAR,EAAsCC,eAIjBuM,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,SAEnGwvG,GADc57F,eACIpW,aAAiB6X,aAAwBlV,kBAE3DuvG,EADgBtzF,eACY1e,WAC5BiyG,EAAenyG,aAAiB+X,aAAkB/U,iBAElDovG,EADerzF,eACS7e,WACxBmyG,EAAkBp7F,eAKlBq7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAQ/E,EAA4BtkE,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAaA,OACE,eAAC,IAAD,CAAMohB,WAAW,SAASX,eAAe,gBAAzC,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAlB,SAAyC,UAAM91B,EAAjB6wB,EAAmB,MAAiB,OAAzB,OACxCiC,IAAe/B,EACd,cAAC,KAAD,CAAUvwB,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CAAMnjC,WAAW,SAAjB,SACE,cAACz6B,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAQu7F,EAA8BgZ,EACtC7yG,SAAU,EACViW,KAAK,IACL03B,MAAI,UC5EHosD,GAAal7F,aAAOy0B,IAAPz0B,CAAH,iOAOZ,gBAAGwyB,EAAH,EAAGA,WAAH,SAAe+B,MAAkBG,OAAOlC,EAAa,UAAY,gBAExE,qBAAG+B,MAAkBurC,aAAahN,MCqBhCqoC,GAAkBn7F,aAAOoxC,IAAPpxC,CAAH,kFAOfo7F,GAAgD,SAAC,GAAuB,IAAD,EAApBl5E,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrD7c,EAAMC,eAAND,EACA2yB,EAAiBwa,eAAjBxa,aACR,EAGIiJ,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAIRiX,EASErlB,EATFqlB,aACAC,EAQEtlB,EARFslB,aACA4N,EAOElzB,EAPFkzB,YAGAI,GAIEtzB,EANFoQ,WAMEpQ,EALFqQ,SAKErQ,EAJFszB,cACAhzB,EAGEN,EAHFM,gBACAL,EAEED,EAFFC,OACAoO,EACErO,EADFqO,YAGIvX,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GACzEm3F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eAC3B8zF,KAAqB,UAAC3sD,OAAO2N,gBAAR,aAAC,EAAiBigB,YACvCg/B,EAA8B,IAAXr5E,EAEzB,EACEiQ,aAAiBlQ,EAAMmQ,GAEzB,GAHA,EAAQI,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,gBAGtCuC,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,kBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAgB5B,EAIIL,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKF,OACE,eAAC,GAAD,CAAiB6a,cAAc,SAA/B,UACE,eAAC,IAAD,CAAM5B,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACE,eAAC,KAAD,CAAMokB,OAAK,EAAX,UAAap2D,EAAE,gBAAf,OACA,eAAC,IAAD,CAAMgyC,WAAW,aAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS6+C,OAAK,EAACr2D,MA1BG,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UAkBlB06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UACnF,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,MAAMD,GAAG,aAI1D,cAAC,KAAD,CAAUlvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAGjClmD,GAAgBA,EAAa3jB,GAAG,IAC/B,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,CAAM+kB,OAAK,EAAX,UAAap2D,EAAE,uBAAf,OACA,cAAC,KAAD,CAAMo2D,OAAK,EAAX,mBAAgBj0D,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAA3E,YAAiFomC,EAAan+B,aAGjGmnB,GACC,eAAC,IAAD,CAAMoe,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,YAMN,cAAC,IAAD,CAAMqe,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAAOgnB,OAAK,EAAhE,SACGp2D,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAe,WAA9B,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EACNgnB,OAAK,EAHP,SAKGp2D,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM+3B,eAAe,WAArB,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAU63B,SAAS,OAA/B,SACGrvC,EAAE,qBAEL,cAAC,KAAD,CAAc2vC,GAAG,iBAQds1B,OAAMtqC,KAAK+gE,ICtJpBU,GAA0B97F,aAAOoxC,IAAPpxC,CAAH,4HAyCd0rF,GAjCuB,SAAC,GAAuB,IAArBxpE,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QACrCgU,EAAgBrO,EAAhBqO,YACA7wB,EAAMC,eAAND,EACR,EAAoCrC,oBAAS,GAA7C,mBAAO0+F,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAA+C21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAC3G3mE,UAAW,WADLE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAI5B,OACE,eAAC,IAAD,WACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMgc,WAAW,SAAjB,UACGnhB,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCmF,GAAkBD,EACnB,cAAC,IAAD,CAAME,IAAKH,EAAX,SACE,cAAC,IAAD,CAAU6Z,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,cAAC,IAAD,CAAiBilF,SAAUJ,EAAYzkF,QAAS,kBAAM0kF,GAAeD,IAArE,SACgBr8F,EAAbq8F,EAAe,OAAY,gBAG/BA,GAAc,cAAC,GAAD,CAAgB75E,KAAMA,EAAM3F,QAASA,QC7CpDiX,GAAUxzB,aAAOo8F,IAAPp8F,CAAH,wGACG,gBAAGwyB,EAAH,EAAGA,WAAYmC,EAAf,EAAeA,WAAYJ,EAA3B,EAA2BA,MAA3B,OACZ/B,EAAa+B,EAAMG,OAAO2nE,mBAAqB9nE,EAAMG,OAAO4nE,UAAU3nE,MACvD,gBAAGJ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMgoE,MAAM7O,KAA9B,YAAsCn5D,EAAMgoE,MAAM7O,KAAlD,WAyDJ8O,GA9CV,SAAC,GAAoH,IAAlHjC,EAAiH,EAAjHA,mBAAoBkC,EAA6F,EAA7FA,mBAAoBx6F,EAAyE,EAAzEA,OAAyE,IAAjEuwB,kBAAiE,aAA7CjC,mBAA6C,aAAxBmsE,iBAAwB,SAC/Gh9F,EAAMC,eAAND,EACFi9F,EAAepsE,EAAW,SAE5B,UAAGtuB,EAAH,QAAgBsrE,oBACdqvB,EAAoC,SAAvBrC,GAAwD,SAAvBkC,EAC9C9nE,EAAa+nE,EAAY,YAAc,aAyB7C,OACE,cAAC,GAAD,CAASlqE,WAAYA,EAAYmC,WAAYA,EAA7C,SACA,eAAC,IAAD,CAAM+c,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAApB,UACE,cAAC,IAAD,CAASr5B,MAAOsb,EAAa,eAAiB,OAAQwe,MAAM,KAA5D,mBAxBKtxC,EAFL6wB,EAEO,OAEPqsE,EAEO,SAGF,QAiBL,YAC4BrC,KAE5B,cAAC,KAAD,CAAMrjF,MAAOsb,EAAa,eAAiB,aAA3C,SAhBAjC,EACK7wB,EAAE,uBAEPk9F,EACKl9F,EAAE,yBAEJA,EAAE,iBAAkB,CAAE0J,OAAQqzF,SAYnC,cAAC,KAAD,CAAOvmC,IAAG,wBAAmBymC,GAAgBj1C,IAAKzlD,EAAQ/B,MAAO,GAAI20E,OAAQ,WCtBpE4oB,GAzBuC,SAAC,GAAiC,IAA/Bv7E,EAA8B,EAA9BA,KAA8B,IAAxBka,iBAAwB,SAC7Eja,EAAuCD,EAAvCC,OAAQolB,EAA+BrlB,EAA/BqlB,aAAcC,EAAiBtlB,EAAjBslB,aACtB9nC,EAAMC,eAAND,EACFg+F,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAA6C24F,GAAea,EAAsBv7E,EAAQqlB,EAAap+B,QAA/F8zF,EAAR,EAAQA,cAAeH,EAAvB,EAAuBA,kBAEvB,OACE,mCACG3gE,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,cAAC,IAAD,CACEz4C,UAAW2gE,EACXnoB,QAASmoB,EAAoB,cAAC,IAAD,CAAetG,MAAI,EAACv/E,MAAM,iBAAoB,KAC3Ew3D,SAAUquB,EACVzlF,QAAS4lF,EACTh9F,MAAM,OALR,SAOGR,EAAE,eCYEi+F,IAhCI39F,aAAO4xC,KAAP5xC,CAAH,+CAIkD,SAAC,GAAgC,IAA9B+8C,EAA6B,EAA7BA,YAAalP,EAAgB,EAAhBA,UACxEnuC,EAAMC,eAAND,EACU00B,eAAVG,MAER,OACE,eAAC,KAAD,CACEia,MAAO9uC,EAAE,oBAAqB,CAAE0J,OAAQ2zC,IACxClP,UAAWA,EAFb,UAIE,cAAC,KAAD,CAAM32B,MAAM,UAAU43B,MAAI,EAA1B,SACGpvC,EAAE,gCAAiC,CAAE0J,OAAQ2zC,MAEhD,cAAC,KAAD,CAAM3N,GAAG,OAAT,SAAiB1vC,EAAE,mDAA+C,CAAE0J,OAAQ2zC,MAC5E,cAAC,KAAD,UACGr9C,EAAE,kFAA8E,CAC/E0J,OAAQ2zC,MAGZ,eAAC,IAAD,CAAQ3N,GAAG,OAAOuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAvC,UACGxwC,EAAE,OADL,IACcq9C,KAEd,cAAC,IAAD,CAAQ9P,QAAQ,OAAO31B,QAASu2B,EAAhC,SACGnuC,EAAE,uBC7BLk+F,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAYH69F,GAR2C,SAAC,GAA2B,IAAzBzgG,EAAwB,EAAxBA,SAAUka,EAAc,EAAdA,QACrE,OACE,cAAC,GAAD,CAAc05B,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAASA,EAA3E,SACGla,KCQDuhG,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,+CAoLD4+F,GAhL+B,SAAC,GAOxC,IANLC,EAMI,EANJA,UACA38E,EAKI,EALJA,KACAk3B,EAII,EAJJA,oBACAP,EAGI,EAHJA,kBAGI,IAFJimD,uBAEI,SADJjxD,EACI,EADJA,UAEQ1rB,EAA+DD,EAA/DC,OAAQolB,EAAuDrlB,EAAvDqlB,aAAcnoB,EAAyC8C,EAAzC9C,SAAUo2B,EAA+BtzB,EAA/BszB,aAAchO,EAAiBtlB,EAAjBslB,aAC9C9nC,EAAMC,eAAND,EAEAy+F,GADU/pE,eAAVG,MACYypE,GAAa77E,EAAQ08E,GAAjCV,SACAO,EAAcH,GAAep8E,EAAQD,EAAKs8E,yBAA1CE,UACR,EAAqCjiE,cAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAAyD3hG,oBAAS,GAAlE,mBAAO4hG,EAAP,KAA6BC,EAA7B,KACA,EAA8B7hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACMC,EAA4B,WAChC,OAAIP,EACK1/E,EAASE,cAEXk2B,EAAa3jB,GAAG,IAAMunB,EAAoBvnB,GAAG2jB,GAAgBA,EAAe4D,GAG/EkmD,EAAiBP,GAAe/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMw3C,GAAmBj3C,YAEvGjE,qBAAU,WACR,GAAI63C,EAAa3jB,GAAG,KAAOitE,EAAiB,CAC1C,IAAMS,EAAyBt+F,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACzF+9F,EAAyBK,EAAuBC,KAAKpgF,EAASE,eAAeuS,GAAG2jB,OAEjF,CAACupD,EAAavpD,EAAcp2B,EAAUmoB,EAAcu3D,EAAiBI,IAExE,IAWMO,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBN,IAA4B59F,UAAU,KAAKmuB,aAAa8vE,GACjFE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPG,EAAkB,uCAAG,sBAAAjiG,EAAA,yDACzB+3F,GAAa,IAETmJ,EAHqB,0CAMfJ,EAAUK,EAAax3D,EAAapmC,UANrB,OAOrB+iE,EAAa,GAAD,OACPxkE,EAAE,YADK,KAEVA,EAAE,kEAAmE,CACnE0J,OAAQo+B,EAAap+B,UAGzBusF,GAAa,GACb9nD,IAdqB,kDAgBrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjBQ,2DAsBfwI,EAAQY,EAAax3D,EAAapmC,UAtBnB,QAuBrB+iE,EAAa,GAAD,OACPxkE,EAAE,UADK,KAEVA,EAAE,oDAAqD,CACrD0J,OAAQm+B,EAAan+B,UAGzBusF,GAAa,GACb9nD,IA9BqB,mDAgCrBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAjCQ,kEAAH,qDAsCxB,OACE,eAAC,KAAD,CACEnnD,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIG2H,EAAa3jB,GAAG,KAAOitE,GACtB,cAAC,KAAD,CAAM5nF,MAAM,YAAY43B,MAAI,EAACH,GAAG,OAAO5a,MAAO,CAAEsoC,UAAW,UAAYttB,SAAS,OAAhF,SACGrvC,EAAE,4CAA6C,CAC9CwB,OAAQW,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GACnEse,MAAO8nB,EAAan+B,WAI1B,eAAC,IAAD,CAAMsoC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAzFyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB7+F,aAAiB,IAAIG,KAAU01D,GAAQvvB,EAAapmC,UACrE4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAU49F,KAA6BzvE,aAAa,KAAKhuB,YACtGw9F,EAAWzuE,KAAK8+D,IAAIsQ,EAAY,WAEhCX,EAAW,GAEbJ,EAAeloC,IAkFXkpC,cAAqC,IAAtBnnD,GAAA,WAA+BymD,GAAkB,EAAjD,QACfpmB,UAAW+lB,EACX99F,SAAUomC,EAAapmC,WAExB89F,GACC,cAAC,KAAD,CAAM/nF,MAAM,UAAU63B,SAAS,OAAOhb,MAAO,CAAEsoC,UAAW,SAAWjtB,GAAG,MAAxE,SACG1vC,EAAE,wCAAyC,CAC1CwB,OAAQW,aAAsB,IAAIT,KAAUo0C,GAAejO,EAAapmC,SAAU,GAClFse,MAAO8nB,EAAan+B,WAI1B,cAAC,KAAD,CAAMimC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAAtD,SACGjvC,EAAE,qBAAsB,CACvBiC,QAASE,aAAsBw9F,IAA6B93D,EAAapmC,cAG7E,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAkB93B,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,KAArD,iBACA,cAAC,GAAD,CAAkBnoF,QAAS,kBAAMmoF,EAAoB,MAArD,SAA4D//F,EAAE,YAEhE,cAAC,IAAD,CACE08B,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,IAAsBE,EAC3D7vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,GAAD,CAAYjpC,UAAQ,EAAC3lB,KAAK,QAA1B,SACE,cAAC,IAAD,CAAQhwC,MAAM,OAAOkvC,GAAG,MAAMnC,QAAQ,YAAtC,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,iBChFvCg3F,GAhGkC,SAAC,GAO3C,IANLl+E,EAMI,EANJA,KACAk3B,EAKI,EALJA,oBACA95B,EAII,EAJJA,cACAu/E,EAGI,EAHJA,UACAwB,EAEI,EAFJA,SAEI,IADJjkE,iBACI,SACImL,EAAwErlB,EAAxEqlB,aAAcsR,EAA0D32B,EAA1D22B,kBAAmBrD,EAAuCtzB,EAAvCszB,aAAchjB,EAAyBtQ,EAAzBsQ,WAAYpT,EAAa8C,EAAb9C,SAC3D1f,EAAMC,eAAND,EACF4gG,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAAiCsuC,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA2BhxD,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,EAAP,oBAUA,EAA+CrrE,aAC7C31B,EAAE,6EACF,CAAE41B,UAAW,WAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBirE,EAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAmD3E,OAAO,cAAC,IAAD,CAAMjF,cAAc,SAApB,SAA8BnU,EAAY,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAhDtEwrB,EACL,eAAC,IAAD,CAAMtvD,eAAe,gBAAgBW,WAAW,SAAhD,UACE,cAAC,IAAD,CAAMnB,cAAc,SAApB,SACE,qCACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAO6gG,IAC3B,IAAtBznD,GACC,cAAC,KAAD,CAAM9J,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACV1B,MAAO8gG,EACPlpF,OAAO,IACPD,KAAK,gBAMf,eAAC,IAAD,WACE,cAAC,KAAD,CAAY61B,QAAQ,YAAY31B,QAASopF,EAAkBtzD,GAAG,MAA9D,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,EACC,sBAAMhrE,IAAKH,EAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EACtD9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,OAAO20E,OAAO,cAIlDn/C,GAAkBD,KAGrB,cAAC,IAAD,CAAQi5C,SAAUl8C,EAAYlb,QAAS8hC,EAAoBvnB,GAAG,GAAK4uE,EAAiBD,EAApF,SACG9gG,EAAE,cCkCIuhG,GA7GmC,SAAC,GAS5C,IARLC,EAQI,EARJA,iBACAC,EAOI,EAPJA,YACA35D,EAMI,EANJA,aACA45D,EAKI,EALJA,oBACAj/E,EAII,EAJJA,OACA08E,EAGI,EAHJA,UAGI,IAFJwC,sBAEI,SADJxzD,EACI,EADJA,UAEQnuC,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACd4oC,EAAaF,GAAe3+E,EAAQ08E,GAApCmC,SACA7C,EAAYH,GAAa77E,EAAQ08E,GAAjCV,QACR,EAAkC9gG,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAA4Ct4F,mBAASgkG,GAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+ClsE,aAC7C,qCACE,cAAC,KAAD,CAAMsZ,GAAG,OAAT,SAAiBjvC,EAAE,yDACnB,cAAC,KAAD,UAAOA,EAAE,uDAEX,CAAE41B,UAAW,aAAcksE,cAAe,CAAC,GAAI,MALzChsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAQtB+rE,EAAoB,uCAAG,sBAAA7jG,EAAA,yDAC3B+3F,GAAa,IAET2L,EAHuB,0CAKjBnD,EAAQgD,EAAa35D,EAAarmC,UALjB,OAMvB+iE,EAAa,GAAD,OACPxkE,EAAE,cADK,KAEVA,EAAE,8DAA+D,CAAE0J,OAAQo+B,EAAap+B,UAE1FusF,GAAa,GACb9nD,IAXuB,kDAavBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GAfU,2DAoBjBqL,IApBiB,QAqBvB98B,EAAa,GAAD,OACPxkE,EAAE,aADK,KAEVA,EAAE,wDAAyD,CAAE0J,OAAQo+B,EAAap+B,UAEpFusF,GAAa,GACb9nD,IA1BuB,mDA4BvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzB0d,QAAQC,MAAR,MACAs4E,GAAa,GA9BU,kEAAH,qDAmC1B,OACE,eAAC,KAAD,CACEnnD,MAAK,UAAKhH,EAAap+B,OAAlB,YAA6C1J,EAAjB2hG,EAAmB,UAAe,YACnExzD,UAAWA,EAFb,UAGGwzD,GACC,eAAC,IAAD,CAAMtwD,eAAe,SAASW,WAAW,SAAS/C,GAAG,OAArD,UACE,eAAC,IAAD,CACEs8B,YAAaq2B,EAAiB,EAAI,EAClCtwD,MAAM,KACN/D,QAAQ,SACRo/C,YAAa,SAAC33C,GAAD,OAAW6sD,GAAmB7sD,IAJ7C,UAME,cAAC,IAAD,CAAgB/C,GAAG,SAAnB,SAA6BjyC,EAAE,cAC/B,cAAC,IAAD,CAAgBiyC,GAAG,SAAnB,SAA6BjyC,EAAE,gBAEjC,cAAC,IAAD,CAAM2vC,GAAG,OAAO1Z,IAAKH,EAArB,SACE,cAAC,IAAD,CAAUte,MAAM,iBAEjBwe,GAAkBD,KAIvB,eAAC,IAAD,CAAMsb,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,eAAC,KAAD,WAAwBjvC,EAAjB4hG,EAAmB,cAAmB,cAA7C,OACA,eAAC,IAAD,CAAM/wD,cAAc,SAApB,UACE,eAAC,IAAD,WACG2wD,EADH,IACsB15D,EAAap+B,UAElCg4F,EAAsB,GACrB,cAAC,KAAD,CAAMryD,SAAS,OAAO73B,MAAM,aAA5B,oBAA8ClV,aAAao/F,GAA3D,gBAKN,cAAC,IAAD,CACEhyD,GAAG,MACH93B,QAASmqF,EACTrlE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KAJrE,SAMexX,EAAZg2F,EAAc,aAAkB,aAEnC,cAAC,IAAD,CAAQzoD,QAAQ,OAAO31B,QAASu2B,EAAW6zD,GAAG,MAA9C,SACGhiG,EAAE,sBC/CIiiG,GAtEuC,SAAC,GAOhD,IANLpiF,EAMI,EANJA,SACAioB,EAKI,EALJA,aACArlB,EAII,EAJJA,OACA08E,EAGI,EAHJA,UACAruE,EAEI,EAFJA,kBAEI,IADJ4L,iBACI,SACI18B,EAAMC,eAAND,EACFkiG,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GAExDC,EAA4BngG,aAAiB6d,EAASqQ,aAAaY,GAAoBgX,EAAarmC,UAEpGggG,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D2gG,EAAcviF,EAAS3d,WAAa,EACpCy/F,EAA4B,IAAXl/E,EAEvB,EAA2BstB,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,OACE,eAAC,IAAD,CAAMhxD,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,OAA5D,UACE,cAAC,IAAD,CAAM4B,cAAc,SAApB,SACGnU,EACC,cAAC,KAAD,CAAUl8B,MAAM,OAAO20E,OAAO,SAE9B,mCACGitB,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAAS63B,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IACjDpxE,EAAoB,GACnB,cAACvZ,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAQV,cAAC,IAAD,CAAQw3D,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,iBChErCW,GAAahiG,aAAO4lF,KAAP5lF,CAAH,mDAiFDiiG,GAxEiC,SAAC,GAA6B,IAA3B//E,EAA0B,EAA1BA,KAAM5C,EAAoB,EAApBA,cAC/C6C,EAA2FD,EAA3FC,OAAQolB,EAAmFrlB,EAAnFqlB,aAAcC,EAAqEtlB,EAArEslB,aAAcU,EAAuDhmB,EAAvDgmB,QAAS9lB,EAA8CF,EAA9CE,aAAchD,EAAgC8C,EAAhC9C,SAE7Dy/E,GAF6F38E,EAAtBsO,kBAE3DpO,IAAiB5E,KAAa6E,SACxC3iB,EAAMC,eAAND,EACFyf,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE0iC,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KACpG6I,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAC7EwrF,GAAiB/iF,EAAU0S,GAAG,KAAOgtE,EACrCwB,EAAW/gF,EAAcuS,GAAG,GAC5BuK,GAAahd,EACbs0F,EAAkBhyG,aAAiB6X,aAAwBlV,iBAE3DuvG,EADgBtzF,eACY1e,WAC5BiyG,EAAenyG,aAAiB+X,aAAkB/U,iBAElDovG,EADerzF,eACS7e,WACxBmyG,EAAkBp7F,eAKlBq7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAM/E,OACE,cAAC,IAAD,CAAMxjE,cAAc,SAApB,SACE,eAAC,IAAD,CAAMA,cAAc,SAApB,UACGrI,GACC,qCACE,eAAC,IAAD,CAAK4+B,QAAQ,SAAb,UACE,cAAC,GAAD,CAAY5vD,MAAM,YAAY4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAtE,mBACMvH,EAAap+B,OADnB,OAGA,cAAC,GAAD,CAAY8N,MAAM,aAAa4yE,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAvE,SACGrvC,EAAE,eAGP,cAAC,GAAD,CACE6f,SAAUA,EACVioB,aAAcA,EACdrlB,OAAQA,EACRqO,kBAAmBwjF,EACnBnV,UAAWA,EACXziE,UAAWA,OAIjB,eAAC,IAAD,CAAK0qC,QAAQ,SAAb,UACE,eAAC,GAAD,CAAY5vD,MAAOmpF,EAAW,YAAc,aAAcvW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,UACGsxD,EAAW94D,EAAan+B,OAAS1J,EAAE,SAAU,OAEhD,cAAC,GAAD,CAAYwX,MAAOmpF,EAAW,aAAe,YAAavW,cAAc,YAAYh7C,MAAI,EAACC,SAAS,OAAlG,SACGsxD,EAAW3gG,EAAE,UAAL,UAAoB6nC,EAAan+B,aAG7C84F,EACC,cAAC,GAAD,CAAgBhgF,KAAMA,EAAMka,UAAWA,IAEvC,cAAC,GAAD,CACEA,UAAWA,EACXla,KAAMA,EACNk3B,oBAAqBA,EACrB95B,cAAeA,EACfu/E,UAAWA,EACXwB,SAAUA,UChBP+T,GA7D8C,SAAC,GAAuB,IAArBlyF,EAAoB,EAApBA,KAAM3F,EAAc,EAAdA,QAC5Dta,EAA8HigB,EAA9HjgB,OAAQkgB,EAAsHD,EAAtHC,OAAQolB,EAA8GrlB,EAA9GqlB,aAAcC,EAAgGtlB,EAAhGslB,aAAchV,EAAkFtQ,EAAlFsQ,WAAYpT,EAAsE8C,EAAtE9C,SAASyoB,EAA6D3lB,EAA7D2lB,aAAcC,EAA+C5lB,EAA/C4lB,cAAeC,EAAgC7lB,EAAhC6lB,cAAeC,EAAiB9lB,EAAjB8lB,cAC7GtoC,EAAMC,eAAND,EACF4f,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF2rF,EAA0B/iF,EAAcuS,GAAG,GAE3C9xB,EAAMC,KAAOU,IAAV,uJAOT,OACE,eAAC,GAAD,CACE8xB,WAAYA,GAAyB,IAAXrQ,EAC1BmgF,OAAQ9vE,GAAc,cAAC,IAAD,CAAY+vE,aAAa,eAAentE,KAAM11B,EAAE,cAFxE,UAIE,cAAC,GAAD,CACEuC,OAASA,EACTy6F,UAAW2F,EACX9H,mBAAoB/yD,EAAap+B,OACjCqzF,mBAAoBl1D,EAAan+B,OACjCopB,WAAYA,GAAyB,IAAXrQ,IAE5B,eAAC,IAAD,WACE,cAAC,GAAD,CAAQD,KAAMA,IACd,eAACniB,EAAD,WACE,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC2wB,IAED,cAAC,KAAD,CAAMw0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE4wB,OAGD,eAAC/nC,EAAD,WACD,cAAC,KAAD,CAAMs8D,UAAU,OAAOnlD,MAAM,WAA7B,SACC6wB,IAED,cAAC,KAAD,CAAMs0B,UAAU,OAAOnlD,MAAM,WAA7B,SACE8wB,OAGJ,cAAC,IAAD,CAAMoH,GAAG,OAAOmB,cAAc,SAA9B,SACGh0B,EACC,cAAC,GAAD,CAAa2F,KAAMA,EAAM5C,cAAeA,IAExC,qCACE,cAAC,KAAD,CAAMqvB,GAAG,OAAOm7C,cAAc,YAAY/6C,SAAS,OAAO73B,MAAM,aAAa43B,MAAI,EAAjF,SACGpvC,EAAE,mBAEL,cAACg+B,GAAA,EAAD,YAKR,cAAC,GAAD,CAAYxb,KAAMA,EAAM3F,QAASA,S,S5ElE3B66E,K,cAAAA,E,aAAAA,Q,KAUZ,I,wQAAMv3B,GAAY7/D,KAAOU,IAAV,yIAIX,qBAAG6zB,MAAkBurC,aAAahN,MAyBvB+yC,GAnB8C,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAClEC,EAAe,SAACC,GAChBH,IAAaG,GACfF,EAASE,IAIb,OACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAYh5D,QAAQ,OAAO+D,MAAM,KAAKjvB,GAAG,oBAAoBzK,QAAS,kBAAM0uF,EAAa5O,GAAS8O,OAAlG,SACE,cAAC,IAAD,CAAchvF,MAAO4uF,IAAa1O,GAAS8O,KAAO,UAAY,mBAEhE,cAAC,KAAD,CAAYj5D,QAAQ,OAAO+D,MAAM,KAAKjvB,GAAG,qBAAqBzK,QAAS,kBAAM0uF,EAAa5O,GAAS+O,QAAnG,SACE,cAAC,KAAD,CAAcjvF,MAAO4uF,IAAa1O,GAAS+O,MAAQ,UAAY,uB6E9BjEC,GAAgBpmG,KAAOU,IAAV,qIAKfklF,MAKEygB,GAAermG,KAAOU,IAAV,sSAWd,qBAAG6zB,MAAkBurC,aAAahN,MAUhCt/B,GAAUxzB,KAAOU,IAAV,8MAUT,qBAAG6zB,MAAkBurC,aAAahN,MA0CvBwzC,GArCQ,SAAC,GAAmF,IAAjFxuE,EAAgF,EAAhFA,WAAYyuE,EAAoE,EAApEA,cAAeC,EAAqD,EAArDA,wBAAyBV,EAA4B,EAA5BA,SAAUW,EAAkB,EAAlBA,YACtF,EAAyBC,eAAZC,GAAb,EAAQrlE,IAAR,EAAaqlE,SACLjnG,EAAMC,eAAND,EAEFknG,EAAiB,cAAC,GAAD,CAAYd,SAAUA,EAAUC,SAAU,SAACE,GAAD,OAAoBQ,EAAYR,MAE3FY,EACJ,cAAC,GAAD,UACE,eAAC,IAAD,CAAY57B,YAAa07B,EAAU,EAAI,EAAG31D,MAAM,KAAK/D,QAAQ,SAA7D,UACE,cAAC,IAAD,CAAgB0E,GAAIC,KAAMC,GAAG,iBAA7B,SACGnyC,EAAE,UAEL,cAAC,KAAD,CAAiBiwC,KAAM62D,EAAvB,SACE,cAAC,IAAD,CAAgB70D,GAAIC,KAAMC,GAAG,sBAA7B,SACGnyC,EAAE,qBAOPonG,EACJ,eAAC,GAAD,WACE,cAAC,KAAD,CAAQx3D,QAASxX,EAAYyX,SAAU,kBAAMg3D,GAAezuE,IAAakZ,MAAM,OAC/E,eAAC,KAAD,eAAQtxC,EAAE,qBAId,OACE,eAAC,GAAD,WACGknG,EACAE,EACAD,MCjEDE,GAAU/mG,KAAOU,IAAV,+GACS,qBAAG6zB,MAAkBG,OAAO2nE,sBAgHnC2K,GA1GiC,SAAC,GAAqC,IAAnCn5D,EAAkC,EAAlCA,UAAWo5D,EAAuB,EAAvBA,iBACpDvnG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAER,GADkB6X,eAAVG,MAC6BkI,eAA7B27B,EAAR,EAAQA,WAAY8L,EAApB,EAAoBA,aACdpsB,EAAoBvuB,cAC1B,EAAkClsB,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAIIr6D,KAHFO,EADF,EACEA,0BACAE,EAFF,EAEEA,wBACQE,EAHV,EAGED,KAAQC,QAEJ65D,EAAgBx1E,eAChB4mF,EAAmBjrE,EAAU,IAC7BkrE,EAAsBzlG,aAAiBq6B,EAAyB,IAEhEqrE,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GACjFs1E,EAAwBF,EAAyB3lG,aAAiB0lG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5lG,aAAiBm6B,EAA2B,IAAM,EAErG,EAA+CxG,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,SACXmyE,eAAgB,CAAEC,MAAO,MAFnBlyE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBmqE,EAAkB,uCAAG,4BAAAjiG,EAAA,6DACzB+3F,GAAa,GADY,kBAGN79C,EAAkB5P,QAAQ,CAAE+B,SAAU,OAHhC,cAGjBrK,EAHiB,gBAIDA,EAAGgmB,OAJF,cAKX3V,SACVi0B,EAAaxkE,EAAE,qBAAsBA,EAAE,oDACvCi2F,GAAa,GACb9nD,KARqB,kDAWvBuqB,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAZU,0DAAH,qDAgBxB,OACE,eAAC,KAAD,CAAOnnD,MAAO9uC,EAAE,gBAAiBmuC,UAAWA,EAA5C,UACGnY,GAAkBD,EACnB,eAAC,IAAD,CAAMic,WAAW,aAAaX,eAAe,gBAA7C,UACE,cAAC,KAAD,UAAOrxC,EAAE,uBACT,eAAC,IAAD,CAAM6wC,cAAc,SAApB,UACE,cAACt5B,GAAA,EAAD,CAAS63B,MAAI,EAACrvC,MAAO+nG,EAAqBrmG,SAAU,EAAGiW,KAAK,gBAC5D,cAAC,KAAD,CAAM23B,SAAS,OAAO73B,MAAM,aAA5B,SACE,cAACD,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACNzX,MAAO8nG,EACPpmG,SAAU,EACViW,KAAK,OACLC,OAAO,cAKf,cAAC,GAAD,IACA,eAAC,IAAD,CAAMq6B,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC,KAAD,CAAMhC,SAAS,OAAO73B,MAAM,aAA5B,SACGxX,EAAE,8BAEL,cAACuX,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO0nG,EAAqB/vF,KAAK,mBAE/D,eAAC,IAAD,CAAMs6B,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACE,cAAC,KAAD,CAAMI,SAAS,OAAO73B,MAAM,aAA5B,SACGxX,EAAE,YAEL,eAAC,KAAD,CAAMqvC,SAAS,OAAO73B,MAAM,aAA5B,UACGgwF,EADH,UAID3qF,EACC,cAAC,IAAD,CACE6f,UAAWs5D,EACXhnB,UAAW64B,IAA0BC,IAAwBvrE,EAC7D24C,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTlxD,GAAG,OACH5sB,GAAG,wBANL,SAQeriB,EAAZg2F,EAAc,aAAkB,aAGnC,cAACh4D,GAAA,EAAD,CAAqBiR,GAAG,SAE1B,eAAC,IAAD,CAAMoC,eAAe,SAASW,WAAW,SAAzC,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAak2B,GAAG,MAAjD,SACG1tC,EAAE,uBAEL,sBAAMi2B,IAAKH,EAAX,SACE,cAAC,IAAD,CAAUte,MAAM,wBCvGpBgkF,GAAal7F,aAAOy0B,IAAPz0B,CAAH,gGAGZ,qBAAGu0B,MAAkBurC,aAAahN,MA+FvB60C,GA1FI,WACjB,IAAQjoG,EAAMC,eAAND,EACR,EAGI47B,KAFFO,EADF,EACEA,0BACQI,EAFV,EAEED,KAAQC,QAEJ65D,EAAgBx1E,eAEhB8mF,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GACjFs1E,EAAwBF,EAAyB3lG,aAAiB0lG,EAA6B,IAAM,EACrGI,EAAsBF,EAAuB5lG,aAAiBm6B,EAA2B,IAAM,EAE/ForE,EAAmB,SAAC,GAAD,IAAGpM,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAMlsD,GAAG,OAAT,SAAiBjvC,EAAE,8EACnB,cAAC,KAAD,CAAMivC,GAAG,OAAT,SACGjvC,EACC,+JAGJ,cAAC,KAAD,CAAMq0B,MAAO,CAAEwiE,WAAY,QAA3B,SACG72F,EAAE,+EAAgF,CAAEm7F,IAAKA,EAAM,YAKtG,EAA+BprD,aAAS,cAAC,GAAD,CAAaw3D,iBAAkBA,KAAhEW,EAAP,oBAEA,EAA+CvyE,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,aACXksE,cAAe,CAAC,GAAI,MAFdhsE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAK5B,OACE,qCACGA,GAAkBD,EACnB,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM8a,cAAc,SAApB,SACE,eAAC,IAAD,CAAMmB,WAAW,SAAS/C,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMI,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAak2B,GAAG,MAAjD,SACG1tC,EAAE,4BAEL,cAAC,IAAD,CAAKi2B,IAAKH,EAAV,SACE,cAAC,IAAD,CAAUte,MAAM,sBAItB,eAAC,IAAD,CAAMw6B,WAAW,SAASX,eAAe,gBAAzC,UACE,eAAC,IAAD,CAAMR,cAAc,SAASnD,GAAG,OAAhC,UACE,cAAC,IAAD,UACGk6D,EACC,cAACrwF,GAAA,EAAD,CAAS83B,SAAS,OAAOD,MAAI,EAACrvC,MAAO+nG,EAAqBrmG,SAAU,IAEpE,cAAC,KAAD,CAAU0zE,OAAQ,GAAI30E,MAAO,GAAIyuC,GAAG,UAGvC04D,EACC,cAACpwF,GAAA,EAAD,CACE83B,SAAS,OACT73B,MAAM,aACNzX,MAAO8nG,EACPpmG,SAAU,EACViW,KAAK,OACLC,OAAO,MAGT,cAAC,KAAD,CAAUw9D,OAAQ,GAAI30E,MAAO,QAGjC,cAAC,IAAD,CACEwuE,UAAW64B,IAA0BC,IAAwBvrE,EAC7D3kB,QAASswF,EACT52D,MAAM,KACNjvB,GAAG,wBAJL,SAMGriB,EAAE,uBC3GXmoG,GAAa7nG,aAAO4lF,KAAP5lF,CAAH,oFAEZ,qBAAGu0B,MAAkBurC,aAAaoL,MAKhCyzB,GAAa3+F,aAAO4xC,KAAP5xC,CAAH,kLAQZ,qBAAGu0B,MAAkBurC,aAAahN,MAmBvBg1C,GAdI,WACjB,IAAQpoG,EAAMC,eAAND,EACR,OACE,cAAC,GAAD,CAAYm2D,UAAQ,EAAC3lB,KAAK,8CAA1B,SACE,eAAC,IAAD,CAAQi5B,GAAI,CAAC,OAAQ,KAAM,KAAM,KAAM,QAASl8B,QAAQ,SAAxD,UACE,cAAC,GAAD,CAAY/1B,MAAM,gBAAgB43B,MAAI,EAACC,SAAS,OAAhD,SACGrvC,EAAE,UAEL,cAAC,IAAD,CAAUwX,MAAM,gBAAgBm4B,GAAI,CAAC,KAAM,KAAM,KAAM,EAAG,eC6DnD04D,IAzEC/nG,KAAOU,IAAV,+GACS,qBAAG6zB,MAAkBG,OAAO2nE,sBAMN,SAAC,GAAqC,IAAnCxuD,EAAkC,EAAlCA,UAAWo5D,EAAuB,EAAvBA,iBAChDvnG,EAAMC,eAAND,EAGR,GAFoB2D,eAAZkZ,QACU6X,eAAVG,MAC6BkI,eAErC,GAFA,EAAQ27B,WAAR,EAAoB8L,aACM36C,cACQlsB,oBAAS,IAA3C,mBACA,GADA,UAKIi+B,MAHFO,EADF,EACEA,0BACAE,EAFF,EAEEA,wBACQE,EAHV,EAGED,KAAQC,QAEJ65D,EAAgBx1E,eAKhB4nF,GAHsBxmG,aAAiBq6B,EAAyB,IAEjDzb,eACY1e,YAI3ByyG,EAHQ3yG,aAAiBmY,aAASxV,iBAC1B3C,aAAiBoY,aAASzV,iBAC1B3C,aAAiBqY,aAAS1V,iBAElCiwG,EAAQD,EAAOnM,EAEfd,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GAIvF,GAH8Bo1E,GAAyB3lG,aAAiB0lG,EAA6B,IACzEE,GAAuB5lG,aAAiBm6B,EAA2B,IAEhDxG,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,SACXmyE,eAAgB,CAAEC,MAAO,OAF3B,EAAQlyE,UAAR,EAAmBC,QAAnB,EAA4BC,eAqB5B,OACE,cAAC,KAAD,CAAO8Y,MAAO9uC,EAAE,2BAA4BmuC,UAAWA,EAAvD,SAEE,eAAC,IAAD,CAAM6D,WAAW,SAASX,eAAe,gBAAzC,UACE,cAAC95B,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO60G,EAAOj9F,OAAO,KAAKlW,SAAU,IAChE,cAAC8V,GAAA,EAAD,CAASC,MAAM,aAAazX,MAAO40G,EAAMj9F,KAAK,cAAcjW,SAAU,WChExE+5F,GAAal7F,KAAOU,IAAV,+EAgEDinG,GAzDI,WACjB,IAAQjoG,EAAMC,eAAND,EACR,EAGI47B,KAFFO,EADF,EACEA,0BACQI,EAFV,EAEED,KAAQC,QAEJ65D,EAAgBx1E,eAEhB8mF,EAA8B5mF,mBAAQ,WAC1C,OAAO,IAAIpf,KAAUy6B,GAA2BjM,aAAakmE,KAC5D,CAACA,EAAej6D,IAEbwrE,EAAyBD,EAA4Bn1E,IAAI,GACzDq1E,IAAuBzrE,GAA4BA,EAA0B5J,IAAI,GAIjFg1E,GAHwBI,GAAyB3lG,aAAiB0lG,EAA6B,IACzEE,GAAuB5lG,aAAiBm6B,EAA2B,IAEtE,SAAC,GAAD,IAAGg/D,EAAH,EAAGA,IAAH,OACvB,qCACE,cAAC,KAAD,CAAMlsD,GAAG,OAAT,SAAiBjvC,EAAE,8EACnB,cAAC,KAAD,CAAMivC,GAAG,OAAT,SACGjvC,EACC,+JAGJ,cAAC,KAAD,CAAMq0B,MAAO,CAAEwiE,WAAY,QAA3B,SACG72F,EAAE,+EAAgF,CAAEm7F,IAAKA,EAAM,aAKtG,EAA+BprD,aAAS,cAAC,GAAD,CAAWw3D,iBAAkBA,KAA9DW,EAAP,oBAEA,EAA+CvyE,aAAW,cAAC4xE,EAAD,CAAkBpM,IAAK5+D,IAAa,CAC5F3G,UAAW,aACXksE,cAAe,CAAC,GAAI,MAFtB,EAAQhsE,UAAR,EAAmBC,QAAnB,EAA4BC,eAK5B,OACE,mCACE,cAAC,GAAD,UACI,cAAC,IAAD,CAAM6a,cAAc,SAApB,SAEE,cAAC,IAAD,CACEj5B,QAASswF,EACT52D,MAAM,KACN/D,QAAQ,UACRlrB,GAAG,wBAJL,SAMGriB,EAAE,cC5EX2sG,GAAWrsG,KAAOU,IAAV,uJAUD4rG,GAActsG,aAAOoxC,IAAPpxC,CAAH,6IAIpB4lF,MAKWymB,MCNTE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,uJAIZ,qBAAGu0B,MAAkBurC,aAAahN,MA4DvB05C,GAtD2B,SAAC,GAAc,IAAZtqF,EAAW,EAAXA,KACnCxiB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN1qG,EAAkFigB,EAAlFjgB,OAAQkgB,EAA0ED,EAA1EC,OAAQolB,EAAkErlB,EAAlEqlB,aAAcC,EAAoDtlB,EAApDslB,aAAcpoB,EAAsC8C,EAAtC9C,SAAUoT,EAA4BtQ,EAA5BsQ,WAAYjC,EAAgBrO,EAAhBqO,YAE5DmB,EACV4J,KADFlc,SAAYsS,WAERk7E,EAAiBl7E,GAAcA,EAAWG,GAAG,GAE7C4qE,EAAqBl1D,EAAan+B,OAClCmxF,EAAqB/yD,EAAap+B,OAGlCi3F,IADwB,OAARjhF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,MACzDmb,GAAG,GAC5B2pE,EAA8B,IAAXr5E,EAEnB0qF,EAAgBt8E,EAAcq8E,EAAiBvM,EAEjD7xD,EAAK,UAAM9uC,EAAE,QAAR,YAAmB66F,GACxBjpD,EAAQ,UAAM5xC,EAAE,SAAR,YAAoB+8F,GAC1BqQ,EAA0B,IAAX3qF,GAA4B,IAAXA,IAAiBuqF,IAASC,EAC1DI,EAAW,UAAG9qG,EAAH,QAAgBsrE,oBAWjC,OARIh9C,GACFie,EAAQ9uC,EAAE,mBACV4xC,EAAW5xC,EAAE,wBACJ87F,IACThtD,EAAQ9uC,EAAE,qBACV4xC,EAAQ,UAAM5xC,EAAE,QAAR,uBAA8BA,EAAE,SAAS6tE,oBAAzC,gBAIR,eAAC,GAAD,CAAYmQ,KAAK,OAAjB,UACG,cAAC,KAAD,CAAOxnB,IAAG,wBAAmB62C,GAAYrlD,IAAI,OAAOxnD,MAAO,GAAI20E,OAAQ,GAAIznC,GAAG,QAC/E,eAAC,GAAD,WACGy/D,GACC,cAAC,KAAD,CAAM99D,SAAS,OAAOD,MAAI,EAAC53B,MAAOsb,EAAa,UAAY,YAAas3D,cAAc,YAAtF,SACGpqF,EAAE,YAGP,cAAC,KAAD,CAAMovC,MAAO49D,IAASC,EAAM72C,MAAO42C,GAAQC,EAA3C,SACGn+D,IAEFs+D,GACC,cAAC,KAAD,CAAM/9D,SAAS,OAAO73B,MAAM,aAA5B,SACGo6B,WChDPi7D,GAAavsG,aAAOqsG,GAAPrsG,CAAH,iFAEZ,qBAAGu0B,MAAkBurC,aAAahN,MAKhCk6C,GAAkBhtG,KAAOU,IAAV,sDA0INusG,GAtImC,SAAC,GAAuC,IAArC/qF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eAC1Dt7B,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNxqF,EAAiFD,EAAjFC,OAAQqlB,EAAyEtlB,EAAzEslB,aAAcplB,EAA2DF,EAA3DE,aAAchD,EAA6C8C,EAA7C9C,SAAUoR,EAAmCtO,EAAnCsO,kBAAmBD,EAAgBrO,EAAhBqO,YACnEirE,EAA8B,IAAXr5E,EACnBlK,EAAcH,eACd47F,EAAkBhyG,aAAiB8X,aAAmBnV,iBACtDyxF,EAAgBx1E,eAChBqzF,EAAc17F,EAAcvW,aAAiBuW,GAAe,EAG5D27F,GAFO9d,EAAcz0F,MAAMsyG,GAAatyG,MAAM,KACjCO,WACCk0F,EAAcl0F,YAC5BiyG,EAAenyG,aAAiBgY,aAAgB1U,iBAEhD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBx7F,eAKnBy7F,GAHQJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAIvC,EAElCx0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcvlF,GAAWgD,EAASsS,GAAG,GACnCsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxD/C,EAAYz8E,IAAiB5E,KAAa6E,QAGhD,EAGIiZ,KAHJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAY8K,EADhD,EACgDA,mBAC9C7K,EAFF,EAEEA,kBAEF,EAAiEH,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCizE,EAAiB5oE,GAAqD,IAA/Bz4B,SAASy4B,GAEhD0oE,EADqB,IAAI1mE,KAAK4mE,GACW7iG,iBAEzC2qG,EAAY38E,EAAc7wB,EAAE,4BAA8BA,EAAE,iBAAkB,CAAE+8D,MAAOj1B,EAAap+B,SAC1Gw4F,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA+CxsE,aAC7C,qCACE,cAACpe,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOuyB,EAAmB7wB,SAAU,EAAG2tC,MAAI,EAAC13B,KAAK,gBAC1E,cAACH,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO0yB,EAAkBhxB,SAAU,EAAG2tC,MAAI,EAACz3B,OAAO,OAC1E3X,EAAE,iCACH,cAAC,KAAD,UAAOwlG,OAET,CAAE5vE,UAAW,WAPPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,EAA2B+Z,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgB7F,KARbuG,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYrkB,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG6wC,KAEDlyE,GAAkBze,EAClB,cAAC,KAAD,CAAUrc,MAAM,OAAO20E,OAAO,SAE9B,qCACGn/C,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK2X,GAAG,MAAMynC,OAAO,OAAOv9D,SAAUiZ,GAAeuxE,EAjBrC,SAACj9B,GAC3BA,EAAM6f,kBACNqd,UAemG7kG,EAAzF,UACE,cAAC+Z,GAAA,EAAD,CACEm4B,GAAG,MACHN,MAAO49D,IAASC,EAChB59D,SAAU29D,GAAQC,EAAO,OAAS,OAClCz1F,MAAO4qF,EAAc,UAAY,eACjC3gG,SAAU2gG,EAAc,EAAI,EAC5BriG,MAAOqiG,EAAcF,EAAsB,IAE5CE,EACC,mCACGkS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,WAKX,cAAC,KAAD,CAAMg4B,GAAG,MAAML,SAAS,OAAO73B,MAAM,eAArC,sBAKHqZ,GAAeuxE,IAAgB4K,IAASC,GACvC,cAAC,GAAD,CAAiBh3E,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUte,MAAM,6B,wCCnFnBi2F,GAzDiB,SAAC,GAAsD,IAApDjrF,EAAmD,EAAnDA,KAAmD,KAA7CkrF,SAA6C,EAAnC98E,uBAAmC,MAAlB,EAAkB,EAAZ/Y,EAAY,mBAC5EgwB,EAAmErlB,EAAnEqlB,aAAcC,EAAqDtlB,EAArDslB,aAAchV,EAAuCtQ,EAAvCsQ,WAAYhC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAC3D/wB,EAAMC,eAAND,EACFuY,EAAcH,eACd47F,EAAkBhyG,aAAiB8X,aAAmBnV,iBACtDyxF,EAAgBx1E,eAChBqzF,EAAc17F,EAAcvW,aAAiBuW,GAAe,EAG5D27F,GAFO9d,EAAcz0F,MAAMsyG,GAAatyG,MAAM,KACjCO,WACCk0F,EAAcl0F,YAC5BiyG,EAAenyG,aAAiBgY,aAAgB1U,iBAEhD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBx7F,eAKnBy7F,GAHQJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAIvC,EAExC,EAAkF1jF,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDmqE,EAAe1zD,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,QAEzG,EAA4BurC,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAcA,OACE,cAAC,IAAD,2BAAMohB,WAAW,SAASX,eAAe,iBAAoBx5B,GAA7D,aACGyjF,GAA+BxoE,EAC9B,mCACE,cAACvb,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAO+yB,EAAa,EAAIwoE,EAA8BgZ,EACtD7yG,SAAU,EACViW,KAAK,QAIT,cAAC,KAAD,CAAUlX,MAAM,OAAO20E,OAAO,aCxDhC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,sFAEZ,qBAAGu0B,MAAkBurC,aAAapI,MAqBvB21C,GAhByB,SAAC,GAA8B,IAA5BnrF,EAA2B,EAA3BA,KAAMoO,EAAqB,EAArBA,eACvC5wB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNp8E,EAAgBrO,EAAhBqO,YACR,OACE,cAAC,GAAD,CAAYmtD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACiB38D,EAAd6wB,EAAgB,MAAW,SAE9B,cAAC,GAAD,CAAKrO,KAAMA,EAAMoO,eAAgBC,EAAcD,EAAiB,EAAG88E,UAAWV,IAASC,UCfzFJ,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAwCDstG,GApCyC,SAAC,GAAc,IAAZprF,EAAW,EAAXA,KACjDxiB,EAAMC,eAAND,EACAyiB,EAAmDD,EAAnDC,OAAQolB,EAA2CrlB,EAA3CqlB,aAAc6N,EAA6BlzB,EAA7BkzB,YAAa7kB,EAAgBrO,EAAhBqO,YACnCoL,EAAqBL,KAArBK,iBAEF6/D,EAA8B,IAAXr5E,EAEnBorF,EAAqB/sF,mBAAQ,WACjC,GAAI+P,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,YACjD,CAACovB,EAAaoL,EAAkB6/D,EAAkBpmD,EAAa7N,EAAapmC,WAE/E,OACE,cAAC,GAAD,CAAYu8E,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG38D,EAAE,kBAEJ01C,GAAeA,EAAYnjB,IAAI,GAC9B,cAAC,IAAD,CAAM4iD,OAAO,OAAOnjC,WAAW,SAA/B,SACE,cAACz6B,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO8tG,EAAoBpsG,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,YAG1F,cAAC,KAAD,CAAUlJ,MAAM,OAAO20E,OAAO,eCjClC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAsDDwtG,GAlD+B,SAAC,GAAc,IAAZtrF,EAAW,EAAXA,KACvCC,EAAwED,EAAxEC,OAAQizB,EAAgElzB,EAAhEkzB,YAAa9iB,EAAmDpQ,EAAnDoQ,WAAYC,EAAuCrQ,EAAvCqQ,SAAUC,EAA6BtQ,EAA7BsQ,WAAWsV,EAAkB5lB,EAAlB4lB,cACtDzV,EAAiBwa,eAAjBxa,aACA3yB,EAAMC,eAAND,EACR,EACE0yB,aAAiBlQ,EAAMmQ,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/E8pE,EAAwB,IAAXz6E,EAEEsQ,GAClB,IACE,IACExb,GAAA,EACA,KACEvX,EAAE,UAGN,IACE,KAEOksB,YAAeiH,EAAiBN,EAAWD,EAAY,aAG5D,MAKN,KAM0B8iB,EAAYvjB,GAAG,GAE5C,OACE,cAAC,GAAD,CAAY6rD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACI38D,EAAE,oBAEN,cAAC,KAAD,CAAMqvC,SAAS,OAAO7uC,MAAM,OAAOgX,MAAM,QAAQmlD,UAAU,OAA3D,SACCv0B,UCnDHykE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,6PAOZ,qBAAGu0B,MAAkBurC,aAAapI,MAOhC+1C,GAAYztG,aAAO0tG,IAAP1tG,CAAH,mEACA,qBAAG6rE,QAAyB,iBAAmB,eAkB/CyhC,GAd0C,SAAC,GAAgC,IAA9BnR,EAA6B,EAA7BA,SAAUwR,EAAmB,EAAnBA,aAC5DjuG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYg+E,KAAK,OAAjB,UACGiwB,GACC,cAAC,KAAD,CAAMz2F,MAAM,UAAU43B,MAAI,EAA1B,SACcpvC,EAAXy8F,EAAa,OAAY,aAG9B,cAAC,GAAD,CAAWjlF,MAAM,UAAU20D,QAASswB,QCrC7ByR,GAAkB5tG,KAAOU,IAAV,maAEN,qBAAG6zB,MAAkBG,OAAOoiC,SAM9C,qBAAGviC,MAAkBurC,aAAahN,MAQlC,qBAAGv+B,MAAkBurC,aAAa+tC,MASzBC,GAAe9tG,KAAOU,IAAV,wEAKZqtG,GAAgB/tG,KAAOU,IAAV,4GCpBX2iG,GAPoD,SAAC,GAA0B,IAAxBV,EAAuB,EAAvBA,iBAC5DjjG,EAAMC,eAAND,EACR,EAAiC8pE,aAAem5B,GAAxC54B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAErB,OAAO,cAAC,KAAD,CAAMl7B,SAAS,OAAf,SAAuBrvC,EAAE,+BAAgC,CAAE4jG,IAAKv5B,EAAMw5B,KAAMv5B,EAAOw5B,OAAQv5B,OC8DrFw5B,GA3D2D,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnEhkG,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAGI+e,KAHJ,IACElc,SAAYmd,EADd,EACcA,kBAAmB7K,EADjC,EACiCA,WADjC,IAEEsK,KAAQE,EAFV,EAEUA,cAAeC,EAFzB,EAEyBA,oBAEnBwnE,EAAeznE,EAAgB,KAAO,IAC5C,EAA+C7G,aAC7C,qCACE,cAAC,KAAD,CAAMyZ,MAAI,EAACH,GAAG,MAAd,SACGjvC,EAAE,wBAAyB,CAAEm7F,IAAK8I,MAErC,cAAC,KAAD,UACGjkG,EACC,4JAIN,CAAE41B,UAAW,iBAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,EAA8CgtE,GAC5C3+F,SAASw4B,EAAmB,IAC5B7K,EACAyK,GAHMwmE,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,gBAOpBe,EAAarnE,IAAsBsmE,GAAmBnxE,EAAWG,GAAG,GAGpEgyE,EAAkBtnF,GAAWggB,GAAqBsmE,EAYxD,OACE,eAAC,IAAD,CACEnxD,WAAYgyD,EAAiB,aAAe,SAC5C3yD,eAAe,gBACfR,cAAemzD,EAAiB,SAAW,MAH7C,UAKGhuE,GAAkBD,EACnB,eAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAACg0B,cAAc,YAAjD,UACG8Z,EAAa,IAAMD,EADtB,KAfOjkG,EADLkkG,EACO,gBAEPC,EACO,sBAEF,4CAaNA,GAAmB,cAAC,GAAD,CAAoBlB,iBAAkBA,QC6HjDqL,GAxKoD,SAAC,GAQ7D,IAPL7rF,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAolB,EAKI,EALJA,aACApoB,EAII,EAJJA,SACA4b,EAGI,EAHJA,eACAzK,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEQ9wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAGFtE,EAAcH,eACd47F,EAAkBhyG,aAAiB8X,aAAmBnV,iBACtDyxF,EAAgBx1E,eAChBqzF,EAAc17F,EAAcvW,aAAiBuW,GAAe,EAG5D27F,GAFO9d,EAAcz0F,MAAMsyG,GAAatyG,MAAM,KACjCO,WACCk0F,EAAcl0F,YAC5BiyG,EAAenyG,aAAiBgY,aAAgB1U,iBAEhD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBx7F,eAKnBy7F,GAHQJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAIvC,EACnCx0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcviF,EAASsS,GAAG,GACxBsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxDP,EAA4B,IAAXl/E,EACjB08E,EAAYz8E,IAAiB5E,KAAa6E,QAG/C,EAIIiZ,KAJJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQrB,EAHV,EAGE0L,KAAQ1L,eAEV,EAAiEkB,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQ5CyvE,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA2BpyD,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,EAA+C1sE,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBu4E,EAAc19E,EAClB,cAAC,KAAD,CAAMwe,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,SACGpqF,EAAE,8BAGL,qCACE,eAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGtiD,EAAap+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,eAKT,OAAK6c,EAYAye,EAYH,eAAC,GAAD,WACE,cAAC,GAAD,UAAeizE,IACf,eAAC,GAAD,WACE,cAAC,IAAD,CAAMpkB,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,SACE,mCACGpM,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAASu/E,WAAW,IAAI1nD,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IAChEoS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAOPqZ,EACC,eAAC,IAAD,CAAMs5D,KAAK,MAAMt5C,cAAc,SAAS29D,UAAU,aAAax8D,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0BgyD,gBAAc,IACxC,eAAC,IAAD,CAAM/0D,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,eAON,cAAC,IAAD,CAAQo+C,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,mBAzDzC,eAAC,GAAD,WACE,cAAC,GAAD,UAAe4M,IACf,cAAC,GAAD,UACE,cAAC,KAAD,CAAU/tG,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAfnD,eAAC,GAAD,WACE,cAAC,GAAD,UAAeg5B,IACf,eAAC,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQv/B,UAAQ,EAAhB,SAAmChvE,EAAjB2hG,EAAmB,UAAe,oBCtE/CyC,GArC+B,SAAC,GAAyC,IAAvCrH,EAAsC,EAAtCA,mBAAoBsC,EAAkB,EAAlBA,YAC3Dr/F,EAAMC,eAAND,EAIFikG,EADFroE,KADFU,KAAQE,cAE2B,IAC/B6nE,GAAa/qD,WAAW+lD,IAAgB4E,EAAe,MAAM5hG,QAAQ,GAC3E,EAA+CszB,aAC7C,qCACE,cAAC,KAAD,CAAMyZ,MAAI,EAACH,GAAG,MAAd,SACGjvC,EAAE,wBAAyB,CAAEm7F,IAAK8I,MAErC,cAAC,KAAD,UACGjkG,EACC,4JAIN,CAAE41B,UAAW,cAXPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAc5B,OACE,qCACE,eAAC,IAAD,CAAM0Z,GAAG,OAAOsC,WAAW,SAASX,eAAe,gBAAnD,UACGrb,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,mBAEL,eAAC,KAAD,CAAMqvC,SAAS,OAAf,UACGgwD,EAAcgF,EAAY,IAD7B,IACmCtH,QAGrC,cAAC,GAAD,QCfAmB,GAAe59F,aAAO0lE,IAAP1lE,CAAH,gDAIZgkG,GAAc,CAClB/5D,SAAU,OA4LGg6D,GAzLyC,SAAC,GAA8D,IAA5D/hF,EAA2D,EAA3DA,KAAMgiF,EAAqD,EAArDA,WAAqD,IAAzCpF,uBAAyC,SAAhBjxD,EAAgB,EAAhBA,UAC9F/vB,EAAWC,eACTwpB,EAAiBrlB,EAAjBqlB,aACAhrB,EAAYlZ,eAAZkZ,QACFu7B,EAAoBvuB,cAC1B,EAGI+R,KAHJ,IACElc,SAAYmd,EADd,EACcA,kBAAmB7K,EADjC,EACiCA,WAC/BC,EAFF,EAEEA,kBAEMjyB,EAAMC,eAAND,EAER,GADkB00B,eAAVG,MAC6BkI,eAA7BynC,EAAR,EAAQA,aAAc9L,EAAtB,EAAsBA,WACtB,EAAkC/6D,oBAAS,GAA3C,mBAAOq4F,EAAP,KAAkBC,EAAlB,KACA,EAAsCt4F,mBAAS,IAA/C,mBAAO0hG,EAAP,KAAoBC,EAApB,KACA,EAA8B3hG,mBAAS,GAAvC,mBAAO8hG,EAAP,KAAgBC,EAAhB,KACQyD,EAAoBH,GAAsB3+F,SAASw4B,EAAmB,IAAK7K,GAA3EmxE,gBACF/M,EAAgBx1E,eAChBg/E,EACJxJ,EAAcjkE,GAAG,IAAMktE,EAAc/8F,aAAa,IAAIZ,KAAU29F,GAAa19F,MAAMy0F,GAAel0F,YAAc,GAa5G69F,EAAsB,SAACC,GAC3B,GAAIA,EAAgB,EAAG,CACrB,IAAMC,EAAyBuE,EAAWziG,UAAU,KAAKmuB,aAAa8vE,GAChEE,EAAgB/9F,aAAsB89F,EAAwBp4D,EAAapmC,SAAUomC,EAAapmC,UACxG69F,EAAeY,QAEfZ,EAAe,IAEjBI,EAAWM,IAGPyE,EAAgB,uCAAG,WAAOC,GAAP,uBAAAxmG,EAAA,yDACvB+3F,GAAa,GACP0O,EAAuBr0E,GAAoBo0E,EAAsBzyE,GAEjE2yE,EAA8B,IAAIljG,KAAU,MAC5CmjG,EAAkB7yE,EAAWK,MAAMsyE,EAAqBl0E,oBACrCo0E,EAAgB99C,IAAI69C,GANtB,0CAUFxsD,EAAkB0sD,YAAYR,IAV5B,cAUbpkE,EAVa,iBAWGA,EAAGgmB,OAXN,eAYP3V,SACVi0B,EAAaxkE,EAAE,aAAcA,EAAE,0DAC/Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,GAAuB,CAAE7e,cAhBjB,kDAmBnB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GApBM,2DA0BF79C,EAAkBkO,SAASq+C,EAAqBl0E,kBAAkB5wB,WAAYykG,IA1B5E,eA0BbpkE,EA1Ba,iBA2BGA,EAAGgmB,OA3BN,eA4BP3V,SACVi0B,EAAaxkE,EAAE,aAAcA,EAAE,0DAC/Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,GAAuB,CAAE7e,cAhCjB,mDAmCnB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GApCM,kEAAH,sDAyChB8O,EAAa,uCAAG,WAAOL,GAAP,eAAAxmG,EAAA,6DACpB+3F,GAAa,GADO,kBAKD79C,EAAkB+N,QAAQu+C,EAAqB7kG,WAAYykG,IAL1D,cAKZpkE,EALY,gBAMIA,EAAGgmB,OANP,cAON3V,SACVi0B,EAAaxkE,EAAE,WAAYA,EAAE,4CAC7Bi2F,GAAa,GACb9nD,IACA/vB,EAASsd,GAAuB,CAAE7e,cAXlB,kDAclB67C,EAAW14D,EAAE,SAAUA,EAAE,uFACzBi2F,GAAa,GAfK,0DAAH,sDAmBbkK,EAAkB,uCAAG,4BAAAjiG,EAAA,sDACnBwmG,EAAuBnjG,aAAiB,IAAIG,KAAU29F,GAAcx3D,EAAapmC,UACnF29F,EAEFqF,EAAiBC,GAGjBK,EAAcL,GAPS,2CAAH,qDAWxB,OACE,eAAC,KAAD,CACE51D,MAAyB9uC,EAAlBo/F,EAAoB,UAAe,iBAC1CjxD,UAAWA,EAFb,UAIE,eAAC,IAAD,CAAM6D,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMG,MAAI,EAAV,UAA8BpvC,EAAlBo/F,EAAoB,UAAe,SAA/C,OACA,eAAC,IAAD,CAAMptD,WAAW,SAASsjC,SAAS,OAAnC,UACE,cAAC,KAAD,CACE9e,IAAG,yBAAoBjyD,aAAWsjC,EAAarjC,SAA5C,QACHhE,MAAO,GACP20E,OAAQ,GACRntB,IAAKngB,EAAan+B,SAEpB,cAAC,KAAD,CAAMimC,GAAG,MAAMP,MAAI,EAAnB,SACGvH,EAAan+B,eAIpB,cAAC,IAAD,CACE3J,MAAOs/F,EACPj3C,YAlHyB,SAACgP,GAC9B,GAAIA,EAAO,CACT,IAAMgpC,EAAiB,IAAI1+F,KAAU01D,GAAOlnC,aAAatuB,KAAQC,IAAIgmC,EAAapmC,WAC5E4+F,EAAapvE,KAAKu5C,MAAM41B,EAAer+F,UAAUyiG,GAAYt0E,aAAa,KAAKhuB,YACrFw9F,EAAWW,EAAa,IAAM,IAAMA,QAEpCX,EAAW,GAEbJ,EAAeloC,IA2GXkpC,cAAelK,EAAcjkE,GAAG,IAAjB,WAA2BytE,GAAkB,EAA7C,QACfn+F,SAAUomC,EAAapmC,WAEzB,cAAC,KAAD,CAAMiuC,GAAG,MAAMC,GAAG,OAAOn4B,MAAM,aAAa63B,SAAS,OAAOJ,GAAG,MAA/D,SACGjvC,EAAE,qBAAsB,CAAEiC,QAASE,aAAsBqiG,EAAY38D,EAAapmC,cAErF,cAAC,KAAD,CACEsuF,IAAK,EACL98D,IAAK,IACLlzB,MAAO0/F,EACPc,eAAgBR,EAChBvpE,KAAK,QACLgqE,WAAU,UAAKf,EAAL,KACVgB,KAAM,IAER,eAAC,IAAD,CAAMzuD,WAAW,SAASX,eAAe,gBAAgB3B,GAAG,MAA5D,UACE,cAAC,GAAD,CAAc4B,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,KAArG,iBAGA,cAAC,GAAD,CAAczuD,MAAM,KAAKl8B,GAAG,MAAM4kB,EAAE,WAAWuT,QAAQ,WAAW31B,QAAS,kBAAMmoF,EAAoB,MAArG,SACG//F,EAAE,YAGNo/F,GAAmB+D,GAClB,cAAC,GAAD,CAAYpG,mBAAoBl1D,EAAan+B,OAAQ21F,YAAaA,IAEpE,cAAC,IAAD,CACE3iE,UAAWs5D,EACX9gB,QAAS8gB,EAAY,cAAC,IAAD,CAAee,MAAI,EAACv/E,MAAM,iBAAoB,KACnEI,QAASuoF,EACTnxB,UAAWqwB,GAA2C,IAA5B/lD,WAAW+lD,GACrC3vD,GAAG,OALL,SAOe1vC,EAAZg2F,EAAc,aAAkB,cAEjCoJ,GACA,cAAC,IAAD,CAAQ1vD,GAAG,MAAMuC,GAAG,IAAIkkB,UAAQ,EAAC3lB,KAAK,QAAQjD,QAAQ,YAAtD,SACGvtC,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,eChM9C+kG,GAAoBnuG,KAAOU,IAAV,iDA+OR0tG,GAtO6C,SAAC,GAA8B,IAA5BlsF,EAA2B,EAA3BA,KAAM8Y,EAAqB,EAArBA,eAEjE7Y,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACAgO,EAMEtzB,EANFszB,aACAhjB,EAKEtQ,EALFsQ,WACApQ,EAIEF,EAJFE,aACAhD,EAGE8C,EAHF9C,SACAy5B,EAEE32B,EAFF22B,kBACAtoB,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAEFmhF,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAAuF24F,GACrFa,EACAv7E,EACAqlB,EAAap+B,QAHQilG,EAAvB,EAAQnR,cAAqDoR,EAA7D,EAA0CvR,kBAM1C,EAA4CM,KAApCC,EAAR,EAAQA,gBAAiB5gF,EAAzB,EAAyBA,eACzB,EACE0gF,GAAgB1gF,GADK6xF,EAAvB,EAAQrR,cAAsDsR,EAA9D,EAA2CzR,kBAGrCG,EAAgB3sE,EAAcg+E,EAAqBF,EACnDtR,EAAoBxsE,EAAci+E,EAAyBF,EAE3DzP,EAAYz8E,IAAiB5E,KAAa6E,QAC1ClD,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE4I,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF+3F,GAAyBl+E,GAAejR,EAAcuS,GAAG,GAEzDunB,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KAEpG4pF,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAGIm6B,KAFU5J,EADd,EACEtS,SAAYsS,WACZC,EAFF,EAEEA,kBAGF,EAAiDrC,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB6+E,EAAkBh9E,GAAcA,EAAWG,GAAG,GAC9C88E,EAAoBp+E,GAAem+E,EACnCE,EAAwBltG,aAAiBouB,EAAgBF,aAAaipB,GAAoBtR,EAAapmC,UAEvG+gG,EAAgB3xE,GAAe+sE,GAAmBn+E,EAAU0S,GAAG,KAAOgtE,EAE5E,EAAiCpvD,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA8BhxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAxF2sF,EAAP,oBAEA,EAA2Bp/D,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,GAAP,oBAUA,GAAgCjxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAYp0E,EAAiB5N,KAAMA,EAAM48E,iBAAe,KAA3GgQ,GAAP,qBAEM3Q,GAAU,WACV5tE,EACFs+E,IAEApO,KAYJ,GAA+CprE,aAC7C31B,EAAE,wEACF,CAAE41B,UAAW,WAFPE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtBirE,GAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAE3E,OAAKj5B,EAeAye,EAeDknE,EAEA,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMnzD,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,mBAGP,cAAC,GAAD,UACE,cAAC,IAAD,CAAQQ,MAAM,OAAOwuE,SAAUquB,EAAmBzlF,QAAS4lF,EAAejwD,QAAQ,YAAlF,SACGvtC,EAAE,iBAQT+uG,GAAyBE,EAEzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAM5/D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGviD,EAAan+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACiBpqF,EAAd6wB,EAAgB,uBAA4B,eAGjD,eAAC,GAAD,WACE,eAAC,IAAD,CAAMs5D,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,UACE,cAACj3F,GAAA,EAAD,CACEu/E,WAAW,IACX1nD,MAAI,EACJC,SAAS,OACT5tC,SAAU,EACV1B,MAAO8wB,EAAcV,EAAsBywE,IAE7C,cAACrpF,GAAA,EAAD,CACE83B,SAAS,OACT+3B,QAAQ,SACR5vD,MAAM,aACN/V,SAAU,EACV1B,MAAO8wB,EAAcq+E,EAAwBrO,EAC7CnpF,KAAK,OACLC,OAAO,SAGX,eAAC,GAAD,WACE,cAAC,KAAD,CAAY41B,QAAQ,YAAY31B,QA9FxB,WACZiZ,EACFu+E,KAEApO,MA0F0DtzD,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,GACC,sBAAMhrE,IAAKH,GAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/C9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,cAIpCw1B,IAAkBD,SAOzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAMsZ,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGpqF,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGviD,EAAan+B,YAGlB,cAAC,GAAD,UACE,cAAC,IAAD,CACElJ,MAAM,OACNoX,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/CvzD,QAAQ,YACRyhC,SAAUl8C,EAJZ,SAMG9yB,EAAE,gBAxGP,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAAC,KAAD,CAAUQ,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAtBnD,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMlmC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAACg+B,GAAA,EAAD,CAAqBx9B,MAAM,eC9G/B6uG,GAAkBhtD,aAAH,yGASfitD,GAAoBjtD,aAAH,yGASjBktD,GAAoBjvG,KAAOU,IAAV,0QACR,qBAAGy7F,SAEVxY,aADI,2EAEAorB,IAEJprB,aAJI,2EAKAqrB,OASR,qBAAGz6E,MAAkBurC,aAAarI,MAMhCm2C,GAAkB5tG,KAAOU,IAAV,uLAIjB,qBAAG6zB,MAAkBurC,aAAahN,MAwBhCo8C,GAAclvG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGu0B,MAAkBurC,aAAarI,MA6JvB03C,GAvJiC,SAAC,GAA8D,IAAD,EAA3D5yF,EAA2D,EAA3DA,QAAS2F,EAAkD,EAAlDA,KAAM8Y,EAA4C,EAA5CA,eAAgBmhE,EAA4B,EAA5BA,SAAUiT,EAAkB,EAAlBA,YAExFjtF,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACA4N,EAMElzB,EANFkzB,YAGAI,GAGEtzB,EALFoQ,WAKEpQ,EAJFqQ,SAIErQ,EAHFszB,cACAhzB,EAEEN,EAFFM,gBACA+N,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACF27F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eACzB4qB,EAAiBwa,eAAjBxa,aACAq6E,EAAqB0C,EAArB1C,KAAMC,EAAeyC,EAAfzC,KAAM0C,EAASD,EAATC,KACdvC,GAAgBJ,GAAQC,IAAoB,IAAXxqF,EAEvC,EACEiQ,GAAiBlQ,EAAMmQ,GAEnBkpE,GAHN,EAAQ9oE,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,mBAG1D,UAAC8b,OAAO2N,gBAAR,aAAC,EAAiBigB,aACvCxjD,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GAE/E,EAGIo3B,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAGJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAC7DkrE,EAA8B,IAAXr5E,EAazB,EAIIkT,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKIumE,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAII21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAChE3mE,UAAW,iBAJAg6E,EADb,EACE95E,UACS+5E,EAFX,EAEE95E,QACgB+5E,EAHlB,EAGE95E,eAKI+5E,EAAcj6D,EAAa3jB,GAAG,GAClC,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOrxC,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAUmC,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAArE,YAA2EomC,EAAan+B,aAExF,KAEEsmG,EACJ,eAAC,IAAD,CAAM3+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBjvC,EAAd6wB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CAAKrO,KAAMA,EAAMkrF,UAAQ,EAAC98E,eAAgBC,EAAcm1E,EAA0B,OAIhFiK,EACJ,eAAC,IAAD,CAAM5+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMD,SAAU,CAAC,OAAQ,QAAzB,UAAmChvC,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MApDL,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UA4CV06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UAC7F,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,aAIjD,cAAC,KAAD,CAAUnvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAKpC,OACE,eAAC,GAAD,CAAmBS,SAAUA,EAA7B,UACE,eAAC,GAAD,WACGsT,GACC/C,GAAQC,IAAS+C,GACjBhD,GAAQC,GAAQ0C,IAASM,EAC3B,cAAC,IAAD,CAAMhhE,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAApD,SACGpvC,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EAFR,SAIGpvC,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM21B,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAZ,SAAuBxX,EAAE,qBACzB,cAAC,KAAD,CAAc2vC,GAAG,aAItB9e,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCi/E,GAAqBD,EACtB,sBAAM55E,IAAK25E,EAAX,SACE,cAAC,IAAD,CAAUjgE,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,eAAC,GAAD,WACG41F,GACC,cAAC,KAAD,CAAM19D,GAAG,MAAMT,GAAG,OAAOz3B,MAAM,aAA/B,SACGqZ,EAAc7wB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,uBAAyDA,EAAE,SAAS6tE,oBAApE,iBAGhB,cAAC,GAAD,6BAAarrD,GAAb,IAAmB8Y,eAAgBA,KACnC,cAAC,GAAD,CAAO9Y,KAAMA,EAAM8Y,eAAgBA,WC5OrC80E,GAAY9vG,KAAOU,IAAV,uGA2CAqvG,GArCyB,SAAC,GAAuC,IAArC7tF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eACxD,EAAyCyxE,eAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAM0C,EAApB,EAAoBA,KAAMW,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAChC,EAAgC5yG,oBAAS,GAAzC,mBAAO8+F,EAAP,KAAiB+T,EAAjB,KACMC,EAA0B/2C,aAAkB+iC,EAAU,KAOlD7rE,EACNgL,KADFU,KAAQ1L,eAEJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAEnE,OACE,qCACE,eAAC,GAAD,CAAWotD,KAAK,MAAMpmE,QAXH,WACrB44F,GAAY,SAAC5yF,GAAD,OAAWA,MAUrB,UACE,cAAC,GAAD,CAAU4E,KAAMA,IAChB,cAAC,GAAD,CAAcA,KAAMA,EAAM3F,QAASA,EAASye,eAAgBA,IAC5D,cAAC,GAAD,CAAS9Y,KAAMA,EAAMoO,eAAgBo1E,KACnCsK,GAAQC,IAAS,cAAC,GAAD,CAAiB/tF,KAAMA,IACzC+tF,GAAQ,cAAC,GAAD,CAAY/tF,KAAMA,IAC3B,cAAC,GAAD,CAAkBi6E,SAAUA,EAAUwR,aAAc0B,GAAQW,GAAQC,OAErEE,GACC,cAAC,GAAD,CACE5zF,QAASA,EACT2F,KAAMA,EACN8Y,eAAgBA,EAChBmhE,SAAUA,EACViT,YAAa,CAAE1C,OAAMC,OAAM0C,OAAMW,OAAMC,cCrD3C5D,GAAWrsG,KAAOU,IAAV,uJAUD4rG,GAActsG,aAAOoxC,IAAPpxC,CAAH,6IAIpB4lF,MAKWymB,MCNTE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,uJAIZ,qBAAGu0B,MAAkBurC,aAAahN,MA4DvB05C,GAtD2B,SAAC,GAAc,IAAZtqF,EAAW,EAAXA,KACnCxiB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN1qG,EAAkFigB,EAAlFjgB,OAAQkgB,EAA0ED,EAA1EC,OAAQolB,EAAkErlB,EAAlEqlB,aAAcC,EAAoDtlB,EAApDslB,aAAcpoB,EAAsC8C,EAAtC9C,SAAUoT,EAA4BtQ,EAA5BsQ,WAAYjC,EAAgBrO,EAAhBqO,YAE5DmB,EACV4J,KADFlc,SAAYsS,WAERk7E,EAAiBl7E,GAAcA,EAAWG,GAAG,GAE7C4qE,EAAqBl1D,EAAan+B,OAClCmxF,EAAqB/yD,EAAap+B,OAGlCi3F,IADwB,OAARjhF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,MACzDmb,GAAG,GAC5B2pE,EAA8B,IAAXr5E,EAEnB0qF,EAAgBt8E,EAAcq8E,EAAiBvM,EAEjD7xD,EAAK,UAAM9uC,EAAE,QAAR,YAAmB66F,GACxBjpD,EAAQ,UAAM5xC,EAAE,SAAR,YAAoB+8F,GAC1BqQ,EAA0B,IAAX3qF,GAA4B,IAAXA,IAAiBuqF,IAASC,EAC1DI,EAAW,UAAG9qG,EAAH,QAAgBsrE,oBAWjC,OARIh9C,GACFie,EAAQ9uC,EAAE,mBACV4xC,EAAW5xC,EAAE,wBACJ87F,IACThtD,EAAQ9uC,EAAE,qBACV4xC,EAAQ,UAAM5xC,EAAE,QAAR,uBAA8BA,EAAE,SAAS6tE,oBAAzC,gBAIR,eAAC,GAAD,CAAYmQ,KAAK,OAAjB,UACG,cAAC,KAAD,CAAOxnB,IAAG,wBAAmB62C,GAAYrlD,IAAI,OAAOxnD,MAAO,GAAI20E,OAAQ,GAAIznC,GAAG,QAC/E,eAAC,GAAD,WACGy/D,GACC,cAAC,KAAD,CAAM99D,SAAS,OAAOD,MAAI,EAAC53B,MAAOsb,EAAa,UAAY,YAAas3D,cAAc,YAAtF,SACGpqF,EAAE,YAGP,cAAC,KAAD,CAAMovC,MAAO49D,IAASC,EAAM72C,MAAO42C,GAAQC,EAA3C,SACGn+D,IAEFs+D,GACC,cAAC,KAAD,CAAM/9D,SAAS,OAAO73B,MAAM,aAA5B,SACGo6B,WChDPi7D,GAAavsG,aAAOqsG,GAAPrsG,CAAH,iFAEZ,qBAAGu0B,MAAkBurC,aAAahN,MAKhCk6C,GAAkBhtG,KAAOU,IAAV,sDAuINusG,GAnImC,SAAC,GAAuC,IAArC/qF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eAC1Dt7B,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNxqF,EAAiFD,EAAjFC,OAAQqlB,EAAyEtlB,EAAzEslB,aAAcplB,EAA2DF,EAA3DE,aAAchD,EAA6C8C,EAA7C9C,SAAUoR,EAAmCtO,EAAnCsO,kBAAmBD,EAAgBrO,EAAhBqO,YACnEirE,EAA8B,IAAXr5E,EAEnB8xF,GADcn8F,eACCpW,aAAiBkY,cAAiBrU,kBAEjD2uG,EADW/zF,eACUve,WACrBiyG,EAAenyG,aAAiBiY,aAAiB3U,iBAEjD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBt7F,eAKlBu7F,GAHOE,EAAYD,EACXH,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAItC,EAEnCx0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcvlF,GAAWgD,EAASsS,GAAG,GACnCsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxD/C,EAAYz8E,IAAiB5E,KAAa6E,QAGhD,EAGIiZ,KAHJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAY8K,EADhD,EACgDA,mBAC9C7K,EAFF,EAEEA,kBAEF,EAAiEH,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCizE,EAAiB5oE,GAAqD,IAA/Bz4B,SAASy4B,GAEhD0oE,EADqB,IAAI1mE,KAAK4mE,GACW7iG,iBAEzC2qG,EAAY38E,EAAc7wB,EAAE,4BAA8BA,EAAE,iBAAkB,CAAE+8D,MAAOj1B,EAAap+B,SAC1Gw4F,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA+CxsE,aAC7C,qCACE,cAACpe,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOuyB,EAAmB7wB,SAAU,EAAG2tC,MAAI,EAAC13B,KAAK,gBAC1E,cAACH,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO0yB,EAAkBhxB,SAAU,EAAG2tC,MAAI,EAACz3B,OAAO,OAC1E3X,EAAE,iCACH,cAAC,KAAD,UAAOwlG,OAET,CAAE5vE,UAAW,WAPPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,EAA2B+Z,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgB7F,KARbuG,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYrkB,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG6wC,KAEDlyE,GAAkBze,EAClB,cAAC,KAAD,CAAUrc,MAAM,OAAO20E,OAAO,SAE9B,qCACGn/C,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK2X,GAAG,MAAMynC,OAAO,OAAOv9D,SAAUiZ,GAAeuxE,EAjBrC,SAACj9B,GAC3BA,EAAM6f,kBACNqd,UAemG7kG,EAAzF,UACE,cAAC+Z,GAAA,EAAD,CACEm4B,GAAG,MACHN,MAAO49D,IAASC,EAChB59D,SAAU29D,GAAQC,EAAO,OAAS,OAClCz1F,MAAO4qF,EAAc,UAAY,eACjC3gG,SAAU2gG,EAAc,EAAI,EAC5BriG,MAAOqiG,EAAcF,EAAsB,IAE5CE,EACC,mCACGkS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,WAKX,cAAC,KAAD,CAAMg4B,GAAG,MAAML,SAAS,OAAO73B,MAAM,eAArC,sBAKHqZ,GAAeuxE,IAAgB4K,IAASC,GACvC,cAAC,GAAD,CAAiBh3E,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUte,MAAM,6B,wCCnFnBi2F,GAtDiB,SAAC,GAAsD,IAApDjrF,EAAmD,EAAnDA,KAAmD,KAA7CkrF,SAA6C,EAAnC98E,uBAAmC,MAAlB,EAAkB,EAAZ/Y,EAAY,mBAC5EgwB,EAAmErlB,EAAnEqlB,aAAcC,EAAqDtlB,EAArDslB,aAAchV,EAAuCtQ,EAAvCsQ,WAAYhC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAC3D/wB,EAAMC,eAAND,EAEFu0G,GADcn8F,eACCpW,aAAiBkY,cAAiBrU,kBAEjD2uG,EADW/zF,eACUve,WACrBiyG,EAAenyG,aAAiBiY,aAAiB3U,iBAEjD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBt7F,eAKlBu7F,GAHOE,EAAYD,EACXH,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAItC,EAEzC,EAAkF1jF,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDmqE,EAAe1zD,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,QAEzG,EAA4BurC,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAcA,OACE,cAAC,IAAD,2BAAMohB,WAAW,SAASX,eAAe,iBAAoBx5B,GAA7D,aACGyjF,GAA+BxoE,EAC9B,mCACE,cAACvb,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAO+yB,EAAa,EAAIwoE,EAA8BgZ,EACtD7yG,SAAU,EACViW,KAAK,QAIT,cAAC,KAAD,CAAUlX,MAAM,OAAO20E,OAAO,aCrDhC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,sFAEZ,qBAAGu0B,MAAkBurC,aAAapI,MAqBvB21C,GAhByB,SAAC,GAA8B,IAA5BnrF,EAA2B,EAA3BA,KAAMoO,EAAqB,EAArBA,eACvC5wB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNp8E,EAAgBrO,EAAhBqO,YACR,OACE,cAAC,GAAD,CAAYmtD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACiB38D,EAAd6wB,EAAgB,MAAW,SAE9B,cAAC,GAAD,CAAKrO,KAAMA,EAAMoO,eAAgBC,EAAcD,EAAiB,EAAG88E,UAAWV,IAASC,UCfzFJ,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAwCDstG,GApCyC,SAAC,GAAc,IAAZprF,EAAW,EAAXA,KACjDxiB,EAAMC,eAAND,EACAyiB,EAAmDD,EAAnDC,OAAQolB,EAA2CrlB,EAA3CqlB,aAAc6N,EAA6BlzB,EAA7BkzB,YAAa7kB,EAAgBrO,EAAhBqO,YACnCoL,EAAqBL,KAArBK,iBAEF6/D,EAA8B,IAAXr5E,EAEnBorF,EAAqB/sF,mBAAQ,WACjC,GAAI+P,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,YACjD,CAACovB,EAAaoL,EAAkB6/D,EAAkBpmD,EAAa7N,EAAapmC,WAE/E,OACE,cAAC,GAAD,CAAYu8E,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG38D,EAAE,kBAEJ01C,GAAeA,EAAYnjB,IAAI,GAC9B,cAAC,IAAD,CAAM4iD,OAAO,OAAOnjC,WAAW,SAA/B,SACE,cAACz6B,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO8tG,EAAoBpsG,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,YAG1F,cAAC,KAAD,CAAUlJ,MAAM,OAAO20E,OAAO,eCjClC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAsDDwtG,GAlD+B,SAAC,GAAc,IAAZtrF,EAAW,EAAXA,KACvCC,EAAwED,EAAxEC,OAAQizB,EAAgElzB,EAAhEkzB,YAAa9iB,EAAmDpQ,EAAnDoQ,WAAYC,EAAuCrQ,EAAvCqQ,SAAUC,EAA6BtQ,EAA7BsQ,WAAWsV,EAAkB5lB,EAAlB4lB,cACtDzV,EAAiBwa,eAAjBxa,aACA3yB,EAAMC,eAAND,EACR,EACE0yB,aAAiBlQ,EAAMmQ,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/E8pE,EAAwB,IAAXz6E,EAEEsQ,GAClB,IACE,IACExb,GAAA,EACA,KACEvX,EAAE,UAGN,IACE,KAEOksB,YAAeiH,EAAiBN,EAAWD,EAAY,aAG5D,MAKN,KAM0B8iB,EAAYvjB,GAAG,GAE5C,OACE,cAAC,GAAD,CAAY6rD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACI38D,EAAE,oBAEN,cAAC,KAAD,CAAMqvC,SAAS,OAAO7uC,MAAM,OAAOgX,MAAM,QAAQmlD,UAAU,OAA3D,SACCv0B,UCnDHykE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,6PAOZ,qBAAGu0B,MAAkBurC,aAAapI,MAOhC+1C,GAAYztG,aAAO0tG,IAAP1tG,CAAH,mEACA,qBAAG6rE,QAAyB,iBAAmB,eAkB/CyhC,GAd0C,SAAC,GAAgC,IAA9BnR,EAA6B,EAA7BA,SAAUwR,EAAmB,EAAnBA,aAC5DjuG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYg+E,KAAK,OAAjB,UACGiwB,GACC,cAAC,KAAD,CAAMz2F,MAAM,UAAU43B,MAAI,EAA1B,SACcpvC,EAAXy8F,EAAa,OAAY,aAG9B,cAAC,GAAD,CAAWjlF,MAAM,UAAU20D,QAASswB,QCrC7ByR,GAAkB5tG,KAAOU,IAAV,maAEN,qBAAG6zB,MAAkBG,OAAOoiC,SAM9C,qBAAGviC,MAAkBurC,aAAahN,MAQlC,qBAAGv+B,MAAkBurC,aAAa+tC,MASzBC,GAAe9tG,KAAOU,IAAV,wEAKZqtG,GAAgB/tG,KAAOU,IAAV,4GC4JXstG,GArKoD,SAAC,GAQ7D,IAPL7rF,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAolB,EAKI,EALJA,aACApoB,EAII,EAJJA,SACA4b,EAGI,EAHJA,eACAzK,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEQ9wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAIF03F,GADcn8F,eACCpW,aAAiBkY,cAAiBrU,kBAEjD2uG,EADW/zF,eACUve,WACrBiyG,EAAenyG,aAAiBiY,aAAiB3U,iBAEjD8uG,EADe7yF,eACSrf,WACxBmyG,EAAkBt7F,eAKlBu7F,GAHOE,EAAYD,EACXH,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAItC,EACpCx0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcviF,EAASsS,GAAG,GACxBsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxDP,EAA4B,IAAXl/E,EACjB08E,EAAYz8E,IAAiB5E,KAAa6E,QAG/C,EAIIiZ,KAJJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQrB,EAHV,EAGE0L,KAAQ1L,eAEV,EAAiEkB,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQ5CyvE,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA2BpyD,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,EAA+C1sE,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBu4E,EAAc19E,EAClB,cAAC,KAAD,CAAMwe,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,SACGpqF,EAAE,8BAGL,qCACE,eAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGtiD,EAAap+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,eAKT,OAAK6c,EAYAye,EAYH,eAAC,GAAD,WACE,cAAC,GAAD,UAAeizE,IACf,eAAC,GAAD,WACE,cAAC,IAAD,CAAMpkB,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,SACE,mCACGpM,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAASu/E,WAAW,IAAI1nD,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IAChEoS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAOPqZ,EACC,eAAC,IAAD,CAAMs5D,KAAK,MAAMt5C,cAAc,SAAS29D,UAAU,aAAax8D,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0BgyD,gBAAc,IACxC,eAAC,IAAD,CAAM/0D,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,eAON,cAAC,IAAD,CAAQo+C,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,mBAzDzC,eAAC,GAAD,WACE,cAAC,GAAD,UAAe4M,IACf,cAAC,GAAD,UACE,cAAC,KAAD,CAAU/tG,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAfnD,eAAC,GAAD,WACE,cAAC,GAAD,UAAeg5B,IACf,eAAC,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQv/B,UAAQ,EAAhB,SAAmChvE,EAAjB2hG,EAAmB,UAAe,oBC7FxD8M,GAAoBnuG,KAAOU,IAAV,iDA+OR0tG,GAtO6C,SAAC,GAA8B,IAA5BlsF,EAA2B,EAA3BA,KAAM8Y,EAAqB,EAArBA,eAEjE7Y,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACAgO,EAMEtzB,EANFszB,aACAhjB,EAKEtQ,EALFsQ,WACApQ,EAIEF,EAJFE,aACAhD,EAGE8C,EAHF9C,SACAy5B,EAEE32B,EAFF22B,kBACAtoB,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAEFmhF,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAAuF24F,GACrFa,EACAv7E,EACAqlB,EAAap+B,QAHQilG,EAAvB,EAAQnR,cAAqDoR,EAA7D,EAA0CvR,kBAM1C,EAA4CM,KAApCC,EAAR,EAAQA,gBAAiB5gF,EAAzB,EAAyBA,eACzB,EACE0gF,GAAgB1gF,GADK6xF,EAAvB,EAAQrR,cAAsDsR,EAA9D,EAA2CzR,kBAGrCG,EAAgB3sE,EAAcg+E,EAAqBF,EACnDtR,EAAoBxsE,EAAci+E,EAAyBF,EAE3DzP,EAAYz8E,IAAiB5E,KAAa6E,QAC1ClD,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE4I,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF+3F,GAAyBl+E,GAAejR,EAAcuS,GAAG,GAEzDunB,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KAEpG4pF,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAGIm6B,KAFU5J,EADd,EACEtS,SAAYsS,WACZC,EAFF,EAEEA,kBAGF,EAAiDrC,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB6+E,EAAkBh9E,GAAcA,EAAWG,GAAG,GAC9C88E,EAAoBp+E,GAAem+E,EACnCE,EAAwBltG,aAAiBouB,EAAgBF,aAAaipB,GAAoBtR,EAAapmC,UAEvG+gG,EAAgB3xE,GAAe+sE,GAAmBn+E,EAAU0S,GAAG,KAAOgtE,EAE5E,EAAiCpvD,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA8BhxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAxF2sF,EAAP,oBAEA,EAA2Bp/D,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,GAAP,oBAUA,GAAgCjxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAYp0E,EAAiB5N,KAAMA,EAAM48E,iBAAe,KAA3GgQ,GAAP,qBAEM3Q,GAAU,WACV5tE,EACFs+E,IAEApO,KAYJ,GAA+CprE,aAC7C31B,EAAE,wEACF,CAAE41B,UAAW,WAFPE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtBirE,GAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAE3E,OAAKj5B,EAeAye,EAeDknE,EAEA,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMnzD,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,mBAGP,cAAC,GAAD,UACE,cAAC,IAAD,CAAQQ,MAAM,OAAOwuE,SAAUquB,EAAmBzlF,QAAS4lF,EAAejwD,QAAQ,YAAlF,SACGvtC,EAAE,iBAQT+uG,GAAyBE,EAEzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAM5/D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGviD,EAAan+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACiBpqF,EAAd6wB,EAAgB,uBAA4B,eAGjD,eAAC,GAAD,WACE,eAAC,IAAD,CAAMs5D,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,UACE,cAACj3F,GAAA,EAAD,CACEu/E,WAAW,IACX1nD,MAAI,EACJC,SAAS,OACT5tC,SAAU,EACV1B,MAAO8wB,EAAcV,EAAsBywE,IAE7C,cAACrpF,GAAA,EAAD,CACE83B,SAAS,OACT+3B,QAAQ,SACR5vD,MAAM,aACN/V,SAAU,EACV1B,MAAO8wB,EAAcq+E,EAAwBrO,EAC7CnpF,KAAK,OACLC,OAAO,SAGX,eAAC,GAAD,WACE,cAAC,KAAD,CAAY41B,QAAQ,YAAY31B,QA9FxB,WACZiZ,EACFu+E,KAEApO,MA0F0DtzD,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,GACC,sBAAMhrE,IAAKH,GAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/C9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,cAIpCw1B,IAAkBD,SAOzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAMsZ,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGpqF,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGviD,EAAan+B,YAGlB,cAAC,GAAD,UACE,cAAC,IAAD,CACElJ,MAAM,OACNoX,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/CvzD,QAAQ,YACRyhC,SAAUl8C,EAJZ,SAMG9yB,EAAE,gBAxGP,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAAC,KAAD,CAAUQ,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAtBnD,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMlmC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAACg+B,GAAA,EAAD,CAAqBx9B,MAAM,eC9G/B6uG,GAAkBhtD,aAAH,yGASfitD,GAAoBjtD,aAAH,yGASjBktD,GAAoBjvG,KAAOU,IAAV,0QACR,qBAAGy7F,SAEVxY,aADI,2EAEAorB,IAEJprB,aAJI,2EAKAqrB,OASR,qBAAGz6E,MAAkBurC,aAAarI,MAMhCm2C,GAAkB5tG,KAAOU,IAAV,uLAIjB,qBAAG6zB,MAAkBurC,aAAahN,MAwBhCo8C,GAAclvG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGu0B,MAAkBurC,aAAarI,MA6JvB03C,GAvJiC,SAAC,GAA8D,IAAD,EAA3D5yF,EAA2D,EAA3DA,QAAS2F,EAAkD,EAAlDA,KAAM8Y,EAA4C,EAA5CA,eAAgBmhE,EAA4B,EAA5BA,SAAUiT,EAAkB,EAAlBA,YAExFjtF,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACA4N,EAMElzB,EANFkzB,YAGAI,GAGEtzB,EALFoQ,WAKEpQ,EAJFqQ,SAIErQ,EAHFszB,cACAhzB,EAEEN,EAFFM,gBACA+N,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACF27F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eACzB4qB,EAAiBwa,eAAjBxa,aACAq6E,EAAqB0C,EAArB1C,KAAMC,EAAeyC,EAAfzC,KAAM0C,EAASD,EAATC,KACdvC,GAAgBJ,GAAQC,IAAoB,IAAXxqF,EAEvC,EACEiQ,GAAiBlQ,EAAMmQ,GAEnBkpE,GAHN,EAAQ9oE,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,mBAG1D,UAAC8b,OAAO2N,gBAAR,aAAC,EAAiBigB,aACvCxjD,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GAE/E,EAGIo3B,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAGJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAC7DkrE,EAA8B,IAAXr5E,EAazB,EAIIkT,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKIumE,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAII21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAChE3mE,UAAW,iBAJAg6E,EADb,EACE95E,UACS+5E,EAFX,EAEE95E,QACgB+5E,EAHlB,EAGE95E,eAKI+5E,EAAcj6D,EAAa3jB,GAAG,GAClC,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOrxC,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAUmC,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAArE,YAA2EomC,EAAan+B,aAExF,KAEEsmG,EACJ,eAAC,IAAD,CAAM3+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBjvC,EAAd6wB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CAAKrO,KAAMA,EAAMkrF,UAAQ,EAAC98E,eAAgBC,EAAcm1E,EAA0B,OAIhFiK,EACJ,eAAC,IAAD,CAAM5+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMD,SAAU,CAAC,OAAQ,QAAzB,UAAmChvC,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MApDL,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UA4CV06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UAC7F,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,aAIjD,cAAC,KAAD,CAAUnvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAKpC,OACE,eAAC,GAAD,CAAmBS,SAAUA,EAA7B,UACE,eAAC,GAAD,WACGsT,GACC/C,GAAQC,IAAS+C,GACjBhD,GAAQC,GAAQ0C,IAASM,EAC3B,cAAC,IAAD,CAAMhhE,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAApD,SACGpvC,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EAFR,SAIGpvC,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM21B,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAZ,SAAuBxX,EAAE,qBACzB,cAAC,KAAD,CAAc2vC,GAAG,aAItB9e,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCi/E,GAAqBD,EACtB,sBAAM55E,IAAK25E,EAAX,SACE,cAAC,IAAD,CAAUjgE,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,eAAC,GAAD,WACG41F,GACC,cAAC,KAAD,CAAM19D,GAAG,MAAMT,GAAG,OAAOz3B,MAAM,aAA/B,SACGqZ,EAAc7wB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,uBAAyDA,EAAE,SAAS6tE,oBAApE,iBAGhB,cAAC,GAAD,6BAAarrD,GAAb,IAAmB8Y,eAAgBA,KACnC,cAAC,GAAD,CAAO9Y,KAAMA,EAAM8Y,eAAgBA,WC5OrC80E,GAAY9vG,KAAOU,IAAV,uGA2CA6zG,GArC0B,SAAC,GAAuC,IAArCryF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eACzD,EAAyCyxE,eAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAM0C,EAApB,EAAoBA,KAAMW,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAChC,EAAgC5yG,oBAAS,GAAzC,mBAAO8+F,EAAP,KAAiB+T,EAAjB,KACMC,EAA0B/2C,aAAkB+iC,EAAU,KAOlD7rE,EACNgL,KADFU,KAAQ1L,eAEJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAEnE,OACE,qCACE,eAAC,GAAD,CAAWotD,KAAK,MAAMpmE,QAXH,WACrB44F,GAAY,SAAC5yF,GAAD,OAAWA,MAUrB,UACE,cAAC,GAAD,CAAU4E,KAAMA,IAChB,cAAC,GAAD,CAAcA,KAAMA,EAAM3F,QAASA,EAASye,eAAgBA,IAC5D,cAAC,GAAD,CAAS9Y,KAAMA,EAAMoO,eAAgBo1E,KACnCsK,GAAQC,IAAS,cAAC,GAAD,CAAiB/tF,KAAMA,IACzC+tF,GAAQ,cAAC,GAAD,CAAY/tF,KAAMA,IAC3B,cAAC,GAAD,CAAkBi6E,SAAUA,EAAUwR,aAAc0B,GAAQW,GAAQC,OAErEE,GACC,cAAC,GAAD,CACE5zF,QAASA,EACT2F,KAAMA,EACN8Y,eAAgBA,EAChBmhE,SAAUA,EACViT,YAAa,CAAE1C,OAAMC,OAAM0C,OAAMW,OAAMC,cCrD3C5D,GAAWrsG,KAAOU,IAAV,uJAUD4rG,GAActsG,aAAOoxC,IAAPpxC,CAAH,6IAIpB4lF,MAKWymB,MCNTE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,uJAIZ,qBAAGu0B,MAAkBurC,aAAahN,MA4DvB05C,GAtD2B,SAAC,GAAc,IAAZtqF,EAAW,EAAXA,KACnCxiB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACN1qG,EAAkFigB,EAAlFjgB,OAAQkgB,EAA0ED,EAA1EC,OAAQolB,EAAkErlB,EAAlEqlB,aAAcC,EAAoDtlB,EAApDslB,aAAcpoB,EAAsC8C,EAAtC9C,SAAUoT,EAA4BtQ,EAA5BsQ,WAAYjC,EAAgBrO,EAAhBqO,YAE5DmB,EACV4J,KADFlc,SAAYsS,WAERk7E,EAAiBl7E,GAAcA,EAAWG,GAAG,GAE7C4qE,EAAqBl1D,EAAan+B,OAClCmxF,EAAqB/yD,EAAap+B,OAGlCi3F,IADwB,OAARjhF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,MACzDmb,GAAG,GAC5B2pE,EAA8B,IAAXr5E,EAEnB0qF,EAAgBt8E,EAAcq8E,EAAiBvM,EAEjD7xD,EAAK,UAAM9uC,EAAE,QAAR,YAAmB66F,GACxBjpD,EAAQ,UAAM5xC,EAAE,SAAR,YAAoB+8F,GAC1BqQ,EAA0B,IAAX3qF,GAA4B,IAAXA,IAAiBuqF,IAASC,EAC1DI,EAAW,UAAG9qG,EAAH,QAAgBsrE,oBAWjC,OARIh9C,GACFie,EAAQ9uC,EAAE,mBACV4xC,EAAW5xC,EAAE,wBACJ87F,IACThtD,EAAQ9uC,EAAE,qBACV4xC,EAAQ,UAAM5xC,EAAE,QAAR,uBAA8BA,EAAE,SAAS6tE,oBAAzC,gBAIR,eAAC,GAAD,CAAYmQ,KAAK,OAAjB,UACG,cAAC,KAAD,CAAOxnB,IAAG,wBAAmB62C,GAAYrlD,IAAI,OAAOxnD,MAAO,GAAI20E,OAAQ,GAAIznC,GAAG,QAC/E,eAAC,GAAD,WACGy/D,GACC,cAAC,KAAD,CAAM99D,SAAS,OAAOD,MAAI,EAAC53B,MAAOsb,EAAa,UAAY,YAAas3D,cAAc,YAAtF,SACGpqF,EAAE,YAGP,cAAC,KAAD,CAAMovC,MAAO49D,IAASC,EAAM72C,MAAO42C,GAAQC,EAA3C,SACGn+D,IAEFs+D,GACC,cAAC,KAAD,CAAM/9D,SAAS,OAAO73B,MAAM,aAA5B,SACGo6B,WChDPi7D,GAAavsG,aAAOqsG,GAAPrsG,CAAH,iFAEZ,qBAAGu0B,MAAkBurC,aAAahN,MAKhCk6C,GAAkBhtG,KAAOU,IAAV,sDAuINusG,GAnImC,SAAC,GAAuC,IAArC/qF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eAC1Dt7B,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNxqF,EAAiFD,EAAjFC,OAAQqlB,EAAyEtlB,EAAzEslB,aAAcplB,EAA2DF,EAA3DE,aAAchD,EAA6C8C,EAA7C9C,SAAUoR,EAAmCtO,EAAnCsO,kBAAmBD,EAAgBrO,EAAhBqO,YACnEirE,EAA8B,IAAXr5E,EAEnBuxF,GADc57F,eACIpW,aAAiB6X,aAAwBlV,kBAE3DuvG,EADgBtzF,eACY1e,WAC5BiyG,EAAenyG,aAAiB+X,aAAkB/U,iBAElDovG,EADerzF,eACS7e,WACxBmyG,EAAkBp7F,eAKlBq7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAMzEx0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcvlF,GAAWgD,EAASsS,GAAG,GACnCsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxD/C,EAAYz8E,IAAiB5E,KAAa6E,QAGhD,EAGIiZ,KAHJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAAY8K,EADhD,EACgDA,mBAC9C7K,EAFF,EAEEA,kBAEF,EAAiEH,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQtCizE,EAAiB5oE,GAAqD,IAA/Bz4B,SAASy4B,GAEhD0oE,EADqB,IAAI1mE,KAAK4mE,GACW7iG,iBAEzC2qG,EAAY38E,EAAc7wB,EAAE,4BAA8BA,EAAE,iBAAkB,CAAE+8D,MAAOj1B,EAAap+B,SAC1Gw4F,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA+CxsE,aAC7C,qCACE,cAACpe,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAOuyB,EAAmB7wB,SAAU,EAAG2tC,MAAI,EAAC13B,KAAK,gBAC1E,cAACH,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO0yB,EAAkBhxB,SAAU,EAAG2tC,MAAI,EAACz3B,OAAO,OAC1E3X,EAAE,iCACH,cAAC,KAAD,UAAOwlG,OAET,CAAE5vE,UAAW,WAPPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAU5B,EAA2B+Z,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgB7F,KARbuG,EAAP,oBAiBA,OACE,cAAC,GAAD,CAAYrkB,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG6wC,KAEDlyE,GAAkBze,EAClB,cAAC,KAAD,CAAUrc,MAAM,OAAO20E,OAAO,SAE9B,qCACGn/C,GAAkBD,EACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAK2X,GAAG,MAAMynC,OAAO,OAAOv9D,SAAUiZ,GAAeuxE,EAjBrC,SAACj9B,GAC3BA,EAAM6f,kBACNqd,UAemG7kG,EAAzF,UACE,cAAC+Z,GAAA,EAAD,CACEm4B,GAAG,MACHN,MAAO49D,IAASC,EAChB59D,SAAU29D,GAAQC,EAAO,OAAS,OAClCz1F,MAAO4qF,EAAc,UAAY,eACjC3gG,SAAU2gG,EAAc,EAAI,EAC5BriG,MAAOqiG,EAAcF,EAAsB,IAE5CE,EACC,mCACGkS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,WAKX,cAAC,KAAD,CAAMg4B,GAAG,MAAML,SAAS,OAAO73B,MAAM,eAArC,sBAKHqZ,GAAeuxE,IAAgB4K,IAASC,GACvC,cAAC,GAAD,CAAiBh3E,IAAKH,EAAtB,SACE,cAAC,IAAD,CAAUte,MAAM,6B,wCCnFnBi2F,GAtDiB,SAAC,GAAsD,IAApDjrF,EAAmD,EAAnDA,KAAmD,KAA7CkrF,SAA6C,EAAnC98E,uBAAmC,MAAlB,EAAkB,EAAZ/Y,EAAY,mBAC5EgwB,EAAmErlB,EAAnEqlB,aAAcC,EAAqDtlB,EAArDslB,aAAchV,EAAuCtQ,EAAvCsQ,WAAYhC,EAA2BtO,EAA3BsO,kBAAmBC,EAAQvO,EAARuO,IAC3D/wB,EAAMC,eAAND,EAEFg0G,GADc57F,eACIpW,aAAiB6X,aAAwBlV,kBAE3DuvG,EADgBtzF,eACY1e,WAC5BiyG,EAAenyG,aAAiB+X,aAAkB/U,iBAElDovG,EADerzF,eACS7e,WACxBmyG,EAAkBp7F,eAKlBq7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAM/E,EAAkF1jF,GAAWnO,EAAMoO,GAAtF0qE,EAAb,EAAQvqE,IAAkCI,EAA1C,EAA0CA,iBAAkBC,EAA5D,EAA4DA,kBAEtDmqE,EAAe1zD,EAAarjC,QAAb,+BAA+CD,aAAWsjC,EAAarjC,UAAa,QAEzG,EAA4BurC,aAC1B,cAAC,GAAD,CACEre,WAAYZ,EACZC,IAAKA,EACL4pE,UAAW36F,EAAE,eAAgB,CAAE0J,OAAQm+B,EAAan+B,SACpDkxF,SAAUW,EACVV,mBAAoB/yD,EAAap+B,OACjCynB,iBAAkBA,EAClBC,kBAAmBA,EACnBR,eAAgBA,KATpB,oBAcA,OACE,cAAC,IAAD,2BAAMohB,WAAW,SAASX,eAAe,iBAAoBx5B,GAA7D,aACGyjF,GAA+BxoE,EAC9B,mCACE,cAACvb,GAAA,EAAD,CACE83B,SAAS,OACT53B,WAAYqb,EACZ/yB,MAAO+yB,EAAa,EAAIwoE,EAA8BgZ,EACtD7yG,SAAU,EACViW,KAAK,QAIT,cAAC,KAAD,CAAUlX,MAAM,OAAO20E,OAAO,aCrDhC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,sFAEZ,qBAAGu0B,MAAkBurC,aAAapI,MAqBvB21C,GAhByB,SAAC,GAA8B,IAA5BnrF,EAA2B,EAA3BA,KAAMoO,EAAqB,EAArBA,eACvC5wB,EAAMC,eAAND,EACR,EAAuB+sG,eAAfC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KACNp8E,EAAgBrO,EAAhBqO,YACR,OACE,cAAC,GAAD,CAAYmtD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACiB38D,EAAd6wB,EAAgB,MAAW,SAE9B,cAAC,GAAD,CAAKrO,KAAMA,EAAMoO,eAAgBC,EAAcD,EAAiB,EAAG88E,UAAWV,IAASC,UCfzFJ,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAwCDstG,GApCyC,SAAC,GAAc,IAAZprF,EAAW,EAAXA,KACjDxiB,EAAMC,eAAND,EACAyiB,EAAmDD,EAAnDC,OAAQolB,EAA2CrlB,EAA3CqlB,aAAc6N,EAA6BlzB,EAA7BkzB,YAAa7kB,EAAgBrO,EAAhBqO,YACnCoL,EAAqBL,KAArBK,iBAEF6/D,EAA8B,IAAXr5E,EAEnBorF,EAAqB/sF,mBAAQ,WACjC,GAAI+P,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,YACjD,CAACovB,EAAaoL,EAAkB6/D,EAAkBpmD,EAAa7N,EAAapmC,WAE/E,OACE,cAAC,GAAD,CAAYu8E,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACG38D,EAAE,kBAEJ01C,GAAeA,EAAYnjB,IAAI,GAC9B,cAAC,IAAD,CAAM4iD,OAAO,OAAOnjC,WAAW,SAA/B,SACE,cAACz6B,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MAAO8tG,EAAoBpsG,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,YAG1F,cAAC,KAAD,CAAUlJ,MAAM,OAAO20E,OAAO,eCjClC03B,GAAavsG,aAAOqsG,GAAPrsG,CAAH,mDAsDDwtG,GAlD+B,SAAC,GAAc,IAAZtrF,EAAW,EAAXA,KACvCC,EAAwED,EAAxEC,OAAQizB,EAAgElzB,EAAhEkzB,YAAa9iB,EAAmDpQ,EAAnDoQ,WAAYC,EAAuCrQ,EAAvCqQ,SAAUC,EAA6BtQ,EAA7BsQ,WAAWsV,EAAkB5lB,EAAlB4lB,cACtDzV,EAAiBwa,eAAjBxa,aACA3yB,EAAMC,eAAND,EACR,EACE0yB,aAAiBlQ,EAAMmQ,GADjBI,EAAR,EAAQA,yBAA0BC,EAAlC,EAAkCA,iBAAkBE,EAApD,EAAoDA,gBAAiBC,EAArE,EAAqEA,eAAgBC,EAArF,EAAqFA,gBAG/E8pE,EAAwB,IAAXz6E,EAEEsQ,GAClB,IACE,IACExb,GAAA,EACA,KACEvX,EAAE,UAGN,IACE,KAEOksB,YAAeiH,EAAiBN,EAAWD,EAAY,aAG5D,MAKN,KAM0B8iB,EAAYvjB,GAAG,GAE5C,OACE,cAAC,GAAD,CAAY6rD,KAAK,OAAjB,SACE,eAAC,GAAD,WACE,cAAC,KAAD,CAAM3uC,SAAS,OAAO73B,MAAM,aAAamlD,UAAU,OAAnD,SACI38D,EAAE,oBAEN,cAAC,KAAD,CAAMqvC,SAAS,OAAO7uC,MAAM,OAAOgX,MAAM,QAAQmlD,UAAU,OAA3D,SACCv0B,UCnDHykE,GAAavsG,aAAOqsG,GAAPrsG,CAAH,6PAOZ,qBAAGu0B,MAAkBurC,aAAapI,MAOhC+1C,GAAYztG,aAAO0tG,IAAP1tG,CAAH,mEACA,qBAAG6rE,QAAyB,iBAAmB,eAkB/CyhC,GAd0C,SAAC,GAAgC,IAA9BnR,EAA6B,EAA7BA,SAAUwR,EAAmB,EAAnBA,aAC5DjuG,EAAMC,eAAND,EACR,OACE,eAAC,GAAD,CAAYg+E,KAAK,OAAjB,UACGiwB,GACC,cAAC,KAAD,CAAMz2F,MAAM,UAAU43B,MAAI,EAA1B,SACcpvC,EAAXy8F,EAAa,OAAY,aAG9B,cAAC,GAAD,CAAWjlF,MAAM,UAAU20D,QAASswB,QCrC7ByR,GAAkB5tG,KAAOU,IAAV,maAEN,qBAAG6zB,MAAkBG,OAAOoiC,SAM9C,qBAAGviC,MAAkBurC,aAAahN,MAQlC,qBAAGv+B,MAAkBurC,aAAa+tC,MASzBC,GAAe9tG,KAAOU,IAAV,wEAKZqtG,GAAgB/tG,KAAOU,IAAV,4GC4JXstG,GArKoD,SAAC,GAQ7D,IAPL7rF,EAOI,EAPJA,OACAC,EAMI,EANJA,aACAolB,EAKI,EALJA,aACApoB,EAII,EAJJA,SACA4b,EAGI,EAHJA,eACAzK,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEQ9wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAIFm3F,GADc57F,eACIpW,aAAiB6X,aAAwBlV,kBAE3DuvG,EADgBtzF,eACY1e,WAC5BiyG,EAAenyG,aAAiB+X,aAAkB/U,iBAElDovG,EADerzF,eACS7e,WACxBmyG,EAAkBp7F,eAKlBq7F,GAHOJ,EAAcF,EACbI,EAAWD,IAFAE,EAAkBryG,aAAiBqyG,GAAmB,GAK1Ex0F,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUk4B,eAAgB,IAAIl2C,KAAUge,EAASk4B,eAAiB5gC,KAE/EkrF,EAAsBlgG,aAAiB6d,EAAUioB,EAAarmC,UAC9D0gG,EAA4BngG,aAAiB6d,EAASqQ,aAAaokF,GAAQxsE,EAAarmC,UACxF2gG,EAAcviF,EAASsS,GAAG,GACxBsvE,EAAct/F,aAAsB0d,EAAUioB,EAAarmC,UAC3D+/F,EAAmBl/F,aAAa4/F,EAAqB,EAAG,GACxDP,EAA4B,IAAXl/E,EACjB08E,EAAYz8E,IAAiB5E,KAAa6E,QAG/C,EAIIiZ,KAJJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAClCC,EAFF,EAEEA,kBACQrB,EAHV,EAGE0L,KAAQ1L,eAEV,EAAiEkB,aAC/DjV,EACAkV,EACAC,EACAC,EACAnB,GALMoB,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,kBAAmBG,EAA5C,EAA4CA,iBAQ5CyvE,EAAsBrxE,EAAcyB,EAAoB4vE,EACxDE,EAAcvxE,EAAcqB,EAAkBkwE,EAC9CD,EAA4BtxE,EAAc4B,EAAmB0vE,EAE7D,MAA2BpyD,aACzB,cAAC,GAAD,CACEyxD,iBAAkBA,EAClBC,YAAaA,EACb35D,aAAcA,EACd45D,oBAAqBS,EACrB1/E,OAAQA,EACR08E,UAAWA,EACXwC,eAAgBA,KARbU,EAAP,oBAYA,EAA+C1sE,aAC7C31B,EAAE,gEACF,CAAE41B,UAAW,iBAFPE,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,eAKtBu4E,EAAc19E,EAClB,cAAC,KAAD,CAAMwe,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,SACGpqF,EAAE,8BAGL,qCACE,eAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGtiD,EAAap+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,eAKT,OAAK6c,EAYAye,EAYH,eAAC,GAAD,WACE,cAAC,GAAD,UAAeizE,IACf,eAAC,GAAD,WACE,cAAC,IAAD,CAAMpkB,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,SACE,mCACGpM,EACC,qCACE,cAAC7qF,GAAA,EAAD,CAASu/E,WAAW,IAAI1nD,MAAI,EAACC,SAAS,OAAO5tC,SAAU,EAAG1B,MAAOmiG,IAChEoS,EAAQ,GACP,cAAC/8F,GAAA,EAAD,CACE6vD,QAAQ,SACR/3B,SAAS,OACT73B,MAAM,aACN/V,SAAU,EACVkW,OAAO,IACP5X,MAAOoiG,EACPzqF,KAAK,YAKX,qCACE,cAAC,IAAD,CAASF,MAAM,eAAf,eACA,cAAC,KAAD,CAAM63B,SAAS,OAAO73B,MAAM,eAA5B,0BAOPqZ,EACC,eAAC,IAAD,CAAMs5D,KAAK,MAAMt5C,cAAc,SAAS29D,UAAU,aAAax8D,WAAW,aAA1E,UACE,cAAC,GAAD,CAA0BgyD,gBAAc,IACxC,eAAC,IAAD,CAAM/0D,GAAG,MAAMoC,eAAe,gBAAgBW,WAAW,SAAzD,UACGhc,GAAkBD,EACnB,cAAC,KAAD,CAAaE,IAAKH,EAAWsgC,OAAK,EAAlC,SACGp2D,EAAE,qBAEL,cAAC,IAAD,CAAMgyC,WAAW,SAAjB,SACE,eAAC,KAAD,CAAMrC,GAAG,MAAMymB,OAAK,EAApB,UACGxlC,EAAiB,IADpB,eAON,cAAC,IAAD,CAAQo+C,UAAWozB,EAAaxqF,QAASyqF,EAAzC,SACoBriG,EAAjB2hG,EAAmB,UAAe,mBAzDzC,eAAC,GAAD,WACE,cAAC,GAAD,UAAe4M,IACf,cAAC,GAAD,UACE,cAAC,KAAD,CAAU/tG,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAfnD,eAAC,GAAD,WACE,cAAC,GAAD,UAAeg5B,IACf,eAAC,GAAD,WACE,cAAC,IAAD,gBACA,cAAC,IAAD,CAAQv/B,UAAQ,EAAhB,SAAmChvE,EAAjB2hG,EAAmB,UAAe,oBC7FxD8M,GAAoBnuG,KAAOU,IAAV,iDA+OR0tG,GAtO6C,SAAC,GAA8B,IAA5BlsF,EAA2B,EAA3BA,KAAM8Y,EAAqB,EAArBA,eAEjE7Y,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACAgO,EAMEtzB,EANFszB,aACAhjB,EAKEtQ,EALFsQ,WACApQ,EAIEF,EAJFE,aACAhD,EAGE8C,EAHF9C,SACAy5B,EAEE32B,EAFF22B,kBACAtoB,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QAEFmhF,EAAuB/0E,YAAS4e,EAAarjC,QAAUD,aAAWsjC,EAAarjC,SAAW,IAChG,EAAuF24F,GACrFa,EACAv7E,EACAqlB,EAAap+B,QAHQilG,EAAvB,EAAQnR,cAAqDoR,EAA7D,EAA0CvR,kBAM1C,EAA4CM,KAApCC,EAAR,EAAQA,gBAAiB5gF,EAAzB,EAAyBA,eACzB,EACE0gF,GAAgB1gF,GADK6xF,EAAvB,EAAQrR,cAAsDsR,EAA9D,EAA2CzR,kBAGrCG,EAAgB3sE,EAAcg+E,EAAqBF,EACnDtR,EAAoBxsE,EAAci+E,EAAyBF,EAE3DzP,EAAYz8E,IAAiB5E,KAAa6E,QAC1ClD,GAAoB,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUD,WAAY,IAAI/d,KAAUge,EAASD,WAAazI,KACtE4I,GAAwB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUE,eAAgB,IAAIle,KAAUge,EAASE,eAAiB5I,KAClF+3F,GAAyBl+E,GAAejR,EAAcuS,GAAG,GAEzDunB,GAA8B,OAARh6B,QAAQ,IAARA,OAAA,EAAAA,EAAUg6B,qBAAsB,IAAIh4C,KAAUge,EAASg6B,qBAAuB1iC,KAEpG4pF,EAAqB5+F,aAAiB4d,EAAeioB,EAAapmC,UAClEo/F,EAA2B7+F,aAC/B4d,EAAcsQ,aAAaipB,GAC3BtR,EAAapmC,UAGf,EAGIm6B,KAFU5J,EADd,EACEtS,SAAYsS,WACZC,EAFF,EAEEA,kBAGF,EAAiDrC,aAAoBoC,EAAYC,GAAzE7B,EAAR,EAAQA,gBAAiBD,EAAzB,EAAyBA,oBACnB6+E,EAAkBh9E,GAAcA,EAAWG,GAAG,GAC9C88E,EAAoBp+E,GAAem+E,EACnCE,EAAwBltG,aAAiBouB,EAAgBF,aAAaipB,GAAoBtR,EAAapmC,UAEvG+gG,EAAgB3xE,GAAe+sE,GAAmBn+E,EAAU0S,GAAG,KAAOgtE,EAE5E,EAAiCpvD,aAAS,cAAC,GAAD,CAAsBsN,YAAaxV,EAAan+B,UAAnFo3F,EAAP,oBAEA,EAAyB/wD,aACvB,cAAC,GAAD,CACEovD,UAAWA,EACX38E,KAAMA,EACNk3B,oBAAqBA,EACrBP,kBAAmBA,KALhB4nD,EAAP,oBASA,EAA8BhxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAY9qD,EAAqBl3B,KAAMA,KAAxF2sF,EAAP,oBAEA,EAA2Bp/D,aACzB,cAAC,GAAD,CACE2J,oBAAqBA,EACrBylD,UAAWA,EACX38E,KAAMA,EACN22B,kBAAmBA,EACnBimD,iBAAe,KANZ4B,GAAP,oBAUA,GAAgCjxD,aAAS,cAAC,GAAD,CAAiBy0D,WAAYp0E,EAAiB5N,KAAMA,EAAM48E,iBAAe,KAA3GgQ,GAAP,qBAEM3Q,GAAU,WACV5tE,EACFs+E,IAEApO,KAYJ,GAA+CprE,aAC7C31B,EAAE,wEACF,CAAE41B,UAAW,WAFPE,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,QAASC,GAA5B,GAA4BA,eAKtBirE,GAAoBnrD,EAAa3jB,GAAG,IAAMzS,EAASE,cAAc2S,IAAIujB,GAE3E,OAAKj5B,EAeAye,EAeDknE,EAEA,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMnzD,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,mBAGP,cAAC,GAAD,UACE,cAAC,IAAD,CAAQQ,MAAM,OAAOwuE,SAAUquB,EAAmBzlF,QAAS4lF,EAAejwD,QAAQ,YAAlF,SACGvtC,EAAE,iBAQT+uG,GAAyBE,EAEzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAM5/D,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGviD,EAAan+B,OAAQ,OAExB,cAAC,KAAD,CAAM2lC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACiBpqF,EAAd6wB,EAAgB,uBAA4B,eAGjD,eAAC,GAAD,WACE,eAAC,IAAD,CAAMs5D,KAAK,IAAI/sB,GAAG,OAAOvsB,cAAc,SAAS29D,UAAU,aAA1D,UACE,cAACj3F,GAAA,EAAD,CACEu/E,WAAW,IACX1nD,MAAI,EACJC,SAAS,OACT5tC,SAAU,EACV1B,MAAO8wB,EAAcV,EAAsBywE,IAE7C,cAACrpF,GAAA,EAAD,CACE83B,SAAS,OACT+3B,QAAQ,SACR5vD,MAAM,aACN/V,SAAU,EACV1B,MAAO8wB,EAAcq+E,EAAwBrO,EAC7CnpF,KAAK,OACLC,OAAO,SAGX,eAAC,GAAD,WACE,cAAC,KAAD,CAAY41B,QAAQ,YAAY31B,QA9FxB,WACZiZ,EACFu+E,KAEApO,MA0F0DtzD,GAAG,MAAvD,SACE,cAAC,KAAD,CAAWl2B,MAAM,UAAUhX,MAAM,WAElCygG,GACC,sBAAMhrE,IAAKH,GAAX,SACE,cAAC,KAAD,CAAYyX,QAAQ,YAAYyhC,UAAQ,EAAxC,SACE,cAAC,IAAD,CAASx3D,MAAM,eAAehX,MAAM,OAAO20E,OAAO,aAItD,cAAC,KAAD,CACE5nC,QAAQ,YACR31B,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/C9xB,SAAUl8C,EAHZ,SAKE,cAAC,IAAD,CAAStb,MAAM,UAAUhX,MAAM,cAIpCw1B,IAAkBD,SAOzB,eAAC,GAAD,WACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAMsZ,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYy6B,GAAG,OAAOm4C,cAAc,YAArE,UACGpqF,EAAE,SAAU,OAEf,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGviD,EAAan+B,YAGlB,cAAC,GAAD,UACE,cAAC,IAAD,CACElJ,MAAM,OACNoX,QAAS8hC,EAAoBvnB,GAAG,GAAKssE,GAAUqC,EAC/CvzD,QAAQ,YACRyhC,SAAUl8C,EAJZ,SAMG9yB,EAAE,gBAxGP,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMqvC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAAC,KAAD,CAAUQ,MAAO,IAAK20E,OAAO,OAAOI,UAAW,UAtBnD,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,KAAD,CAAMlmC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAay6B,GAAG,OAAOm4C,cAAc,YAAtE,SACGpqF,EAAE,qBAGP,cAAC,GAAD,UACE,cAACg+B,GAAA,EAAD,CAAqBx9B,MAAM,eC9G/B6uG,GAAkBhtD,aAAH,yGASfitD,GAAoBjtD,aAAH,yGASjBktD,GAAoBjvG,KAAOU,IAAV,0QACR,qBAAGy7F,SAEVxY,aADI,2EAEAorB,IAEJprB,aAJI,2EAKAqrB,OASR,qBAAGz6E,MAAkBurC,aAAarI,MAMhCm2C,GAAkB5tG,KAAOU,IAAV,uLAIjB,qBAAG6zB,MAAkBurC,aAAahN,MAwBhCo8C,GAAclvG,aAAOC,IAAPD,CAAH,oKAKb,qBAAGu0B,MAAkBurC,aAAarI,MA6JvB03C,GAvJiC,SAAC,GAA8D,IAAD,EAA3D5yF,EAA2D,EAA3DA,QAAS2F,EAAkD,EAAlDA,KAAM8Y,EAA4C,EAA5CA,eAAgBmhE,EAA4B,EAA5BA,SAAUiT,EAAkB,EAAlBA,YAExFjtF,EASED,EATFC,OACAolB,EAQErlB,EARFqlB,aACAC,EAOEtlB,EAPFslB,aACA4N,EAMElzB,EANFkzB,YAGAI,GAGEtzB,EALFoQ,WAKEpQ,EAJFqQ,SAIErQ,EAHFszB,cACAhzB,EAEEN,EAFFM,gBACA+N,EACErO,EADFqO,YAEM7wB,EAAMC,eAAND,EACF27F,EAAsBp3F,aAAWue,GACjC84E,EAA2B7zF,eACzB4qB,EAAiBwa,eAAjBxa,aACAq6E,EAAqB0C,EAArB1C,KAAMC,EAAeyC,EAAfzC,KAAM0C,EAASD,EAATC,KACdvC,GAAgBJ,GAAQC,IAAoB,IAAXxqF,EAEvC,EACEiQ,GAAiBlQ,EAAMmQ,GAEnBkpE,GAHN,EAAQ9oE,yBAAR,EAAkCC,iBAAlC,EAAoDE,gBAApD,EAAqEC,eAArE,EAAqFC,mBAG1D,UAAC8b,OAAO2N,gBAAR,aAAC,EAAiBigB,aACvCxjD,EAAewuB,EAAatjC,QAAUD,aAAWujC,EAAatjC,SAAW,GAE/E,EAGIo3B,KAFFK,EADF,EACEA,iBACQrL,EAFV,EAEE0L,KAAQ1L,eAGJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAC7DkrE,EAA8B,IAAXr5E,EAazB,EAIIkT,aAAW31B,EAAE,+CAAgD,CAAE0J,OAAQm+B,EAAan+B,SAAW,CACjGksB,UAAW,WAJAmmE,EADb,EACEjmE,UACSkmE,EAFX,EAEEjmE,QACgBkmE,EAHlB,EAGEjmE,eAKIumE,EAAoBv8F,EAAE,wEACtBw8F,EAAkBx8F,EACtB,uGAGF,EAII21B,aAAW9E,EAAc2rE,EAAkBD,EAAmB,CAChE3mE,UAAW,iBAJAg6E,EADb,EACE95E,UACS+5E,EAFX,EAEE95E,QACgB+5E,EAHlB,EAGE95E,eAKI+5E,EAAcj6D,EAAa3jB,GAAG,GAClC,eAAC,IAAD,CAAM8c,GAAG,MAAMoC,eAAe,gBAA9B,UACE,eAAC,KAAD,WAAOrxC,EAAE,uBAAT,OACA,cAAC,KAAD,oBAAUmC,aAAsB2zC,EAAcjO,EAAapmC,SAAU,GAArE,YAA2EomC,EAAan+B,aAExF,KAEEsmG,EACJ,eAAC,IAAD,CAAM3+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,WAAqBjvC,EAAd6wB,EAAgB,MAAW,OAAlC,OACA,cAAC,GAAD,CAAKrO,KAAMA,EAAMkrF,UAAQ,EAAC98E,eAAgBC,EAAcm1E,EAA0B,OAIhFiK,EACJ,eAAC,IAAD,CAAM5+D,eAAe,gBAAgBW,WAAW,SAAS/C,GAAG,MAA5D,UACE,eAAC,KAAD,CAAMD,SAAU,CAAC,OAAQ,QAAzB,UAAmChvC,EAAE,gBAArC,OACA,eAAC,IAAD,CAAMgyC,WAAW,SAAjB,UACG0D,GAAeA,EAAYnjB,IAAI,GAC9B,qCACE,cAAChb,GAAA,EAAD,CAAS83B,SAAS,OAAOtvC,MApDL,WAC5B,GAAI8wB,EACF,OAAO7uB,aAAiBi6B,EAAkB4L,EAAapmC,UAEzD,GAAIq6F,EAAkB,CACpB,IAAMI,EAAgC,IAAIx6F,KAAUg0C,GAAarjB,MAAM4J,GACvE,OAAOj6B,aAAiBk6F,EAA+Br0D,EAAapmC,UAEtE,OAAOO,aAAiB0zC,EAAa7N,EAAapmC,UA4CV06F,GAAyB16F,SAAU,EAAGiW,KAAI,WAAMmwB,EAAan+B,UAC7F,sBAAMusB,IAAK8lE,EAAX,SACE,cAAC,IAAD,CAAUvkF,MAAM,aAAahX,MAAM,OAAOmvC,GAAG,aAIjD,cAAC,KAAD,CAAUnvC,MAAM,OAAO20E,OAAO,SAE/B8mB,GAA6BD,QAKpC,OACE,eAAC,GAAD,CAAmBS,SAAUA,EAA7B,UACE,eAAC,GAAD,WACGsT,GACC/C,GAAQC,IAAS+C,GACjBhD,GAAQC,GAAQ0C,IAASM,EAC3B,cAAC,IAAD,CAAMhhE,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CAAcb,KAAM1I,EAAan+B,YAAaylC,MAAM,EAApD,SACGpvC,EAAE,yBAGN27F,GACC,cAAC,IAAD,CAAM1sD,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,cAAC,KAAD,CACEb,KAAI,UAAK9S,KAAL,oBAAkC7M,EAAc+qE,EAA2BD,GAC/EvsD,MAAM,EAFR,SAIGpvC,EAAE,qBAIR6c,GAAWg/E,GAAqBviF,GAC/B,cAAC,IAAD,CAAM21B,GAAG,MAAMoC,eAAgB,CAAC,WAAY,WAAY,cAAxD,SACE,eAAC,IAAD,CACE9D,QAAQ,OACRvT,EAAE,IACFm7C,OAAO,OACPv9D,QAAS,kBAAMwlC,aAAc9jC,EAAcwuB,EAAap+B,OAAQo+B,EAAarmC,WAJ/E,UAME,cAAC,KAAD,CAAM+V,MAAM,UAAZ,SAAuBxX,EAAE,qBACzB,cAAC,KAAD,CAAc2vC,GAAG,aAItB9e,EAAc,cAAC,KAAD,IAAyB,cAAC,KAAD,IACvCi/E,GAAqBD,EACtB,sBAAM55E,IAAK25E,EAAX,SACE,cAAC,IAAD,CAAUjgE,GAAG,MAAMnvC,MAAM,OAAO20E,OAAO,OAAO39D,MAAM,oBAGxD,eAAC,GAAD,WACG41F,GACC,cAAC,KAAD,CAAM19D,GAAG,MAAMT,GAAG,OAAOz3B,MAAM,aAA/B,SACGqZ,EAAc7wB,EAAE,uBAAL,UAAiCA,EAAE,QAAnC,uBAAyDA,EAAE,SAAS6tE,oBAApE,iBAGhB,cAAC,GAAD,6BAAarrD,GAAb,IAAmB8Y,eAAgBA,KACnC,cAAC,GAAD,CAAO9Y,KAAMA,EAAM8Y,eAAgBA,WC5OrC80E,GAAY9vG,KAAOU,IAAV,uGA2CA8zG,GArC0B,SAAC,GAAuC,IAArCtyF,EAAoC,EAApCA,KAAM3F,EAA8B,EAA9BA,QAASye,EAAqB,EAArBA,eACzD,EAAyCyxE,eAAjCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAM0C,EAApB,EAAoBA,KAAMW,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,KAChC,EAAgC5yG,oBAAS,GAAzC,mBAAO8+F,EAAP,KAAiB+T,EAAjB,KACMC,EAA0B/2C,aAAkB+iC,EAAU,KAOlD7rE,EACNgL,KADFU,KAAQ1L,eAEJo1E,EAA0Bp1E,GAAkBA,EAAiB,IAEnE,OACE,qCACE,eAAC,GAAD,CAAWotD,KAAK,MAAMpmE,QAXH,WACrB44F,GAAY,SAAC5yF,GAAD,OAAWA,MAUrB,UACE,cAAC,GAAD,CAAU4E,KAAMA,IAChB,cAAC,GAAD,CAAcA,KAAMA,EAAM3F,QAASA,EAASye,eAAgBA,IAC5D,cAAC,GAAD,CAAS9Y,KAAMA,EAAMoO,eAAgBo1E,KACnCsK,GAAQC,IAAS,cAAC,GAAD,CAAiB/tF,KAAMA,IACzC+tF,GAAQ,cAAC,GAAD,CAAY/tF,KAAMA,IAC3B,cAAC,GAAD,CAAkBi6E,SAAUA,EAAUwR,aAAc0B,GAAQW,GAAQC,OAErEE,GACC,cAAC,GAAD,CACE5zF,QAASA,EACT2F,KAAMA,EACN8Y,eAAgBA,EAChBmhE,SAAUA,EACViT,YAAa,CAAE1C,OAAMC,OAAM0C,OAAMW,OAAMC,cCtC3CI,GAAcrwG,KAAOU,IAAV,+JACE,qBAAG6zB,MAAkBgoE,MAAM7O,QAExB,qBAAGn5D,MAAkBm5D,KAAK/4D,cAM1C27E,GAAoBtwG,KAAOU,IAAV,4IACJ,qBAAG6zB,MAAkBgoE,MAAM7O,QACxB,qBAAGn5D,MAAkBG,OAAOK,cAK5Cw7E,GAAwBvwG,KAAOU,IAAV,0HAqDZ8vG,GA9C+B,SAAC,GAAuD,IAArDz1E,EAAoD,EAApDA,MAAM05E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQ15E,EAA8B,EAA9BA,eAAgBze,EAAc,EAAdA,QAC7E7c,EAAMC,eAAND,EACF+wG,EAAiB/sG,iBAAuB,MAM9C,OACE,cAAC,GAAD,UACE,eAAC,GAAD,CAAag6E,KAAK,QAAQ/nD,IAAK86E,EAA/B,UACG11E,EAAM5c,KAAI,SAAC+D,GAAD,OACT,cAAC,GAAD,CAEEA,KAAMA,EACN3F,QAASA,EACTye,eAAgBA,GAHX9Y,EAAKqO,YAAc,YAAcrO,EAAKC,WAM9CsyF,EAAOt2F,KAAI,SAAC+D,GAAD,OACV,cAAC,GAAD,CAEEA,KAAMA,EACN3F,QAASA,EACTye,eAAgBA,GAHX9Y,EAAKqO,YAAc,YAAcrO,EAAKC,WAM5CuyF,EAAOv2F,KAAI,SAAC+D,GAAD,OACZ,cAAC,GAAD,CAEEA,KAAMA,EACN3F,QAASA,EACTye,eAAgBA,GAHX9Y,EAAKqO,YAAc,YAAcrO,EAAKC,WAM/C,cAAC,GAAD,UACE,eAAC,IAAD,CAAQ8qB,QAAQ,OAAO31B,QAjCX,WAClBm5F,EAAe3sG,QAAQ4sG,eAAe,CACpCC,SAAU,YA+BN,UACGjxG,EAAE,UACH,cAAC,IAAD,CAAewX,MAAM,uBC5C3B05F,GAAa5wG,aAAOwrE,KAAPxrE,CAAH,2DAIV6wG,GAAe7wG,aAAOoxC,IAAPpxC,CAAH,8VAYhB,qBAAGu0B,MAAkBurC,aAAahN,MAQ9Bg+C,GAAkB9wG,KAAOU,IAAV,iKAMjB,qBAAG6zB,MAAkBurC,aAAahN,MAMhCi+C,GAAe/wG,KAAOU,IAAV,oEACZklF,MA6VS+uB,IAxVQ30G,aAAOoxC,IAAPpxC,CAAH,6DAQQ,WAC1B,IAAMgrE,EAAW7P,eACTz7D,EAAMC,eAAND,EACA6c,EAAYlZ,eAAZkZ,QACR,EAAyDse,GAASte,GAAnD20F,EAAf,EAAQn2E,MAA8BC,EAAtC,EAAsCA,eACtC,EAAoCwnC,cAAgB,EAAO,CAAEG,gBAAiB,wBAA9E,mBAAO7qC,EAAP,KAAmByuE,EAAnB,KACA,EAAwDlpG,mBAR1B,IAQ9B,mBAAO8zG,EAAP,KAA6BC,EAA7B,KACA,EAA0C/zG,oBAAS,GAAnD,mBAAOg0G,EAAP,KAAsBC,EAAtB,KACMC,EAAc7tG,iBAAuB,MAC3C,EAAgC8+D,aAAgB40B,GAAS+O,MAAO,CAAExjC,gBAAiB,sBAAnF,mBAAOmjC,EAAP,KAAiBW,EAAjB,KACA,EAAsCppG,mBAAS,IAA/C,mBAAO4oC,EAAP,KAAoB4hD,EAApB,KACA,EAAoCxqF,mBAAS,OAA7C,mBAAOm0G,EAAP,KACME,GADN,KAC0BhuG,iBAAO,IAC3BkxG,EAAqBlxG,iBAAO,GAC5BmxG,EAAqBnxG,iBAAO,GAClC,EAKI43B,KALJ,IACElc,SAAYqS,EADd,EACcA,qBAAsBC,EADpC,EACoCA,WAC1BpB,EAFV,EAEE0L,KAAQ1L,eACRqB,EAHF,EAGEA,kBACAgK,EAJF,EAIEA,iBAEIg2E,EAAwBjgF,GAAcA,EAAWG,GAAG,GACpD6zE,EAA0Bp1E,GAAkBA,EAAiB,IAG7D43E,EADe5nF,eACY1e,WAO3ByyG,EAHYnM,EAHJxmG,aAAiBmY,aAASxV,iBAItB6jG,EAHJxmG,aAAiBoY,aAASzV,iBAItB6jG,EAHJxmG,aAAiBqY,aAAS1V,iBAMlC02B,EAAQva,mBAAQ,WACpB,IAAMoxF,EAAWV,EAAsBryF,MAAK,SAACi2F,GAAD,OAA4B,MAAjBA,EAAM3yF,UAE7D,MAAM,CADa,6BAAQyvF,GAAR,IAAkBrhF,aAAa,KAClD,mBAA0B2gF,MACzB,CAACA,IAEEn7D,EAAMhb,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,SAAvBD,EAAK0lB,gBACxDmtE,EAAOh6E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,SAAvBD,EAAK0lB,gBACzDotE,EAAOj6E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,SAAvBD,EAAK0lB,gBACzDqtE,EAAWl6E,EAAM7U,QAAO,SAAChE,GAAD,OAA2B,IAAjBA,EAAKC,QAAwC,cAAvBD,EAAK0lB,gBAInE,GAAmCpnB,mBAAQ,kBAAMyxF,KAAUl3E,GAAO,SAAC7Y,GAAD,OAAUA,EAAKsQ,gBAAa,CAACuI,IAA/F,qBAAOm3E,GAAP,MACME,IADN,MACgC5xF,mBAC9B,kBACE0xF,GAAchsF,QAAO,SAAChE,GACpB,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAACH,GAAeP,KAYZW,IAVqB9xF,mBACzB,kBACEy0F,EAAS/uF,QAAO,SAAChE,GACf,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAAC4C,EAAUtD,IAEenxF,mBAC1B,kBACEu1B,EAAK7vB,QAAO,SAAChE,GACX,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAACt8D,EAAK47D,KAEFuD,GAAsB10F,mBAC1B,kBACEu0F,EAAK7uF,QAAO,SAAChE,GACX,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAAC0C,EAAMpD,IAEHwD,GAAsB30F,mBAC1B,kBACEw0F,EAAK9uF,QAAO,SAAChE,GACX,OAAIA,EAAKqO,YACAohF,EAEFzvF,EAAK9C,UAAY,IAAIhe,KAAU8gB,EAAK9C,SAASE,eAAe+yF,cAAc,QAErF,CAAC2C,EAAMrD,IAEHnL,GAA0B4L,GAAwB3rF,OAAS,EAEjE7I,enHxI+B,WAC/B,IAAQrB,EAAYlZ,eAAZkZ,QACAY,EAAgBnF,eAAhBmF,YACFW,EAAWC,eAEjBpgB,qBAAU,WACRmgB,EAASqd,QACR,CAACrd,EAAUX,IAEdxf,qBAAU,WACRmgB,EAASsd,GAAuB,CAAE7e,eACjC,CAACuB,EAAUX,EAAaZ,IAE3B5e,qBAAU,WACRmgB,EAASud,QACR,CAACvd,ImH0HJod,GACAV,KAEA78B,qBAAU,WAmBH0zG,IACsB,IAAIkB,sBAnBT,SAACC,GACrB,YAAgBA,EAAhB,MACUC,gBACRrB,GAAwB,SAACsB,GACvB,OAAIA,GAAyBhB,EAAkB5tG,SAG3C4uG,GAAyBmC,EAAmB/wG,SAG5C4uG,GAAyBkC,EAAmB9wG,QALvC4uG,EAhHa,GAwHfA,OAMsD,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQtB,EAAYztG,SACrCwtG,GAAiB,MAElB,CAACD,IAEJ,IAuDIyB,GAYAsC,GAOAC,GA1EEtC,GAAoB/nC,EAAShL,SAASp+B,SAAS,WAE/C0zE,IADkBtqC,EAAShL,SAASp+B,SAAS,eAC9BopC,EAAShL,SAASp+B,SAAS,QAC1C2zE,GAAgBvqC,EAAShL,SAASp+B,SAAS,OAC3C4zE,GAAgBxqC,EAAShL,SAASp+B,SAAS,OAC3C6zE,GAAezqC,EAAShL,SAASp+B,SAAS,YAW1C0xE,IAVqBtoC,EAAShL,SAASp+B,SAAS,kBAUpC,SAACyxE,GACjB,OAAQ7B,GACN,IAAK,MAEH,OAAOta,KACLmc,GACA,SAACnxF,GAAD,OAAiBA,EAAKuO,IAAMJ,GAAWnO,EAAMwjF,GAAyBj1E,IAAM,IAC5E,QAEJ,IAAK,SACH,OAAOymE,KACLmc,GACA,SAACnxF,GACC,OAAKA,EAAK9C,UAAa8C,EAAKsO,kBAGrBtO,EAAKqO,YACRiB,GACEjV,EACAkV,EACAC,EACAC,EACAzP,EAAKsO,mBACL2B,iBACFjQ,EAAK9C,SAASk4B,cAAcj2C,MAAM6gB,EAAKsO,mBAAmB5uB,WAVrD,IAYX,QAEJ,IAAK,cACH,OAAOs1F,KACLmc,GACA,SAACnxF,GAAD,OAAiBA,EAAKqO,YAAcoL,EAAiB/5B,WAAasgB,EAAKkzB,YAAYxzC,aACnF,QAEJ,QACE,OAAOyxG,KAgCb,GA3BIN,KACFD,GAAch7E,EAAas6E,GAA0BF,IAGnDoD,KACFxC,GAAch7E,EAAaw6E,GAAsBv8D,GAE/C0/D,KACF3C,GAAch7E,EAAaw6E,GAAqB2C,GAI9CM,KACFH,GAAet9E,EAAao9E,GAAuBH,GAEjDU,KACFL,GAAet9E,EAAaw6E,GAAqB2C,GAG/CO,KACFH,GAAev9E,EAAaq9E,GAAuBH,GAEjDS,KACFJ,GAAev9E,EAAaw6E,GAAqB2C,GAI/ChvE,EAAa,CACf,IAAMmtE,GAAiBv8C,aAAS5wB,EAAYhQ,eAC5C68E,GAAcA,GAAY5sF,QAAO,SAAChE,GAAD,OAC/B20C,aAAS30C,EAAKslB,aAAap+B,OAAO6sB,eAAe2L,SAASwxE,OAG9D,GAAIntE,EAAa,CACf,IAAMmtE,GAAiBv8C,aAAS5wB,EAAYhQ,eAC5Cm/E,GAAeA,GAAalvF,QAAO,SAAChE,GAAD,OACjC20C,aAAS30C,EAAKslB,aAAap+B,OAAO6sB,eAAe2L,SAASwxE,OAG9D,GAAIntE,EAAa,CACf,IAAMmtE,GAAiBv8C,aAAS5wB,EAAYhQ,eAC5Co/E,GAAeA,GAAanvF,QAAO,SAAChE,GAAD,OACjC20C,aAAS30C,EAAKslB,aAAap+B,OAAO6sB,eAAe2L,SAASwxE,OAI9DiC,GAAe/B,GAAU+B,IAAc/hE,MAAM,EAAG69D,GAChDiE,GAAe9B,GAAU8B,IAAc9hE,MAAM,EAAG69D,GAChD2B,GAAcQ,GAAUR,IAAax/D,MAAM,EAAG69D,GAC9CO,EAAkB5tG,QAAUgvG,GAAYrsF,OACxCouF,EAAmB/wG,QAAUsxG,GAAa3uF,OAC1CmuF,EAAmB9wG,QAAUuxG,GAAa5uF,OAE1C,IAAM8sF,GACJ,eAAC,GAAD,WACGT,GAAY30F,KAAI,SAAC+D,GAAD,OAEb,cAAC,GAAD,CAA4BA,KAAMA,EAAM3F,QAASA,GAAlC2F,EAAKC,WAKrBizF,GAAaj3F,KAAI,SAAC+D,GAAD,OAEhB,cAAC,GAAD,CAA6BA,KAAMA,EAAM3F,QAASA,GAAlC2F,EAAKC,WAKrBkzF,GAAal3F,KAAI,SAAC+D,GAAD,OAEjB,cAAC,GAAD,CAA6BA,KAAMA,EAAM3F,QAASA,GAAlC2F,EAAKC,cAQvBqxF,GAAc,cAAC,GAAD,CAAYz4E,MAAO+3E,GAAa2B,OAAQW,GAAcV,OAAQW,GAAc94F,QAASA,EAASye,eAAgBA,IAGlI,OACE,qCACE,cAACuwC,GAAA,EAAD,UACE,eAAC,IAAD,CAAMx6B,eAAe,gBAAgBR,cAAe,CAAC,SAAU,KAAM,KAAM,OAA3E,UACE,eAAC,IAAD,CAAMs5C,KAAK,IAAIt5C,cAAc,SAASnD,GAAI,CAAC,MAAO,GAAlD,UACE,cAAC,IAAD,CAASuE,GAAG,KAAKX,MAAM,MAAM95B,MAAM,YAAYy3B,GAAG,OAAlD,SACGjvC,EAAE,eAEL,cAAC,IAAD,CAASsxC,MAAM,KAAK95B,MAAM,OAA1B,SACGxX,EAAE,wDAEL,cAAC,IAAD,CAASsxC,MAAM,KAAK95B,MAAM,OAA1B,SACGxX,EAAE,yBAEL,eAAC,IAAD,CAAM0vC,GAAG,MAAT,UACA,cAACn4B,GAAA,EAAD,CAASC,MAAM,UAAUG,OAAO,KAAK03B,SAAS,OAAOD,MAAI,EAACrvC,MAAO40G,EAAMlzG,SAAU,IACjF,cAAC,GAAD,OAEA,cAAC,KAAD,CAAM4tC,SAAS,OAAOD,MAAI,EAAC53B,MAAM,YAAYm4B,GAAG,MAAhD,SACG3vC,EAAE,gCAGP,eAAC,IAAD,CAAMmqF,KAAK,IAAIhV,OAAO,cAAc9jC,eAAe,SAASW,WAAW,SAAStC,GAAI,CAAC,OAAQ,KAAM,KAAnG,UACE,cAAC,GAAD,IACA,cAAC,GAAD,YAIN,eAACoxB,GAAA,EAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,CACE1oC,WAAYA,EACZyuE,cAAeA,EACfC,wBAAyBA,GACzBV,SAAUA,EACVW,YAAaA,IAEf,cAAC,GAAD,UAEE,eAAC,GAAD,CAAc1yE,MAAO,CAAE03D,WAAY,IAAnC,UACE,cAAC,KAAD,CAAM18C,SAAS,OAAOD,MAAI,EAAC53B,MAAM,aAAa4yE,cAAc,YAA5D,SACGpqF,EAAE,YAEL,cAACisE,GAAA,EAAD,CAAap8B,SA7KO,SAACs1B,GAC/BgjB,EAAehjB,EAAME,OAAOtlE,QA4K8BmlE,YAAY,yBAKjEmuC,IACC,cAAC,KAAD,CAAMhkE,SAAS,OAAO73B,MAAM,UAAUwqF,GAAG,OAAzC,SACGhiG,EAAE,iFAGN6c,IAAYye,GAAkBlD,GAC7B,cAAC,IAAD,CAAMiZ,eAAe,SAASpC,GAAG,MAAjC,SACE,cAAC88B,GAAA,EAAD,MAGHq6B,IAAa1O,GAAS8O,KAAOqN,GAAaC,GAC3C,qBAAK79E,IAAK47E,Y,sCC5ZV//F,GAAqBlN,KAArBkN,OAgBOkkG,GAL6B,CAC1CjgG,SAZ2BnR,KAAbmR,SAadjE,W,8CCNIq0D,GAAa7lE,KAAOU,IAAV,yLAKM,qBAAG6zB,MAAkBG,OAAOG,iBAK5C8gF,GAAe31G,KAAOU,IAAV,iPAKI,gBAAG2c,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOC,cACtD,qBAAGtX,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGkX,MAAkBG,OAAOG,iBAG5C+gF,GAAiB51G,KAAOU,IAAV,6DAKdgkE,GAAQ1kE,KAAO82D,MAAV,6kBAMW,qBAAGviC,MAAkBG,OAAOG,iBACtB,qBAAGxX,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOmb,WAMjE,qBAAGtb,MAAkBG,OAAOmhF,gBAe5B,qBAAGthF,MAAkBG,OAAOmhF,gBAI1B,SAASC,GAAT,GAUX,IATF/zF,EASC,EATDA,GACAtiB,EAQC,EARDA,MACA8vC,EAOC,EAPDA,SAQQhsC,EAAYH,cAAZG,QAEA7D,EAAMC,eAAND,EAER,EAAmCorC,aAAOrrC,GAAlCyE,EAAR,EAAQA,QAAS8iB,EAAjB,EAAiBA,QAASkP,EAA1B,EAA0BA,KAEpBuyD,EAAc/pF,uBAClB,SAACmmE,GACC,IACMkxC,EADQlxC,EAAME,OAAOtlE,MACCH,QAAQ,OAAQ,IAC5CiwC,EAASwmE,KAEX,CAACxmE,IAGGlyB,EAAQ+I,QAAQ3mB,EAAMgnB,OAAS,IAAMO,IAAY9iB,GAEvD,OACE,cAAC2hE,GAAD,CAAY9jD,GAAIA,EAAhB,SACE,cAAC4zF,GAAD,CAAct4F,MAAOA,EAArB,SACE,cAACu4F,GAAD,UACE,eAAC,KAAD,CAAYj1G,IAAI,KAAhB,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAOjB,EAAE,eACRwE,GAAWX,GACV,eAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,aAAc,OAACsK,QAAD,IAACA,IAAQhyB,EAAS,UAAWX,GAAtE,cACI7D,EAAE,mBADN,UAKJ,cAACglE,GAAD,CACEsC,UAAU,0BACVn7C,KAAK,OACLo5C,aAAa,MACbC,YAAY,MACZ8wC,eAAe,MACf1wC,WAAW,QACXV,YAAallE,EAAE,8BACf2d,MAAOA,EACP8nD,QAAQ,wBACR51B,SAAUk5C,EACVhpF,MAAOA,a,uFCpHR+zB,GAAUxzB,KAAOU,IAAV,wEAKPu1G,GAAej2G,KAAOU,IAAV,yDAGrB,qBAAGw1G,UAECvyB,aADK,iIAOL,QAGKwyB,GAAYn2G,aAAO4lF,KAAP5lF,CAAH,8CACX,gBAAGu0B,EAAH,EAAGA,MAAO6hF,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd7hF,EAAMG,OAAOqb,QACA,IAAbqmE,EACA7hF,EAAMG,OAAO2hF,QACA,IAAbD,EACA7hF,EAAMG,OAAOU,KACbb,EAAMG,OAAOlN,WAGR8uF,GAAuBt2G,KAAOu2G,OAAV,qcAGX,qBAAGhiF,MAAkBG,OAAOC,cAQvC,qBAAGJ,MAAkBG,OAAOU,QAOf,qBAAGb,MAAkBG,OAAOO,YAG5B,qBAAGV,MAAkBG,OAAOO,YAKvCuhF,GAAgBx2G,aAAO4lF,MAAMjgB,MAAM,CAAE2gB,UAAU,GAA/BtmF,CAAH,gDAIpBy2G,GAAyBz2G,KAAOU,IAAV,gUACN,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAQX,qBAAGxb,MAAkBG,OAAOqb,WASjC2mE,GAAsC12G,KAAOU,IAAV,mNACnB,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAUf,SAAS4mE,GAAT,GAA0D,IAA7Bt5F,EAA4B,EAA5BA,MAClC,OACE,eAACo5F,GAAD,WACE,cAACC,GAAD,UACE,cAAC,IAAD,CAAWx2G,MAAM,WAEnB,4BAAImd,OAKH,I,GAAMu5F,GAAwB52G,aAAOuI,KAAPvI,CAAH,yHACZ,gBAAGu0B,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAO2hF,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3C97D,EAA0C,EAA1CA,YAC7C,OACE,cAACo7D,GAAD,CAAWpnE,SAAS,OAAOqnE,SAAU16D,aAAgBX,GAArD,SACGA,EAAeA,EAAYzR,SAAShb,MAAY,SAAjC,UAA+CysB,EAAYh5C,QAAQ,GAAnE,KAA4E,MCKlG,IAAM+0G,GAA2B92G,aAAOuI,KAAPvI,CAAH,iJAGX,qBAAGu0B,MAAkBgoE,MAAMwa,WACxB,qBAAGxiF,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGnC,SAASqiF,GAAT,GAYX,IAAD,QAXDzmG,EAWC,EAXDA,MACA0mG,EAUC,EAVDA,UACA5sE,EASC,EATDA,gBACA6sE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwC95G,oBAAkB,GAA1D,mBAAO+5G,EAAP,KAAqBC,EAArB,KACM/tD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAACA,EAAiB95B,IAEpB,EAAiDiQ,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA3FyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBy7D,EAAW16D,aAAgBV,GAEjC,OACE,qCACE,eAAC87D,GAAD,WACE,eAAC,KAAD,CAAY32G,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM4uC,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACThb,MAAO,CACLgd,eAAgB,SAChBW,WAAY,SACZo1B,QAAS,OACTzK,UAAW,QACXi7C,YAAa,QAPjB,UAUG37D,aAAqBprC,EAAO6mG,GAC7B,cAACd,GAAD,CAAsBh/F,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,iBAK3B,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM6uC,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,KAAUC,YAAc,mBAAqB,iBAEpE,cAACriF,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,eAAC,KAAD,WACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,KAAUC,YAA9B,oBACGluD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,UADxD,QAC8D,IAD9D,oBAEGuN,EAAwBzoD,KAAMq/B,cAFjC,aAEG,EAAsC6b,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMhN,SAAS,OAAO08C,WAAW,MAAjC,SACGl7E,EAAMktD,YAAc85C,KAAUC,YAC3BjnG,EAAMyrC,aAAaruB,SAASvkB,OAC5BmH,EAAM4qC,YAAYxtB,SAASvkB,eAIrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAf,0BACA,cAAC5Z,GAAA,EAAD,CAAgBC,KAAK,4EAA4Eia,GAAG,WAEtG,cAACwnE,GAAD,CAAsB97D,YAAaC,OAErC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAAC5Z,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACE6jC,QAASmpE,EAAW,EAAI,SAAW,UACnC9+F,QAAS2/F,EACTvoC,SAAUyoC,EACV/nE,GAAG,OACHrtB,GAAG,uBACH7hB,MAAM,OANR,SAQGk2G,EAAW,EAAI,cAAgB,iBAGjCc,EAAmB,cAACP,GAAD,CAAmBt5F,MAAO65F,IAAuB,W,cCvH9D,SAASO,GAAT,GAYX,IAAD,IAXDlnG,EAWC,EAXDA,MACA85B,EAUC,EAVDA,gBACA/J,EASC,EATDA,UACAo3E,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMruD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAAC95B,EAAO85B,IAEF2Q,EAA0Bx6B,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA5EyqC,sBACF48D,EAAsBl8D,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAYr6C,IAAI,KAAhB,UACE,eAAC,KAAD,CAAYR,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAM4qC,YAAYxtB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAACwiF,GAAD,CACEznE,SAAS,OACT73B,MAAOwgG,GAAqBnnG,EAAMktD,YAAc85C,KAAUM,aAAe,UAAY,OAFvF,SAIGtnG,EAAM4qC,YAAYY,cAAc,QAGrC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAM4qC,YAAYxtB,SAASvkB,cAIlC,cAAC,KAAD,UACE,cAAC,IAAD,CAAelJ,MAAM,OAAOmvC,GAAG,UAEjC,eAAC,KAAD,CAAYlvC,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAMyrC,aAAaruB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAACwiF,GAAD,CACEznE,SAAS,OACT73B,MACE0gG,EAAsB,EAClB,UACAF,GAAqBnnG,EAAMktD,YAAc85C,KAAUC,YACnD,UACA,OAPR,SAUGjnG,EAAMyrC,aAAaD,cAAc,QAGtC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAMyrC,aAAaruB,SAASvkB,cAIlCsuG,EACC,cAACd,GAAD,CAAuBx2G,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAWysC,GAAG,QACd,cAAC,KAAD,CAAM0B,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQx3B,QAASqgG,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAYv3G,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACGkQ,EAAMktD,YAAc85C,KAAUC,YAC7B,eAAC,KAAD,CAAM1hD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,4DAEE,wCACGopD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,GADxD,IAC6DxrC,EAAMyrC,aAAaruB,SAASvkB,UAExF,sCAGH,eAAC,KAAD,CAAM0sD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,uDAEE,wCACGopD,EAAwBzoD,KAAMq/B,cADjC,aACG,EAAsC6b,cAAc,GADvD,IAC4DxrC,EAAM4qC,YAAYxtB,SAASvkB,UAEtF,wCAIQ,OAAdk3B,EACC,cAAC,KAAD,CAAYlgC,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAM6W,MAAM,aAAZ,mCACyB,IACvB,mBAAGs3B,MAAOlO,EAAV,SAAsB3U,aAAU2U,GAAavU,aAAeuU,GAAaA,SAG3E,QCzEV,IA4Eew3E,GA5EgE,SAAC,GAYzE,IAAD,oBAXJvnG,EAWI,EAXJA,MACAwnG,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAttE,EAQI,EARJA,gBACA4sE,EAOI,EAPJA,UACAppE,EAMI,EANJA,UACAmvB,EAKI,EALJA,gBACA18B,EAII,EAJJA,UACA42E,EAGI,EAHJA,iBACAj6C,EAEI,EAFJA,cACAoV,EACI,EADJA,OAEMqlC,EAAoBl3F,mBACxB,kBAAM4F,QAAQ7V,GAASwnG,IApCsBx6C,EAoC2Bw6C,GApC1Cz6C,EAoCmC/sD,GAlC1DktD,YAAcF,EAAOE,YAC3Bp3B,aAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D2vC,EAAOniB,YAAYuiB,QAAQH,EAAOpiB,eAClC9U,aAAei3B,EAAOthB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,YACjE2vC,EAAOthB,aAAa0hB,QAAQH,EAAOvhB,gBANxC,IAAkCshB,EAAeC,IAqC7C,CAACw6C,EAAexnG,IAGV7Q,EAAMC,eAAND,EAEFi0E,EAAcj1E,uBAAY,WAC9B,OAAO6R,EACL,cAACknG,GAAD,CACElnG,MAAOA,EACP85B,gBAAiBA,EACjB/J,UAAWA,EACXo3E,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACttE,EAAiBstE,EAAiBr3E,EAAWo3E,EAAmBnnG,IAE9DsjE,EAAcn1E,uBAAY,WAC9B,OAAO6R,EACL,cAACymG,GAAD,CACEC,UAAWA,EACX1mG,MAAOA,EACP4mG,gBAAiBO,EACjBR,iBAAkBA,EAClB7sE,gBAAiBA,IAEjB,OACH,CAACA,EAAiB4sE,EAAWS,EAAmBR,EAAkB3mG,IAG/D6rD,EAAc18D,EAAE,uDAAwD,CAC5Eo0E,QAAO,iBAAEvjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDg4B,QAAO,iBAAExjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,iBAAE,EAAoBxtB,gBAAtB,aAAE,EAA8BvkB,cAAhC,QAA0C,GACjD4qE,QAAO,iBAAEzjE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClDk4B,QAAO,iBAAE1jE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,iBAAE,EAAqBruB,gBAAvB,aAAE,EAA+BvkB,cAAjC,QAA2C,KAG9C4uG,EAAsBt5G,uBAC1B,kBACEw4G,EACE,cAAC,KAAD,CAAyBrpE,UAAWA,EAAWorB,QAASi+C,IAExD,cAAC,KAAD,CAA0Bt6C,WAAY+W,EAAahX,cAAekX,MAEtE,CAAChmC,EAAWgmC,EAAaF,EAAaujC,IAGxC,OACE,cAAC,KAAD,CACE1oE,MAAO9uC,EAAE,gBACTmuC,UAAWA,EACXmvB,gBAAiBA,EACjBC,cAAeA,EACf79B,KAAMizC,EACNnV,QAAS86C,EACT57C,YAAaA,EACbG,cAAa,OAAEhsD,QAAF,IAAEA,OAAF,EAAEA,EAAOyrC,aAAaruB,Y,UCvFzC,SAASsqF,GAAapzF,GACpB,OAAa,OAANA,QAAoB3nB,IAAN2nB,EAWRqzF,OAJf,SAA0Bz4G,GACxB,OAxBF,SACEA,EACA04G,GAEA,MAAwB96G,mBAA+B86G,GAAYA,EAAS14G,GAASA,OAAQvC,GAA7F,mBAAOk7G,EAAP,KAAaC,EAAb,KAQA,OAPA16G,qBAAU,WACR06G,GAAQ,SAAC/6F,GAEP,OAD2B66F,GAAWA,EAAS14G,GACzBA,EACf6d,OAER,CAAC66F,EAAU14G,IACP24G,EAYAE,CAAQ74G,EAAOw4G,K,mBC1BT59E,mBAAK,YAAiD,IAA5B9pB,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMyoE,SAAS,OAAO94E,MAAM,OAAO6wC,eAAe,WAAWW,WAAW,SAAxE,SACGnhC,EAAMqqC,MAAMyN,KAAKlqC,KAAI,SAACsB,EAAO6W,EAAG+xB,GAC/B,IAAMkwD,EAAsBjiF,IAAM+xB,EAAK5hC,OAAS,EAC1CkH,EAAW8a,aAAehpB,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMiyB,WAAW,MAAjB,SACE,cAAC,KAAD,CAAM3C,SAAS,OAAOM,GAAG,WAAWjC,GAAG,WAAvC,SACGzf,EAASvkB,YAGZmvG,GAAc,cAAC,IAAD,CAAkBr4G,MAAM,WAN3Bo2B,WCDzB,SAASkiF,GAAT,GAA8F,IAAD,QAArEjoG,EAAqE,EAArEA,MAAO85B,EAA8D,EAA9DA,gBAC7B,EAAiDqQ,aAA2BnqC,GAApEyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBkO,EAAYt4C,EAAMktD,YAAc85C,KAAUC,YAC1CluD,EAA0Bhf,aAA+B/5B,EAAO85B,GAEtE,OACE,eAAC,KAAD,CAAYtW,MAAO,CAAE1zB,QAAS,UAA9B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM0uC,SAAS,OAAO73B,MAAM,aAA5B,SACG2xC,EAAY,mBAAqB,iBAEpC,cAAC1zB,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,cAAC,KAAD,UACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG8Z,EAAS,8BACHS,EAAwBzoD,KAAMw/B,eAD3B,aACH,EAAuC0b,cAAc,GADlD,YACwDxrC,EAAMyrC,aAAaruB,SAASvkB,eADpF,QAEN,IAFM,8BAGHkgD,EAAwBzoD,KAAMq/B,cAH3B,aAGH,EAAsC6b,cAAc,GAHjD,YAGuDxrC,EAAM4qC,YAAYxtB,SAASvkB,eAHlF,QAG8F,WAI9G,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,0BAGA,cAACie,GAAA,EAAD,CACEC,KAAK,iFACLia,GAAG,WAGP,cAACwnE,GAAD,CAAsB97D,YAAaC,OAGrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAO73B,MAAM,aAA5B,oCAGA,cAACie,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAW/F,SAASqvG,GAAT,GAAmE,IAApCloG,EAAmC,EAAnCA,MACpC,EAA0BinB,eAAnB6S,EAAP,oBAEMquE,EAAYtyF,QAAQ7V,GAASA,EAAMqqC,MAAMyN,KAAK5hC,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY9lB,IAAI,MAAhB,SACG4P,GACC,qCACE,cAACioG,GAAD,CAAcjoG,MAAOA,EAAO85B,gBAAiBA,IAC5CquE,GACC,mCACE,eAAC,KAAD,CAAY3kF,MAAO,CAAE1zB,QAAS,UAA9B,UACE,uBAAM0zB,MAAO,CAAE+yC,QAAS,OAAQp1B,WAAY,UAA5C,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO73B,MAAM,aAA5B,mBAGA,cAACie,GAAA,EAAD,CACEC,KAAK,0EACLia,GAAG,WAGP,cAAC,GAAD,CAAW9+B,MAAOA,c,oBChG5BooG,GAAwB34G,KAAOU,IAAV,0PACX,qBAAGivC,KAAmB,OAAS,KAMzB,qBAAGpb,MAAkBG,OAAOghC,oBAEnC,qBAAG/lB,KAAmB,iBAAmB,uBAIzC,SAASipE,GAAT,GAAoF,IAAD,EAA5CroG,EAA4C,EAA5CA,MAAU4xC,EAAkC,mBAC1F02D,EAAYX,GAAc3nG,GAEhC,OACE,cAACooG,GAAD,CAAuBhpE,KAAMvpB,QAAQ7V,GAArC,SACE,cAACkoG,GAAD,6BAAyBt2D,GAAzB,IAA+B5xC,MAAK,iBAAEA,QAAF,IAAEA,IAASsoG,SAAX,aAAwB37G,OCZnD,SAAS47G,GAAT,GAAgF,IAAD,UAAzDhpC,EAAyD,EAAzDA,MAAOsnC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAGtnC,QAAH,IAAGA,OAAH,EAAGA,EAAO/zB,cAAc,GAAxB,OAA6B+zB,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOh0B,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFpM,EAAOvpB,SAAa,OAAL0pD,QAAK,IAALA,OAAA,EAAAA,EAAOkpC,gBAAP,OAAuBlpC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOmpC,gBAC7C7yC,EAAQgxC,EAAY,iBACnBtnC,QADmB,IACnBA,GADmB,UACnBA,EAAOmpC,qBADY,aACnB,EAAsB7vG,OADH,uBACiB0mE,QADjB,IACiBA,GADjB,UACiBA,EAAOkpC,oBADxB,aACiB,EAAqB5vG,QADtC,iBAEnB0mE,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOkpC,oBAFY,aAEnB,EAAqB5vG,OAFF,uBAEgB0mE,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOmpC,qBAFvB,aAEgB,EAAsB7vG,QAEhE,OACE,cAAC,KAAD,CAAM2qB,MAAO,CAAEgd,eAAgB,SAAUW,WAAY,SAAUo1B,QAAS,QAAxE,SACGn3B,EACC,4CACGopE,QADH,IACGA,IAAkB,IADrB,IAC2B3yC,EACzB,cAACkwC,GAAD,CAAsBh/F,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,cAIzB,M,0BCFOg5G,GAjBkC,SAAC,GAAqC,IAAnC50G,EAAkC,EAAlCA,OAAQupC,EAA0B,EAA1BA,UAAWsrE,EAAe,EAAfA,SACrE,OACE,cAAC,KAAD,CACE3qE,MAAM,eACNX,UAAW,WACLA,GACFA,IAEFsrE,KAEFplF,MAAO,CAAE2a,SAAU,SARrB,SAUE,cAAC,KAAD,CAAapqC,OAAQA,EAAQ6pE,qBAAsBtgC,O,wBCjBnDurE,GAAWp5G,aAAOQ,KAAPR,CAAH,8CAIRq5G,GAASr5G,KAAOU,IAAV,2PAGU,gBAAG6zB,EAAH,EAAGA,MAAOsc,EAAV,EAAUA,UAAV,SAAqB69B,SAC5Bn6C,EAAMG,OAAO2nE,mBAAqBxrD,EAAYtc,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAU3FypE,GAAYt5G,KAAOU,IAAV,sGAMT64G,GAAYv5G,KAAOU,IAAV,0KAKT,gBAAG6zB,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SACZn6C,EAAMG,OAAO2nE,mBAAqBmd,EAAgBjlF,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAEnG,gBAAGtb,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SAEnBn6C,EAAMG,OAAO2nE,mBACbmd,EACAjlF,EAAMG,OAAOmb,QACbtb,EAAMG,OAAO2nE,sBAqBV,SAASod,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDhrC,gBAAmD,SAA9BvsB,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAY/hD,QAAQ,UAAa+hD,GAAjC,aACE,eAACi3D,GAAD,WACGM,EAAMv7F,KAAI,SAACgiF,EAAM7pE,GAChB,OAEE,cADA,CACCgjF,GAAD,WACE,cAACD,GAAD,CAAQxoE,UAAWsvD,EAAMzxB,SAAUA,IAAcgrC,EAAMpjF,EAAI,IAAY,IAANA,EAAjE,SACG6pE,EAAO,SAAM7pE,EAAI,IAEpB,cAACijF,GAAD,CAAWC,cAAerZ,EAAMzxB,SAAUA,MAJ5Bp4C,MAQpB,cAAC+iF,GAAD,CAAQ3qC,SAAUA,IAAagrC,EAAMA,EAAMjzF,OAAS,GAApD,SAAyDizF,EAAMjzF,OAAS,U,IClEpEkzF,G,4DA6BZ,SAASC,GACPrpG,GAGa,IAFb85B,EAEY,uDAFclc,KAC1B0rF,EACY,uCACZ,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsCwnC,aAAO+uE,GAA5BC,EAAjB,EAAQ51G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EACxDzhF,EAAWi9B,eAEjB,OAAO90C,mBAAQ,WACb,IAAKjQ,IAAU+vB,IAAch9B,IAAYiZ,IAAYhZ,IAAY80B,EAAU,MAAO,GAElF,IAAMnf,EAA4Bwd,aAAmBnzB,EAASD,EAASiZ,GACvE,IAAKrD,EACH,MAAO,GAGT,IAAM6gG,EAAc,GAsBpB,OApBAA,EAAYl4E,KACVm4E,KAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,KAAQC,KAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAId2O,EAAMktD,YAAc85C,KAAUC,aAChCuC,EAAYl4E,KACVm4E,KAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,KAAQC,KAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAKbm4G,EAAY57F,KAAI,SAACg8F,GAAD,MAAiB,CAAEA,aAAYjhG,iBACrD,CAACqD,EAAS8tB,EAAiB9mC,EAAS80B,EAAU/0B,EAASg9B,EAAW/vB,K,SAvE3DopG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCJAS,G,wCAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,0DCK7BE,GAfS,WACtB,IAAQ76G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMivC,GAAG,OAAT,oBAAmBjvC,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJF86G,GANO,WACpB,IAAQ96G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BH+6G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjDh7G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAOs9G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAM7pE,eAAe,gBAArB,UACE,eAAC,IAAD,CAAMW,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASqrE,EACTprE,SAAU,kBAAMqrE,GAAgBD,IAChC3pE,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,qBAIP,cAAC,IAAD,CAAQgvE,UAAWisC,EAAarjG,QAASojG,EAAzC,SACGh7G,EAAE,oBCjBPktF,GAAuB5sF,aAAO6sF,KAAP7sF,CAAH,oDAIpB66G,GAAmB76G,aAAO86G,KAAP96G,CAAH,2FAgEP+6G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAcntE,EAAgB,EAAhBA,UACjEnuC,EAAMC,eAAND,EACA60B,EAAUH,eAAVG,MArBR52B,qBAAU,WACR,IAAMs9G,EAAsB,SAAC9uC,GAG3B,OAFAA,EAAEuY,kBACFvY,EAAE+uC,kBACK,GAOT,OAJArtC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGrtC,iBAAiB,QAASktC,GAAqB,MAG7C,WACLptC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGptC,oBAAoB,QAASitC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBp3G,aAAWq3G,GAAwB7lG,SAASvR,SAAW,CACtDkF,OAAQkyG,GAAwB7lG,SAASrM,OACzCurE,UAAW,cAAC,GAAD,MAHK,eAKjB1wE,aAAWq3G,GAAwB9pG,OAAOtN,SAAW,CACpDkF,OAAQkyG,GAAwB9pG,OAAOpI,OACvCurE,UAAW,cAAC,GAAD,MAPK,GAWgBqmC,EAAa92G,SAEjD,OACE,eAAC0oF,GAAD,CAAsB5X,SAAS,QAA/B,UACE,cAAC,KAAD,CAAargD,WAAYJ,EAAMG,OAAOC,WAAtC,SACE,cAAC,IAAD,CAAS+E,EAAE,YAAX,SAAwBh6B,EAAE,8BAA+B,CAAE0J,OAAQiyG,EAAajyG,aAElF,eAAC,KAAD,CAAWswB,EAAE,OAAb,UACE,cAACmhF,GAAD,CAAkB5tE,QAAQ,UAAU0B,GAAG,OAAvC,SACE,cAAC,IAAD,UAAM0sE,EAAa1mC,cAErB,cAAC,GAAD,CAAiB+lC,oBAAqB7sE,WC5BxC0tE,GAAQv7G,aAAO4lF,KAAP5lF,CAAH,wFAGA,qBAAGu0B,MAAkBG,OAAOk5D,aAEjC4tB,GAAex7G,KAAOU,IAAV,yGAGhB,qBAAG6zB,MAAkBurC,aAAapI,MAKlB13D,KAAO8qE,IAAV,uDAIA,SAAS2wC,KAAW,IAAD,sBAC1BC,EAAkBzxD,eAEhBvqD,EAAMC,eAAND,EACFgxE,EAAUC,eAIhB,GAHiBxV,eAGmC,CAClD/zB,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBl7E,iBAC7B4G,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBj7E,oBAFxBk7E,EAAP,KAA4BC,EAA5B,KAIMC,EAA2Br7F,mBAC/B,8CAAM,CAACm7F,EAAqBC,UAA5B,aAAM,EAA6C11F,QAAO,SAACC,GAAD,OAAmBA,aAAa1d,eAA1F,QAAoG,KACpG,CAACkzG,EAAqBC,IAIlBluF,EAAgB2L,eAChByiF,EACJD,GACAA,EAAgB31F,QAAO,SAACzG,GACtB,QAASA,EAAMvb,WAAWwpB,MAGtBnR,EAAYnZ,cAAZmZ,QAGR,EAAuB0a,eAAhB8kF,EAAP,oBAGA,EAA0BvkF,eAAnB6S,EAAP,oBAGA,EAAoDsd,eAA5C1nB,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYG,EAAtC,EAAsCA,UACtC,EAA4FioB,eAApFY,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc3E,EAAjD,EAAiDA,WAAwB63D,EAAzE,EAA6DxzD,WAE7D,EL/Ea,SACbC,EACAC,EACAvoB,GAEA,MAA6B/8B,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACX0/F,EAAelyF,eACfpoB,EAAU6iD,aAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWurD,GAEnDtN,EAAc36B,mBAAQ,kBAAMunC,aAAe5nB,EAAYsoB,KAAgB,CAACA,EAAetoB,IACvFjB,EAAiBwK,eAEvB,OAAOlpB,mBAAQ,WACb,IAAKy7F,IAAiB14G,IAAYklD,IAAkBC,EAAgB,OAAO2xD,GAE3E,IAAM6B,EAAoB/gE,GAAex5C,IAAYA,EAAQ2nC,SAAS6R,GAEtE,OAAIsN,IAAkB76B,MAASyY,aAAerc,KAAKzmB,GAAUmlD,GACpD,CACL4xD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAap2D,QAAQ,CAAEpmD,MAAM,KAAD,OAAO07C,EAAYpuB,IAAIxtB,SAAS,OAFxF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,QAAD,OAAU6b,EAAYY,cAAc,GAApC,kBAHvC,gDAKI3+B,QAAQC,MAAM,oBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,4BAG5CmpC,aAAerc,KAAKzmB,GAAUklD,IAAkBC,IAAmB96B,KAC9D,CACL0sF,SAAUF,GAASkC,OACnBF,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAaj2D,SAAb,YAA2B7K,EAAYpuB,IAAIxtB,SAAS,MAFhF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,UAAD,OAAY6b,EAAYY,cAAc,GAAtC,kBAHvC,gDAKI3+B,QAAQC,MAAM,qBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,6BAGzCm9G,KACN,CAAC4B,EAAc14G,EAASklD,EAAeC,EAAgBvN,EAAax5C,EAASu9B,IK+B5Eq9E,CAAgBp4D,EAAWtjD,KAAMq/B,OAAQikB,EAAWtjD,KAAMw/B,QAASF,GAHrEm6E,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGEj0D,WAEIk0D,EAAoBpC,IAAaF,GAASC,eAC1C9pG,EAAQmsG,OAAWx/G,EAAYisD,EAE/B4mB,EAAgB2sC,GAAQ,oBAEvB77G,KAAMq/B,MAAQ4oB,GAFS,eAGvBjoD,KAAMw/B,OAASyoB,GAHQ,wBAMvBjoD,KAAMq/B,MAAQD,IAAqBp/B,KAAMq/B,MAAQ4oB,EAAnC,OAAkDv4C,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4qC,aANhD,eAOvBt6C,KAAMw/B,OAASJ,IAAqBp/B,KAAMw/B,OAASyoB,EAApC,OAAmDv4C,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOyrC,cAPlD,GAU9B,EAAgFzN,eAAxEsZ,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,oBAAqBE,EAA7C,EAA6CA,YAAaxZ,GAA1D,EAA0DA,kBACpD6jC,IAAW6pC,EACXnrC,GAAwB5wC,IAAqBp/B,KAAMq/B,MAAQr/B,KAAMw/B,OAASx/B,KAAMq/B,MAEhFy8E,GAAkBj+G,uBACtB,SAACe,GACCqoD,EAAYjnD,KAAMq/B,MAAOzgC,KAE3B,CAACqoD,IAEG80D,GAAmBl+G,uBACvB,SAACe,GACCqoD,EAAYjnD,KAAMw/B,OAAQ5gC,KAE5B,CAACqoD,IAIH,GAAoFzqD,mBAKjF,CACDw/G,oBAAgB3/G,EAChB+/D,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IATV,8BAAS2/G,GAAT,GAASA,eAAgB3F,GAAzB,GAAyBA,iBAAkBj6C,GAA3C,GAA2CA,cAAeoV,GAA1D,GAA0DA,OAAUyqC,GAApE,MAYMvqC,IAAgB,oBACnBtyC,EAAmBE,GADA,eAEnB0wC,GAAiB6rC,EAAQ,oBACtB3sC,EAAc9vC,UADQ,aACtB,EAAiC80C,iBADX,QACwB,GADxB,oBAEtBhF,EAAcc,WAFQ,aAEtB,EAA+B90B,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrqC,QAAH,IAAGA,OAAH,EAAGA,EAAOqqC,MACfmiE,GAA8B32F,QAClC+9B,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,UAA5C,UAAuD0vC,EAAc9vC,UAArE,aAAuD,EAAiC2uC,YAAYniD,KAAKC,OAAO,MAE5GswF,IAAWpiE,GAGjB,GAAoCxQ,aAA4B75B,EAAO85B,GAAvE,qBAAOhL,GAAP,MAAiB49E,GAAjB,MAGA,GAAkD5/G,oBAAkB,GAApE,qBAAO6/G,GAAP,MAA0BC,GAA1B,MAGAx/G,qBAAU,WACJ0hC,KAAauJ,KAAcW,SAC7B4zE,IAAqB,KAEtB,CAAC99E,GAAU69E,KAEd,IAAME,GAA6CzuC,aAAevlB,EAAiBvoD,KAAMq/B,QACnFm9E,GAAmBj3F,QAAQg3F,KAAc,UAAIrtC,EAAclvE,KAAMq/B,cAAxB,aAAI,EAA4Bw9B,QAAQ0/C,MAGvF,GN1FK,SACL7sG,GAG+F,IAF/F85B,EAE8F,uDAFpElc,KAC1B0rF,EAC8F,uCAC9F,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAEpBg6G,EAAY1D,GAAqBrpG,EAAO85B,EAAiBwvE,GAEzD36E,EAAiBwK,eAENowE,EAAqBhvE,aAAO+uE,GAArC31G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EAE9D,OAAOt5F,mBAAQ,WACb,OAAKjQ,GAAUjN,GAAYiZ,GAAYhZ,EAGlC+8B,EAOE,CACL7iC,MAAOk8G,GAAkB4D,MACzBvuB,SAAS,WAAD,4BAAE,8CAAApxF,EAAA,sEAC0Ck4C,QAAQC,IACxDunE,EAAUn/F,KAAI,SAAC0I,GAAU,IAAD,EACtB,EAGIA,EAFFszF,WAAcvyF,EADhB,EACgBA,WAAY0rD,EAD5B,EAC4BA,KAAM7zE,EADlC,EACkCA,MAChCyZ,EACE2N,EADF3N,SAEI9W,GAAW3C,GAASksC,aAAOlsC,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAAyZ,EAAS2wB,aAAYjiB,GAArB,oBAAoC0rD,GAApC,QAA0ClxE,KAC9C8nC,MAAK,SAACszE,GACL,MAAO,CACL32F,OACA22F,kBAGHzzE,OAAM,SAAC0zE,GAAc,IAAD,EAGnB,OAFArgG,QAAQC,MAAM,wDAAyDwJ,IAEhE,EAAA3N,EAASwkG,YAAW91F,GAApB,oBAAmC0rD,GAAnC,QAAyClxE,KAC7C8nC,MAAK,SAACpjB,GAEL,OADA1J,QAAQC,MAAM,uDAAwDwJ,EAAM42F,EAAU32F,GAC/E,CAAED,OAAMxJ,MAAO,IAAIvd,MAAM,mEAEjCiqC,OAAM,SAAC4zE,GAAe,IAAD,EACpBvgG,QAAQC,MAAM,mBAAoBwJ,EAAM82F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAU/+G,YAA9B,aAAoB,EAAgBq6D,UAAW0kD,EAAU1kD,QAC1En3B,EAAY,8DAChB87E,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAE/2F,OAAMxJ,MAAO,IAAIvd,MAAMgiC,cA/BpC,UACF+7E,EADE,OAsCFC,EAAuBD,EAAeh/F,MAC1C,SAACu8F,EAAIhqB,EAAIt+C,GAAT,MACE,gBAAiBsoE,IAAOhqB,IAAOt+C,EAAKrsB,OAAS,GAAK,gBAAiBqsB,EAAKs+C,EAAK,OAxCzE,sBA4CA2sB,EAAaF,EAAe33F,QAAO,SAACW,GAAD,MAA8B,UAAWA,MACnEJ,OAAS,GA7ClB,sBA6C2Bs3F,EAAWA,EAAWt3F,OAAS,GAAGpJ,MA7C7D,aA8CA,IAAIvd,MAAM,8EA9CV,gBAuDJg+G,EALFj3F,KACE3N,EAnDI,EAmDJA,SAnDI,IAoDJihG,WAAcvyF,EApDV,EAoDUA,WAAY0rD,EApDtB,EAoDsBA,KAAM7zE,EApD5B,EAoD4BA,MAElC+9G,EACEM,EADFN,YAtDM,kBAyDDtkG,EAAS0O,GAAT,MAAA1O,EAAQ,YAAgBo6D,GAAhB,sBACbrpC,SAAU9d,aAAmBqxF,IACzB/9G,IAAUksC,aAAOlsC,GAAS,CAAEA,QAAOmD,KAAM2Z,GAAY,CAAE3Z,KAAM2Z,OAEhE2tB,MAAK,SAACC,GACL,IAAM6zE,EAAcztG,EAAM4qC,YAAYxtB,SAASvkB,OACzC60G,EAAe1tG,EAAMyrC,aAAaruB,SAASvkB,OAC3C+xC,EAAc5qC,EAAM4qC,YAAYY,cAAc,GAC9CC,EAAezrC,EAAMyrC,aAAaD,cAAc,GAEhDtiB,EAAI,eAAW0hB,EAAX,YAA0B6iE,EAA1B,gBAA6ChiE,EAA7C,YAA6DiiE,GACjEC,EACJ59E,IAAc/jB,EACVkd,EADJ,UAEOA,EAFP,eAGMogF,GAA0BluF,aAAUkuF,GAChC9tF,aAAe8tF,GACfA,GAOZ,OAJA36E,EAAeiL,EAAU,CACvB7K,QAAS4+E,IAGJ/zE,EAAS/K,QAEjB2K,OAAM,SAAC1sB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOupC,MACH,IAAI9mD,MAAM,0BAGhBsd,QAAQC,MAAR,cAA6BA,EAAOuK,EAAY0rD,EAAM7zE,GAChD,IAAIK,MAAJ,uBAA0Bud,EAAM47C,eA1FpC,4CAAF,kDAAC,GA8FT57C,MAAO,MAtGwB,OAA3Bw8F,EACK,CAAEp8G,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,qBAE7D,CAAE5f,MAAOk8G,GAAkB5kD,QAASi6B,SAAU,KAAM3xE,MAAO,MAN3D,CAAE5f,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,0BA2GnE,CAAC9M,EAAOjN,EAASiZ,EAAShZ,EAAS+8B,EAAWu5E,EAAwByD,EAAWp+E,IMjCvBi/E,CAAgB5tG,EAAO85B,EAAiB/J,GAAnF89E,GAAlB,GAAQpvB,SAA+BqvB,GAAvC,GAAgChhG,MAExB29B,GAA0BN,aAA2BnqC,GAArDyqC,sBAER,GAAwB3jB,eAAjB+W,GAAP,qBAEMkwE,GAAa5/G,uBAAY,WACzBs8C,KCjLO,SAAsCA,GACnD,OAAKA,EAAsB1R,SAAS3a,QAU/BqsB,EAAsB1R,SAAS5a,OAE3BkgB,OAAO26C,QAAP,mDACuC76D,KAA0B3sB,QACpE,GAFG,sEALC,YAJN6sC,OAAOC,OAAP,mDAC8ClgB,KAAqC5sB,QAC/E,GAFJ,kED6K4Bw8G,CAA6BvjE,KAGtDojE,KAGLtB,GAAa,CAAE7/C,eAAe,EAAM4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,YAAQn1E,IACzFkhH,KACGl0E,MAAK,SAAC9K,GACL09E,GAAa,CAAE7/C,eAAe,EAAO4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,OAAQjzC,OAE3F2K,OAAM,SAAC1sB,GACNy/F,GAAa,CACX7/C,eAAe,EACf4/C,kBACA3F,iBAAkB75F,EAAM47C,QACxBoZ,YAAQn1E,UAGb,CAAC89C,GAAuBojE,GAAcvB,KAGzC,GAAwCx/G,oBAAkB,GAA1D,qBAAO+5G,GAAP,MAAqBC,GAArB,MAGMO,GAAsBl8D,aAAgBV,IAItCwjE,IACHxC,IACA38E,KAAauJ,KAAcY,cAC1BnK,KAAauJ,KAAcW,SAC1B2zE,IAAqB79E,KAAauJ,KAAcS,aACjDuuE,GAAsB,IAAMmE,GAE1B0C,GAAuB//G,uBAAY,WACvCo+G,GAAa,CAAED,kBAAgB5/C,iBAAei6C,oBAAkB7kC,YAE5DA,IACFvqB,EAAYjnD,KAAMq/B,MAAO,MAE1B,CAAC+8B,GAAenV,EAAaovD,GAAkB2F,GAAgBxqC,KAE5DqsC,GAAsBhgH,uBAAY,WACtCo+G,GAAa,CAAED,eAAgBtsG,EAAO2mG,oBAAkB7kC,UAAQpV,qBAC/D,CAACA,GAAei6C,GAAkB3mG,EAAO8hE,KAG5C,GAAsDh1E,mBAAS,MAA/D,qBAAOshH,GAAP,MAA4BC,GAA5B,MACA,GAAoCnvE,aAAS,cAAC,GAAD,CAAkBurE,aAAc2D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAC9D,GAC7B,IAAM+D,EAAiB//G,OAAOwzG,QAAQkD,IAAmB72F,MAAK,SAACmgG,GAC7D,IAAMC,EAAmBD,EAAmB,GACtCE,EAAsBj7G,aAAWg7G,EAAiB/6G,SACxD,OAAO82G,EAAa92G,UAAYg7G,KAElC,OAAO94F,QAAQ24F,IAGjBphH,qBAAU,WACJghH,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBzgH,uBACxB,SAAC+pD,GACC00D,IAAqB,GACrBv1D,EAAoB/mD,KAAMq/B,MAAOuoB,GACjC,IAAM22D,EAAkBN,GAAsBr2D,GAE5Cm2D,GADEQ,EACqB32D,EAEA,QAG3B,CAACb,IAGGy3D,GAAiB3gH,uBAAY,WAC7B0+G,IACFt1D,EAAYjnD,KAAMq/B,MAAOk9E,GAAeroC,aAEzC,CAACqoC,GAAgBt1D,IAEdw3D,GAAqB5gH,uBACzB,SAACgqD,GACCd,EAAoB/mD,KAAMw/B,OAAQqoB,GAClC,IAAM02D,EAAkBN,GAAsBp2D,GAE5Ck2D,GADEQ,EACqB12D,EAEA,QAI3B,CAACd,IAGG23D,GAAoBjgD,aAA2B,OAACnb,QAAD,IAACA,OAAD,EAACA,EAAYjkB,MAAb,OAAoBikB,QAApB,IAAoBA,OAApB,EAAoBA,EAAY9jB,QAErF,GAA2CoP,aACzC,cAAC,GAAD,CAAyBnrC,OAAQw3G,EAA0B3C,SAAU,kBAAMzoC,EAAQ7uC,KAAK,gBADnF29E,GAAP,qBAIA7hH,qBAAU,WACJm+G,EAAyBr1F,OAAS,GACpC+4F,OAGD,CAAC1D,EAAyBr1F,SAE7B,OAAgCgpB,aAC9B,cAAC,GAAD,CACEl/B,MAAOA,EACPwnG,cAAe8E,GACflF,gBAAiB+G,GACjBzhD,cAAeA,GACfoV,OAAQA,GACR/xC,UAAWA,EACX+J,gBAAiBA,EACjB4sE,UAAWqH,GACXpH,iBAAkBA,GAClBl6C,gBAAiByhD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBA+BA,OACE,eAAC,KAAD,WACQ,eAAC,KAAD,CAAU9qC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAW2nC,QAAS,cAAC,IAAD,IAA9C,UAC3B,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFxC,aAArB,UAKH,eAAC,KAAD,CAAe2xC,GAAG,UAAUF,GAAIC,KAAO16B,MAAM,OAA7C,UACG,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,aAEL,eAAC,KAAD,CAAcmyC,GAAG,QAAQF,GAAIC,KAAM16B,MAAM,OAAzC,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,kBAEL,eAAC,KAAD,CAAemyC,GAAG,cAAcF,GAAIC,KAAO16B,MAAM,OAAjD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,oBAGX,eAAC,KAAD,WACE,cAAC,KAAD,CAAW8uC,MAAO9uC,EAAE,YAAa4xC,SAAU5xC,EAAE,gCAC7C,eAAC,GAAD,CAASqiB,GAAG,YAAZ,UACE,eAAC,KAAD,CAAYphB,IAAI,KAAhB,UACE,cAAC,KAAD,CACEylE,MAAOnmC,IAAqBp/B,KAAMw/B,SAAWq8E,GAAYnsG,EAAQ7Q,EAAE,oBAAsBA,EAAE,QAC3FD,MAAO8yE,GAAiB1xE,KAAMq/B,OAC9BimC,eAAgBk3C,GAChB1vF,SAAUw2B,EAAWtjD,KAAMq/B,OAC3B4nB,YAAa60D,GACbz2C,MAAOm5C,GACPh5C,iBAAkB84C,GAClB34C,cAAeriB,EAAWtjD,KAAMw/B,QAChCte,GAAG,wBAEL,cAAC,KAAD,CAAY3hB,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAAS27G,EAAe,gBAAkB,SAAUhoF,MAAO,CAAE1zB,QAAS,UAA/E,UACE,cAAC41G,GAAD,CAAcC,WAAS,EAAvB,SACE,cAAC,IAAD,CACEh2G,MAAM,OACNoX,QAAS,WACP6lG,IAAqB,GACrBt1D,KAEF3wC,MAAOitC,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,QAAU,UAAY,WAG9D,OAAdC,IAAuBo8E,GAAYX,EAClC,cAAC,IAAD,CAAQ9uE,QAAQ,OAAOlrB,GAAG,uBAAuBzK,QAAS,kBAAMg3B,GAAkB,KAAlF,SACG5uC,EAAE,6BAEH,UAGR,cAAC,KAAD,CACED,MAAO8yE,GAAiB1xE,KAAMw/B,QAC9BynB,YAAa80D,GACbx2C,MAAOnmC,IAAqBp/B,KAAMq/B,QAAUw8E,GAAYnsG,EAAQ7Q,EAAE,kBAAoBA,EAAE,MACxFymE,eAAe,EACfx4C,SAAUw2B,EAAWtjD,KAAMw/B,QAC3BgmC,iBAAkBi5C,GAClB94C,cAAeriB,EAAWtjD,KAAMq/B,OAChCne,GAAG,yBAEF,eAAC,IAAD,CAAM2vB,WAAW,SAASX,eAAe,gBAAzC,UACe,cAAC,IAAD,CAAS75B,MAAM,UAAUhX,MAAM,SAE3C,eAAC,IAAD,CAAMwxC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACZ,eAAC,IAAD,CAAQgD,GAAG,IAAIzxC,MAAO,GAAK20E,OAAQ,GAAI3kC,KAAK,qEAAqEjD,QAAQ,YAAYG,GAAI,GAAzI,UACA,cAACouE,GAAD,UACE,qBAAKtlD,IAAI,uBAAuBxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAErEn1E,EAAE,UAEH,eAAC,IAAD,CAAQiyC,GAAG,IAAIzxC,MAAO,IAAM20E,OAAQ,GAAI3kC,KAAK,qEAAqEjD,QAAQ,YAA1H,UACA,cAACuuE,GAAD,UACE,qBAAKtlD,IAAI,6BAA6BxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAE3En1E,EAAE,uBAKIq8G,GAA8B,OAAdz7E,IAAuBo8E,EACtC,qCACE,eAAC,KAAD,CAASt8G,QAAQ,gBAAgB2zB,MAAO,CAAE1zB,QAAS,UAAnD,UACE,cAAC41G,GAAD,CAAcC,WAAW,EAAzB,SACE,cAAC,IAAD,CAAeh2G,MAAM,WAEvB,cAAC,IAAD,CAAQ+sC,QAAQ,OAAOlrB,GAAG,0BAA0BzK,QAAS,kBAAMg3B,GAAkB,OAArF,SACG5uC,EAAE,sBAGP,cAACo2G,GAAD,CAAmB/zF,GAAG,YAAYtiB,MAAO6gC,EAAWiP,SAAUjB,QAE9D,KAEHouE,EAAW,KACV,eAAC,KAAD,CAAY/7G,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,UAAxC,UACG+lB,QAAQ7V,IACP,eAAC,KAAD,CAAYpQ,MAAM,SAAlB,UACE,cAACo7G,GAAD,UAAQ77G,EAAE,WACV,cAACo5G,GAAD,CACEhpC,MAAK,OAAEv/D,QAAF,IAAEA,OAAF,EAAEA,EAAOsrC,eACdu7D,aAAcA,GACdC,gBAAiBA,QAItBhtE,IAAoBlc,MACnB,eAAC,KAAD,CAAYhuB,MAAM,SAAlB,UACE,cAACo7G,GAAD,UAAQ77G,EAAE,wBACV,eAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAM,UAAjB,UACGmzB,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAK+E,GAAG,OAAR,UACGmwE,GACC,cAAC,IAAD,CAAQr/G,MAAM,OAAOwuE,UAAQ,EAAC//B,GAAG,MAAjC,SACGjvC,EAAE,uBAEF6c,EAEDmgG,EACF,cAAC,IAAD,CAAQx8G,MAAM,OAAOwuE,SAAUtoD,QAAQq2F,GAAiBnlG,QAASklG,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUhpF,MAAO,CAAEsoC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAMnlD,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,4CAEJ0uC,IACC,cAAC,KAAD,CAAMl3B,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,uCAIP8+G,GACF,eAAC,KAAD,WACE,cAAC,IAAD,CACEvxE,QAAS5N,KAAauJ,KAAcS,SAAW,UAAY,UAC3D/xB,QAAS2lG,GACTvuC,SAAUrvC,KAAauJ,KAAcY,cAAgB0zE,GACrDh9G,MAAM,MAJR,SAMGm/B,KAAauJ,KAAcW,QAC1B,eAAC,KAAD,CAAS5oC,IAAI,MAAMP,QAAQ,SAA3B,UACGV,EAAE,YADL,IACkB,cAACywC,GAAA,EAAD,CAAc+R,OAAO,aAErCg7D,IAAqB79E,KAAauJ,KAAcS,SAClD3pC,EAAE,WAEFA,EAAE,iBAAkB,CAAE+8D,MAAK,oBAAEtY,EAAWtjD,KAAMq/B,cAAnB,aAAE,EAAyB92B,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACE6jC,QAASklC,IAAWylC,GAAsB,EAAI,SAAW,UACzDtgG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJv/G,MAAM,MACN6hB,GAAG,cACH2sD,UACGyD,IAAW9yC,KAAauJ,KAAcS,UAAauuE,GAAsB,IAAMmE,EAlBpF,SAsBMr8G,EADHk4G,GAAsB,IAAMmE,EACvB,oBACFnE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE3qE,QAASklC,IAAWylC,GAAsB,IAAMyG,GAAoB,SAAW,UAC/E/mG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJ19F,GAAG,cACH7hB,MAAM,OACNwuE,UAAWyD,IAAYylC,GAAsB,IAAMmE,KAAmBsC,GAjBxE,SAmBGrC,IACEpE,GAAsB,IAAMmE,EAA5B,wBAGGr8G,EADAk4G,GAAsB,EACpB,cACA,WAxFV,cAACl6E,GAAA,EAAD,CAAqBx9B,MAAM,SA2F5Bs+G,IACC,cAACn2G,GAAA,EAAD,CAAQ0rB,MAAO,CAAEkhD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAeykC,MAAO,CAACr6E,KAAauJ,KAAcS,cAGrD0yE,GAAgB7E,GAAmB,cAACP,GAAD,CAAmBt5F,MAAO65F,KAAuB,cAIzFqI,GAGA,cAACxpD,GAAA,EAAD,CAA2B5R,WAAY,CAACA,EAAWjkB,MAAOikB,EAAW9jB,UAFrE,cAACu4E,GAAD,CAA6BroG,MAAOA,O,sDExiBtCs1D,GAAa7lE,KAAOU,IAAV,yLAKM,qBAAG6zB,MAAkBG,OAAOG,iBAK5C8gF,GAAe31G,KAAOU,IAAV,iPAKI,gBAAG2c,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOC,cACtD,qBAAGtX,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGkX,MAAkBG,OAAOG,iBAG5C+gF,GAAiB51G,KAAOU,IAAV,6DAKdgkE,GAAQ1kE,KAAO82D,MAAV,6kBAMW,qBAAGviC,MAAkBG,OAAOG,iBACtB,qBAAGxX,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOmb,WAMjE,qBAAGtb,MAAkBG,OAAOmhF,gBAe5B,qBAAGthF,MAAkBG,OAAOmhF,gBAI1B,SAASC,GAAT,GAUX,IATF/zF,EASC,EATDA,GACAtiB,EAQC,EARDA,MACA8vC,EAOC,EAPDA,SAQQhsC,EAAYH,cAAZG,QAEA7D,EAAMC,eAAND,EAER,EAAmCorC,aAAOrrC,GAAlCyE,EAAR,EAAQA,QAAS8iB,EAAjB,EAAiBA,QAASkP,EAA1B,EAA0BA,KAEpBuyD,EAAc/pF,uBAClB,SAACmmE,GACC,IACMkxC,EADQlxC,EAAME,OAAOtlE,MACCH,QAAQ,OAAQ,IAC5CiwC,EAASwmE,KAEX,CAACxmE,IAGGlyB,EAAQ+I,QAAQ3mB,EAAMgnB,OAAS,IAAMO,IAAY9iB,GAEvD,OACE,cAAC,GAAD,CAAY6d,GAAIA,EAAhB,SACE,cAAC,GAAD,CAAc1E,MAAOA,EAArB,SACE,cAAC,GAAD,UACE,eAAC,KAAD,CAAY1c,IAAI,KAAhB,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAOjB,EAAE,eACRwE,GAAWX,GACV,eAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,aAAc,OAACsK,QAAD,IAACA,IAAQhyB,EAAS,UAAWX,GAAtE,cACI7D,EAAE,mBADN,UAKJ,cAAC,GAAD,CACEsnE,UAAU,0BACVn7C,KAAK,OACLo5C,aAAa,MACbC,YAAY,MACZ8wC,eAAe,MACf1wC,WAAW,QACXV,YAAallE,EAAE,8BACf2d,MAAOA,EACP8nD,QAAQ,wBACR51B,SAAUk5C,EACVhpF,MAAOA,a,4DCpHR+zB,GAAUxzB,KAAOU,IAAV,wEAKPu1G,GAAej2G,KAAOU,IAAV,yDAGrB,qBAAGw1G,UAECvyB,aADK,iIAOL,QAGKwyB,GAAYn2G,aAAO4lF,KAAP5lF,CAAH,8CACX,gBAAGu0B,EAAH,EAAGA,MAAO6hF,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd7hF,EAAMG,OAAOqb,QACA,IAAbqmE,EACA7hF,EAAMG,OAAO2hF,QACA,IAAbD,EACA7hF,EAAMG,OAAOU,KACbb,EAAMG,OAAOlN,WAGR8uF,GAAuBt2G,KAAOu2G,OAAV,qcAGX,qBAAGhiF,MAAkBG,OAAOC,cAQvC,qBAAGJ,MAAkBG,OAAOU,QAOf,qBAAGb,MAAkBG,OAAOO,YAG5B,qBAAGV,MAAkBG,OAAOO,YAKvCuhF,GAAgBx2G,aAAO4lF,MAAMjgB,MAAM,CAAE2gB,UAAU,GAA/BtmF,CAAH,gDAIpBy2G,GAAyBz2G,KAAOU,IAAV,gUACN,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAQX,qBAAGxb,MAAkBG,OAAOqb,WASjC2mE,GAAsC12G,KAAOU,IAAV,mNACnB,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAUf,SAAS4mE,GAAT,GAA0D,IAA7Bt5F,EAA4B,EAA5BA,MAClC,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAWnd,MAAM,WAEnB,4BAAImd,OAKH,I,GAAMu5F,GAAwB52G,aAAOuI,KAAPvI,CAAH,yHACZ,gBAAGu0B,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAO2hF,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3C97D,EAA0C,EAA1CA,YAC7C,OACE,cAAC,GAAD,CAAWhM,SAAS,OAAOqnE,SAAU16D,aAAgBX,GAArD,SACGA,EAAeA,EAAYzR,SAAShb,MAAY,SAAjC,UAA+CysB,EAAYh5C,QAAQ,GAAnE,KAA4E,MCKlG,IAAM+0G,GAA2B92G,aAAOuI,KAAPvI,CAAH,iJAGX,qBAAGu0B,MAAkBgoE,MAAMwa,WACxB,qBAAGxiF,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGnC,SAASqiF,GAAT,GAYX,IAAD,QAXDzmG,EAWC,EAXDA,MACA0mG,EAUC,EAVDA,UACA5sE,EASC,EATDA,gBACA6sE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwC95G,oBAAkB,GAA1D,mBAAO+5G,EAAP,KAAqBC,EAArB,KACM/tD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAACA,EAAiB95B,IAEpB,EAAiDiQ,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA3FyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBy7D,EAAW16D,aAAgBV,GAEjC,OACE,qCACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAY76C,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM4uC,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACThb,MAAO,CACLgd,eAAgB,SAChBW,WAAY,SACZo1B,QAAS,OACTzK,UAAW,QACXi7C,YAAa,QAPjB,UAUG37D,aAAqBprC,EAAO6mG,GAC7B,cAAC,GAAD,CAAsB9/F,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,iBAK3B,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM6uC,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,aAAUC,YAAc,mBAAqB,iBAEpE,cAACriF,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,eAAC,KAAD,WACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,aAAUC,YAA9B,oBACGluD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,UADxD,QAC8D,IAD9D,oBAEGuN,EAAwBzoD,KAAMq/B,cAFjC,aAEG,EAAsC6b,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMhN,SAAS,OAAO08C,WAAW,MAAjC,SACGl7E,EAAMktD,YAAc85C,aAAUC,YAC3BjnG,EAAMyrC,aAAaruB,SAASvkB,OAC5BmH,EAAM4qC,YAAYxtB,SAASvkB,eAIrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAf,0BACA,cAAC5Z,GAAA,EAAD,CAAgBC,KAAK,4EAA4Eia,GAAG,WAEtG,cAAC,GAAD,CAAsB0L,YAAaC,OAErC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAAC5Z,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACE6jC,QAASmpE,EAAW,EAAI,SAAW,UACnC9+F,QAAS2/F,EACTvoC,SAAUyoC,EACV/nE,GAAG,OACHrtB,GAAG,uBACH7hB,MAAM,OANR,SAQGk2G,EAAW,EAAI,cAAgB,iBAGjCc,EAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,IAAuB,W,cCvH9D,SAASO,GAAT,GAYX,IAAD,IAXDlnG,EAWC,EAXDA,MACA85B,EAUC,EAVDA,gBACA/J,EASC,EATDA,UACAo3E,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMruD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAAC95B,EAAO85B,IAEF2Q,EAA0Bx6B,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA5EyqC,sBACF48D,EAAsBl8D,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAYr6C,IAAI,KAAhB,UACE,eAAC,KAAD,CAAYR,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAM4qC,YAAYxtB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MAAOwgG,GAAqBnnG,EAAMktD,YAAc85C,aAAUM,aAAe,UAAY,OAFvF,SAIGtnG,EAAM4qC,YAAYY,cAAc,QAGrC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAM4qC,YAAYxtB,SAASvkB,cAIlC,cAAC,KAAD,UACE,cAAC,IAAD,CAAelJ,MAAM,OAAOmvC,GAAG,UAEjC,eAAC,KAAD,CAAYlvC,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAMyrC,aAAaruB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MACE0gG,EAAsB,EAClB,UACAF,GAAqBnnG,EAAMktD,YAAc85C,aAAUC,YACnD,UACA,OAPR,SAUGjnG,EAAMyrC,aAAaD,cAAc,QAGtC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAMyrC,aAAaruB,SAASvkB,cAIlCsuG,EACC,cAAC,GAAD,CAAuBt3G,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAWysC,GAAG,QACd,cAAC,KAAD,CAAM0B,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQx3B,QAASqgG,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAYv3G,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACGkQ,EAAMktD,YAAc85C,aAAUC,YAC7B,eAAC,KAAD,CAAM1hD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,4DAEE,wCACGopD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,GADxD,IAC6DxrC,EAAMyrC,aAAaruB,SAASvkB,UAExF,sCAGH,eAAC,KAAD,CAAM0sD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,uDAEE,wCACGopD,EAAwBzoD,KAAMq/B,cADjC,aACG,EAAsC6b,cAAc,GADvD,IAC4DxrC,EAAM4qC,YAAYxtB,SAASvkB,UAEtF,wCAIQ,OAAdk3B,EACC,cAAC,KAAD,CAAYlgC,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAM6W,MAAM,aAAZ,mCACyB,IACvB,mBAAGs3B,MAAOlO,EAAV,SAAsB3U,aAAU2U,GAAavU,aAAeuU,GAAaA,SAG3E,QCzEV,IA4Eew3E,GA5EgE,SAAC,GAYzE,IAAD,oBAXJvnG,EAWI,EAXJA,MACAwnG,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAttE,EAQI,EARJA,gBACA4sE,EAOI,EAPJA,UACAppE,EAMI,EANJA,UACAmvB,EAKI,EALJA,gBACA18B,EAII,EAJJA,UACA42E,EAGI,EAHJA,iBACAj6C,EAEI,EAFJA,cACAoV,EACI,EADJA,OAEMqlC,EAAoBl3F,mBACxB,kBAAM4F,QAAQ7V,GAASwnG,IApCsBx6C,EAoC2Bw6C,GApC1Cz6C,EAoCmC/sD,GAlC1DktD,YAAcF,EAAOE,YAC3Bp3B,0BAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D2vC,EAAOniB,YAAYuiB,QAAQH,EAAOpiB,eAClC9U,0BAAei3B,EAAOthB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,YACjE2vC,EAAOthB,aAAa0hB,QAAQH,EAAOvhB,gBANxC,IAAkCshB,EAAeC,IAqC7C,CAACw6C,EAAexnG,IAGV7Q,EAAMC,eAAND,EAEFi0E,EAAcj1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACEA,MAAOA,EACP85B,gBAAiBA,EACjB/J,UAAWA,EACXo3E,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACttE,EAAiBstE,EAAiBr3E,EAAWo3E,EAAmBnnG,IAE9DsjE,EAAcn1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACE0mG,UAAWA,EACX1mG,MAAOA,EACP4mG,gBAAiBO,EACjBR,iBAAkBA,EAClB7sE,gBAAiBA,IAEjB,OACH,CAACA,EAAiB4sE,EAAWS,EAAmBR,EAAkB3mG,IAG/D6rD,EAAc18D,EAAE,uDAAwD,CAC5Eo0E,QAAO,iBAAEvjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDg4B,QAAO,iBAAExjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,iBAAE,EAAoBxtB,gBAAtB,aAAE,EAA8BvkB,cAAhC,QAA0C,GACjD4qE,QAAO,iBAAEzjE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClDk4B,QAAO,iBAAE1jE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,iBAAE,EAAqBruB,gBAAvB,aAAE,EAA+BvkB,cAAjC,QAA2C,KAG9C4uG,EAAsBt5G,uBAC1B,kBACEw4G,EACE,cAAC,KAAD,CAAyBrpE,UAAWA,EAAWorB,QAASi+C,IAExD,cAAC,KAAD,CAA0Bt6C,WAAY+W,EAAahX,cAAekX,MAEtE,CAAChmC,EAAWgmC,EAAaF,EAAaujC,IAGxC,OACE,cAAC,KAAD,CACE1oE,MAAO9uC,EAAE,gBACTmuC,UAAWA,EACXmvB,gBAAiBA,EACjBC,cAAeA,EACf79B,KAAMizC,EACNnV,QAAS86C,EACT57C,YAAaA,EACbG,cAAa,OAAEhsD,QAAF,IAAEA,OAAF,EAAEA,EAAOyrC,aAAaruB,Y,6BCxG1B0M,mBAAK,YAAiD,IAA5B9pB,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMyoE,SAAS,OAAO94E,MAAM,OAAO6wC,eAAe,WAAWW,WAAW,SAAxE,SACGnhC,EAAMqqC,MAAMyN,KAAKlqC,KAAI,SAACsB,EAAO6W,EAAG+xB,GAC/B,IAAMkwD,EAAsBjiF,IAAM+xB,EAAK5hC,OAAS,EAC1CkH,EAAW8a,aAAehpB,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMiyB,WAAW,MAAjB,SACE,cAAC,KAAD,CAAM3C,SAAS,OAAOM,GAAG,WAAWjC,GAAG,WAAvC,SACGzf,EAASvkB,YAGZmvG,GAAc,cAAC,IAAD,CAAkBr4G,MAAM,WAN3Bo2B,WCDzB,SAASkiF,GAAT,GAA8F,IAAD,QAArEjoG,EAAqE,EAArEA,MAAO85B,EAA8D,EAA9DA,gBAC7B,EAAiDqQ,aAA2BnqC,GAApEyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBkO,EAAYt4C,EAAMktD,YAAc85C,aAAUC,YAC1CluD,EAA0Bhf,aAA+B/5B,EAAO85B,GAEtE,OACE,eAAC,KAAD,CAAYtW,MAAO,CAAE1zB,QAAS,UAA9B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM0uC,SAAS,OAAO73B,MAAM,aAA5B,SACG2xC,EAAY,mBAAqB,iBAEpC,cAAC1zB,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,cAAC,KAAD,UACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG8Z,EAAS,8BACHS,EAAwBzoD,KAAMw/B,eAD3B,aACH,EAAuC0b,cAAc,GADlD,YACwDxrC,EAAMyrC,aAAaruB,SAASvkB,eADpF,QAEN,IAFM,8BAGHkgD,EAAwBzoD,KAAMq/B,cAH3B,aAGH,EAAsC6b,cAAc,GAHjD,YAGuDxrC,EAAM4qC,YAAYxtB,SAASvkB,eAHlF,QAG8F,WAI9G,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,0BAGA,cAACie,GAAA,EAAD,CACEC,KAAK,iFACLia,GAAG,WAGP,cAAC,GAAD,CAAsB0L,YAAaC,OAGrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAO73B,MAAM,aAA5B,oCAGA,cAACie,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAW/F,SAASqvG,GAAT,GAAmE,IAApCloG,EAAmC,EAAnCA,MACpC,EAA0BinB,eAAnB6S,EAAP,oBAEMquE,EAAYtyF,QAAQ7V,GAASA,EAAMqqC,MAAMyN,KAAK5hC,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY9lB,IAAI,MAAhB,SACG4P,GACC,qCACE,cAAC,GAAD,CAAcA,MAAOA,EAAO85B,gBAAiBA,IAC5CquE,GACC,mCACE,eAAC,KAAD,CAAY3kF,MAAO,CAAE1zB,QAAS,UAA9B,UACE,uBAAM0zB,MAAO,CAAE+yC,QAAS,OAAQp1B,WAAY,UAA5C,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO73B,MAAM,aAA5B,mBAGA,cAACie,GAAA,EAAD,CACEC,KAAK,0EACLia,GAAG,WAGP,cAAC,GAAD,CAAW9+B,MAAOA,c,oBChG5BooG,GAAwB34G,KAAOU,IAAV,0PACX,qBAAGivC,KAAmB,OAAS,KAMzB,qBAAGpb,MAAkBG,OAAOghC,oBAEnC,qBAAG/lB,KAAmB,iBAAmB,uBAIzC,SAASipE,GAAT,GAAoF,IAAD,EAA5CroG,EAA4C,EAA5CA,MAAU4xC,EAAkC,mBAC1F02D,EAAYX,GAAc3nG,GAEhC,OACE,cAAC,GAAD,CAAuBo/B,KAAMvpB,QAAQ7V,GAArC,SACE,cAAC,GAAD,6BAAyB4xC,GAAzB,IAA+B5xC,MAAK,iBAAEA,QAAF,IAAEA,IAASsoG,SAAX,aAAwB37G,OCZnD,SAAS47G,GAAT,GAAgF,IAAD,UAAzDhpC,EAAyD,EAAzDA,MAAOsnC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAGtnC,QAAH,IAAGA,OAAH,EAAGA,EAAO/zB,cAAc,GAAxB,OAA6B+zB,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOh0B,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFpM,EAAOvpB,SAAa,OAAL0pD,QAAK,IAALA,OAAA,EAAAA,EAAOkpC,gBAAP,OAAuBlpC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOmpC,gBAC7C7yC,EAAQgxC,EAAY,iBACnBtnC,QADmB,IACnBA,GADmB,UACnBA,EAAOmpC,qBADY,aACnB,EAAsB7vG,OADH,uBACiB0mE,QADjB,IACiBA,GADjB,UACiBA,EAAOkpC,oBADxB,aACiB,EAAqB5vG,QADtC,iBAEnB0mE,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOkpC,oBAFY,aAEnB,EAAqB5vG,OAFF,uBAEgB0mE,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOmpC,qBAFvB,aAEgB,EAAsB7vG,QAEhE,OACE,cAAC,KAAD,CAAM2qB,MAAO,CAAEgd,eAAgB,SAAUW,WAAY,SAAUo1B,QAAS,QAAxE,SACGn3B,EACC,4CACGopE,QADH,IACGA,IAAkB,IADrB,IAC2B3yC,EACzB,cAAC,GAAD,CAAsB9uD,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,cAIzB,M,0BCFOg5G,GAjBkC,SAAC,GAAqC,IAAnC50G,EAAkC,EAAlCA,OAAQupC,EAA0B,EAA1BA,UAAWsrE,EAAe,EAAfA,SACrE,OACE,cAAC,KAAD,CACE3qE,MAAM,eACNX,UAAW,WACLA,GACFA,IAEFsrE,KAEFplF,MAAO,CAAE2a,SAAU,SARrB,SAUE,cAAC,KAAD,CAAapqC,OAAQA,EAAQ6pE,qBAAsBtgC,O,wBCjBnDurE,GAAWp5G,aAAOQ,KAAPR,CAAH,8CAIRq5G,GAASr5G,KAAOU,IAAV,2PAGU,gBAAG6zB,EAAH,EAAGA,MAAOsc,EAAV,EAAUA,UAAV,SAAqB69B,SAC5Bn6C,EAAMG,OAAO2nE,mBAAqBxrD,EAAYtc,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAU3FypE,GAAYt5G,KAAOU,IAAV,sGAMT64G,GAAYv5G,KAAOU,IAAV,0KAKT,gBAAG6zB,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SACZn6C,EAAMG,OAAO2nE,mBAAqBmd,EAAgBjlF,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAEnG,gBAAGtb,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SAEnBn6C,EAAMG,OAAO2nE,mBACbmd,EACAjlF,EAAMG,OAAOmb,QACbtb,EAAMG,OAAO2nE,sBAqBV,SAASod,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDhrC,gBAAmD,SAA9BvsB,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAY/hD,QAAQ,UAAa+hD,GAAjC,aACE,eAAC,GAAD,WACGu3D,EAAMv7F,KAAI,SAACgiF,EAAM7pE,GAChB,OAEE,cADA,CACC,GAAD,WACE,cAAC,GAAD,CAAQua,UAAWsvD,EAAMzxB,SAAUA,IAAcgrC,EAAMpjF,EAAI,IAAY,IAANA,EAAjE,SACG6pE,EAAO,SAAM7pE,EAAI,IAEpB,cAAC,GAAD,CAAWkjF,cAAerZ,EAAMzxB,SAAUA,MAJ5Bp4C,MAQpB,cAAC,GAAD,CAAQo4C,SAAUA,IAAagrC,EAAMA,EAAMjzF,OAAS,GAApD,SAAyDizF,EAAMjzF,OAAS,U,IClEpEkzF,G,wCA6BZ,SAASC,GACPrpG,GAGa,IAFb85B,EAEY,uDAFclc,KAC1B0rF,EACY,uCACZ,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsCwnC,aAAO+uE,GAA5BC,EAAjB,EAAQ51G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EACxDzhF,EAAWi9B,eAEjB,OAAO90C,mBAAQ,WACb,IAAKjQ,IAAU+vB,IAAch9B,IAAYiZ,IAAYhZ,IAAY80B,EAAU,MAAO,GAElF,IAAMnf,EAA4Bwd,aAAmBnzB,EAASD,EAASiZ,GACvE,IAAKrD,EACH,MAAO,GAGT,IAAM6gG,EAAc,GAsBpB,OApBAA,EAAYl4E,KACVm4E,UAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,WAAQC,QAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAId2O,EAAMktD,YAAc85C,aAAUC,aAChCuC,EAAYl4E,KACVm4E,UAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,WAAQC,QAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAKbm4G,EAAY57F,KAAI,SAACg8F,GAAD,MAAiB,CAAEA,aAAYjhG,iBACrD,CAACqD,EAAS8tB,EAAiB9mC,EAAS80B,EAAU/0B,EAASg9B,EAAW/vB,K,SAvE3DopG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCJAS,G,wCAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,gDCK7BE,GAfS,WACtB,IAAQ76G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMivC,GAAG,OAAT,oBAAmBjvC,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJF86G,GANO,WACpB,IAAQ96G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BH+6G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjDh7G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAOs9G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAM7pE,eAAe,gBAArB,UACE,eAAC,IAAD,CAAMW,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASqrE,EACTprE,SAAU,kBAAMqrE,GAAgBD,IAChC3pE,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,qBAIP,cAAC,IAAD,CAAQgvE,UAAWisC,EAAarjG,QAASojG,EAAzC,SACGh7G,EAAE,oBCjBPktF,GAAuB5sF,aAAO6sF,KAAP7sF,CAAH,oDAIpB66G,GAAmB76G,aAAO86G,KAAP96G,CAAH,2FAgEP+6G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAcntE,EAAgB,EAAhBA,UACjEnuC,EAAMC,eAAND,EACA60B,EAAUH,eAAVG,MArBR52B,qBAAU,WACR,IAAMs9G,EAAsB,SAAC9uC,GAG3B,OAFAA,EAAEuY,kBACFvY,EAAE+uC,kBACK,GAOT,OAJArtC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGrtC,iBAAiB,QAASktC,GAAqB,MAG7C,WACLptC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGptC,oBAAoB,QAASitC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBp3G,aAAWq3G,GAAwB7lG,SAASvR,SAAW,CACtDkF,OAAQkyG,GAAwB7lG,SAASrM,OACzCurE,UAAW,cAAC,GAAD,MAHK,eAKjB1wE,aAAWq3G,GAAwB9pG,OAAOtN,SAAW,CACpDkF,OAAQkyG,GAAwB9pG,OAAOpI,OACvCurE,UAAW,cAAC,GAAD,MAPK,GAWgBqmC,EAAa92G,SAEjD,OACE,eAAC,GAAD,CAAsB8wE,SAAS,QAA/B,UACE,cAAC,KAAD,CAAargD,WAAYJ,EAAMG,OAAOC,WAAtC,SACE,cAAC,IAAD,CAAS+E,EAAE,YAAX,SAAwBh6B,EAAE,8BAA+B,CAAE0J,OAAQiyG,EAAajyG,aAElF,eAAC,KAAD,CAAWswB,EAAE,OAAb,UACE,cAAC,GAAD,CAAkBuT,QAAQ,UAAU0B,GAAG,OAAvC,SACE,cAAC,IAAD,UAAM0sE,EAAa1mC,cAErB,cAAC,GAAD,CAAiB+lC,oBAAqB7sE,WC5BxC0tE,GAAQv7G,aAAO4lF,KAAP5lF,CAAH,wFAGA,qBAAGu0B,MAAkBG,OAAOk5D,aAEjC4tB,GAAex7G,KAAOU,IAAV,yGAGhB,qBAAG6zB,MAAkBurC,aAAapI,MAKlB13D,KAAO8qE,IAAV,uDAIA,SAAS40C,KAAc,IAAD,sBAC7BhE,EAAkBzxD,eAEhBvqD,EAAMC,eAAND,EACFgxE,EAAUC,eAIhB,GAHiBxV,eAGmC,CAClD/zB,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBl7E,iBAC7B4G,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBj7E,oBAFxBk7E,EAAP,KAA4BC,EAA5B,KAIMC,EAA2Br7F,mBAC/B,8CAAM,CAACm7F,EAAqBC,UAA5B,aAAM,EAA6C11F,QAAO,SAACC,GAAD,OAAmBA,aAAa1d,mBAA1F,QAAoG,KACpG,CAACkzG,EAAqBC,IAIlBluF,EAAgB2L,eAChByiF,EACJD,GACAA,EAAgB31F,QAAO,SAACzG,GACtB,QAASA,EAAMvb,WAAWwpB,MAGtBnR,EAAYnZ,cAAZmZ,QAGR,EAAuB0a,eAAhB8kF,EAAP,oBAGA,EAA0BvkF,eAAnB6S,EAAP,oBAGA,EAAoDsd,eAA5C1nB,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYG,EAAtC,EAAsCA,UACtC,EAA4FioB,eAApFY,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc3E,EAAjD,EAAiDA,WAAwB63D,EAAzE,EAA6DxzD,WAE7D,EL/Ea,SACbC,EACAC,EACAvoB,GAEA,MAA6B/8B,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACX0/F,EAAelyF,eACfpoB,EAAU6iD,aAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWurD,GAEnDtN,EAAc36B,mBAAQ,kBAAMunC,aAAe5nB,EAAYsoB,KAAgB,CAACA,EAAetoB,IACvFjB,EAAiBwK,eAEvB,OAAOlpB,mBAAQ,WACb,IAAKy7F,IAAiB14G,IAAYklD,IAAkBC,EAAgB,OAAO2xD,GAE3E,IAAM6B,EAAoB/gE,GAAex5C,IAAYA,EAAQ2nC,SAAS6R,GAEtE,OAAIsN,IAAkB76B,UAASyY,0BAAerc,QAAKzmB,GAAUmlD,GACpD,CACL4xD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAap2D,QAAQ,CAAEpmD,MAAM,KAAD,OAAO07C,EAAYpuB,IAAIxtB,SAAS,OAFxF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,QAAD,OAAU6b,EAAYY,cAAc,GAApC,kBAHvC,gDAKI3+B,QAAQC,MAAM,oBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,4BAG5CmpC,0BAAerc,QAAKzmB,GAAUklD,IAAkBC,IAAmB96B,SAC9D,CACL0sF,SAAUF,GAASkC,OACnBF,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAaj2D,SAAb,YAA2B7K,EAAYpuB,IAAIxtB,SAAS,MAFhF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,UAAD,OAAY6b,EAAYY,cAAc,GAAtC,kBAHvC,gDAKI3+B,QAAQC,MAAM,qBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,6BAGzCm9G,KACN,CAAC4B,EAAc14G,EAASklD,EAAeC,EAAgBvN,EAAax5C,EAASu9B,IK+B5Eq9E,CAAgBp4D,EAAWtjD,KAAMq/B,OAAQikB,EAAWtjD,KAAMw/B,QAASF,GAHrEm6E,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGEj0D,WAEIk0D,EAAoBpC,IAAaF,GAASC,eAC1C9pG,EAAQmsG,OAAWx/G,EAAYisD,EAE/B4mB,EAAgB2sC,GAAQ,oBAEvB77G,KAAMq/B,MAAQ4oB,GAFS,eAGvBjoD,KAAMw/B,OAASyoB,GAHQ,wBAMvBjoD,KAAMq/B,MAAQD,IAAqBp/B,KAAMq/B,MAAQ4oB,EAAnC,OAAkDv4C,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4qC,aANhD,eAOvBt6C,KAAMw/B,OAASJ,IAAqBp/B,KAAMw/B,OAASyoB,EAApC,OAAmDv4C,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOyrC,cAPlD,GAU9B,EAAgFzN,eAAxEsZ,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,oBAAqBE,EAA7C,EAA6CA,YAAaxZ,GAA1D,EAA0DA,kBACpD6jC,IAAW6pC,EACXnrC,GAAwB5wC,IAAqBp/B,KAAMq/B,MAAQr/B,KAAMw/B,OAASx/B,KAAMq/B,MAEhFy8E,GAAkBj+G,uBACtB,SAACe,GACCqoD,EAAYjnD,KAAMq/B,MAAOzgC,KAE3B,CAACqoD,IAEG80D,GAAmBl+G,uBACvB,SAACe,GACCqoD,EAAYjnD,KAAMw/B,OAAQ5gC,KAE5B,CAACqoD,IAIH,GAAoFzqD,mBAKjF,CACDw/G,oBAAgB3/G,EAChB+/D,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IATV,8BAAS2/G,GAAT,GAASA,eAAgB3F,GAAzB,GAAyBA,iBAAkBj6C,GAA3C,GAA2CA,cAAeoV,GAA1D,GAA0DA,OAAUyqC,GAApE,MAYMvqC,IAAgB,oBACnBtyC,EAAmBE,GADA,eAEnB0wC,GAAiB6rC,EAAQ,oBACtB3sC,EAAc9vC,UADQ,aACtB,EAAiC80C,iBADX,QACwB,GADxB,oBAEtBhF,EAAcc,WAFQ,aAEtB,EAA+B90B,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrqC,QAAH,IAAGA,OAAH,EAAGA,EAAOqqC,MACfmiE,GAA8B32F,QAClC+9B,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,UAA5C,UAAuD0vC,EAAc9vC,UAArE,aAAuD,EAAiC2uC,YAAYniD,QAAKC,OAAO,MAE5GswF,IAAWpiE,GAGjB,GAAoCxQ,aAA4B75B,EAAO85B,GAAvE,qBAAOhL,GAAP,MAAiB49E,GAAjB,MAGA,GAAkD5/G,oBAAkB,GAApE,qBAAO6/G,GAAP,MAA0BC,GAA1B,MAGAx/G,qBAAU,WACJ0hC,KAAauJ,KAAcW,SAC7B4zE,IAAqB,KAEtB,CAAC99E,GAAU69E,KAEd,IAAME,GAA6CzuC,aAAevlB,EAAiBvoD,KAAMq/B,QACnFm9E,GAAmBj3F,QAAQg3F,KAAc,UAAIrtC,EAAclvE,KAAMq/B,cAAxB,aAAI,EAA4Bw9B,QAAQ0/C,MAGvF,GN1FK,SACL7sG,GAG+F,IAF/F85B,EAE8F,uDAFpElc,KAC1B0rF,EAC8F,uCAC9F,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAEpBg6G,EAAY1D,GAAqBrpG,EAAO85B,EAAiBwvE,GAEzD36E,EAAiBwK,eAENowE,EAAqBhvE,aAAO+uE,GAArC31G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EAE9D,OAAOt5F,mBAAQ,WACb,OAAKjQ,GAAUjN,GAAYiZ,GAAYhZ,EAGlC+8B,EAOE,CACL7iC,MAAOk8G,GAAkB4D,MACzBvuB,SAAS,WAAD,4BAAE,8CAAApxF,EAAA,sEAC0Ck4C,QAAQC,IACxDunE,EAAUn/F,KAAI,SAAC0I,GAAU,IAAD,EACtB,EAGIA,EAFFszF,WAAcvyF,EADhB,EACgBA,WAAY0rD,EAD5B,EAC4BA,KAAM7zE,EADlC,EACkCA,MAChCyZ,EACE2N,EADF3N,SAEI9W,GAAW3C,GAASksC,aAAOlsC,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAAyZ,EAAS2wB,aAAYjiB,GAArB,oBAAoC0rD,GAApC,QAA0ClxE,KAC9C8nC,MAAK,SAACszE,GACL,MAAO,CACL32F,OACA22F,kBAGHzzE,OAAM,SAAC0zE,GAAc,IAAD,EAGnB,OAFArgG,QAAQC,MAAM,wDAAyDwJ,IAEhE,EAAA3N,EAASwkG,YAAW91F,GAApB,oBAAmC0rD,GAAnC,QAAyClxE,KAC7C8nC,MAAK,SAACpjB,GAEL,OADA1J,QAAQC,MAAM,uDAAwDwJ,EAAM42F,EAAU32F,GAC/E,CAAED,OAAMxJ,MAAO,IAAIvd,MAAM,mEAEjCiqC,OAAM,SAAC4zE,GAAe,IAAD,EACpBvgG,QAAQC,MAAM,mBAAoBwJ,EAAM82F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAU/+G,YAA9B,aAAoB,EAAgBq6D,UAAW0kD,EAAU1kD,QAC1En3B,EAAY,8DAChB87E,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAE/2F,OAAMxJ,MAAO,IAAIvd,MAAMgiC,cA/BpC,UACF+7E,EADE,OAsCFC,EAAuBD,EAAeh/F,MAC1C,SAACu8F,EAAIhqB,EAAIt+C,GAAT,MACE,gBAAiBsoE,IAAOhqB,IAAOt+C,EAAKrsB,OAAS,GAAK,gBAAiBqsB,EAAKs+C,EAAK,OAxCzE,sBA4CA2sB,EAAaF,EAAe33F,QAAO,SAACW,GAAD,MAA8B,UAAWA,MACnEJ,OAAS,GA7ClB,sBA6C2Bs3F,EAAWA,EAAWt3F,OAAS,GAAGpJ,MA7C7D,aA8CA,IAAIvd,MAAM,8EA9CV,gBAuDJg+G,EALFj3F,KACE3N,EAnDI,EAmDJA,SAnDI,IAoDJihG,WAAcvyF,EApDV,EAoDUA,WAAY0rD,EApDtB,EAoDsBA,KAAM7zE,EApD5B,EAoD4BA,MAElC+9G,EACEM,EADFN,YAtDM,kBAyDDtkG,EAAS0O,GAAT,MAAA1O,EAAQ,YAAgBo6D,GAAhB,sBACbrpC,SAAU9d,aAAmBqxF,IACzB/9G,IAAUksC,aAAOlsC,GAAS,CAAEA,QAAOmD,KAAM2Z,GAAY,CAAE3Z,KAAM2Z,OAEhE2tB,MAAK,SAACC,GACL,IAAM6zE,EAAcztG,EAAM4qC,YAAYxtB,SAASvkB,OACzC60G,EAAe1tG,EAAMyrC,aAAaruB,SAASvkB,OAC3C+xC,EAAc5qC,EAAM4qC,YAAYY,cAAc,GAC9CC,EAAezrC,EAAMyrC,aAAaD,cAAc,GAEhDtiB,EAAI,eAAW0hB,EAAX,YAA0B6iE,EAA1B,gBAA6ChiE,EAA7C,YAA6DiiE,GACjEC,EACJ59E,IAAc/jB,EACVkd,EADJ,UAEOA,EAFP,eAGMogF,GAA0BluF,aAAUkuF,GAChC9tF,aAAe8tF,GACfA,GAOZ,OAJA36E,EAAeiL,EAAU,CACvB7K,QAAS4+E,IAGJ/zE,EAAS/K,QAEjB2K,OAAM,SAAC1sB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOupC,MACH,IAAI9mD,MAAM,0BAGhBsd,QAAQC,MAAR,cAA6BA,EAAOuK,EAAY0rD,EAAM7zE,GAChD,IAAIK,MAAJ,uBAA0Bud,EAAM47C,eA1FpC,4CAAF,kDAAC,GA8FT57C,MAAO,MAtGwB,OAA3Bw8F,EACK,CAAEp8G,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,qBAE7D,CAAE5f,MAAOk8G,GAAkB5kD,QAASi6B,SAAU,KAAM3xE,MAAO,MAN3D,CAAE5f,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,0BA2GnE,CAAC9M,EAAOjN,EAASiZ,EAAShZ,EAAS+8B,EAAWu5E,EAAwByD,EAAWp+E,IMjCvBi/E,CAAgB5tG,EAAO85B,EAAiB/J,GAAnF89E,GAAlB,GAAQpvB,SAA+BqvB,GAAvC,GAAgChhG,MAExB29B,GAA0BN,aAA2BnqC,GAArDyqC,sBAER,GAAwB3jB,eAAjB+W,GAAP,qBAEMkwE,GAAa5/G,uBAAY,WACzBs8C,KCjLO,SAAsCA,GACnD,OAAKA,EAAsB1R,SAAS3a,QAU/BqsB,EAAsB1R,SAAS5a,OAE3BkgB,OAAO26C,QAAP,mDACuC76D,KAA0B3sB,QACpE,GAFG,sEALC,YAJN6sC,OAAOC,OAAP,mDAC8ClgB,KAAqC5sB,QAC/E,GAFJ,kED6K4Bw8G,CAA6BvjE,KAGtDojE,KAGLtB,GAAa,CAAE7/C,eAAe,EAAM4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,YAAQn1E,IACzFkhH,KACGl0E,MAAK,SAAC9K,GACL09E,GAAa,CAAE7/C,eAAe,EAAO4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,OAAQjzC,OAE3F2K,OAAM,SAAC1sB,GACNy/F,GAAa,CACX7/C,eAAe,EACf4/C,kBACA3F,iBAAkB75F,EAAM47C,QACxBoZ,YAAQn1E,UAGb,CAAC89C,GAAuBojE,GAAcvB,KAGzC,GAAwCx/G,oBAAkB,GAA1D,qBAAO+5G,GAAP,MAAqBC,GAArB,MAGMO,GAAsBl8D,aAAgBV,IAItCwjE,IACHxC,IACA38E,KAAauJ,KAAcY,cAC1BnK,KAAauJ,KAAcW,SAC1B2zE,IAAqB79E,KAAauJ,KAAcS,aACjDuuE,GAAsB,IAAMmE,GAE1B0C,GAAuB//G,uBAAY,WACvCo+G,GAAa,CAAED,kBAAgB5/C,iBAAei6C,oBAAkB7kC,YAE5DA,IACFvqB,EAAYjnD,KAAMq/B,MAAO,MAE1B,CAAC+8B,GAAenV,EAAaovD,GAAkB2F,GAAgBxqC,KAE5DqsC,GAAsBhgH,uBAAY,WACtCo+G,GAAa,CAAED,eAAgBtsG,EAAO2mG,oBAAkB7kC,UAAQpV,qBAC/D,CAACA,GAAei6C,GAAkB3mG,EAAO8hE,KAG5C,GAAsDh1E,mBAAS,MAA/D,qBAAOshH,GAAP,MAA4BC,GAA5B,MACA,GAAoCnvE,aAAS,cAAC,GAAD,CAAkBurE,aAAc2D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAC9D,GAC7B,IAAM+D,EAAiB//G,OAAOwzG,QAAQkD,IAAmB72F,MAAK,SAACmgG,GAC7D,IAAMC,EAAmBD,EAAmB,GACtCE,EAAsBj7G,aAAWg7G,EAAiB/6G,SACxD,OAAO82G,EAAa92G,UAAYg7G,KAElC,OAAO94F,QAAQ24F,IAGjBphH,qBAAU,WACJghH,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBzgH,uBACxB,SAAC+pD,GACC00D,IAAqB,GACrBv1D,EAAoB/mD,KAAMq/B,MAAOuoB,GACjC,IAAM22D,EAAkBN,GAAsBr2D,GAE5Cm2D,GADEQ,EACqB32D,EAEA,QAG3B,CAACb,IAGGy3D,GAAiB3gH,uBAAY,WAC7B0+G,IACFt1D,EAAYjnD,KAAMq/B,MAAOk9E,GAAeroC,aAEzC,CAACqoC,GAAgBt1D,IAEdw3D,GAAqB5gH,uBACzB,SAACgqD,GACCd,EAAoB/mD,KAAMw/B,OAAQqoB,GAClC,IAAM02D,EAAkBN,GAAsBp2D,GAE5Ck2D,GADEQ,EACqB12D,EAEA,QAI3B,CAACd,IAGG23D,GAAoBjgD,aAA2B,OAACnb,QAAD,IAACA,OAAD,EAACA,EAAYjkB,MAAb,OAAoBikB,QAApB,IAAoBA,OAApB,EAAoBA,EAAY9jB,QAErF,GAA2CoP,aACzC,cAAC,GAAD,CAAyBnrC,OAAQw3G,EAA0B3C,SAAU,kBAAMzoC,EAAQ7uC,KAAK,mBADnF29E,GAAP,qBAIA7hH,qBAAU,WACJm+G,EAAyBr1F,OAAS,GACpC+4F,OAGD,CAAC1D,EAAyBr1F,SAE7B,OAAgCgpB,aAC9B,cAAC,GAAD,CACEl/B,MAAOA,EACPwnG,cAAe8E,GACflF,gBAAiB+G,GACjBzhD,cAAeA,GACfoV,OAAQA,GACR/xC,UAAWA,EACX+J,gBAAiBA,EACjB4sE,UAAWqH,GACXpH,iBAAkBA,GAClBl6C,gBAAiByhD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBAgCA,OACE,eAAC,KAAD,WAEE,eAAC,KAAD,CAAU9qC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAW2nC,QAAS,cAAC,IAAD,IAA9C,UACrB,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAF9C,gBAArB,UAKM,eAAC,KAAD,CAAe2xC,GAAG,WAAWF,GAAIC,KAAM16B,MAAM,OAA7C,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,cAEL,eAAC,KAAD,CAAemyC,GAAG,UAAUF,GAAIC,KAAO16B,MAAM,OAA7C,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,aAEL,eAAC,KAAD,CAAemyC,GAAG,QAAQF,GAAIC,KAAO16B,MAAM,OAA3C,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,qBAGX,eAAC,KAAD,WACE,cAAC,KAAD,CAAW8uC,MAAO9uC,EAAE,YAAa4xC,SAAU5xC,EAAE,gCAC7C,eAAC,GAAD,CAASqiB,GAAG,YAAZ,UACE,eAAC,KAAD,CAAYphB,IAAI,KAAhB,UACE,cAAC,KAAD,CACEylE,MAAOnmC,IAAqBp/B,KAAMw/B,SAAWq8E,GAAYnsG,EAAQ7Q,EAAE,oBAAsBA,EAAE,QAC3FD,MAAO8yE,GAAiB1xE,KAAMq/B,OAC9BimC,eAAgBk3C,GAChB1vF,SAAUw2B,EAAWtjD,KAAMq/B,OAC3B4nB,YAAa60D,GACbz2C,MAAOm5C,GACPh5C,iBAAkB84C,GAClB34C,cAAeriB,EAAWtjD,KAAMw/B,QAChCte,GAAG,wBAEL,cAAC,KAAD,CAAY3hB,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAAS27G,EAAe,gBAAkB,SAAUhoF,MAAO,CAAE1zB,QAAS,UAA/E,UACE,cAAC,GAAD,CAAc61G,WAAS,EAAvB,SACE,cAAC,IAAD,CACEh2G,MAAM,OACNoX,QAAS,WACP6lG,IAAqB,GACrBt1D,KAEF3wC,MAAOitC,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,QAAU,UAAY,WAG9D,OAAdC,IAAuBo8E,GAAYX,EAClC,cAAC,IAAD,CAAQ9uE,QAAQ,OAAOlrB,GAAG,uBAAuBzK,QAAS,kBAAMg3B,GAAkB,KAAlF,SACG5uC,EAAE,6BAEH,UAGR,cAAC,KAAD,CACED,MAAO8yE,GAAiB1xE,KAAMw/B,QAC9BynB,YAAa80D,GACbx2C,MAAOnmC,IAAqBp/B,KAAMq/B,QAAUw8E,GAAYnsG,EAAQ7Q,EAAE,kBAAoBA,EAAE,MACxFymE,eAAe,EACfx4C,SAAUw2B,EAAWtjD,KAAMw/B,QAC3BgmC,iBAAkBi5C,GAClB94C,cAAeriB,EAAWtjD,KAAMq/B,OAChCne,GAAG,yBAEF,eAAC,IAAD,CAAM2vB,WAAW,SAASX,eAAe,gBAAzC,UACe,cAAC,IAAD,CAAS75B,MAAM,UAAUhX,MAAM,SAE3C,eAAC,IAAD,CAAMwxC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACZ,eAAC,IAAD,CAAQgD,GAAG,IAAIzxC,MAAO,GAAK20E,OAAQ,GAAK3kC,KAAK,wEAAwEjD,QAAQ,YAAYG,GAAI,GAA7I,UACA,cAAC,GAAD,UACE,qBAAK8oB,IAAI,uBAAuBxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAErEn1E,EAAE,UAEH,eAAC,IAAD,CAAQiyC,GAAG,IAAIzxC,MAAO,IAAM20E,OAAQ,GAAI3kC,KAAK,wEAAwEjD,QAAQ,YAA7H,UACA,cAAC,GAAD,UACE,qBAAKipB,IAAI,6BAA6BxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAE3En1E,EAAE,uBAKIq8G,GAA8B,OAAdz7E,IAAuBo8E,EACtC,qCACE,eAAC,KAAD,CAASt8G,QAAQ,gBAAgB2zB,MAAO,CAAE1zB,QAAS,UAAnD,UACE,cAAC,GAAD,CAAc61G,WAAW,EAAzB,SACE,cAAC,IAAD,CAAeh2G,MAAM,WAEvB,cAAC,IAAD,CAAQ+sC,QAAQ,OAAOlrB,GAAG,0BAA0BzK,QAAS,kBAAMg3B,GAAkB,OAArF,SACG5uC,EAAE,sBAGP,cAAC,GAAD,CAAmBqiB,GAAG,YAAYtiB,MAAO6gC,EAAWiP,SAAUjB,QAE9D,KAEHouE,EAAW,KACV,eAAC,KAAD,CAAY/7G,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,UAAxC,UACG+lB,QAAQ7V,IACP,eAAC,KAAD,CAAYpQ,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,WACV,cAAC,GAAD,CACEowE,MAAK,OAAEv/D,QAAF,IAAEA,OAAF,EAAEA,EAAOsrC,eACdu7D,aAAcA,GACdC,gBAAiBA,QAItBhtE,IAAoBlc,MACnB,eAAC,KAAD,CAAYhuB,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,wBACV,eAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAM,UAAjB,UACGmzB,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAK+E,GAAG,OAAR,UACGmwE,GACC,cAAC,IAAD,CAAQr/G,MAAM,OAAOwuE,UAAQ,EAAC//B,GAAG,MAAjC,SACGjvC,EAAE,uBAEF6c,EAEDmgG,EACF,cAAC,IAAD,CAAQx8G,MAAM,OAAOwuE,SAAUtoD,QAAQq2F,GAAiBnlG,QAASklG,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUhpF,MAAO,CAAEsoC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAMnlD,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,4CAEJ0uC,IACC,cAAC,KAAD,CAAMl3B,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,uCAIP8+G,GACF,eAAC,KAAD,WACE,cAAC,IAAD,CACEvxE,QAAS5N,KAAauJ,KAAcS,SAAW,UAAY,UAC3D/xB,QAAS2lG,GACTvuC,SAAUrvC,KAAauJ,KAAcY,cAAgB0zE,GACrDh9G,MAAM,MAJR,SAMGm/B,KAAauJ,KAAcW,QAC1B,eAAC,KAAD,CAAS5oC,IAAI,MAAMP,QAAQ,SAA3B,UACGV,EAAE,YADL,IACkB,cAACywC,GAAA,EAAD,CAAc+R,OAAO,aAErCg7D,IAAqB79E,KAAauJ,KAAcS,SAClD3pC,EAAE,WAEFA,EAAE,iBAAkB,CAAE+8D,MAAK,oBAAEtY,EAAWtjD,KAAMq/B,cAAnB,aAAE,EAAyB92B,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACE6jC,QAASklC,IAAWylC,GAAsB,EAAI,SAAW,UACzDtgG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJv/G,MAAM,MACN6hB,GAAG,cACH2sD,UACGyD,IAAW9yC,KAAauJ,KAAcS,UAAauuE,GAAsB,IAAMmE,EAlBpF,SAsBMr8G,EADHk4G,GAAsB,IAAMmE,EACvB,oBACFnE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE3qE,QAASklC,IAAWylC,GAAsB,IAAMyG,GAAoB,SAAW,UAC/E/mG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJ19F,GAAG,cACH7hB,MAAM,OACNwuE,UAAWyD,IAAYylC,GAAsB,IAAMmE,KAAmBsC,GAjBxE,SAmBGrC,IACEpE,GAAsB,IAAMmE,EAA5B,wBAGGr8G,EADAk4G,GAAsB,EACpB,cACA,WAxFV,cAACl6E,GAAA,EAAD,CAAqBx9B,MAAM,SA2F5Bs+G,IACC,cAACn2G,GAAA,EAAD,CAAQ0rB,MAAO,CAAEkhD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAeykC,MAAO,CAACr6E,KAAauJ,KAAcS,cAGrD0yE,GAAgB7E,GAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,KAAuB,cAIzFqI,GAGA,cAACxpD,GAAA,EAAD,CAA2B5R,WAAY,CAACA,EAAWjkB,MAAOikB,EAAW9jB,UAFrE,cAAC,GAAD,CAA6B9vB,MAAOA,O,sDE1iBtCs1D,GAAa7lE,KAAOU,IAAV,yLAKM,qBAAG6zB,MAAkBG,OAAOG,iBAK5C8gF,GAAe31G,KAAOU,IAAV,iPAKI,gBAAG2c,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOC,cACtD,qBAAGtX,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGkX,MAAkBG,OAAOG,iBAG5C+gF,GAAiB51G,KAAOU,IAAV,6DAKdgkE,GAAQ1kE,KAAO82D,MAAV,6kBAMW,qBAAGviC,MAAkBG,OAAOG,iBACtB,qBAAGxX,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOmb,WAMjE,qBAAGtb,MAAkBG,OAAOmhF,gBAe5B,qBAAGthF,MAAkBG,OAAOmhF,gBAI1B,SAASC,GAAT,GAUX,IATF/zF,EASC,EATDA,GACAtiB,EAQC,EARDA,MACA8vC,EAOC,EAPDA,SAQQhsC,EAAYH,cAAZG,QAEA7D,EAAMC,eAAND,EAER,EAAmCorC,aAAOrrC,GAAlCyE,EAAR,EAAQA,QAAS8iB,EAAjB,EAAiBA,QAASkP,EAA1B,EAA0BA,KAEpBuyD,EAAc/pF,uBAClB,SAACmmE,GACC,IACMkxC,EADQlxC,EAAME,OAAOtlE,MACCH,QAAQ,OAAQ,IAC5CiwC,EAASwmE,KAEX,CAACxmE,IAGGlyB,EAAQ+I,QAAQ3mB,EAAMgnB,OAAS,IAAMO,IAAY9iB,GAEvD,OACE,cAAC,GAAD,CAAY6d,GAAIA,EAAhB,SACE,cAAC,GAAD,CAAc1E,MAAOA,EAArB,SACE,cAAC,GAAD,UACE,eAAC,KAAD,CAAY1c,IAAI,KAAhB,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAOjB,EAAE,eACRwE,GAAWX,GACV,eAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,aAAc,OAACsK,QAAD,IAACA,IAAQhyB,EAAS,UAAWX,GAAtE,cACI7D,EAAE,mBADN,UAKJ,cAAC,GAAD,CACEsnE,UAAU,0BACVn7C,KAAK,OACLo5C,aAAa,MACbC,YAAY,MACZ8wC,eAAe,MACf1wC,WAAW,QACXV,YAAallE,EAAE,8BACf2d,MAAOA,EACP8nD,QAAQ,wBACR51B,SAAUk5C,EACVhpF,MAAOA,a,4DCpHR+zB,GAAUxzB,KAAOU,IAAV,wEAKPu1G,GAAej2G,KAAOU,IAAV,yDAGrB,qBAAGw1G,UAECvyB,aADK,iIAOL,QAGKwyB,GAAYn2G,aAAO4lF,KAAP5lF,CAAH,8CACX,gBAAGu0B,EAAH,EAAGA,MAAO6hF,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd7hF,EAAMG,OAAOqb,QACA,IAAbqmE,EACA7hF,EAAMG,OAAO2hF,QACA,IAAbD,EACA7hF,EAAMG,OAAOU,KACbb,EAAMG,OAAOlN,WAGR8uF,GAAuBt2G,KAAOu2G,OAAV,qcAGX,qBAAGhiF,MAAkBG,OAAOC,cAQvC,qBAAGJ,MAAkBG,OAAOU,QAOf,qBAAGb,MAAkBG,OAAOO,YAG5B,qBAAGV,MAAkBG,OAAOO,YAKvCuhF,GAAgBx2G,aAAO4lF,MAAMjgB,MAAM,CAAE2gB,UAAU,GAA/BtmF,CAAH,gDAIpBy2G,GAAyBz2G,KAAOU,IAAV,gUACN,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAQX,qBAAGxb,MAAkBG,OAAOqb,WASjC2mE,GAAsC12G,KAAOU,IAAV,mNACnB,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAUf,SAAS4mE,GAAT,GAA0D,IAA7Bt5F,EAA4B,EAA5BA,MAClC,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAWnd,MAAM,WAEnB,4BAAImd,OAKH,I,GAAMu5F,GAAwB52G,aAAOuI,KAAPvI,CAAH,yHACZ,gBAAGu0B,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAO2hF,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3C97D,EAA0C,EAA1CA,YAC7C,OACE,cAAC,GAAD,CAAWhM,SAAS,OAAOqnE,SAAU16D,aAAgBX,GAArD,SACGA,EAAeA,EAAYzR,SAAShb,MAAY,SAAjC,UAA+CysB,EAAYh5C,QAAQ,GAAnE,KAA4E,MCKlG,IAAM+0G,GAA2B92G,aAAOuI,KAAPvI,CAAH,iJAGX,qBAAGu0B,MAAkBgoE,MAAMwa,WACxB,qBAAGxiF,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGnC,SAASqiF,GAAT,GAYX,IAAD,QAXDzmG,EAWC,EAXDA,MACA0mG,EAUC,EAVDA,UACA5sE,EASC,EATDA,gBACA6sE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwC95G,oBAAkB,GAA1D,mBAAO+5G,EAAP,KAAqBC,EAArB,KACM/tD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAACA,EAAiB95B,IAEpB,EAAiDiQ,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA3FyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBy7D,EAAW16D,aAAgBV,GAEjC,OACE,qCACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAY76C,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM4uC,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACThb,MAAO,CACLgd,eAAgB,SAChBW,WAAY,SACZo1B,QAAS,OACTzK,UAAW,QACXi7C,YAAa,QAPjB,UAUG37D,aAAqBprC,EAAO6mG,GAC7B,cAAC,GAAD,CAAsB9/F,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,iBAK3B,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM6uC,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,aAAUC,YAAc,mBAAqB,iBAEpE,cAACriF,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,eAAC,KAAD,WACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,aAAUC,YAA9B,oBACGluD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,UADxD,QAC8D,IAD9D,oBAEGuN,EAAwBzoD,KAAMq/B,cAFjC,aAEG,EAAsC6b,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMhN,SAAS,OAAO08C,WAAW,MAAjC,SACGl7E,EAAMktD,YAAc85C,aAAUC,YAC3BjnG,EAAMyrC,aAAaruB,SAASvkB,OAC5BmH,EAAM4qC,YAAYxtB,SAASvkB,eAIrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAf,0BACA,cAAC5Z,GAAA,EAAD,CAAgBC,KAAK,4EAA4Eia,GAAG,WAEtG,cAAC,GAAD,CAAsB0L,YAAaC,OAErC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAAC5Z,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACE6jC,QAASmpE,EAAW,EAAI,SAAW,UACnC9+F,QAAS2/F,EACTvoC,SAAUyoC,EACV/nE,GAAG,OACHrtB,GAAG,uBACH7hB,MAAM,OANR,SAQGk2G,EAAW,EAAI,cAAgB,iBAGjCc,EAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,IAAuB,W,cCvH9D,SAASO,GAAT,GAYX,IAAD,IAXDlnG,EAWC,EAXDA,MACA85B,EAUC,EAVDA,gBACA/J,EASC,EATDA,UACAo3E,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMruD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAAC95B,EAAO85B,IAEF2Q,EAA0Bx6B,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA5EyqC,sBACF48D,EAAsBl8D,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAYr6C,IAAI,KAAhB,UACE,eAAC,KAAD,CAAYR,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAM4qC,YAAYxtB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MAAOwgG,GAAqBnnG,EAAMktD,YAAc85C,aAAUM,aAAe,UAAY,OAFvF,SAIGtnG,EAAM4qC,YAAYY,cAAc,QAGrC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAM4qC,YAAYxtB,SAASvkB,cAIlC,cAAC,KAAD,UACE,cAAC,IAAD,CAAelJ,MAAM,OAAOmvC,GAAG,UAEjC,eAAC,KAAD,CAAYlvC,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAMyrC,aAAaruB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MACE0gG,EAAsB,EAClB,UACAF,GAAqBnnG,EAAMktD,YAAc85C,aAAUC,YACnD,UACA,OAPR,SAUGjnG,EAAMyrC,aAAaD,cAAc,QAGtC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAMyrC,aAAaruB,SAASvkB,cAIlCsuG,EACC,cAAC,GAAD,CAAuBt3G,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAWysC,GAAG,QACd,cAAC,KAAD,CAAM0B,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQx3B,QAASqgG,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAYv3G,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACGkQ,EAAMktD,YAAc85C,aAAUC,YAC7B,eAAC,KAAD,CAAM1hD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,4DAEE,wCACGopD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,GADxD,IAC6DxrC,EAAMyrC,aAAaruB,SAASvkB,UAExF,sCAGH,eAAC,KAAD,CAAM0sD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,uDAEE,wCACGopD,EAAwBzoD,KAAMq/B,cADjC,aACG,EAAsC6b,cAAc,GADvD,IAC4DxrC,EAAM4qC,YAAYxtB,SAASvkB,UAEtF,wCAIQ,OAAdk3B,EACC,cAAC,KAAD,CAAYlgC,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAM6W,MAAM,aAAZ,mCACyB,IACvB,mBAAGs3B,MAAOlO,EAAV,SAAsB3U,aAAU2U,GAAavU,aAAeuU,GAAaA,SAG3E,QCzEV,IA4Eew3E,GA5EgE,SAAC,GAYzE,IAAD,oBAXJvnG,EAWI,EAXJA,MACAwnG,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAttE,EAQI,EARJA,gBACA4sE,EAOI,EAPJA,UACAppE,EAMI,EANJA,UACAmvB,EAKI,EALJA,gBACA18B,EAII,EAJJA,UACA42E,EAGI,EAHJA,iBACAj6C,EAEI,EAFJA,cACAoV,EACI,EADJA,OAEMqlC,EAAoBl3F,mBACxB,kBAAM4F,QAAQ7V,GAASwnG,IApCsBx6C,EAoC2Bw6C,GApC1Cz6C,EAoCmC/sD,GAlC1DktD,YAAcF,EAAOE,YAC3Bp3B,0BAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D2vC,EAAOniB,YAAYuiB,QAAQH,EAAOpiB,eAClC9U,0BAAei3B,EAAOthB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,YACjE2vC,EAAOthB,aAAa0hB,QAAQH,EAAOvhB,gBANxC,IAAkCshB,EAAeC,IAqC7C,CAACw6C,EAAexnG,IAGV7Q,EAAMC,eAAND,EAEFi0E,EAAcj1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACEA,MAAOA,EACP85B,gBAAiBA,EACjB/J,UAAWA,EACXo3E,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACttE,EAAiBstE,EAAiBr3E,EAAWo3E,EAAmBnnG,IAE9DsjE,EAAcn1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACE0mG,UAAWA,EACX1mG,MAAOA,EACP4mG,gBAAiBO,EACjBR,iBAAkBA,EAClB7sE,gBAAiBA,IAEjB,OACH,CAACA,EAAiB4sE,EAAWS,EAAmBR,EAAkB3mG,IAG/D6rD,EAAc18D,EAAE,uDAAwD,CAC5Eo0E,QAAO,iBAAEvjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDg4B,QAAO,iBAAExjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,iBAAE,EAAoBxtB,gBAAtB,aAAE,EAA8BvkB,cAAhC,QAA0C,GACjD4qE,QAAO,iBAAEzjE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClDk4B,QAAO,iBAAE1jE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,iBAAE,EAAqBruB,gBAAvB,aAAE,EAA+BvkB,cAAjC,QAA2C,KAG9C4uG,EAAsBt5G,uBAC1B,kBACEw4G,EACE,cAAC,KAAD,CAAyBrpE,UAAWA,EAAWorB,QAASi+C,IAExD,cAAC,KAAD,CAA0Bt6C,WAAY+W,EAAahX,cAAekX,MAEtE,CAAChmC,EAAWgmC,EAAaF,EAAaujC,IAGxC,OACE,cAAC,KAAD,CACE1oE,MAAO9uC,EAAE,gBACTmuC,UAAWA,EACXmvB,gBAAiBA,EACjBC,cAAeA,EACf79B,KAAMizC,EACNnV,QAAS86C,EACT57C,YAAaA,EACbG,cAAa,OAAEhsD,QAAF,IAAEA,OAAF,EAAEA,EAAOyrC,aAAaruB,Y,6BCxG1B0M,mBAAK,YAAiD,IAA5B9pB,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMyoE,SAAS,OAAO94E,MAAM,OAAO6wC,eAAe,WAAWW,WAAW,SAAxE,SACGnhC,EAAMqqC,MAAMyN,KAAKlqC,KAAI,SAACsB,EAAO6W,EAAG+xB,GAC/B,IAAMkwD,EAAsBjiF,IAAM+xB,EAAK5hC,OAAS,EAC1CkH,EAAW8a,aAAehpB,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMiyB,WAAW,MAAjB,SACE,cAAC,KAAD,CAAM3C,SAAS,OAAOM,GAAG,WAAWjC,GAAG,WAAvC,SACGzf,EAASvkB,YAGZmvG,GAAc,cAAC,IAAD,CAAkBr4G,MAAM,WAN3Bo2B,WCDzB,SAASkiF,GAAT,GAA8F,IAAD,QAArEjoG,EAAqE,EAArEA,MAAO85B,EAA8D,EAA9DA,gBAC7B,EAAiDqQ,aAA2BnqC,GAApEyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBkO,EAAYt4C,EAAMktD,YAAc85C,aAAUC,YAC1CluD,EAA0Bhf,aAA+B/5B,EAAO85B,GAEtE,OACE,eAAC,KAAD,CAAYtW,MAAO,CAAE1zB,QAAS,UAA9B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM0uC,SAAS,OAAO73B,MAAM,aAA5B,SACG2xC,EAAY,mBAAqB,iBAEpC,cAAC1zB,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,cAAC,KAAD,UACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG8Z,EAAS,8BACHS,EAAwBzoD,KAAMw/B,eAD3B,aACH,EAAuC0b,cAAc,GADlD,YACwDxrC,EAAMyrC,aAAaruB,SAASvkB,eADpF,QAEN,IAFM,8BAGHkgD,EAAwBzoD,KAAMq/B,cAH3B,aAGH,EAAsC6b,cAAc,GAHjD,YAGuDxrC,EAAM4qC,YAAYxtB,SAASvkB,eAHlF,QAG8F,WAI9G,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,0BAGA,cAACie,GAAA,EAAD,CACEC,KAAK,iFACLia,GAAG,WAGP,cAAC,GAAD,CAAsB0L,YAAaC,OAGrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAO73B,MAAM,aAA5B,oCAGA,cAACie,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAW/F,SAASqvG,GAAT,GAAmE,IAApCloG,EAAmC,EAAnCA,MACpC,EAA0BinB,eAAnB6S,EAAP,oBAEMquE,EAAYtyF,QAAQ7V,GAASA,EAAMqqC,MAAMyN,KAAK5hC,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY9lB,IAAI,MAAhB,SACG4P,GACC,qCACE,cAAC,GAAD,CAAcA,MAAOA,EAAO85B,gBAAiBA,IAC5CquE,GACC,mCACE,eAAC,KAAD,CAAY3kF,MAAO,CAAE1zB,QAAS,UAA9B,UACE,uBAAM0zB,MAAO,CAAE+yC,QAAS,OAAQp1B,WAAY,UAA5C,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO73B,MAAM,aAA5B,mBAGA,cAACie,GAAA,EAAD,CACEC,KAAK,0EACLia,GAAG,WAGP,cAAC,GAAD,CAAW9+B,MAAOA,c,oBChG5BooG,GAAwB34G,KAAOU,IAAV,0PACX,qBAAGivC,KAAmB,OAAS,KAMzB,qBAAGpb,MAAkBG,OAAOghC,oBAEnC,qBAAG/lB,KAAmB,iBAAmB,uBAIzC,SAASipE,GAAT,GAAoF,IAAD,EAA5CroG,EAA4C,EAA5CA,MAAU4xC,EAAkC,mBAC1F02D,EAAYX,GAAc3nG,GAEhC,OACE,cAAC,GAAD,CAAuBo/B,KAAMvpB,QAAQ7V,GAArC,SACE,cAAC,GAAD,6BAAyB4xC,GAAzB,IAA+B5xC,MAAK,iBAAEA,QAAF,IAAEA,IAASsoG,SAAX,aAAwB37G,OCZnD,SAAS47G,GAAT,GAAgF,IAAD,UAAzDhpC,EAAyD,EAAzDA,MAAOsnC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAGtnC,QAAH,IAAGA,OAAH,EAAGA,EAAO/zB,cAAc,GAAxB,OAA6B+zB,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOh0B,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFpM,EAAOvpB,SAAa,OAAL0pD,QAAK,IAALA,OAAA,EAAAA,EAAOkpC,gBAAP,OAAuBlpC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOmpC,gBAC7C7yC,EAAQgxC,EAAY,iBACnBtnC,QADmB,IACnBA,GADmB,UACnBA,EAAOmpC,qBADY,aACnB,EAAsB7vG,OADH,uBACiB0mE,QADjB,IACiBA,GADjB,UACiBA,EAAOkpC,oBADxB,aACiB,EAAqB5vG,QADtC,iBAEnB0mE,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOkpC,oBAFY,aAEnB,EAAqB5vG,OAFF,uBAEgB0mE,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOmpC,qBAFvB,aAEgB,EAAsB7vG,QAEhE,OACE,cAAC,KAAD,CAAM2qB,MAAO,CAAEgd,eAAgB,SAAUW,WAAY,SAAUo1B,QAAS,QAAxE,SACGn3B,EACC,4CACGopE,QADH,IACGA,IAAkB,IADrB,IAC2B3yC,EACzB,cAAC,GAAD,CAAsB9uD,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,cAIzB,M,0BCFOg5G,GAjBkC,SAAC,GAAqC,IAAnC50G,EAAkC,EAAlCA,OAAQupC,EAA0B,EAA1BA,UAAWsrE,EAAe,EAAfA,SACrE,OACE,cAAC,KAAD,CACE3qE,MAAM,eACNX,UAAW,WACLA,GACFA,IAEFsrE,KAEFplF,MAAO,CAAE2a,SAAU,SARrB,SAUE,cAAC,KAAD,CAAapqC,OAAQA,EAAQ6pE,qBAAsBtgC,O,wBCjBnDurE,GAAWp5G,aAAOQ,KAAPR,CAAH,8CAIRq5G,GAASr5G,KAAOU,IAAV,2PAGU,gBAAG6zB,EAAH,EAAGA,MAAOsc,EAAV,EAAUA,UAAV,SAAqB69B,SAC5Bn6C,EAAMG,OAAO2nE,mBAAqBxrD,EAAYtc,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAU3FypE,GAAYt5G,KAAOU,IAAV,sGAMT64G,GAAYv5G,KAAOU,IAAV,0KAKT,gBAAG6zB,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SACZn6C,EAAMG,OAAO2nE,mBAAqBmd,EAAgBjlF,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAEnG,gBAAGtb,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SAEnBn6C,EAAMG,OAAO2nE,mBACbmd,EACAjlF,EAAMG,OAAOmb,QACbtb,EAAMG,OAAO2nE,sBAqBV,SAASod,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDhrC,gBAAmD,SAA9BvsB,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAY/hD,QAAQ,UAAa+hD,GAAjC,aACE,eAAC,GAAD,WACGu3D,EAAMv7F,KAAI,SAACgiF,EAAM7pE,GAChB,OAEE,cADA,CACC,GAAD,WACE,cAAC,GAAD,CAAQua,UAAWsvD,EAAMzxB,SAAUA,IAAcgrC,EAAMpjF,EAAI,IAAY,IAANA,EAAjE,SACG6pE,EAAO,SAAM7pE,EAAI,IAEpB,cAAC,GAAD,CAAWkjF,cAAerZ,EAAMzxB,SAAUA,MAJ5Bp4C,MAQpB,cAAC,GAAD,CAAQo4C,SAAUA,IAAagrC,EAAMA,EAAMjzF,OAAS,GAApD,SAAyDizF,EAAMjzF,OAAS,U,IClEpEkzF,G,wCA6BZ,SAASC,GACPrpG,GAGa,IAFb85B,EAEY,uDAFclc,KAC1B0rF,EACY,uCACZ,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsCwnC,aAAO+uE,GAA5BC,EAAjB,EAAQ51G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EACxDzhF,EAAWi9B,eAEjB,OAAO90C,mBAAQ,WACb,IAAKjQ,IAAU+vB,IAAch9B,IAAYiZ,IAAYhZ,IAAY80B,EAAU,MAAO,GAElF,IAAMnf,EAA4Bwd,aAAmBnzB,EAASD,EAASiZ,GACvE,IAAKrD,EACH,MAAO,GAGT,IAAM6gG,EAAc,GAsBpB,OApBAA,EAAYl4E,KACVm4E,UAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,WAAQC,QAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAId2O,EAAMktD,YAAc85C,aAAUC,aAChCuC,EAAYl4E,KACVm4E,UAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,WAAQC,QAAKC,OAAO2d,GAAkB9b,MAC3D+R,YACA2N,IAAK5V,EAASz2B,cAKbm4G,EAAY57F,KAAI,SAACg8F,GAAD,MAAiB,CAAEA,aAAYjhG,iBACrD,CAACqD,EAAS8tB,EAAiB9mC,EAAS80B,EAAU/0B,EAASg9B,EAAW/vB,K,SAvE3DopG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCJAS,G,wCAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,mDCK7BE,GAfS,WACtB,IAAQ76G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMivC,GAAG,OAAT,oBAAmBjvC,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJF86G,GANO,WACpB,IAAQ96G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BH+6G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjDh7G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAOs9G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAM7pE,eAAe,gBAArB,UACE,eAAC,IAAD,CAAMW,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASqrE,EACTprE,SAAU,kBAAMqrE,GAAgBD,IAChC3pE,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,qBAIP,cAAC,IAAD,CAAQgvE,UAAWisC,EAAarjG,QAASojG,EAAzC,SACGh7G,EAAE,oBCjBPktF,GAAuB5sF,aAAO6sF,KAAP7sF,CAAH,oDAIpB66G,GAAmB76G,aAAO86G,KAAP96G,CAAH,2FAgEP+6G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAcntE,EAAgB,EAAhBA,UACjEnuC,EAAMC,eAAND,EACA60B,EAAUH,eAAVG,MArBR52B,qBAAU,WACR,IAAMs9G,EAAsB,SAAC9uC,GAG3B,OAFAA,EAAEuY,kBACFvY,EAAE+uC,kBACK,GAOT,OAJArtC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGrtC,iBAAiB,QAASktC,GAAqB,MAG7C,WACLptC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGptC,oBAAoB,QAASitC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBp3G,aAAWq3G,GAAwB7lG,SAASvR,SAAW,CACtDkF,OAAQkyG,GAAwB7lG,SAASrM,OACzCurE,UAAW,cAAC,GAAD,MAHK,eAKjB1wE,aAAWq3G,GAAwB9pG,OAAOtN,SAAW,CACpDkF,OAAQkyG,GAAwB9pG,OAAOpI,OACvCurE,UAAW,cAAC,GAAD,MAPK,GAWgBqmC,EAAa92G,SAEjD,OACE,eAAC,GAAD,CAAsB8wE,SAAS,QAA/B,UACE,cAAC,KAAD,CAAargD,WAAYJ,EAAMG,OAAOC,WAAtC,SACE,cAAC,IAAD,CAAS+E,EAAE,YAAX,SAAwBh6B,EAAE,8BAA+B,CAAE0J,OAAQiyG,EAAajyG,aAElF,eAAC,KAAD,CAAWswB,EAAE,OAAb,UACE,cAAC,GAAD,CAAkBuT,QAAQ,UAAU0B,GAAG,OAAvC,SACE,cAAC,IAAD,UAAM0sE,EAAa1mC,cAErB,cAAC,GAAD,CAAiB+lC,oBAAqB7sE,WC5BxC0tE,GAAQv7G,aAAO4lF,KAAP5lF,CAAH,wFAGA,qBAAGu0B,MAAkBG,OAAOk5D,aAEjC4tB,GAAex7G,KAAOU,IAAV,yGAGhB,qBAAG6zB,MAAkBurC,aAAapI,MAKlB13D,KAAO8qE,IAAV,uDAGE9qE,aAAOoxC,IAAPpxC,CAAH,kHAGe,qBAAGu0B,MAAkBG,OAAOK,cAErD,gBAAGR,EAAH,EAAGA,MAAH,SAAUorF,eAAiC,4BAAyBprF,EAAMG,OAAO2hF,QAAtC,UAGhC,SAASuJ,KAAU,IAAD,sBACzBlE,EAAkBzxD,eAEhBvqD,EAAMC,eAAND,EACFgxE,EAAUC,eAIhB,GAHiBxV,eAGmC,CAClD/zB,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBl7E,iBAC7B4G,aAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBj7E,oBAFxBk7E,EAAP,KAA4BC,EAA5B,KAIMC,EAA2Br7F,mBAC/B,8CAAM,CAACm7F,EAAqBC,UAA5B,aAAM,EAA6C11F,QAAO,SAACC,GAAD,OAAmBA,aAAa1d,mBAA1F,QAAoG,KACpG,CAACkzG,EAAqBC,IAIlBluF,EAAgB2L,eAChByiF,EACJD,GACAA,EAAgB31F,QAAO,SAACzG,GACtB,QAASA,EAAMvb,WAAWwpB,MAGtBnR,EAAYnZ,cAAZmZ,QAGR,EAAuB0a,eAAhB8kF,EAAP,oBAGA,EAA0BvkF,eAAnB6S,EAAP,oBAGA,EAAoDsd,eAA5C1nB,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYG,EAAtC,EAAsCA,UACtC,EAA4FioB,eAApFY,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc3E,EAAjD,EAAiDA,WAAwB63D,EAAzE,EAA6DxzD,WAE7D,ELtFa,SACbC,EACAC,EACAvoB,GAEA,MAA6B/8B,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACX0/F,EAAelyF,eACfpoB,EAAU6iD,aAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWurD,GAEnDtN,EAAc36B,mBAAQ,kBAAMunC,aAAe5nB,EAAYsoB,KAAgB,CAACA,EAAetoB,IACvFjB,EAAiBwK,eAEvB,OAAOlpB,mBAAQ,WACb,IAAKy7F,IAAiB14G,IAAYklD,IAAkBC,EAAgB,OAAO2xD,GAE3E,IAAM6B,EAAoB/gE,GAAex5C,IAAYA,EAAQ2nC,SAAS6R,GAEtE,OAAIsN,IAAkB76B,UAASyY,0BAAerc,QAAKzmB,GAAUmlD,GACpD,CACL4xD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAap2D,QAAQ,CAAEpmD,MAAM,KAAD,OAAO07C,EAAYpuB,IAAIxtB,SAAS,OAFxF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,QAAD,OAAU6b,EAAYY,cAAc,GAApC,kBAHvC,gDAKI3+B,QAAQC,MAAM,oBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,4BAG5CmpC,0BAAerc,QAAKzmB,GAAUklD,IAAkBC,IAAmB96B,SAC9D,CACL0sF,SAAUF,GAASkC,OACnBF,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAaj2D,SAAb,YAA2B7K,EAAYpuB,IAAIxtB,SAAS,MAFhF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,UAAD,OAAY6b,EAAYY,cAAc,GAAtC,kBAHvC,gDAKI3+B,QAAQC,MAAM,qBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,6BAGzCm9G,KACN,CAAC4B,EAAc14G,EAASklD,EAAeC,EAAgBvN,EAAax5C,EAASu9B,IKsC5Eq9E,CAAgBp4D,EAAWtjD,KAAMq/B,OAAQikB,EAAWtjD,KAAMw/B,QAASF,GAHrEm6E,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGEj0D,WAEIk0D,EAAoBpC,IAAaF,GAASC,eAC1C9pG,EAAQmsG,OAAWx/G,EAAYisD,EAE/B4mB,EAAgB2sC,GAAQ,oBAEvB77G,KAAMq/B,MAAQ4oB,GAFS,eAGvBjoD,KAAMw/B,OAASyoB,GAHQ,wBAMvBjoD,KAAMq/B,MAAQD,IAAqBp/B,KAAMq/B,MAAQ4oB,EAAnC,OAAkDv4C,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4qC,aANhD,eAOvBt6C,KAAMw/B,OAASJ,IAAqBp/B,KAAMw/B,OAASyoB,EAApC,OAAmDv4C,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOyrC,cAPlD,GAU9B,EAAgFzN,eAAxEsZ,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,oBAAqBE,EAA7C,EAA6CA,YAAaxZ,GAA1D,EAA0DA,kBACpD6jC,IAAW6pC,EACXnrC,GAAwB5wC,IAAqBp/B,KAAMq/B,MAAQr/B,KAAMw/B,OAASx/B,KAAMq/B,MAEhFy8E,GAAkBj+G,uBACtB,SAACe,GACCqoD,EAAYjnD,KAAMq/B,MAAOzgC,KAE3B,CAACqoD,IAEG80D,GAAmBl+G,uBACvB,SAACe,GACCqoD,EAAYjnD,KAAMw/B,OAAQ5gC,KAE5B,CAACqoD,IAIH,GAAoFzqD,mBAKjF,CACDw/G,oBAAgB3/G,EAChB+/D,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IATV,8BAAS2/G,GAAT,GAASA,eAAgB3F,GAAzB,GAAyBA,iBAAkBj6C,GAA3C,GAA2CA,cAAeoV,GAA1D,GAA0DA,OAAUyqC,GAApE,MAYMvqC,IAAgB,oBACnBtyC,EAAmBE,GADA,eAEnB0wC,GAAiB6rC,EAAQ,oBACtB3sC,EAAc9vC,UADQ,aACtB,EAAiC80C,iBADX,QACwB,GADxB,oBAEtBhF,EAAcc,WAFQ,aAEtB,EAA+B90B,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrqC,QAAH,IAAGA,OAAH,EAAGA,EAAOqqC,MACfmiE,GAA8B32F,QAClC+9B,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,UAA5C,UAAuD0vC,EAAc9vC,UAArE,aAAuD,EAAiC2uC,YAAYniD,QAAKC,OAAO,MAE5GswF,IAAWpiE,GAGjB,GAAoCxQ,aAA4B75B,EAAO85B,GAAvE,qBAAOhL,GAAP,MAAiB49E,GAAjB,MAGA,GAAkD5/G,oBAAkB,GAApE,qBAAO6/G,GAAP,MAA0BC,GAA1B,MAGAx/G,qBAAU,WACJ0hC,KAAauJ,KAAcW,SAC7B4zE,IAAqB,KAEtB,CAAC99E,GAAU69E,KAEd,IAAME,GAA6CzuC,aAAevlB,EAAiBvoD,KAAMq/B,QACnFm9E,GAAmBj3F,QAAQg3F,KAAc,UAAIrtC,EAAclvE,KAAMq/B,cAAxB,aAAI,EAA4Bw9B,QAAQ0/C,MAGvF,GNjGK,SACL7sG,GAG+F,IAF/F85B,EAE8F,uDAFpElc,KAC1B0rF,EAC8F,uCAC9F,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAEpBg6G,EAAY1D,GAAqBrpG,EAAO85B,EAAiBwvE,GAEzD36E,EAAiBwK,eAENowE,EAAqBhvE,aAAO+uE,GAArC31G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EAE9D,OAAOt5F,mBAAQ,WACb,OAAKjQ,GAAUjN,GAAYiZ,GAAYhZ,EAGlC+8B,EAOE,CACL7iC,MAAOk8G,GAAkB4D,MACzBvuB,SAAS,WAAD,4BAAE,8CAAApxF,EAAA,sEAC0Ck4C,QAAQC,IACxDunE,EAAUn/F,KAAI,SAAC0I,GAAU,IAAD,EACtB,EAGIA,EAFFszF,WAAcvyF,EADhB,EACgBA,WAAY0rD,EAD5B,EAC4BA,KAAM7zE,EADlC,EACkCA,MAChCyZ,EACE2N,EADF3N,SAEI9W,GAAW3C,GAASksC,aAAOlsC,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAAyZ,EAAS2wB,aAAYjiB,GAArB,oBAAoC0rD,GAApC,QAA0ClxE,KAC9C8nC,MAAK,SAACszE,GACL,MAAO,CACL32F,OACA22F,kBAGHzzE,OAAM,SAAC0zE,GAAc,IAAD,EAGnB,OAFArgG,QAAQC,MAAM,wDAAyDwJ,IAEhE,EAAA3N,EAASwkG,YAAW91F,GAApB,oBAAmC0rD,GAAnC,QAAyClxE,KAC7C8nC,MAAK,SAACpjB,GAEL,OADA1J,QAAQC,MAAM,uDAAwDwJ,EAAM42F,EAAU32F,GAC/E,CAAED,OAAMxJ,MAAO,IAAIvd,MAAM,mEAEjCiqC,OAAM,SAAC4zE,GAAe,IAAD,EACpBvgG,QAAQC,MAAM,mBAAoBwJ,EAAM82F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAU/+G,YAA9B,aAAoB,EAAgBq6D,UAAW0kD,EAAU1kD,QAC1En3B,EAAY,8DAChB87E,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAE/2F,OAAMxJ,MAAO,IAAIvd,MAAMgiC,cA/BpC,UACF+7E,EADE,OAsCFC,EAAuBD,EAAeh/F,MAC1C,SAACu8F,EAAIhqB,EAAIt+C,GAAT,MACE,gBAAiBsoE,IAAOhqB,IAAOt+C,EAAKrsB,OAAS,GAAK,gBAAiBqsB,EAAKs+C,EAAK,OAxCzE,sBA4CA2sB,EAAaF,EAAe33F,QAAO,SAACW,GAAD,MAA8B,UAAWA,MACnEJ,OAAS,GA7ClB,sBA6C2Bs3F,EAAWA,EAAWt3F,OAAS,GAAGpJ,MA7C7D,aA8CA,IAAIvd,MAAM,8EA9CV,gBAuDJg+G,EALFj3F,KACE3N,EAnDI,EAmDJA,SAnDI,IAoDJihG,WAAcvyF,EApDV,EAoDUA,WAAY0rD,EApDtB,EAoDsBA,KAAM7zE,EApD5B,EAoD4BA,MAElC+9G,EACEM,EADFN,YAtDM,kBAyDDtkG,EAAS0O,GAAT,MAAA1O,EAAQ,YAAgBo6D,GAAhB,sBACbrpC,SAAU9d,aAAmBqxF,IACzB/9G,IAAUksC,aAAOlsC,GAAS,CAAEA,QAAOmD,KAAM2Z,GAAY,CAAE3Z,KAAM2Z,OAEhE2tB,MAAK,SAACC,GACL,IAAM6zE,EAAcztG,EAAM4qC,YAAYxtB,SAASvkB,OACzC60G,EAAe1tG,EAAMyrC,aAAaruB,SAASvkB,OAC3C+xC,EAAc5qC,EAAM4qC,YAAYY,cAAc,GAC9CC,EAAezrC,EAAMyrC,aAAaD,cAAc,GAEhDtiB,EAAI,eAAW0hB,EAAX,YAA0B6iE,EAA1B,gBAA6ChiE,EAA7C,YAA6DiiE,GACjEC,EACJ59E,IAAc/jB,EACVkd,EADJ,UAEOA,EAFP,eAGMogF,GAA0BluF,aAAUkuF,GAChC9tF,aAAe8tF,GACfA,GAOZ,OAJA36E,EAAeiL,EAAU,CACvB7K,QAAS4+E,IAGJ/zE,EAAS/K,QAEjB2K,OAAM,SAAC1sB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOupC,MACH,IAAI9mD,MAAM,0BAGhBsd,QAAQC,MAAR,cAA6BA,EAAOuK,EAAY0rD,EAAM7zE,GAChD,IAAIK,MAAJ,uBAA0Bud,EAAM47C,eA1FpC,4CAAF,kDAAC,GA8FT57C,MAAO,MAtGwB,OAA3Bw8F,EACK,CAAEp8G,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,qBAE7D,CAAE5f,MAAOk8G,GAAkB5kD,QAASi6B,SAAU,KAAM3xE,MAAO,MAN3D,CAAE5f,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,0BA2GnE,CAAC9M,EAAOjN,EAASiZ,EAAShZ,EAAS+8B,EAAWu5E,EAAwByD,EAAWp+E,IM1BvBi/E,CAAgB5tG,EAAO85B,EAAiB/J,GAAnF89E,GAAlB,GAAQpvB,SAA+BqvB,GAAvC,GAAgChhG,MAExB29B,GAA0BN,aAA2BnqC,GAArDyqC,sBAER,GAAwB3jB,eAAjB+W,GAAP,qBAEMkwE,GAAa5/G,uBAAY,WACzBs8C,KCxLO,SAAsCA,GACnD,OAAKA,EAAsB1R,SAAS3a,QAU/BqsB,EAAsB1R,SAAS5a,OAE3BkgB,OAAO26C,QAAP,mDACuC76D,KAA0B3sB,QACpE,GAFG,sEALC,YAJN6sC,OAAOC,OAAP,mDAC8ClgB,KAAqC5sB,QAC/E,GAFJ,kEDoL4Bw8G,CAA6BvjE,KAGtDojE,KAGLtB,GAAa,CAAE7/C,eAAe,EAAM4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,YAAQn1E,IACzFkhH,KACGl0E,MAAK,SAAC9K,GACL09E,GAAa,CAAE7/C,eAAe,EAAO4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,OAAQjzC,OAE3F2K,OAAM,SAAC1sB,GACNy/F,GAAa,CACX7/C,eAAe,EACf4/C,kBACA3F,iBAAkB75F,EAAM47C,QACxBoZ,YAAQn1E,UAGb,CAAC89C,GAAuBojE,GAAcvB,KAGzC,GAAwCx/G,oBAAkB,GAA1D,qBAAO+5G,GAAP,MAAqBC,GAArB,MAGMO,GAAsBl8D,aAAgBV,IAItCwjE,IACHxC,IACA38E,KAAauJ,KAAcY,cAC1BnK,KAAauJ,KAAcW,SAC1B2zE,IAAqB79E,KAAauJ,KAAcS,aACjDuuE,GAAsB,IAAMmE,GAE1B0C,GAAuB//G,uBAAY,WACvCo+G,GAAa,CAAED,kBAAgB5/C,iBAAei6C,oBAAkB7kC,YAE5DA,IACFvqB,EAAYjnD,KAAMq/B,MAAO,MAE1B,CAAC+8B,GAAenV,EAAaovD,GAAkB2F,GAAgBxqC,KAE5DqsC,GAAsBhgH,uBAAY,WACtCo+G,GAAa,CAAED,eAAgBtsG,EAAO2mG,oBAAkB7kC,UAAQpV,qBAC/D,CAACA,GAAei6C,GAAkB3mG,EAAO8hE,KAG5C,GAAsDh1E,mBAAS,MAA/D,qBAAOshH,GAAP,MAA4BC,GAA5B,MACA,GAAoCnvE,aAAS,cAAC,GAAD,CAAkBurE,aAAc2D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAC9D,GAC7B,IAAM+D,EAAiB//G,OAAOwzG,QAAQkD,IAAmB72F,MAAK,SAACmgG,GAC7D,IAAMC,EAAmBD,EAAmB,GACtCE,EAAsBj7G,aAAWg7G,EAAiB/6G,SACxD,OAAO82G,EAAa92G,UAAYg7G,KAElC,OAAO94F,QAAQ24F,IAGjBphH,qBAAU,WACJghH,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBzgH,uBACxB,SAAC+pD,GACC00D,IAAqB,GACrBv1D,EAAoB/mD,KAAMq/B,MAAOuoB,GACjC,IAAM22D,EAAkBN,GAAsBr2D,GAE5Cm2D,GADEQ,EACqB32D,EAEA,QAG3B,CAACb,IAGGy3D,GAAiB3gH,uBAAY,WAC7B0+G,IACFt1D,EAAYjnD,KAAMq/B,MAAOk9E,GAAeroC,aAEzC,CAACqoC,GAAgBt1D,IAEdw3D,GAAqB5gH,uBACzB,SAACgqD,GACCd,EAAoB/mD,KAAMw/B,OAAQqoB,GAClC,IAAM02D,EAAkBN,GAAsBp2D,GAE5Ck2D,GADEQ,EACqB12D,EAEA,QAI3B,CAACd,IAGG23D,GAAoBjgD,aAA2B,OAACnb,QAAD,IAACA,OAAD,EAACA,EAAYjkB,MAAb,OAAoBikB,QAApB,IAAoBA,OAApB,EAAoBA,EAAY9jB,QAErF,GAA2CoP,aACzC,cAAC,GAAD,CAAyBnrC,OAAQw3G,EAA0B3C,SAAU,kBAAMzoC,EAAQ7uC,KAAK,eADnF29E,GAAP,qBAIA7hH,qBAAU,WACJm+G,EAAyBr1F,OAAS,GACpC+4F,OAGD,CAAC1D,EAAyBr1F,SAE7B,OAAgCgpB,aAC9B,cAAC,GAAD,CACEl/B,MAAOA,EACPwnG,cAAe8E,GACflF,gBAAiB+G,GACjBzhD,cAAeA,GACfoV,OAAQA,GACR/xC,UAAWA,EACX+J,gBAAiBA,EACjB4sE,UAAWqH,GACXpH,iBAAkBA,GAClBl6C,gBAAiByhD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBAgCA,OACE,eAAC,KAAD,WAEE,eAAC,KAAD,CAAU9qC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAY2nC,QAAS,cAAC,IAAD,IAA/C,UACrB,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAF9C,YAArB,UAKM,eAAC,KAAD,CAAe2xC,GAAG,WAAWF,GAAIC,KAAM16B,MAAM,OAA7C,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,cAEL,eAAC,KAAD,CAAcmyC,GAAG,QAAQF,GAAIC,KAAM16B,MAAM,OAAzC,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SAEnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,kBAEL,eAAC,KAAD,CAAemyC,GAAG,cAAcF,GAAIC,KAAM16B,MAAM,OAAhD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,oBAGX,eAAC,KAAD,WACE,cAAC,KAAD,CAAW8uC,MAAO9uC,EAAE,YAAa4xC,SAAU5xC,EAAE,gCAC7C,eAAC,GAAD,CAASqiB,GAAG,YAAZ,UACE,eAAC,KAAD,CAAYphB,IAAI,KAAhB,UACE,cAAC,KAAD,CACEylE,MAAOnmC,IAAqBp/B,KAAMw/B,SAAWq8E,GAAYnsG,EAAQ7Q,EAAE,oBAAsBA,EAAE,QAC3FD,MAAO8yE,GAAiB1xE,KAAMq/B,OAC9BimC,eAAgBk3C,GAChB1vF,SAAUw2B,EAAWtjD,KAAMq/B,OAC3B4nB,YAAa60D,GACbz2C,MAAOm5C,GACPh5C,iBAAkB84C,GAClB34C,cAAeriB,EAAWtjD,KAAMw/B,QAChCte,GAAG,wBAEL,cAAC,KAAD,CAAY3hB,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAAS27G,EAAe,gBAAkB,SAAUhoF,MAAO,CAAE1zB,QAAS,UAA/E,UACE,cAAC,GAAD,CAAc61G,WAAS,EAAvB,SACE,cAAC,IAAD,CACEh2G,MAAM,OACNoX,QAAS,WACP6lG,IAAqB,GACrBt1D,KAEF3wC,MAAOitC,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,QAAU,UAAY,WAG9D,OAAdC,IAAuBo8E,GAAYX,EAClC,cAAC,IAAD,CAAQ9uE,QAAQ,OAAOlrB,GAAG,uBAAuBzK,QAAS,kBAAMg3B,GAAkB,KAAlF,SACG5uC,EAAE,6BAEH,UAGR,cAAC,KAAD,CACED,MAAO8yE,GAAiB1xE,KAAMw/B,QAC9BynB,YAAa80D,GACbx2C,MAAOnmC,IAAqBp/B,KAAMq/B,QAAUw8E,GAAYnsG,EAAQ7Q,EAAE,kBAAoBA,EAAE,MACxFymE,eAAe,EACfx4C,SAAUw2B,EAAWtjD,KAAMw/B,QAC3BgmC,iBAAkBi5C,GAClB94C,cAAeriB,EAAWtjD,KAAMq/B,OAChCne,GAAG,yBAEF,eAAC,IAAD,CAAM2vB,WAAW,SAASX,eAAe,gBAAzC,UACe,cAAC,IAAD,CAAS75B,MAAM,UAAUhX,MAAM,SAE3C,eAAC,IAAD,CAAMwxC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACZ,eAAC,IAAD,CAAQgD,GAAG,IAAIzxC,MAAO,GAAK20E,OAAQ,GAAI3kC,KAAK,oEAAoEjD,QAAQ,YAAYG,GAAI,GAAxI,UACA,cAAC,GAAD,UACE,qBAAK8oB,IAAI,uBAAuBxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAErEn1E,EAAE,UAEH,eAAC,IAAD,CAAQiyC,GAAG,IAAIzxC,MAAO,IAAM20E,OAAQ,GAAI3kC,KAAK,oEAAoEjD,QAAQ,YAAzH,UACA,cAAC,GAAD,UACE,qBAAKipB,IAAI,6BAA6BxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAE3En1E,EAAE,uBAKIq8G,GAA8B,OAAdz7E,IAAuBo8E,EACtC,qCACE,eAAC,KAAD,CAASt8G,QAAQ,gBAAgB2zB,MAAO,CAAE1zB,QAAS,UAAnD,UACE,cAAC,GAAD,CAAc61G,WAAW,EAAzB,SACE,cAAC,IAAD,CAAeh2G,MAAM,WAEvB,cAAC,IAAD,CAAQ+sC,QAAQ,OAAOlrB,GAAG,0BAA0BzK,QAAS,kBAAMg3B,GAAkB,OAArF,SACG5uC,EAAE,sBAGP,cAAC,GAAD,CAAmBqiB,GAAG,YAAYtiB,MAAO6gC,EAAWiP,SAAUjB,QAE9D,KAEHouE,EAAW,KACV,eAAC,KAAD,CAAY/7G,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,UAAxC,UACG+lB,QAAQ7V,IACP,eAAC,KAAD,CAAYpQ,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,WACV,cAAC,GAAD,CACEowE,MAAK,OAAEv/D,QAAF,IAAEA,OAAF,EAAEA,EAAOsrC,eACdu7D,aAAcA,GACdC,gBAAiBA,QAItBhtE,IAAoBlc,MACnB,eAAC,KAAD,CAAYhuB,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,wBACV,eAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAM,UAAjB,UACGmzB,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAK+E,GAAG,OAAR,UACGmwE,GACC,cAAC,IAAD,CAAQr/G,MAAM,OAAOwuE,UAAQ,EAAC//B,GAAG,MAAjC,SACGjvC,EAAE,uBAEF6c,EAEDmgG,EACF,cAAC,IAAD,CAAQx8G,MAAM,OAAOwuE,SAAUtoD,QAAQq2F,GAAiBnlG,QAASklG,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUhpF,MAAO,CAAEsoC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAMnlD,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,4CAEJ0uC,IACC,cAAC,KAAD,CAAMl3B,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,uCAIP8+G,GACF,eAAC,KAAD,WACE,cAAC,IAAD,CACEvxE,QAAS5N,KAAauJ,KAAcS,SAAW,UAAY,UAC3D/xB,QAAS2lG,GACTvuC,SAAUrvC,KAAauJ,KAAcY,cAAgB0zE,GACrDh9G,MAAM,MAJR,SAMGm/B,KAAauJ,KAAcW,QAC1B,eAAC,KAAD,CAAS5oC,IAAI,MAAMP,QAAQ,SAA3B,UACGV,EAAE,YADL,IACkB,cAACywC,GAAA,EAAD,CAAc+R,OAAO,aAErCg7D,IAAqB79E,KAAauJ,KAAcS,SAClD3pC,EAAE,WAEFA,EAAE,iBAAkB,CAAE+8D,MAAK,oBAAEtY,EAAWtjD,KAAMq/B,cAAnB,aAAE,EAAyB92B,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACE6jC,QAASklC,IAAWylC,GAAsB,EAAI,SAAW,UACzDtgG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJv/G,MAAM,MACN6hB,GAAG,cACH2sD,UACGyD,IAAW9yC,KAAauJ,KAAcS,UAAauuE,GAAsB,IAAMmE,EAlBpF,SAsBMr8G,EADHk4G,GAAsB,IAAMmE,EACvB,oBACFnE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE3qE,QAASklC,IAAWylC,GAAsB,IAAMyG,GAAoB,SAAW,UAC/E/mG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJ19F,GAAG,cACH7hB,MAAM,OACNwuE,UAAWyD,IAAYylC,GAAsB,IAAMmE,KAAmBsC,GAjBxE,SAmBGrC,IACEpE,GAAsB,IAAMmE,EAA5B,wBAGGr8G,EADAk4G,GAAsB,EACpB,cACA,WAxFV,cAACl6E,GAAA,EAAD,CAAqBx9B,MAAM,SA2F5Bs+G,IACC,cAACn2G,GAAA,EAAD,CAAQ0rB,MAAO,CAAEkhD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAeykC,MAAO,CAACr6E,KAAauJ,KAAcS,cAGrD0yE,GAAgB7E,GAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,KAAuB,cAIzFqI,GAGA,cAACxpD,GAAA,EAAD,CAA2B5R,WAAY,CAACA,EAAWjkB,MAAOikB,EAAW9jB,UAFrE,cAAC,GAAD,CAA6B9vB,MAAOA,O,mCEjjBtCs1D,GAAa7lE,KAAOU,IAAV,yLAKM,qBAAG6zB,MAAkBG,OAAOG,iBAK5C8gF,GAAe31G,KAAOU,IAAV,iPAKI,gBAAG2c,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOC,cACtD,qBAAGtX,MAAqB,WAAa,gBACtD,qBAAGA,MAAqB,WAAa,gBACjC,qBAAGkX,MAAkBG,OAAOG,iBAG5C+gF,GAAiB51G,KAAOU,IAAV,6DAKdgkE,GAAQ1kE,KAAO82D,MAAV,6kBAMW,qBAAGviC,MAAkBG,OAAOG,iBACtB,qBAAGxX,MAAqB,WAAa,gBACtD,gBAAGA,EAAH,EAAGA,MAAOkX,EAAV,EAAUA,MAAV,OAAuBlX,EAAQkX,EAAMG,OAAOqb,QAAUxb,EAAMG,OAAOmb,WAMjE,qBAAGtb,MAAkBG,OAAOmhF,gBAe5B,qBAAGthF,MAAkBG,OAAOmhF,gBAI1B,SAASC,GAAT,GAUX,IATF/zF,EASC,EATDA,GACAtiB,EAQC,EARDA,MACA8vC,EAOC,EAPDA,SAQQhsC,EAAYH,cAAZG,QAEA7D,EAAMC,eAAND,EAER,EAAmCorC,aAAOrrC,GAAlCyE,EAAR,EAAQA,QAAS8iB,EAAjB,EAAiBA,QAASkP,EAA1B,EAA0BA,KAEpBuyD,EAAc/pF,uBAClB,SAACmmE,GACC,IACMkxC,EADQlxC,EAAME,OAAOtlE,MACCH,QAAQ,OAAQ,IAC5CiwC,EAASwmE,KAEX,CAACxmE,IAGGlyB,EAAQ+I,QAAQ3mB,EAAMgnB,OAAS,IAAMO,IAAY9iB,GAEvD,OACE,cAAC,GAAD,CAAY6d,GAAIA,EAAhB,SACE,cAAC,GAAD,CAAc1E,MAAOA,EAArB,SACE,cAAC,GAAD,UACE,eAAC,KAAD,CAAY1c,IAAI,KAAhB,UACE,eAAC,KAAD,WACE,cAAC,KAAD,UAAOjB,EAAE,eACRwE,GAAWX,GACV,eAAC,KAAD,CAAMsyD,UAAQ,EAACC,OAAK,EAAC5lB,KAAMtkB,YAAc,OAACsK,QAAD,IAACA,IAAQhyB,EAAS,UAAWX,GAAtE,cACI7D,EAAE,mBADN,UAKJ,cAAC,GAAD,CACEsnE,UAAU,0BACVn7C,KAAK,OACLo5C,aAAa,MACbC,YAAY,MACZ8wC,eAAe,MACf1wC,WAAW,QACXV,YAAallE,EAAE,8BACf2d,MAAOA,EACP8nD,QAAQ,wBACR51B,SAAUk5C,EACVhpF,MAAOA,a,mDCpHR+zB,GAAUxzB,KAAOU,IAAV,wEAKPu1G,GAAej2G,KAAOU,IAAV,yDAGrB,qBAAGw1G,UAECvyB,aADK,iIAOL,QAGKwyB,GAAYn2G,aAAO4lF,KAAP5lF,CAAH,8CACX,gBAAGu0B,EAAH,EAAGA,MAAO6hF,EAAV,EAAUA,SAAV,OACM,IAAbA,GAA+B,IAAbA,EACd7hF,EAAMG,OAAOqb,QACA,IAAbqmE,EACA7hF,EAAMG,OAAO2hF,QACA,IAAbD,EACA7hF,EAAMG,OAAOU,KACbb,EAAMG,OAAOlN,WAGR8uF,GAAuBt2G,KAAOu2G,OAAV,qcAGX,qBAAGhiF,MAAkBG,OAAOC,cAQvC,qBAAGJ,MAAkBG,OAAOU,QAOf,qBAAGb,MAAkBG,OAAOO,YAG5B,qBAAGV,MAAkBG,OAAOO,YAKvCuhF,GAAgBx2G,aAAO4lF,MAAMjgB,MAAM,CAAE2gB,UAAU,GAA/BtmF,CAAH,gDAIpBy2G,GAAyBz2G,KAAOU,IAAV,gUACN,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAQX,qBAAGxb,MAAkBG,OAAOqb,WASjC2mE,GAAsC12G,KAAOU,IAAV,mNACnB,gBAAG6zB,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAOqb,QAA/B,SAUf,SAAS4mE,GAAT,GAA0D,IAA7Bt5F,EAA4B,EAA5BA,MAClC,OACE,eAAC,GAAD,WACE,cAAC,GAAD,UACE,cAAC,IAAD,CAAWnd,MAAM,WAEnB,4BAAImd,OAKH,I,GAAMu5F,GAAwB52G,aAAOuI,KAAPvI,CAAH,yHACZ,gBAAGu0B,EAAH,EAAGA,MAAH,gBAAkBA,EAAMG,OAAO2hF,QAA/B,SCjGP,SAASQ,GAAT,GAA2E,IAA3C97D,EAA0C,EAA1CA,YAC7C,OACE,cAAC,GAAD,CAAWhM,SAAS,OAAOqnE,SAAU16D,aAAgBX,GAArD,SACGA,EAAeA,EAAYzR,SAAShb,KAAY,SAAjC,UAA+CysB,EAAYh5C,QAAQ,GAAnE,KAA4E,MCKlG,IAAM+0G,GAA2B92G,aAAOuI,KAAPvI,CAAH,iJAGX,qBAAGu0B,MAAkBgoE,MAAMwa,WACxB,qBAAGxiF,MAAkBG,OAAOK,cAC5B,qBAAGR,MAAkBG,OAAOC,cAGnC,SAASqiF,GAAT,GAYX,IAAD,QAXDzmG,EAWC,EAXDA,MACA0mG,EAUC,EAVDA,UACA5sE,EASC,EATDA,gBACA6sE,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBAQA,EAAwC95G,oBAAkB,GAA1D,mBAAO+5G,EAAP,KAAqBC,EAArB,KACM/tD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAACA,EAAiB95B,IAEpB,EAAiDiQ,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA3FyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBy7D,EAAW16D,aAAgBV,GAEjC,OACE,qCACE,eAAC,GAAD,WACE,eAAC,KAAD,CAAY76C,MAAM,SAAlB,UACE,cAAC,KAAD,CAAM4uC,SAAS,OAAf,mBACA,eAAC,KAAD,CACEA,SAAS,OACThb,MAAO,CACLgd,eAAgB,SAChBW,WAAY,SACZo1B,QAAS,OACTzK,UAAW,QACXi7C,YAAa,QAPjB,UAUG37D,aAAqBprC,EAAO6mG,GAC7B,cAAC,GAAD,CAAsB9/F,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,iBAK3B,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM6uC,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,KAAUC,YAAc,mBAAqB,iBAEpE,cAACriF,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,eAAC,KAAD,WACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACGx+B,EAAMktD,YAAc85C,KAAUC,YAA9B,oBACGluD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,UADxD,QAC8D,IAD9D,oBAEGuN,EAAwBzoD,KAAMq/B,cAFjC,aAEG,EAAsC6b,cAAc,UAFvD,QAE6D,MAEhE,cAAC,KAAD,CAAMhN,SAAS,OAAO08C,WAAW,MAAjC,SACGl7E,EAAMktD,YAAc85C,KAAUC,YAC3BjnG,EAAMyrC,aAAaruB,SAASvkB,OAC5BmH,EAAM4qC,YAAYxtB,SAASvkB,eAIrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAf,0BACA,cAAC5Z,GAAA,EAAD,CAAgBC,KAAK,4EAA4Eia,GAAG,WAEtG,cAAC,GAAD,CAAsB0L,YAAaC,OAErC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAf,oCACA,cAAC5Z,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,iBAAMA,QAAN,IAAMA,OAAN,EAAMA,EAAeoB,cAAc,GAAnC,YAAyCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAKnG,eAAC,KAAD,WACE,cAAC,IAAD,CACE6jC,QAASmpE,EAAW,EAAI,SAAW,UACnC9+F,QAAS2/F,EACTvoC,SAAUyoC,EACV/nE,GAAG,OACHrtB,GAAG,uBACH7hB,MAAM,OANR,SAQGk2G,EAAW,EAAI,cAAgB,iBAGjCc,EAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,IAAuB,W,aCvH9D,SAASO,GAAT,GAYX,IAAD,IAXDlnG,EAWC,EAXDA,MACA85B,EAUC,EAVDA,gBACA/J,EASC,EATDA,UACAo3E,EAQC,EARDA,kBACAC,EAOC,EAPDA,gBAQMruD,EAA0B9oC,mBAC9B,kBAAM8pB,aAA+B/5B,EAAO85B,KAC5C,CAAC95B,EAAO85B,IAEF2Q,EAA0Bx6B,mBAAQ,kBAAMk6B,aAA2BnqC,KAAQ,CAACA,IAA5EyqC,sBACF48D,EAAsBl8D,aAAgBV,GAE5C,OACE,eAAC,KAAD,CAAYr6C,IAAI,KAAhB,UACE,eAAC,KAAD,CAAYR,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAM4qC,YAAYxtB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACtF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MAAOwgG,GAAqBnnG,EAAMktD,YAAc85C,KAAUM,aAAe,UAAY,OAFvF,SAIGtnG,EAAM4qC,YAAYY,cAAc,QAGrC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAM4qC,YAAYxtB,SAASvkB,cAIlC,cAAC,KAAD,UACE,cAAC,IAAD,CAAelJ,MAAM,OAAOmvC,GAAG,UAEjC,eAAC,KAAD,CAAYlvC,MAAM,WAAlB,UACE,eAAC,KAAD,CAAUQ,IAAI,MAAd,UACE,cAAC,KAAD,CAAcgtB,SAAUpd,EAAMyrC,aAAaruB,SAAUkG,KAAK,OAAOE,MAAO,CAAEC,YAAa,UACvF,cAAC,GAAD,CACE+a,SAAS,OACT73B,MACE0gG,EAAsB,EAClB,UACAF,GAAqBnnG,EAAMktD,YAAc85C,KAAUC,YACnD,UACA,OAPR,SAUGjnG,EAAMyrC,aAAaD,cAAc,QAGtC,cAAC,KAAD,CAAUp7C,IAAI,MAAd,SACE,cAAC,KAAD,CAAMouC,SAAS,OAAOM,GAAG,OAAzB,SACG9+B,EAAMyrC,aAAaruB,SAASvkB,cAIlCsuG,EACC,cAAC,GAAD,CAAuBt3G,QAAQ,aAAaO,IAAI,MAAhD,SACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAWysC,GAAG,QACd,cAAC,KAAD,CAAM0B,MAAI,EAAV,+BAEF,cAAC,IAAD,CAAQx3B,QAASqgG,EAAjB,yBAGF,KACJ,cAAC,KAAD,CAAYv3G,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACGkQ,EAAMktD,YAAc85C,KAAUC,YAC7B,eAAC,KAAD,CAAM1hD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,4DAEE,wCACGopD,EAAwBzoD,KAAMw/B,eADjC,aACG,EAAuC0b,cAAc,GADxD,IAC6DxrC,EAAMyrC,aAAaruB,SAASvkB,UAExF,sCAGH,eAAC,KAAD,CAAM0sD,OAAK,EAAC5+C,MAAM,aAAamlD,UAAU,OAAOtoC,MAAO,CAAE7zB,MAAO,QAAhE,uDAEE,wCACGopD,EAAwBzoD,KAAMq/B,cADjC,aACG,EAAsC6b,cAAc,GADvD,IAC4DxrC,EAAM4qC,YAAYxtB,SAASvkB,UAEtF,wCAIQ,OAAdk3B,EACC,cAAC,KAAD,CAAYlgC,QAAQ,aAAaO,IAAI,KAAKozB,MAAO,CAAE1zB,QAAS,gBAA5D,SACE,eAAC,KAAD,CAAM6W,MAAM,aAAZ,mCACyB,IACvB,mBAAGs3B,MAAOlO,EAAV,SAAsB3U,YAAU2U,GAAavU,YAAeuU,GAAaA,SAG3E,QCzEV,IA4Eew3E,GA5EgE,SAAC,GAYzE,IAAD,oBAXJvnG,EAWI,EAXJA,MACAwnG,EAUI,EAVJA,cACAJ,EASI,EATJA,gBACAttE,EAQI,EARJA,gBACA4sE,EAOI,EAPJA,UACAppE,EAMI,EANJA,UACAmvB,EAKI,EALJA,gBACA18B,EAII,EAJJA,UACA42E,EAGI,EAHJA,iBACAj6C,EAEI,EAFJA,cACAoV,EACI,EADJA,OAEMqlC,EAAoBl3F,mBACxB,kBAAM4F,QAAQ7V,GAASwnG,IApCsBx6C,EAoC2Bw6C,GApC1Cz6C,EAoCmC/sD,GAlC1DktD,YAAcF,EAAOE,YAC3Bp3B,aAAei3B,EAAOniB,YAAYxtB,SAAU4vC,EAAOpiB,YAAYxtB,YAC/D2vC,EAAOniB,YAAYuiB,QAAQH,EAAOpiB,eAClC9U,aAAei3B,EAAOthB,aAAaruB,SAAU4vC,EAAOvhB,aAAaruB,YACjE2vC,EAAOthB,aAAa0hB,QAAQH,EAAOvhB,gBANxC,IAAkCshB,EAAeC,IAqC7C,CAACw6C,EAAexnG,IAGV7Q,EAAMC,eAAND,EAEFi0E,EAAcj1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACEA,MAAOA,EACP85B,gBAAiBA,EACjB/J,UAAWA,EACXo3E,kBAAmBA,EACnBC,gBAAiBA,IAEjB,OACH,CAACttE,EAAiBstE,EAAiBr3E,EAAWo3E,EAAmBnnG,IAE9DsjE,EAAcn1E,uBAAY,WAC9B,OAAO6R,EACL,cAAC,GAAD,CACE0mG,UAAWA,EACX1mG,MAAOA,EACP4mG,gBAAiBO,EACjBR,iBAAkBA,EAClB7sE,gBAAiBA,IAEjB,OACH,CAACA,EAAiB4sE,EAAWS,EAAmBR,EAAkB3mG,IAG/D6rD,EAAc18D,EAAE,uDAAwD,CAC5Eo0E,QAAO,iBAAEvjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,aAAE,EAAoBY,cAAc,UAApC,QAA0C,GACjDg4B,QAAO,iBAAExjE,QAAF,IAAEA,GAAF,UAAEA,EAAO4qC,mBAAT,iBAAE,EAAoBxtB,gBAAtB,aAAE,EAA8BvkB,cAAhC,QAA0C,GACjD4qE,QAAO,iBAAEzjE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,aAAE,EAAqBD,cAAc,UAArC,QAA2C,GAClDk4B,QAAO,iBAAE1jE,QAAF,IAAEA,GAAF,UAAEA,EAAOyrC,oBAAT,iBAAE,EAAqBruB,gBAAvB,aAAE,EAA+BvkB,cAAjC,QAA2C,KAG9C4uG,EAAsBt5G,uBAC1B,kBACEw4G,EACE,cAAC,KAAD,CAAyBrpE,UAAWA,EAAWorB,QAASi+C,IAExD,cAAC,KAAD,CAA0Bt6C,WAAY+W,EAAahX,cAAekX,MAEtE,CAAChmC,EAAWgmC,EAAaF,EAAaujC,IAGxC,OACE,cAACn6C,GAAA,EAAD,CACEvuB,MAAO9uC,EAAE,gBACTmuC,UAAWA,EACXmvB,gBAAiBA,EACjBC,cAAeA,EACf79B,KAAMizC,EACNnV,QAAS86C,EACT57C,YAAaA,EACbG,cAAa,OAAEhsD,QAAF,IAAEA,OAAF,EAAEA,EAAOyrC,aAAaruB,Y,4BCxG1B0M,mBAAK,YAAiD,IAA5B9pB,EAA2B,EAA3BA,MACvC,OACE,cAAC,IAAD,CAAMyoE,SAAS,OAAO94E,MAAM,OAAO6wC,eAAe,WAAWW,WAAW,SAAxE,SACGnhC,EAAMqqC,MAAMyN,KAAKlqC,KAAI,SAACsB,EAAO6W,EAAG+xB,GAC/B,IAAMkwD,EAAsBjiF,IAAM+xB,EAAK5hC,OAAS,EAC1CkH,EAAW8a,aAAehpB,GAChC,OAEE,cADA,CACC,WAAD,WACE,cAAC,IAAD,CAAMiyB,WAAW,MAAjB,SACE,cAAC,KAAD,CAAM3C,SAAS,OAAOM,GAAG,WAAWjC,GAAG,WAAvC,SACGzf,EAASvkB,YAGZmvG,GAAc,cAAC,IAAD,CAAkBr4G,MAAM,WAN3Bo2B,WCDzB,SAASkiF,GAAT,GAA8F,IAAD,QAArEjoG,EAAqE,EAArEA,MAAO85B,EAA8D,EAA9DA,gBAC7B,EAAiDqQ,aAA2BnqC,GAApEyqC,EAAR,EAAQA,sBAAuBL,EAA/B,EAA+BA,cACzBkO,EAAYt4C,EAAMktD,YAAc85C,KAAUC,YAC1CluD,EAA0Bhf,aAA+B/5B,EAAO85B,GAEtE,OACE,eAAC,KAAD,CAAYtW,MAAO,CAAE1zB,QAAS,UAA9B,UACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM0uC,SAAS,OAAO73B,MAAM,aAA5B,SACG2xC,EAAY,mBAAqB,iBAEpC,cAAC1zB,GAAA,EAAD,CACEC,KAAK,uGACLia,GAAG,WAGP,cAAC,KAAD,UACE,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG8Z,EAAS,8BACHS,EAAwBzoD,KAAMw/B,eAD3B,aACH,EAAuC0b,cAAc,GADlD,YACwDxrC,EAAMyrC,aAAaruB,SAASvkB,eADpF,QAEN,IAFM,8BAGHkgD,EAAwBzoD,KAAMq/B,cAH3B,aAGH,EAAsC6b,cAAc,GAHjD,YAGuDxrC,EAAM4qC,YAAYxtB,SAASvkB,eAHlF,QAG8F,WAI9G,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAM2lC,SAAS,OAAO73B,MAAM,aAA5B,0BAGA,cAACie,GAAA,EAAD,CACEC,KAAK,iFACLia,GAAG,WAGP,cAAC,GAAD,CAAsB0L,YAAaC,OAGrC,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAMjM,SAAS,OAAO73B,MAAM,aAA5B,oCAGA,cAACie,GAAA,EAAD,CACEC,KACE,qCACE,cAAC,KAAD,CAAMuZ,GAAG,OAAT,gDACA,cAAC,KAAD,0CACA,cAAC,KAAD,yCAGJU,GAAG,WAGP,cAAC,KAAD,CAAMN,SAAS,OAAf,SACG4L,EAAa,UAAMA,EAAcoB,cAAc,GAAlC,YAAwCxrC,EAAM4qC,YAAYxtB,SAASvkB,QAAW,YAW/F,SAASqvG,GAAT,GAAmE,IAApCloG,EAAmC,EAAnCA,MACpC,EAA0BinB,eAAnB6S,EAAP,oBAEMquE,EAAYtyF,QAAQ7V,GAASA,EAAMqqC,MAAMyN,KAAK5hC,OAAS,GAE7D,OACE,cAAC,KAAD,CAAY9lB,IAAI,MAAhB,SACG4P,GACC,qCACE,cAAC,GAAD,CAAcA,MAAOA,EAAO85B,gBAAiBA,IAC5CquE,GACC,mCACE,eAAC,KAAD,CAAY3kF,MAAO,CAAE1zB,QAAS,UAA9B,UACE,uBAAM0zB,MAAO,CAAE+yC,QAAS,OAAQp1B,WAAY,UAA5C,UACE,cAAC,KAAD,CAAM3C,SAAS,OAAO73B,MAAM,aAA5B,mBAGA,cAACie,GAAA,EAAD,CACEC,KAAK,0EACLia,GAAG,WAGP,cAAC,GAAD,CAAW9+B,MAAOA,c,oBChG5BooG,GAAwB34G,KAAOU,IAAV,0PACX,qBAAGivC,KAAmB,OAAS,KAMzB,qBAAGpb,MAAkBG,OAAOghC,oBAEnC,qBAAG/lB,KAAmB,iBAAmB,uBAIzC,SAASipE,GAAT,GAAoF,IAAD,EAA5CroG,EAA4C,EAA5CA,MAAU4xC,EAAkC,mBAC1F02D,EAAYX,GAAc3nG,GAEhC,OACE,cAAC,GAAD,CAAuBo/B,KAAMvpB,QAAQ7V,GAArC,SACE,cAAC,GAAD,6BAAyB4xC,GAAzB,IAA+B5xC,MAAK,iBAAEA,QAAF,IAAEA,IAASsoG,SAAX,aAAwB37G,OCZnD,SAAS47G,GAAT,GAAgF,IAAD,UAAzDhpC,EAAyD,EAAzDA,MAAOsnC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,gBAClD0B,EAAiB3B,EAAY,OAAGtnC,QAAH,IAAGA,OAAH,EAAGA,EAAO/zB,cAAc,GAAxB,OAA6B+zB,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAOh0B,gBAApC,aAA6B,EAAiBC,cAAc,GAEzFpM,EAAOvpB,SAAa,OAAL0pD,QAAK,IAALA,OAAA,EAAAA,EAAOkpC,gBAAP,OAAuBlpC,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOmpC,gBAC7C7yC,EAAQgxC,EAAY,iBACnBtnC,QADmB,IACnBA,GADmB,UACnBA,EAAOmpC,qBADY,aACnB,EAAsB7vG,OADH,uBACiB0mE,QADjB,IACiBA,GADjB,UACiBA,EAAOkpC,oBADxB,aACiB,EAAqB5vG,QADtC,iBAEnB0mE,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAOkpC,oBAFY,aAEnB,EAAqB5vG,OAFF,uBAEgB0mE,QAFhB,IAEgBA,GAFhB,UAEgBA,EAAOmpC,qBAFvB,aAEgB,EAAsB7vG,QAEhE,OACE,cAAC,KAAD,CAAM2qB,MAAO,CAAEgd,eAAgB,SAAUW,WAAY,SAAUo1B,QAAS,QAAxE,SACGn3B,EACC,4CACGopE,QADH,IACGA,IAAkB,IADrB,IAC2B3yC,EACzB,cAAC,GAAD,CAAsB9uD,QAAS,kBAAM+/F,GAAiBD,IAAtD,SACE,cAAC,IAAD,CAAel3G,MAAM,cAIzB,M,0BCFOg5G,GAjBkC,SAAC,GAAqC,IAAnC50G,EAAkC,EAAlCA,OAAQupC,EAA0B,EAA1BA,UAAWsrE,EAAe,EAAfA,SACrE,OACE,cAAC,KAAD,CACE3qE,MAAM,eACNX,UAAW,WACLA,GACFA,IAEFsrE,KAEFplF,MAAO,CAAE2a,SAAU,SARrB,SAUE,cAACw/B,GAAA,EAAD,CAAa5pE,OAAQA,EAAQ6pE,qBAAsBtgC,O,wBCjBnDurE,GAAWp5G,aAAOQ,KAAPR,CAAH,8CAIRq5G,GAASr5G,KAAOU,IAAV,2PAGU,gBAAG6zB,EAAH,EAAGA,MAAOsc,EAAV,EAAUA,UAAV,SAAqB69B,SAC5Bn6C,EAAMG,OAAO2nE,mBAAqBxrD,EAAYtc,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAU3FypE,GAAYt5G,KAAOU,IAAV,sGAMT64G,GAAYv5G,KAAOU,IAAV,0KAKT,gBAAG6zB,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SACZn6C,EAAMG,OAAO2nE,mBAAqBmd,EAAgBjlF,EAAMG,OAAOlN,QAAU+M,EAAMG,OAAOmb,WAEnG,gBAAGtb,EAAH,EAAGA,MAAOilF,EAAV,EAAUA,cAAV,SAAyB9qC,SAEnBn6C,EAAMG,OAAO2nE,mBACbmd,EACAjlF,EAAMG,OAAOmb,QACbtb,EAAMG,OAAO2nE,sBAqBV,SAASod,GAAT,GAAsF,IAA3DC,EAA0D,EAA1DA,MAA0D,IAAnDhrC,gBAAmD,SAA9BvsB,EAA8B,mBAClG,OACE,cAAC,KAAD,2BAAY/hD,QAAQ,UAAa+hD,GAAjC,aACE,eAAC,GAAD,WACGu3D,EAAMv7F,KAAI,SAACgiF,EAAM7pE,GAChB,OAEE,cADA,CACC,GAAD,WACE,cAAC,GAAD,CAAQua,UAAWsvD,EAAMzxB,SAAUA,IAAcgrC,EAAMpjF,EAAI,IAAY,IAANA,EAAjE,SACG6pE,EAAO,SAAM7pE,EAAI,IAEpB,cAAC,GAAD,CAAWkjF,cAAerZ,EAAMzxB,SAAUA,MAJ5Bp4C,MAQpB,cAAC,GAAD,CAAQo4C,SAAUA,IAAagrC,EAAMA,EAAMjzF,OAAS,GAApD,SAAyDizF,EAAMjzF,OAAS,U,IClEpEkzF,G,oBA6BZ,SAASC,GACPrpG,GAGa,IAFb85B,EAEY,uDAFclc,IAC1B0rF,EACY,uCACZ,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAE1B,EAAsCwnC,aAAO+uE,GAA5BC,EAAjB,EAAQ51G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EACxDzhF,EAAWi9B,eAEjB,OAAO90C,mBAAQ,WACb,IAAKjQ,IAAU+vB,IAAch9B,IAAYiZ,IAAYhZ,IAAY80B,EAAU,MAAO,GAElF,IAAMnf,EAA4BiU,YAAkB5pB,EAASD,EAASiZ,GACtE,IAAKrD,EACH,MAAO,GAGT,IAAM6gG,EAAc,GAsBpB,OApBAA,EAAYl4E,KACVm4E,KAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,KAAQC,KAAKC,OAAO2d,GAAkB9b,KAC3D+R,YACAjI,SAAUA,EAASz2B,cAInB2O,EAAMktD,YAAc85C,KAAUC,aAChCuC,EAAYl4E,KACVm4E,KAAOC,mBAAmB1pG,EAAO,CAC/B2pG,eAAe,EACf7vE,gBAAiB,IAAI7d,KAAQC,KAAKC,OAAO2d,GAAkB9b,KAC3D+R,YACAjI,SAAUA,EAASz2B,cAKlBm4G,EAAY57F,KAAI,SAACg8F,GAAD,MAAiB,CAAEA,aAAYjhG,iBACrD,CAACqD,EAAS8tB,EAAiB9mC,EAAS80B,EAAU/0B,EAASg9B,EAAW/vB,K,SAvE3DopG,O,qBAAAA,I,qBAAAA,I,kBAAAA,Q,SCJAS,G,8BAAAA,O,mCAAAA,I,eAAAA,I,oBAAAA,Q,KAMZ,IAAMC,GAAiB,CAAEC,SAAUF,GAASC,gB,uCCK7BE,GAfS,WACtB,IAAQ76G,EAAMC,eAAND,EAER,OACE,qCACE,eAAC,KAAD,WAAOA,EAAE,gCAAT,OACA,eAAC,KAAD,qBAASA,EAAE,iCACX,eAAC,KAAD,CAAMivC,GAAG,OAAT,oBAAmBjvC,EAAE,0CACrB,cAAC,KAAD,UAAOA,EAAE,mEACT,eAAC,KAAD,qBAASA,EAAE,qDACX,eAAC,KAAD,qBAASA,EAAE,yCCJF86G,GANO,WACpB,IAAQ96G,EAAMC,eAAND,EAER,OAAO,cAAC,KAAD,UAAOA,EAAE,yFC6BH+6G,GA5ByC,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBACjDh7G,EAAMC,eAAND,EACR,EAAsCrC,oBAAS,GAA/C,mBAAOs9G,EAAP,KAAoBC,EAApB,KAEA,OACE,mCACE,eAAC,IAAD,CAAM7pE,eAAe,gBAArB,UACE,eAAC,IAAD,CAAMW,WAAW,SAAjB,UACE,cAAC,IAAD,CACExb,KAAK,YACLrK,KAAK,WACLyjB,QAASqrE,EACTprE,SAAU,kBAAMqrE,GAAgBD,IAChC3pE,MAAM,OAER,cAAC,KAAD,CAAM3B,GAAG,OAAOtb,MAAO,CAAE06C,WAAY,QAArC,SACG/uE,EAAE,qBAIP,cAAC,IAAD,CAAQgvE,UAAWisC,EAAarjG,QAASojG,EAAzC,SACGh7G,EAAE,oBCjBPktF,GAAuB5sF,aAAO6sF,KAAP7sF,CAAH,oDAIpB66G,GAAmB76G,aAAO86G,KAAP96G,CAAH,2FAgEP+6G,GAjC2C,SAAC,GAAiC,IAAD,EAA9BC,EAA8B,EAA9BA,aAAcntE,EAAgB,EAAhBA,UACjEnuC,EAAMC,eAAND,EACA60B,EAAUH,eAAVG,MArBR52B,qBAAU,WACR,IAAMs9G,EAAsB,SAAC9uC,GAG3B,OAFAA,EAAEuY,kBACFvY,EAAE+uC,kBACK,GAOT,OAJArtC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGrtC,iBAAiB,QAASktC,GAAqB,MAG7C,WACLptC,SAASstC,iBAAiB,yBAAyBj8G,SAAQ,SAACk8G,GAC1DA,EAAGptC,oBAAoB,QAASitC,GAAqB,SAGxD,IAQH,IAWMI,GAXc,oBACjBp3G,aAAWq3G,GAAwB7lG,SAASvR,SAAW,CACtDkF,OAAQkyG,GAAwB7lG,SAASrM,OACzCurE,UAAW,cAAC,GAAD,MAHK,eAKjB1wE,aAAWq3G,GAAwB9pG,OAAOtN,SAAW,CACpDkF,OAAQkyG,GAAwB9pG,OAAOpI,OACvCurE,UAAW,cAAC,GAAD,MAPK,GAWgBqmC,EAAa92G,SAEjD,OACE,eAAC,GAAD,CAAsB8wE,SAAS,QAA/B,UACE,cAAC,KAAD,CAAargD,WAAYJ,EAAMG,OAAOC,WAAtC,SACE,cAAC,IAAD,CAAS+E,EAAE,YAAX,SAAwBh6B,EAAE,8BAA+B,CAAE0J,OAAQiyG,EAAajyG,aAElF,eAAC,KAAD,CAAWswB,EAAE,OAAb,UACE,cAAC,GAAD,CAAkBuT,QAAQ,UAAU0B,GAAG,OAAvC,SACE,cAAC,IAAD,UAAM0sE,EAAa1mC,cAErB,cAAC,GAAD,CAAiB+lC,oBAAqB7sE,WC5BxC0tE,GAAQv7G,aAAO4lF,KAAP5lF,CAAH,wFAGA,qBAAGu0B,MAAkBG,OAAOk5D,aAEjC4tB,GAAex7G,KAAOU,IAAV,yGAGhB,qBAAG6zB,MAAkBurC,aAAapI,MAKlB13D,KAAO8qE,IAAV,uDAIA,SAAS+0C,KAAQ,IAAD,sBACvBnE,EAAkBzxD,eAEhBvqD,EAAMC,eAAND,EACFgxE,EAAUC,eAIhB,GAHiBxV,eAGmC,CAClD/zB,YAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBl7E,iBAC7B4G,YAAW,OAACs0E,QAAD,IAACA,OAAD,EAACA,EAAiBj7E,oBAFxBk7E,EAAP,KAA4BC,EAA5B,KAIMC,EAA2Br7F,mBAC/B,8CAAM,CAACm7F,EAAqBC,UAA5B,aAAM,EAA6C11F,QAAO,SAACC,GAAD,OAAmBA,aAAa1d,eAA1F,QAAoG,KACpG,CAACkzG,EAAqBC,IAIlBluF,EAAgB2L,cAChByiF,EACJD,GACAA,EAAgB31F,QAAO,SAACzG,GACtB,QAASA,EAAMvb,WAAWwpB,MAGtBnR,EAAYnZ,cAAZmZ,QAGR,EAAuB0a,eAAhB8kF,EAAP,oBAGA,EAA0BvkF,eAAnB6S,EAAP,oBAGA,EAAoDsd,eAA5C1nB,EAAR,EAAQA,iBAAkBE,EAA1B,EAA0BA,WAAYG,EAAtC,EAAsCA,UACtC,EAA4FioB,eAApFY,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,iBAAkBN,EAAnC,EAAmCA,aAAc3E,EAAjD,EAAiDA,WAAwB63D,EAAzE,EAA6DxzD,WAE7D,EL/Ea,SACbC,EACAC,EACAvoB,GAEA,MAA6B/8B,cAArBG,EAAR,EAAQA,QAASgZ,EAAjB,EAAiBA,QACX0/F,EAAelyF,cACfpoB,EAAU6iD,aAAkB,OAACjoC,QAAD,IAACA,SAAWrf,EAAWurD,GAEnDtN,EAAc36B,mBAAQ,kBAAMunC,aAAe5nB,EAAYsoB,KAAgB,CAACA,EAAetoB,IACvFjB,EAAiBwK,eAEvB,OAAOlpB,mBAAQ,WACb,IAAKy7F,IAAiB14G,IAAYklD,IAAkBC,EAAgB,OAAO2xD,GAE3E,IAAM6B,EAAoB/gE,GAAex5C,IAAYA,EAAQ2nC,SAAS6R,GAEtE,OAAIsN,IAAkB76B,MAASyY,aAAerc,KAAKzmB,GAAUmlD,GACpD,CACL4xD,SAAUF,GAAS+B,KACnBC,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAap2D,QAAQ,CAAEpmD,MAAM,KAAD,OAAO07C,EAAYpuB,IAAIxtB,SAAS,OAFxF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,QAAD,OAAU6b,EAAYY,cAAc,GAApC,kBAHvC,gDAKI3+B,QAAQC,MAAM,oBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,4BAG5CmpC,aAAerc,KAAKzmB,GAAUklD,IAAkBC,IAAmB96B,KAC9D,CACL0sF,SAAUF,GAASkC,OACnBF,QACEF,GAAqB/gE,EAArB,sBACI,4BAAAv9C,EAAA,+EAE4Bq+G,EAAaj2D,SAAb,YAA2B7K,EAAYpuB,IAAIxtB,SAAS,MAFhF,OAEU88G,EAFV,OAGIn9E,EAAem9E,EAAW,CAAE/8E,QAAQ,UAAD,OAAY6b,EAAYY,cAAc,GAAtC,kBAHvC,gDAKI3+B,QAAQC,MAAM,qBAAd,MALJ,8DAQAngB,EACNsrD,WAAY0zD,OAAoBh/G,EAAY,6BAGzCm9G,KACN,CAAC4B,EAAc14G,EAASklD,EAAeC,EAAgBvN,EAAax5C,EAASu9B,IK+B5Eq9E,CAAgBp4D,EAAWtjD,KAAMq/B,OAAQikB,EAAWtjD,KAAMw/B,QAASF,GAHrEm6E,EADF,EACEA,SACSkC,EAFX,EAEEJ,QACYK,EAHd,EAGEj0D,WAEIk0D,EAAoBpC,IAAaF,GAASC,eAC1C9pG,EAAQmsG,OAAWx/G,EAAYisD,EAE/B4mB,EAAgB2sC,GAAQ,oBAEvB77G,KAAMq/B,MAAQ4oB,GAFS,eAGvBjoD,KAAMw/B,OAASyoB,GAHQ,wBAMvBjoD,KAAMq/B,MAAQD,IAAqBp/B,KAAMq/B,MAAQ4oB,EAAnC,OAAkDv4C,QAAlD,IAAkDA,OAAlD,EAAkDA,EAAO4qC,aANhD,eAOvBt6C,KAAMw/B,OAASJ,IAAqBp/B,KAAMw/B,OAASyoB,EAApC,OAAmDv4C,QAAnD,IAAmDA,OAAnD,EAAmDA,EAAOyrC,cAPlD,GAU9B,GAAgFzN,eAAxEsZ,GAAR,GAAQA,eAAgBD,GAAxB,GAAwBA,oBAAqBE,GAA7C,GAA6CA,YAAaxZ,GAA1D,GAA0DA,kBACpD6jC,IAAW6pC,EACXnrC,GAAwB5wC,IAAqBp/B,KAAMq/B,MAAQr/B,KAAMw/B,OAASx/B,KAAMq/B,MAEhFy8E,GAAkBj+G,uBACtB,SAACe,GACCqoD,GAAYjnD,KAAMq/B,MAAOzgC,KAE3B,CAACqoD,KAEG80D,GAAmBl+G,uBACvB,SAACe,GACCqoD,GAAYjnD,KAAMw/B,OAAQ5gC,KAE5B,CAACqoD,KAIH,GAAoFzqD,mBAKjF,CACDw/G,oBAAgB3/G,EAChB+/D,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IATV,8BAAS2/G,GAAT,GAASA,eAAgB3F,GAAzB,GAAyBA,iBAAkBj6C,GAA3C,GAA2CA,cAAeoV,GAA1D,GAA0DA,OAAUyqC,GAApE,MAYMvqC,IAAgB,oBACnBtyC,EAAmBE,GADA,eAEnB0wC,GAAiB6rC,EAAQ,oBACtB3sC,EAAc9vC,UADQ,aACtB,EAAiC80C,iBADX,QACwB,GADxB,oBAEtBhF,EAAcc,WAFQ,aAEtB,EAA+B90B,cAAc,UAFvB,QAE6B,IAJnC,GAOhBnB,GAAK,OAAGrqC,QAAH,IAAGA,OAAH,EAAGA,EAAOqqC,MACfmiE,GAA8B32F,QAClC+9B,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,UAA5C,UAAuD0vC,EAAc9vC,UAArE,aAAuD,EAAiC2uC,YAAYniD,KAAKC,OAAO,MAE5GswF,IAAWpiE,GAGjB,GAAoCxQ,aAA4B75B,EAAO85B,GAAvE,qBAAOhL,GAAP,MAAiB49E,GAAjB,MAGA,GAAkD5/G,oBAAkB,GAApE,qBAAO6/G,GAAP,MAA0BC,GAA1B,MAGAx/G,qBAAU,WACJ0hC,KAAauJ,KAAcW,SAC7B4zE,IAAqB,KAEtB,CAAC99E,GAAU69E,KAEd,IAAME,GAA6CzuC,aAAevlB,EAAiBvoD,KAAMq/B,QACnFm9E,GAAmBj3F,QAAQg3F,KAAc,UAAIrtC,EAAclvE,KAAMq/B,cAAxB,aAAI,EAA4Bw9B,QAAQ0/C,MAGvF,GN1FK,SACL7sG,GAG+F,IAF/F85B,EAE8F,uDAFpElc,IAC1B0rF,EAC8F,uCAC9F,EAAsCz2G,cAA9BmZ,EAAR,EAAQA,QAAShZ,EAAjB,EAAiBA,QAASD,EAA1B,EAA0BA,QAEpBg6G,EAAY1D,GAAqBrpG,EAAO85B,EAAiBwvE,GAEzD36E,EAAiBwK,eAENowE,EAAqBhvE,aAAO+uE,GAArC31G,QACFo8B,EAAuC,OAA3Bu5E,EAAkCt9F,EAAUu9F,EAE9D,OAAOt5F,mBAAQ,WACb,OAAKjQ,GAAUjN,GAAYiZ,GAAYhZ,EAGlC+8B,EAOE,CACL7iC,MAAOk8G,GAAkB4D,MACzBvuB,SAAS,WAAD,4BAAE,8CAAApxF,EAAA,sEAC0Ck4C,QAAQC,IACxDunE,EAAUn/F,KAAI,SAAC0I,GAAU,IAAD,EACtB,EAGIA,EAFFszF,WAAcvyF,EADhB,EACgBA,WAAY0rD,EAD5B,EAC4BA,KAAM7zE,EADlC,EACkCA,MAChCyZ,EACE2N,EADF3N,SAEI9W,GAAW3C,GAASksC,aAAOlsC,GAAS,GAAK,CAAEA,SAEjD,OAAO,EAAAyZ,EAAS2wB,aAAYjiB,GAArB,oBAAoC0rD,GAApC,QAA0ClxE,KAC9C8nC,MAAK,SAACszE,GACL,MAAO,CACL32F,OACA22F,kBAGHzzE,OAAM,SAAC0zE,GAAc,IAAD,EAGnB,OAFArgG,QAAQC,MAAM,wDAAyDwJ,IAEhE,EAAA3N,EAASwkG,YAAW91F,GAApB,oBAAmC0rD,GAAnC,QAAyClxE,KAC7C8nC,MAAK,SAACpjB,GAEL,OADA1J,QAAQC,MAAM,uDAAwDwJ,EAAM42F,EAAU32F,GAC/E,CAAED,OAAMxJ,MAAO,IAAIvd,MAAM,mEAEjCiqC,OAAM,SAAC4zE,GAAe,IAAD,EACpBvgG,QAAQC,MAAM,mBAAoBwJ,EAAM82F,GACxC,IAAMC,EAAiBD,EAAUC,SAAV,UAAoBD,EAAU/+G,YAA9B,aAAoB,EAAgBq6D,UAAW0kD,EAAU1kD,QAC1En3B,EAAY,8DAChB87E,QADgB,IAChBA,IAAU,gCADM,KAIlB,MAAO,CAAE/2F,OAAMxJ,MAAO,IAAIvd,MAAMgiC,cA/BpC,UACF+7E,EADE,OAsCFC,EAAuBD,EAAeh/F,MAC1C,SAACu8F,EAAIhqB,EAAIt+C,GAAT,MACE,gBAAiBsoE,IAAOhqB,IAAOt+C,EAAKrsB,OAAS,GAAK,gBAAiBqsB,EAAKs+C,EAAK,OAxCzE,sBA4CA2sB,EAAaF,EAAe33F,QAAO,SAACW,GAAD,MAA8B,UAAWA,MACnEJ,OAAS,GA7ClB,sBA6C2Bs3F,EAAWA,EAAWt3F,OAAS,GAAGpJ,MA7C7D,aA8CA,IAAIvd,MAAM,8EA9CV,gBAuDJg+G,EALFj3F,KACE3N,EAnDI,EAmDJA,SAnDI,IAoDJihG,WAAcvyF,EApDV,EAoDUA,WAAY0rD,EApDtB,EAoDsBA,KAAM7zE,EApD5B,EAoD4BA,MAElC+9G,EACEM,EADFN,YAtDM,kBAyDDtkG,EAAS0O,GAAT,MAAA1O,EAAQ,YAAgBo6D,GAAhB,sBACbrpC,SAAU9d,YAAmBqxF,IACzB/9G,IAAUksC,aAAOlsC,GAAS,CAAEA,QAAOmD,KAAM2Z,GAAY,CAAE3Z,KAAM2Z,OAEhE2tB,MAAK,SAACC,GACL,IAAM6zE,EAAcztG,EAAM4qC,YAAYxtB,SAASvkB,OACzC60G,EAAe1tG,EAAMyrC,aAAaruB,SAASvkB,OAC3C+xC,EAAc5qC,EAAM4qC,YAAYY,cAAc,GAC9CC,EAAezrC,EAAMyrC,aAAaD,cAAc,GAEhDtiB,EAAI,eAAW0hB,EAAX,YAA0B6iE,EAA1B,gBAA6ChiE,EAA7C,YAA6DiiE,GACjEC,EACJ59E,IAAc/jB,EACVkd,EADJ,UAEOA,EAFP,eAGMogF,GAA0BluF,YAAUkuF,GAChC9tF,YAAe8tF,GACfA,GAOZ,OAJA36E,EAAeiL,EAAU,CACvB7K,QAAS4+E,IAGJ/zE,EAAS/K,QAEjB2K,OAAM,SAAC1sB,GAEN,MAAoB,QAAX,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOupC,MACH,IAAI9mD,MAAM,0BAGhBsd,QAAQC,MAAR,cAA6BA,EAAOuK,EAAY0rD,EAAM7zE,GAChD,IAAIK,MAAJ,uBAA0Bud,EAAM47C,eA1FpC,4CAAF,kDAAC,GA8FT57C,MAAO,MAtGwB,OAA3Bw8F,EACK,CAAEp8G,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,qBAE7D,CAAE5f,MAAOk8G,GAAkB5kD,QAASi6B,SAAU,KAAM3xE,MAAO,MAN3D,CAAE5f,MAAOk8G,GAAkB3kD,QAASg6B,SAAU,KAAM3xE,MAAO,0BA2GnE,CAAC9M,EAAOjN,EAASiZ,EAAShZ,EAAS+8B,EAAWu5E,EAAwByD,EAAWp+E,IMjCvBi/E,CAAgB5tG,EAAO85B,EAAiB/J,GAAnF89E,GAAlB,GAAQpvB,SAA+BqvB,GAAvC,GAAgChhG,MAExB29B,GAA0BN,aAA2BnqC,GAArDyqC,sBAER,GAAwB3jB,eAAjB+W,GAAP,qBAEMkwE,GAAa5/G,uBAAY,WACzBs8C,KCjLO,SAAsCA,GACnD,OAAKA,EAAsB1R,SAAS3a,OAU/BqsB,EAAsB1R,SAAS5a,MAE3BkgB,OAAO26C,QAAP,mDACuC76D,IAA0B3sB,QACpE,GAFG,sEALC,YAJN6sC,OAAOC,OAAP,mDAC8ClgB,IAAqC5sB,QAC/E,GAFJ,kED6K4Bw8G,CAA6BvjE,KAGtDojE,KAGLtB,GAAa,CAAE7/C,eAAe,EAAM4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,YAAQn1E,IACzFkhH,KACGl0E,MAAK,SAAC9K,GACL09E,GAAa,CAAE7/C,eAAe,EAAO4/C,kBAAgB3F,sBAAkBh6G,EAAWm1E,OAAQjzC,OAE3F2K,OAAM,SAAC1sB,GACNy/F,GAAa,CACX7/C,eAAe,EACf4/C,kBACA3F,iBAAkB75F,EAAM47C,QACxBoZ,YAAQn1E,UAGb,CAAC89C,GAAuBojE,GAAcvB,KAGzC,GAAwCx/G,oBAAkB,GAA1D,qBAAO+5G,GAAP,MAAqBC,GAArB,MAGMO,GAAsBl8D,aAAgBV,IAItCwjE,IACHxC,IACA38E,KAAauJ,KAAcY,cAC1BnK,KAAauJ,KAAcW,SAC1B2zE,IAAqB79E,KAAauJ,KAAcS,aACjDuuE,GAAsB,IAAMmE,GAE1B0C,GAAuB//G,uBAAY,WACvCo+G,GAAa,CAAED,kBAAgB5/C,iBAAei6C,oBAAkB7kC,YAE5DA,IACFvqB,GAAYjnD,KAAMq/B,MAAO,MAE1B,CAAC+8B,GAAenV,GAAaovD,GAAkB2F,GAAgBxqC,KAE5DqsC,GAAsBhgH,uBAAY,WACtCo+G,GAAa,CAAED,eAAgBtsG,EAAO2mG,oBAAkB7kC,UAAQpV,qBAC/D,CAACA,GAAei6C,GAAkB3mG,EAAO8hE,KAG5C,GAAsDh1E,mBAAS,MAA/D,qBAAOshH,GAAP,MAA4BC,GAA5B,MACA,GAAoCnvE,aAAS,cAAC,GAAD,CAAkBurE,aAAc2D,MAAtEE,GAAP,qBAEMC,GAAwB,SAAC9D,GAC7B,IAAM+D,EAAiB//G,OAAOwzG,QAAQkD,IAAmB72F,MAAK,SAACmgG,GAC7D,IAAMC,EAAmBD,EAAmB,GACtCE,EAAsBj7G,aAAWg7G,EAAiB/6G,SACxD,OAAO82G,EAAa92G,UAAYg7G,KAElC,OAAO94F,QAAQ24F,IAGjBphH,qBAAU,WACJghH,IACFE,OAGD,CAACF,KAEJ,IAAMQ,GAAoBzgH,uBACxB,SAAC+pD,GACC00D,IAAqB,GACrBv1D,GAAoB/mD,KAAMq/B,MAAOuoB,GACjC,IAAM22D,EAAkBN,GAAsBr2D,GAE5Cm2D,GADEQ,EACqB32D,EAEA,QAG3B,CAACb,KAGGy3D,GAAiB3gH,uBAAY,WAC7B0+G,IACFt1D,GAAYjnD,KAAMq/B,MAAOk9E,GAAeroC,aAEzC,CAACqoC,GAAgBt1D,KAEdw3D,GAAqB5gH,uBACzB,SAACgqD,GACCd,GAAoB/mD,KAAMw/B,OAAQqoB,GAClC,IAAM02D,EAAkBN,GAAsBp2D,GAE5Ck2D,GADEQ,EACqB12D,EAEA,QAI3B,CAACd,KAGG23D,GAAoBjgD,aAA2B,OAACnb,QAAD,IAACA,OAAD,EAACA,EAAYjkB,MAAb,OAAoBikB,QAApB,IAAoBA,OAApB,EAAoBA,EAAY9jB,QAErF,GAA2CoP,aACzC,cAAC,GAAD,CAAyBnrC,OAAQw3G,EAA0B3C,SAAU,kBAAMzoC,EAAQ7uC,KAAK,aADnF29E,GAAP,qBAIA7hH,qBAAU,WACJm+G,EAAyBr1F,OAAS,GACpC+4F,OAGD,CAAC1D,EAAyBr1F,SAE7B,OAAgCgpB,aAC9B,cAAC,GAAD,CACEl/B,MAAOA,EACPwnG,cAAe8E,GACflF,gBAAiB+G,GACjBzhD,cAAeA,GACfoV,OAAQA,GACR/xC,UAAWA,EACX+J,gBAAiBA,EACjB4sE,UAAWqH,GACXpH,iBAAkBA,GAClBl6C,gBAAiByhD,MAEnB,GACA,EACA,oBAfKgB,GAAP,qBA+BA,OACE,eAAC,KAAD,WACQ,eAAC,KAAD,CAAU9qC,UAAW,eAAC,IAAD,CAAQhmC,GAAG,OAAO1B,QAAQ,WAAW2nC,QAAS,cAAC,IAAD,IAA9C,UAC3B,qBAAK1e,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAFxC,iBAArB,UAKA,eAAC,KAAD,CAAe2xC,GAAG,WAAWF,GAAIC,KAAM16B,MAAM,OAA7C,UACC,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACpE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,cAEL,eAAC,KAAD,CAAemyC,GAAG,UAAUF,GAAIC,KAAO16B,MAAM,OAA7C,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,aAEL,eAAC,KAAD,CAAemyC,GAAG,cAAcF,GAAIC,KAAO16B,MAAM,OAAjD,UACA,qBAAKg/C,IAAI,wBAAwBxO,IAAI,SAAUmtB,OAAO,OAAO30E,MAAM,SACnE,qBAAKg2D,IAAI,0BAA0BxO,IAAI,QAASmtB,OAAO,MAAM30E,MAAM,QAChER,EAAE,oBAGX,eAAC,KAAD,WACE,cAAC,KAAD,CAAW8uC,MAAO9uC,EAAE,YAAa4xC,SAAU5xC,EAAE,gCAC7C,eAAC,GAAD,CAASqiB,GAAG,YAAZ,UACE,eAAC,KAAD,CAAYphB,IAAI,KAAhB,UACE,cAACslE,GAAA,EAAD,CACEG,MAAOnmC,IAAqBp/B,KAAMw/B,SAAWq8E,GAAYnsG,EAAQ7Q,EAAE,oBAAsBA,EAAE,QAC3FD,MAAO8yE,GAAiB1xE,KAAMq/B,OAC9BimC,eAAgBk3C,GAChB1vF,SAAUw2B,EAAWtjD,KAAMq/B,OAC3B4nB,YAAa60D,GACbz2C,MAAOm5C,GACPh5C,iBAAkB84C,GAClB34C,cAAeriB,EAAWtjD,KAAMw/B,QAChCte,GAAG,wBAEL,cAAC,KAAD,CAAY3hB,QAAQ,gBAApB,SACE,eAAC,KAAD,CAASA,QAAS27G,EAAe,gBAAkB,SAAUhoF,MAAO,CAAE1zB,QAAS,UAA/E,UACE,cAAC,GAAD,CAAc61G,WAAS,EAAvB,SACE,cAAC,IAAD,CACEh2G,MAAM,OACNoX,QAAS,WACP6lG,IAAqB,GACrBt1D,MAEF3wC,MAAOitC,EAAWtjD,KAAMq/B,QAAUikB,EAAWtjD,KAAMw/B,QAAU,UAAY,WAG9D,OAAdC,IAAuBo8E,GAAYX,EAClC,cAAC,IAAD,CAAQ9uE,QAAQ,OAAOlrB,GAAG,uBAAuBzK,QAAS,kBAAMg3B,GAAkB,KAAlF,SACG5uC,EAAE,6BAEH,UAGR,cAACumE,GAAA,EAAD,CACExmE,MAAO8yE,GAAiB1xE,KAAMw/B,QAC9BynB,YAAa80D,GACbx2C,MAAOnmC,IAAqBp/B,KAAMq/B,QAAUw8E,GAAYnsG,EAAQ7Q,EAAE,kBAAoBA,EAAE,MACxFymE,eAAe,EACfx4C,SAAUw2B,EAAWtjD,KAAMw/B,QAC3BgmC,iBAAkBi5C,GAClB94C,cAAeriB,EAAWtjD,KAAMq/B,OAChCne,GAAG,yBAEF,eAAC,IAAD,CAAM2vB,WAAW,SAASX,eAAe,gBAAzC,UACe,cAAC,IAAD,CAAS75B,MAAM,UAAUhX,MAAM,SAE3C,eAAC,IAAD,CAAMwxC,WAAW,SAASX,eAAe,gBAAgBpC,GAAG,OAA5D,UACZ,eAAC,IAAD,CAAQgD,GAAG,IAAIzxC,MAAO,GAAK20E,OAAQ,GAAI3kC,KAAK,kEAAkEjD,QAAQ,YAAYG,GAAI,GAAtI,UACA,cAAC,GAAD,UACE,qBAAK8oB,IAAI,uBAAuBxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAErEn1E,EAAE,UAEH,eAAC,IAAD,CAAQiyC,GAAG,IAAIzxC,MAAO,IAAM20E,OAAQ,GAAI3kC,KAAK,kEAAkEjD,QAAQ,YAAvH,UACA,cAAC,GAAD,UACE,qBAAKipB,IAAI,6BAA6BxO,IAAI,YAAYxnD,MAAM,OAAO20E,OAAO,WAE3En1E,EAAE,uBAKIq8G,GAA8B,OAAdz7E,IAAuBo8E,EACtC,qCACE,eAAC,KAAD,CAASt8G,QAAQ,gBAAgB2zB,MAAO,CAAE1zB,QAAS,UAAnD,UACE,cAAC,GAAD,CAAc61G,WAAW,EAAzB,SACE,cAAC,IAAD,CAAeh2G,MAAM,WAEvB,cAAC,IAAD,CAAQ+sC,QAAQ,OAAOlrB,GAAG,0BAA0BzK,QAAS,kBAAMg3B,GAAkB,OAArF,SACG5uC,EAAE,sBAGP,cAAC,GAAD,CAAmBqiB,GAAG,YAAYtiB,MAAO6gC,EAAWiP,SAAUjB,QAE9D,KAEHouE,EAAW,KACV,eAAC,KAAD,CAAY/7G,IAAI,MAAMozB,MAAO,CAAE1zB,QAAS,UAAxC,UACG+lB,QAAQ7V,IACP,eAAC,KAAD,CAAYpQ,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,WACV,cAAC,GAAD,CACEowE,MAAK,OAAEv/D,QAAF,IAAEA,OAAF,EAAEA,EAAOsrC,eACdu7D,aAAcA,GACdC,gBAAiBA,QAItBhtE,IAAoBlc,KACnB,eAAC,KAAD,CAAYhuB,MAAM,SAAlB,UACE,cAAC,GAAD,UAAQT,EAAE,wBACV,eAAC,KAAD,CAAMovC,MAAI,EAAC53B,MAAM,UAAjB,UACGmzB,EAAkB,IADrB,gBAQV,eAAC,IAAD,CAAK+E,GAAG,OAAR,UACGmwE,GACC,cAAC,IAAD,CAAQr/G,MAAM,OAAOwuE,UAAQ,EAAC//B,GAAG,MAAjC,SACGjvC,EAAE,uBAEF6c,EAEDmgG,EACF,cAAC,IAAD,CAAQx8G,MAAM,OAAOwuE,SAAUtoD,QAAQq2F,GAAiBnlG,QAASklG,EAAjE,gBACGC,QADH,IACGA,IACEnC,IAAaF,GAAS+B,KAAO,OAAS7B,IAAaF,GAASkC,OAAS,SAAW,OAEnFU,IAAWD,GACb,eAAC,KAAD,CAAUhpF,MAAO,CAAEsoC,UAAW,UAA9B,UACE,cAAC,KAAD,CAAMnlD,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,4CAEJ0uC,IACC,cAAC,KAAD,CAAMl3B,MAAM,aAAay3B,GAAG,MAA5B,SACGjvC,EAAE,uCAIP8+G,GACF,eAAC,KAAD,WACE,cAAC,IAAD,CACEvxE,QAAS5N,KAAauJ,KAAcS,SAAW,UAAY,UAC3D/xB,QAAS2lG,GACTvuC,SAAUrvC,KAAauJ,KAAcY,cAAgB0zE,GACrDh9G,MAAM,MAJR,SAMGm/B,KAAauJ,KAAcW,QAC1B,eAAC,KAAD,CAAS5oC,IAAI,MAAMP,QAAQ,SAA3B,UACGV,EAAE,YADL,IACkB,cAACywC,GAAA,EAAD,CAAc+R,OAAO,aAErCg7D,IAAqB79E,KAAauJ,KAAcS,SAClD3pC,EAAE,WAEFA,EAAE,iBAAkB,CAAE+8D,MAAK,oBAAEtY,EAAWtjD,KAAMq/B,cAAnB,aAAE,EAAyB92B,cAA3B,QAAqC,OAGpE,cAAC,IAAD,CACE6jC,QAASklC,IAAWylC,GAAsB,EAAI,SAAW,UACzDtgG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJv/G,MAAM,MACN6hB,GAAG,cACH2sD,UACGyD,IAAW9yC,KAAauJ,KAAcS,UAAauuE,GAAsB,IAAMmE,EAlBpF,SAsBMr8G,EADHk4G,GAAsB,IAAMmE,EACvB,oBACFnE,GAAsB,EACpB,cACA,aAIV,cAAC,IAAD,CACE3qE,QAASklC,IAAWylC,GAAsB,IAAMyG,GAAoB,SAAW,UAC/E/mG,QAAS,WACHykG,EACFuC,MAEAxB,GAAa,CACXD,eAAgBtsG,EAChB0sD,eAAe,EACfi6C,sBAAkBh6G,EAClBm1E,YAAQn1E,IAEVuiH,OAGJ19F,GAAG,cACH7hB,MAAM,OACNwuE,UAAWyD,IAAYylC,GAAsB,IAAMmE,KAAmBsC,GAjBxE,SAmBGrC,IACEpE,GAAsB,IAAMmE,EAA5B,wBAGGr8G,EADAk4G,GAAsB,EACpB,cACA,WAxFV,cAACl6E,GAAA,EAAD,CAAqBx9B,MAAM,SA2F5Bs+G,IACC,cAACn2G,GAAA,EAAD,CAAQ0rB,MAAO,CAAEkhD,UAAW,QAA5B,SACE,cAAC,GAAD,CAAeykC,MAAO,CAACr6E,KAAauJ,KAAcS,cAGrD0yE,GAAgB7E,GAAmB,cAAC,GAAD,CAAmB75F,MAAO65F,KAAuB,cAIzFqI,GAGA,cAACxpD,GAAA,EAAD,CAA2B5R,WAAY,CAACA,EAAWjkB,MAAOikB,EAAW9jB,UAFrE,cAAC,GAAD,CAA6B9vB,MAAOA,O,cE7iBrC,SAASuvG,KACd,OAAO,cAAC,KAAD,CAAUjuE,GAAG,UAGtB,IAAMkuE,GAAqB,oDACpB,SAASC,KACd,IACMlhH,EADkByxE,eAAhBC,YACkB1xE,MAAMihH,IAChC,cAAIjhH,QAAJ,IAAIA,OAAJ,EAAIA,EAAO2nB,QACF,cAAC,KAAD,CAAUorB,GAAE,eAAU/yC,EAAM,GAAhB,YAAsBA,EAAM,MAG1C,cAACu2E,GAAA,QAAD,IAGF,SAAS4qC,KACd,MAAqC1vC,eAA7BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,OAAID,EAAYv6C,gBAAkBw6C,EAAYx6C,cACrC,cAAC,KAAD,CAAU4b,GAAE,eAAU2+B,KAExB,cAAC6E,GAAA,QAAD,I,cCpBF,SAAS6qC,KACd,OAAO,cAAC,KAAD,CAAUruE,GAAG,sBAGtB,IAAMkuE,GAAqB,oDACpB,SAASI,KACd,IACMrhH,EADkByxE,eAAhBC,YACkB1xE,MAAMihH,IAChC,cAAIjhH,QAAJ,IAAIA,OAAJ,EAAIA,EAAO2nB,QACF,cAAC,KAAD,CAAUorB,GAAE,2BAAsB/yC,EAAM,GAA5B,YAAkCA,EAAM,MAGtD,cAACwxE,GAAA,QAAD,IAGF,SAAS8vC,KACd,MAAqC7vC,eAA7BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,OAAID,EAAYv6C,gBAAkBw6C,EAAYx6C,cACrC,cAAC,KAAD,CAAU4b,GAAE,2BAAsB2+B,KAEpC,cAACF,GAAA,QAAD,I,cCpBF,SAAS+vC,KACd,OAAO,cAAC,KAAD,CAAUxuE,GAAG,wBAGtB,IAAMkuE,GAAqB,oDACpB,SAASO,KACd,IACMxhH,EADkByxE,eAAhBC,YACkB1xE,MAAMihH,IAChC,cAAIjhH,QAAJ,IAAIA,OAAJ,EAAIA,EAAO2nB,QACF,cAAC,KAAD,CAAUorB,GAAE,6BAAwB/yC,EAAM,GAA9B,YAAoCA,EAAM,MAGxD,cAACq2E,GAAA,QAAD,IAGF,SAASorC,KACd,MAAqChwC,eAA7BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,OAAID,EAAYv6C,gBAAkBw6C,EAAYx6C,cACrC,cAAC,KAAD,CAAU4b,GAAE,6BAAwB2+B,KAEtC,cAAC2E,GAAA,QAAD,I,cCpBF,SAASqrC,KACd,OAAO,cAAC,KAAD,CAAU3uE,GAAG,yBAGtB,IAAMkuE,GAAqB,oDACpB,SAASU,KACd,IACM3hH,EADkByxE,eAAhBC,YACkB1xE,MAAMihH,IAChC,cAAIjhH,QAAJ,IAAIA,OAAJ,EAAIA,EAAO2nB,QACF,cAAC,KAAD,CAAUorB,GAAE,8BAAyB/yC,EAAM,GAA/B,YAAqCA,EAAM,MAGzD,cAACs2E,GAAA,QAAD,IAGF,SAASsrC,KACd,MAAqCnwC,eAA7BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YACrB,OAAID,EAAYv6C,gBAAkBw6C,EAAYx6C,cACrC,cAAC,KAAD,CAAU4b,GAAE,8BAAyB2+B,KAEvC,cAAC4E,GAAA,QAAD,ICrBT,IAAM2qC,GAAqB,4CAWZY,OATf,WACE,IAAQr8G,EAAWisE,eAAXjsE,OACR,IAAKy7G,GAAmBp5E,KAAKriC,GAC3B,OAAO,cAAC,KAAD,CAAUutC,GAAG,UAEtB,MAA+BvtC,EAAOpB,MAAM,KAA5C,mBAAOywB,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUie,GAAE,kBAAale,EAAb,YAA0BC,MCTzCmsF,GAAqB,4CAWZa,OATf,WACE,IAAQt8G,EAAWisE,eAAXjsE,OACR,IAAKy7G,GAAmBp5E,KAAKriC,GAC3B,OAAO,cAAC,KAAD,CAAUutC,GAAG,WAEtB,MAA+BvtC,EAAOpB,MAAM,KAA5C,mBAAOywB,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUie,GAAE,qBAAgBle,EAAhB,YAA6BC,MCT5CmsF,GAAqB,4CAWZc,OATf,WACE,IAAQv8G,EAAWisE,eAAXjsE,OACR,IAAKy7G,GAAmBp5E,KAAKriC,GAC3B,OAAO,cAAC,KAAD,CAAUutC,GAAG,WAEtB,MAA+BvtC,EAAOpB,MAAM,KAA5C,mBAAOywB,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUie,GAAE,uBAAkBle,EAAlB,YAA+BC,MCT9CmsF,GAAqB,4CAWZe,OATf,WACE,IAAQx8G,EAAWisE,eAAXjsE,OACR,IAAKy7G,GAAmBp5E,KAAKriC,GAC3B,OAAO,cAAC,KAAD,CAAUutC,GAAG,WAEtB,MAA+BvtC,EAAOpB,MAAM,KAA5C,mBAAOywB,EAAP,KAAkBC,EAAlB,KAEA,OAAO,cAAC,KAAD,CAAUie,GAAE,wBAAmBle,EAAnB,YAAgCC,MCR9C,SAASmtF,KACd,IAAM/1C,EAAW7P,eACf,OAAO,cAAC,KAAD,CAAUtpB,GAAE,6BAAOm5B,GAAP,IAAiBhL,SAAU,YAI3C,SAASghD,KACd,IAAMh2C,EAAW7P,eACTD,EAAW8P,EAAX9P,OACAxS,EAAmB6nB,eAAnB7nB,eAER,OACE,cAAC,KAAD,CACE7W,GAAE,6BACGm5B,GADH,IAEAhL,SAAU,QACV9E,OACEA,GAAUA,EAAOz0C,OAAS,EAA1B,UACOy0C,EADP,2BACgCxS,GADhC,0BAEuBA,OC4BjC,IAAMu4D,GAAOC,gBAAK,kBAAM,mCAClBC,GAAUD,gBAAK,kBAAM,mCACrBE,GAAcF,gBAAK,kBAAM,mCACzBG,GAAQH,gBAAK,kBAAM,mCACnBI,GAAcJ,gBAAK,kBAAM,mCACzBK,GAAUL,gBAAK,kBAAM,mCACrBM,GAAON,gBAAK,kBAAM,mCAClBO,GAAWP,gBAAK,kBAAM,mCACtBQ,GAAeR,gBAAK,kBAAM,mCAC1BS,GAAQT,gBAAK,kBAAM,mCACnBU,GAAOV,gBAAK,kBAAM,mCAClBW,GAAUX,gBAAK,kBAAM,kCACrBY,GAAqBZ,gBAAK,kBAAM,mCAChCa,GAAcb,gBAAK,kBAAM,yDACzBc,GAASd,gBAAK,kBAAM,mCACpBe,GAAWf,gBAAK,kBAAM,wDACtBgB,GAAiBhB,gBAAK,kBAAM,wDAC5B7rC,GAAe6rC,gBAAK,kBAAM,4CAC1B5wC,GAAgB4wC,gBAAK,kBAAM,4CAC3B/rC,GAAgB+rC,gBAAK,kBAAM,4CAC3B9rC,GAAgB8rC,gBAAK,kBAAM,4CAC3BiB,GAAYjB,gBAAK,kBAAM,mCACvBkB,GAAalB,gBAAK,kBAAM,mCACxBmB,GAAanB,gBAAK,kBAAM,mCACxBoB,GAAapB,gBAAK,kBAAM,mCACxBqB,GAAarB,gBAAK,kBAAM,mCACxBsB,GAActB,gBAAK,kBAAM,mCACzBuB,GAAcvB,gBAAK,kBAAM,mCACzBwB,GAAcxB,gBAAK,kBAAM,mCACzByB,GAAkBzB,gBAAK,kBAAM,mCAC7B0B,GAAmB1B,gBAAK,kBAAM,mCAC9B2B,GAAmB3B,gBAAK,kBAAM,mCAC9B4B,GAAmB5B,gBAAK,kBAAM,mCAGpC9/G,KAAU4gB,OAAO,CACf4a,eAAgB,IAChBC,eAAgB,KAGlB,IAAMi4C,GAAgB,WAMpB,OALAtoC,eACAumD,KACAtzB,eACAjhD,eAGE,eAAC,KAAD,CAAQkyD,QAASA,KAAjB,UACE,cAAC,KAAD,IACA,cAACqyC,GAAD,IACA,cAAC,GAAD,UACE,cAAC,GAAD,CAAwBvpB,SAAU,cAACxd,GAAA,EAAD,IAAlC,SACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO3zB,KAAK,IAAI26D,OAAK,EAArB,SACE,cAAC/B,GAAD,MAEF,cAAC,KAAD,CAAO+B,OAAK,EAAC36D,KAAK,iBAAlB,SACE,cAACi5D,GAAD,MAEF,cAAC,KAAD,CAAO0B,OAAK,EAAC36D,KAAK,cAAlB,SACE,cAAC84D,GAAD,MAEF,cAAC,KAAD,CAAO6B,OAAK,EAAC36D,KAAK,eAAlB,SACE,cAAC+4D,GAAD,MAEF,cAAC,KAAD,CAAO/4D,KAAK,UAAZ,SACE,cAACg5D,GAAD,MAEF,cAAC,KAAD,CAAOh5D,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAOA,KAAK,WAAZ,SACE,cAACk5D,GAAD,MAEF,cAAC,KAAD,CAAOl5D,KAAK,OAAZ,SACE,cAACm5D,GAAD,MAEF,cAAC,KAAD,CAAOn5D,KAAK,gBAAZ,SACE,cAACq5D,GAAD,MAEF,cAAC,KAAD,CAAOsB,OAAK,EAAC36D,KAAK,SAAlB,SACE,cAACs5D,GAAD,MAEF,cAAC,KAAD,CAAOt5D,KAAK,aAAZ,SACE,cAACu5D,GAAD,MAEF,cAAC,KAAD,CAAOv5D,KAAK,WAAZ,SACE,cAACw5D,GAAD,MAEF,cAAC,KAAD,CAAOx5D,KAAK,eAAZ,SACE,cAACy5D,GAAD,MAEF,cAAC,KAAD,CAAOz5D,KAAK,cAAZ,SACE,cAAC05D,GAAD,MAEF,cAAC,KAAD,CAAOiB,OAAK,EAAC36D,KAAK,UAAlB,SACE,cAAC25D,GAAD,MAEF,cAAC,KAAD,CAAOgB,OAAK,EAAC36D,KAAK,0BAAlB,SACE,cAAC65D,GAAD,MAEF,cAAC,KAAD,CAAO75D,KAAK,uBAAZ,SACE,cAAC45D,GAAD,MAIF,cAAC,KAAD,CAAOe,OAAK,EAACC,QAAM,EAAC56D,KAAK,QAAzB,SACE,cAACw3D,GAAD,MAEF,cAAC,KAAD,CAAOmD,OAAK,EAACC,QAAM,EAAC56D,KAAK,WAAzB,SACE,cAACozD,GAAD,MAEF,cAAC,KAAD,CAAOuH,OAAK,EAACC,QAAM,EAAC56D,KAAK,cAAzB,SACE,cAACq3D,GAAD,MAEF,cAAC,KAAD,CAAOsD,OAAK,EAACC,QAAM,EAAC56D,KAAK,UAAzB,SACE,cAACu3D,GAAD,MAEF,cAAC,KAAD,CAAOoD,OAAK,EAACC,QAAM,EAAC56D,KAAK,wBAAzB,SACE,cAAC24D,GAAD,MAEF,cAAC,KAAD,CAAOgC,OAAK,EAACC,QAAM,EAAC56D,KAAK,QAAzB,SACE,cAAC04D,GAAD,MAEF,cAAC,KAAD,CAAOiC,OAAK,EAACC,QAAM,EAAC56D,KAAK,QAAzB,SACE,cAACk6D,GAAD,MAEF,cAAC,KAAD,CAAOS,OAAK,EAACC,QAAM,EAAC56D,KAAK,WAAzB,SACE,cAACm6D,GAAD,MAEF,cAAC,KAAD,CAAOQ,OAAK,EAACC,QAAM,EAAC56D,KAAK,aAAzB,SACE,cAACo6D,GAAD,MAEF,cAAC,KAAD,CAAOO,OAAK,EAACC,QAAM,EAAC56D,KAAK,cAAzB,SACE,cAACq6D,GAAD,MAEF,cAAC,KAAD,CAAOM,OAAK,EAACC,QAAM,EAAC56D,KAAK,aAAzB,SACE,cAAC85D,GAAD,MAEF,cAAC,KAAD,CAAOa,OAAK,EAACC,QAAM,EAAC56D,KAAK,gBAAzB,SACE,cAAC+5D,GAAD,MAEF,cAAC,KAAD,CAAOY,OAAK,EAACC,QAAM,EAAC56D,KAAK,kBAAzB,SACE,cAACg6D,GAAD,MAEF,cAAC,KAAD,CAAOW,OAAK,EAACC,QAAM,EAAC56D,KAAK,mBAAzB,SACE,cAACi6D,GAAD,MAEF,cAAC,KAAD,CAAOU,OAAK,EAACC,QAAM,EAAC56D,KAAK,UAAzB,SACE,cAACy3D,GAAD,MAEF,cAAC,KAAD,CAAOkD,OAAK,EAACC,QAAM,EAAC56D,KAAK,aAAzB,SACE,cAAC63D,GAAD,MAEF,cAAC,KAAD,CAAO8C,OAAK,EAACC,QAAM,EAAC56D,KAAK,eAAzB,SACE,cAACg4D,GAAD,MAEF,cAAC,KAAD,CAAO2C,OAAK,EAACC,QAAM,EAAC56D,KAAK,gBAAzB,SACE,cAACm4D,GAAD,MAEF,cAAC,KAAD,CAAOwC,OAAK,EAAC36D,KAAK,OAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,mBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,qBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,sBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,oBAAlB,SACE,cAAC23D,GAAD,MAEF,cAAC,KAAD,CAAOgD,OAAK,EAAC36D,KAAK,iCAAlB,SACE,cAAC43D,GAAD,MAEF,cAAC,KAAD,CAAO+C,OAAK,EAAC36D,KAAK,6CAAlB,SACE,cAAC+3D,GAAD,MAEF,cAAC,KAAD,CAAO4C,OAAK,EAAC36D,KAAK,+CAAlB,SACE,cAACk4D,GAAD,MAEF,cAAC,KAAD,CAAOyC,OAAK,EAAC36D,KAAK,gDAAlB,SACE,cAACq4D,GAAD,MAEF,cAAC,KAAD,CAAOsC,OAAK,EAAC36D,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,aAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,eAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,gBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAAC36D,KAAK,uBAAlB,SACE,cAAC83D,GAAD,MAEF,cAAC,KAAD,CAAO6C,OAAK,EAAC36D,KAAK,uBAAlB,SACE,cAACi4D,GAAD,MAEF,cAAC,KAAD,CAAO0C,OAAK,EAAC36D,KAAK,uBAAlB,SACE,cAACo4D,GAAD,MAEF,cAAC,KAAD,CAAOuC,OAAK,EAAC36D,KAAK,oCAAlB,SACE,cAAC43D,GAAD,MAEF,cAAC,KAAD,CAAO+C,OAAK,EAAC36D,KAAK,uCAAlB,SACE,cAAC+3D,GAAD,MAEF,cAAC,KAAD,CAAO4C,OAAK,EAAC36D,KAAK,yCAAlB,SACE,cAACk4D,GAAD,MAEF,cAAC,KAAD,CAAOyC,OAAK,EAAC36D,KAAK,0CAAlB,SACE,cAACq4D,GAAD,MAEF,cAAC,KAAD,CAAOsC,OAAK,EAACC,QAAM,EAAC56D,KAAK,kBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAACC,QAAM,EAAC56D,KAAK,qBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAACC,QAAM,EAAC56D,KAAK,uBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAACC,QAAM,EAAC56D,KAAK,wBAAzB,SACE,cAAC,GAAD,MAEF,cAAC,KAAD,CAAO26D,OAAK,EAACC,QAAM,EAAC56D,KAAK,oCAAzB,SACE,cAACs6D,GAAD,MAEF,cAAC,KAAD,CAAOK,OAAK,EAACC,QAAM,EAAC56D,KAAK,uCAAzB,SACE,cAACu6D,GAAD,MAEF,cAAC,KAAD,CAAOI,OAAK,EAACC,QAAM,EAAC56D,KAAK,yCAAzB,SACE,cAACw6D,GAAD,MAEF,cAAC,KAAD,CAAOG,OAAK,EAACC,QAAM,EAAC56D,KAAK,0CAAzB,SACE,cAACy6D,GAAD,MAKF,cAAC,KAAD,CAAOz6D,KAAK,QAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,iBAEf,cAAC,KAAD,CAAOwW,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,oBAEf,cAAC,KAAD,CAAOwW,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,sBAEf,cAAC,KAAD,CAAOwW,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,uBAEf,cAAC,KAAD,CAAOwW,KAAK,WAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,iBAEf,cAAC,KAAD,CAAOwW,KAAK,SAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,iBAEf,cAAC,KAAD,CAAOwW,KAAK,OAAZ,SACE,cAAC,KAAD,CAAUxW,GAAG,oBAIf,cAAC,KAAD,CAAO8iC,UAAW8sC,YAIxB,cAAC,GAAD,CAAWyB,WAAY,IACvB,cAAC,KAAD,IACA,cAAC91B,GAAA,EAAD,QAKSzoB,OAAMtqC,KAAKy6C,I,8BClUpBquC,GAAuB,SAAC5rG,GAC5B,MAAiB8c,eAAVC,EAAP,oBACA,OAAO,cAAC,KAAD,cAAeC,MAAOD,EAAS8uF,KAAOC,MAAW9rG,KAuB3C+rG,GApBa,SAAC,GAAkB,IAAhBlmH,EAAe,EAAfA,SAC7B,OACE,cAAC,KAAD,CAAmBmkE,WAAYA,KAA/B,SACE,cAAC,IAAD,CAAUz+B,MAAOA,KAAjB,SACE,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,KAAD,UACE,cAAC3T,GAAA,EAAD,UACE,cAAC,KAAD,UAAgB/xB,mBChBlC,SAASmmH,KACP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAKN,SAASC,GAAT,GAA2D,IAAtCpmH,EAAqC,EAArCA,SACXmf,EAAYnZ,cAAZmZ,QAER,OADyBiE,mBAAQ,kBAAM4F,QAAQ7J,IAAmD,IAAxC2S,IAAkBpK,QAAQvI,MAAkB,CAACA,IAE9F,kDAEF,mCAAGnf,IAGZqmH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,GAAD,UACE,eAAC,GAAD,WACE,cAACD,GAAD,IACA,cAAC,GAAD,WAIN11C,SAAS+1C,eAAe,W","file":"static/js/main.f14500cd.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getVIZSLAHVIAddress = () => {\n  return getAddress(tokens.lp.address)\n}\nexport const getLAMEAAddress = () => {\n  return getAddress(tokens.lamea.address)\n}\nexport const getHVIBNBAddress = () => {\n  return getAddress(tokens.lp2.address)\n}\nexport const getVIZSLASWAPLAMEAAddress = () => {\n  return getAddress(tokens.lp3.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getethAddress = () => {\n  return getAddress(tokens.eth.address)\n}\nexport const getetcAddress = () => {\n  return getAddress(tokens.etc.address)\n}\nexport const getltcAddress = () => {\n  return getAddress(tokens.ltc.address)\n}\nexport const getbvcAddress = () => {\n  return getAddress(tokens.bvc.address)\n}\nexport const getbabyvizslaAddress = () => {\n  return getAddress(tokens.babyvizsla.address)\n}\nexport const getataliraAddress = () => {\n  return getAddress(tokens.atalira.address)\n}\nexport const getexzoAddress = () => {\n  return getAddress(tokens.exzo.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  lp: {\n    symbol: 'HVI + VIZSLASWAP',\n    address: {\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp2: {\n    symbol: 'HVI + WBNB',\n    address: {\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp3: {\n    symbol: 'VIZSLASWAP + LAMEA',\n    address: {\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    trip: {\n      symbol: 'TRIP',\n      address: {\n        56: '0x15a0Ff684918B20487f2a68d6816e694BB05E471',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://crypto-travel.org/',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    stake: {\n      symbol: 'STAKE',\n      address: {\n        56: '0xe55bd75d7cE7bfDe26A347A748d080D3ACdA7FFE',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract, getVIZSLAHVIContract, getHVIBNBContract , getVIZSLASWAPLAMEAContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLAHVI = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLAHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyHVIBNB = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIBNBContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLASWAPLAMEA = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLASWAPLAMEAContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useVizslaLameaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useVizslaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useLAMEALPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useHVILPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useHVILPBalance2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useWBNBLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const usePool1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x96e41f4e0F885121756b84fe966C39ED92047968')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3FF00B58e432B0895e3fd69634Ec50e3931110c1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool5 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x44c44e691e523378fec15Ba101AE0618fCA21cC4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool6 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x495Cd5Fc0dF972A028AD50c7be23d2350702B228')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool7 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x40f69629aeaC357826188Ce3d63a1720B7D351ab')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool8 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7f206F080306E37446CaA77be250C07F1548f544')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool9 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool10 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool11 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool12 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x89Cf97e3D99FDE78670BB9D87266BA366B626bca')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool13 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool14 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xf142BD28CaCd766c24201bD2FF4513CEc032e882')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool15 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xa05E95D44d746FC833041fCb62103A04850e1851')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool16 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool17 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool18 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xac4a94609dE599AA394E8C15e086eCef866d50cd')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool19 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool20 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool21 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xE94d40FEb04ae087771a73b2D67Aca6757a086B6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool22 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool23 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool24 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool25 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool26 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x78D1d79449da238bA76FB47CAff92De04C468622')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool27 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool28 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool29 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0340fdb81618874936535CA5276294fB84A719Ee')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool30 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool31 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xfd191349e26e939d0c424F5BA1069Da1Ddb07602')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool32 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x4beBa40b480cF3d60caACC23C3a07043AD72880F')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool33 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x59118c750a5c704001574c0693c1790196993c23')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool34 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool35 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xc17c5D59ea8475d6eA987F654247Fba120166303')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool36 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool37 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xb903485C032E93655B5d5CFe4A439018ACb9E211')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool38 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x646086C73D560B7a4581F6229738c88733C92e4B')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\nexport interface PoolConfig2 {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\nexport const useLpTokenPrice2 = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(10)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceLameaBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(19)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETHBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(9)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(17)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceLTCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(10)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceATALIRABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(21)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceEXZOBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(22)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBVCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(4)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBABYVIZSLABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(6)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getVIZSLAHVIAddress,\n  getHVIBNBAddress,\n  getLotteryV2Address,\n  getVIZSLASWAPLAMEAAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getVIZSLAHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLAHVIAddress(), signer)\n}\nexport const getHVIBNBContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIBNBAddress(), signer)\n}\nexport const getVIZSLASWAPLAMEAContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLASWAPLAMEAAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xd88fdB83a1CFbc34a9eEa0106D1834A25b2BCE4B',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xf413bd4C866A336E26f56516774Ed56a0546b91A',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0x7dD1A967F2FB6C439BAecA357fcD8A9CCd3CB6D3',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x70f317168B0B6638528b6FDFdBcCC8E7BFa3735c',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x38426AaCeE71Be2c135c6D69dC8c318b51c54CAB',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index4'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks4'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens4'\n\nexport const ROUTER_ADDRESS = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\nexport const ROUTER_ADDRESS2 = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens5'\n\nexport const ROUTER_ADDRESS = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\nexport const ROUTER_ADDRESS2 = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index5'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks5'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_LIMIT2 = 500000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n      {\n    sousId: 100,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp,\n    number:'100',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL2',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x96e41f4e0F885121756b84fe966C39ED92047968',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.086',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 101,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp2,\n    number:'101',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL3',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000006945',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 102,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp3,\n    number:'102',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL4',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 36,\n    stakingToken: tokens.wbnb,\n    earningToken: tokens.vizslaswap,\n    number:'36',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 35,\n    stakingToken: tokens.eth,\n    earningToken: tokens.vizslaswap,\n    number:'35',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xfd191349e26e939d0c424F5BA1069Da1Ddb07602',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 34,\n    stakingToken: tokens.etc,\n    earningToken: tokens.vizslaswap,\n    number:'34',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x4beBa40b480cF3d60caACC23C3a07043AD72880F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 33,\n    stakingToken: tokens.ltc,\n    earningToken: tokens.vizslaswap,\n    number:'33',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x59118c750a5c704001574c0693c1790196993c23',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.38',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 32,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.trip,\n    number:'32',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x40f69629aeaC357826188Ce3d63a1720B7D351ab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.694',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 31,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.btnty,\n    number:'31',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7f206F080306E37446CaA77be250C07F1548f544',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.89',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 28,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.build,\n    number:'28',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xE94d40FEb04ae087771a73b2D67Aca6757a086B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.217',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 29,\n    stakingToken: tokens.atalira,\n    earningToken: tokens.atalira,\n    number:'29',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'ATALIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xc17c5D59ea8475d6eA987F654247Fba120166303',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0249',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 24,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.atalira,\n    number:'24',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 30,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.atalira,\n    number:'30',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 25,\n    stakingToken: tokens.exzo,\n    earningToken: tokens.exzo,\n    number:'25',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'EXZO',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '11.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 26,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.exzo,\n    number:'26',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 27,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.exzo,\n    number:'27',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      tokensymbol5: 'ALL1',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '4%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '370',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: true,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00115',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000048612',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002082',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.425',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('apeswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('apeswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('apeswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('apeswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('apeswap/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('radioshack/selectCurrency')\nexport const switchCurrencies = createAction<void>('radioshack/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('radioshack/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('radioshack/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('radioshack/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('biswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('biswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('biswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('biswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('biswap/setRecipient')\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks4'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens4'\nimport { isAddress } from '../utils/index4'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract4'\nimport { filterTokens } from '../components/SearchModal/filtering4'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks5'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens5'\nimport { isAddress } from '../utils/index5'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract5'\nimport { filterTokens } from '../components/SearchModal/filtering5'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions3'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index4'\nimport useTokenAllowance from './useTokenAllowance4'\nimport { Field } from '../state/swap/actions4'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks4'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices4'\nimport { calculateGasMargin } from '../utils/index4'\nimport { useTokenContract } from './useContract4'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index5'\nimport useTokenAllowance from './useTokenAllowance5'\nimport { Field } from '../state/swap/actions5'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks5'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices5'\nimport { calculateGasMargin } from '../utils/index5'\nimport { useTokenContract } from './useContract5'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens4'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens5'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { Currency } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo4'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo5'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index4'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index4'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index5'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index5'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist3.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist4.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 20,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(RADIOSHACK)',\n    lpSymbol3: 'radioliquidity',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 36,\n    lpSymbol: 'HVI-VIZSLASWAP LP',\n    lpSymbol1:'36',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 27,\n    lpSymbol: 'LAMEA-VIZSLASWAP LP',\n    lpSymbol1:'27',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 28,\n    lpSymbol: 'BVC-VIZSLASWAP LP',\n    lpSymbol1:'28',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x189426C386C446Df3549e3B7Af9bF5D1321E30B9',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 29,\n    lpSymbol: 'BABYVIZSLA-VIZSLASWAP LP',\n    lpSymbol1:'29',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 30,\n    lpSymbol: 'FPS-VIZSLASWAP LP',\n    lpSymbol1:'30',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 31,\n    lpSymbol: 'SKELETON-VIZSLASWAP LP',\n    lpSymbol1:'31',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 32,\n    lpSymbol: 'BUILD-VIZSLASWAP LP',\n    lpSymbol1:'32',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8a9d56706950495cf2CF1799E311f9c68C81D473',\n    },\n    token: tokens.build,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 33,\n    lpSymbol: 'ETH-VIZSLASWAP LP',\n    lpSymbol1:'33',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x48eE61775B6E737a87b38BaC01faC55281ee0B4a',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 34,\n    lpSymbol: 'ATALIRA-VIZSLASWAP LP',\n    lpSymbol1:'34',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 35,\n    lpSymbol: 'EXZO-VIZSLASWAP LP',\n    lpSymbol1:'35',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC7f86B54BA7eE572b466Af28e3100780736c5934',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 21,\n    lpSymbol: 'ATALIRA-BNB LP',\n    lpSymbol1:'21',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x92AB1792235208d119Eee8A420ec264687F4BFC9',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 22,\n    lpSymbol: 'EXZO-BNB LP',\n    lpSymbol1:'22',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x31e4286de26215c2e790732Dc8EC78Af36c338a7',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 23,\n    lpSymbol: 'BUILD-BNB LP',\n    lpSymbol1:'23',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xEacB9B9c341988d4397F6E1627B2fF32581a2842',\n    },\n    token: tokens.build,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 24,\n    lpSymbol: 'BTNTY-BNB LP',\n    lpSymbol1:'24',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xfF2FFa2B8B59471dD8315c652c4431589DF454ba',\n    },\n    token: tokens.btnty,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 25,\n    lpSymbol: 'TRIP-BNB LP',\n    lpSymbol1:'25',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x109c9Cf64f8AE7Ff01D32597508A9407eBd4dF6f',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 26,\n    lpSymbol: 'TRIP-VIZSLASWAP LP',\n    lpSymbol1:'26',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x1b0169f8b912f7AD2B5000eB6722A987660bd365',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.vizslaswap,\n   }\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers4'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'RLP', 'RadioShack Swap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers5'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'BSW-LP', 'Biswap LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { useMulticallContract } from 'hooks/useContract4'\nimport { isAddress } from 'utils/index4'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { useMulticallContract } from 'hooks/useContract5'\nimport { isAddress } from 'utils/index5'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT2, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT2,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers4'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index4'\nimport { getContract } from '../utils/index4'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers5'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index5'\nimport { getContract } from '../utils/index5'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'vizslaswap.com', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens4'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades4'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices4'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index4'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens5'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades5'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices5'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index5'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks4'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks5'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions4'\nimport { TransactionDetails } from './reducer4'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions5'\nimport { TransactionDetails } from './reducer5'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: '664',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swaplogo-swap-ltc.png',\n    },\n    sortOrder: 999,\n    identifier: '664',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index4'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades4'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index4'\nimport { PairState, usePairs } from './usePairs4'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nimport { useUnsupportedTokens } from './Tokens4'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet4'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index4'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index5'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades5'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index5'\nimport { PairState, usePairs } from './usePairs5'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nimport { useUnsupportedTokens } from './Tokens5'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet5'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index5'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal4'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index4'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal5'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index5'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { isAddress } from '../../utils/index4'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { isAddress } from '../../utils/index5'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useTokenContract } from './useContract4'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useTokenContract } from './useContract5'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers4'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers5'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool4') ||\n    pathname.includes('/createradio') ||\n    pathname.includes('/addradioliquidity') ||\n    pathname.includes('/removeradio') ||\n    pathname.includes('/radiofind') ||\n    pathname.includes('/radioliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool4\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav4'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool5') ||\n    pathname.includes('/createbiswap') ||\n    pathname.includes('/addbiswapliquidity') ||\n    pathname.includes('/removebiswap') ||\n    pathname.includes('/biswapfind') ||\n    pathname.includes('/biswapliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/biswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool5\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav5'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index4'\nimport { getBscScanLink } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport { ListLogo } from 'components/Logo/index4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist'\nimport { MIN_BNB } from '../config/constants/index4'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index5'\nimport { getBscScanLink } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport { ListLogo } from 'components/Logo/index5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { MIN_BNB } from '../config/constants/index5'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n                 <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs4'\nimport useTotalSupply from 'hooks/useTotalSupply4'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency4'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks4'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index4'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index4'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard4'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index4'\nimport { PairState } from '../../hooks/usePairs4'\nimport { useCurrency } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback4'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks4'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks4'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index4'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency4'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom4'\nimport { currencyId } from '../../utils/currencyId4'\nimport PoolPriceBar from './PoolPriceBar4'\nimport Page from '../Page4'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity4() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addradioliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addradioliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addradioliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addradioliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addradioliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool4\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs5'\nimport useTotalSupply from 'hooks/useTotalSupply5'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency5'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks5'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index5'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index5'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard5'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index5'\nimport { PairState } from '../../hooks/usePairs5'\nimport { useCurrency } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback5'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks5'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks5'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index5'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency5'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom5'\nimport { currencyId } from '../../utils/currencyId5'\nimport PoolPriceBar from './PoolPriceBar5'\nimport Page from '../Page5'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity5() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addbiswapliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addbiswapliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addbiswapliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addbiswapliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addbiswapliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n               <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool5\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply4'\n\nimport { useTokenBalance } from '../../state/wallet/hooks4'\nimport { currencyId } from '../../utils/currencyId4'\nimport { unwrappedToken } from '../../utils/wrappedCurrency4'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo4'\nimport { DoubleCurrencyLogo } from '../Logo/index4'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index4'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeradio/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addradioliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply5'\n\nimport { useTokenBalance } from '../../state/wallet/hooks5'\nimport { currencyId } from '../../utils/currencyId5'\nimport { unwrappedToken } from '../../utils/wrappedCurrency5'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo5'\nimport { DoubleCurrencyLogo } from '../Logo/index5'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index5'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removebiswap/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addbiswapliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens3'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback2'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks3'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens3'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index3'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens3'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow3'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists3'\nimport ManageTokens from './ManageTokens3'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage3'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo4'\nimport { ListLogo } from 'components/Logo/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens4'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks4'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens4'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index4'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index4'\nimport ImportRow from './ImportRow4'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks4'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens4'\nimport { isAddress } from '../../utils/index4'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList4'\nimport { filterTokens, useSortedTokensByQuery } from './filtering4'\nimport useTokenComparator from './sorting4'\n\nimport ImportRow from './ImportRow4'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback4'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks4'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index4'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens4'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index4'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens4'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow4'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists4'\nimport ManageTokens from './ManageTokens4'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index4'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback4'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch4'\nimport ImportToken from './ImportToken4'\nimport Manage from './Manage4'\nimport ImportList from './ImportList4'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo5'\nimport { ListLogo } from 'components/Logo/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens5'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks5'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens5'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index5'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index5'\nimport ImportRow from './ImportRow5'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks5'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens5'\nimport { isAddress } from '../../utils/index5'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList5'\nimport { filterTokens, useSortedTokensByQuery } from './filtering5'\nimport useTokenComparator from './sorting5'\n\nimport ImportRow from './ImportRow5'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback5'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks5'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index5'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens5'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index5'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens5'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow5'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists5'\nimport ManageTokens from './ManageTokens5'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback5'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch5'\nimport ImportToken from './ImportToken5'\nimport Manage from './Manage5'\nimport ImportList from './ImportList5'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract3'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp4'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract4'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp5'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract5'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools/all',\n  },\n  {\n    label: t('Be2Mining'),\n    icon: 'PredictionsIcon',\n    href: '/be2mining/all',\n    status: {\n      text: t('NEW').toLocaleUpperCase(),\n      color: 'warning',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link}  to=\"/pools/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr2'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd, } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress} from 'utils/addressHelpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21  \n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 \n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const MAJDNEM3 = POOL30\n  const FULL4 = POOL30 * WBNBPRICE\n  const MAJDNEM4 = POOL31\n  const FULL5 = POOL31 * ETHPRICE\n  const MAJDNEM5 = POOL32\n  const FULL6 = POOL32 * ETCPRICE\n  const MAJDNEM6 = POOL33\n  const FULL7 = POOL33 * LTCPRICE\n  const MAJDNEM7 = POOL34\n  const FULL8 = POOL34 * LAMEAPRICE\n  const MAJDNEM8 = POOL35\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const MAJDNEM9 = POOL36\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const MAJDNEM10 = POOL37\n  const FULL11 = POOL37 * BVCPRICE\n  const MAJDNEM11 = POOL38\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (Staking Pools)')} onDismiss={onDismiss}>\n  \n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL2} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM2 * 1000000000} unit=\" HVI\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL8} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM7} unit=\" LAMEA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL11} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM10} unit=\" BVC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL10} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM9  * 1000000000} unit=\" EXZO\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL9} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM8  * 1000000000} unit=\" ATALIRA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL5} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM4} unit=\" ETH\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL12} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM11} unit=\" BABYVIZSLA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL4} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM3} unit=\" WBNB\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL6} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM5} unit=\" ETC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL7} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM6} unit=\" LTC\" decimals={0} />\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault  } from 'state/pools/hooks'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd, } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress} from 'utils/addressHelpers'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL1')\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21  \n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 \n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const FULL4 = POOL30 * WBNBPRICE\n  const FULL5 = POOL31 * ETHPRICE\n  const FULL6 = POOL32 * ETCPRICE\n  const FULL7 = POOL33 * LTCPRICE\n  const FULL8 = POOL34 * LAMEAPRICE\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const FULL11 = POOL37 * BVCPRICE\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12\n  \n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools = useMemo(\n    () =>\n      all.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n  const showall = location.pathname.includes('all')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : antiwhalepools\n  } \n  if (showall) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : all\n  } \n\n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={FULL3} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (Staking Pools)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as={Link} width={50} height={35}  to=\"/pools/all\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as={Link} width={50} height={35}  to=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000 ) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard2: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard2\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard3: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard3\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to=\"/be2mining/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to=\"/be2mining/finished\">\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3} from 'hooks/useTokenBalance'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const VÉGE = POOL1 + POOL2 + POOL3 \n  const VÉGE1 = VÉGE * VIZSLAPRICE\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (B2Mining)')} onDismiss={onDismiss}>\n  \n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Balance color=\"textSubtle\" value={VÉGE1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={VÉGE} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n    \n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools2'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow2: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow2\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow3: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow3\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types2'\nimport PoolRow from './PoolRow'\nimport PoolRow2 from '../PoolsTable2/PoolRow'\nimport PoolRow3 from '../PoolsTable3/PoolRow'\n\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  pools3: Pool[]\n  pools2: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools,pools2, pools3, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        {pools2.map((pool) => (\n          <PoolRow2\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n          {pools3.map((pool) => (\n          <PoolRow3\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3} from 'hooks/useTokenBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport PoolCard2 from './components/PoolCard2'\nimport PoolCard3 from './components/PoolCard3'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst FarmPools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const chosenPoolsLength3 = useRef(0)\n  const chosenPoolsLength2 = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const EREDMENY1 = VIZSLAPRICE * POOL1\n  const EREDMENY2 = VIZSLAPRICE * POOL2\n  const EREDMENY3 = VIZSLAPRICE * POOL3\n  const VÉGE = EREDMENY1 + EREDMENY2 + EREDMENY3  \n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool2) => pool2.sousId === 1000)\n    const cakeAutoVault = { ...cakePool, isAutoVault: false }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL2')\n  const all2 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL3')\n  const all3 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL4')\n  const finished = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'FINISHED2')\n  \n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyfinished = useMemo(\n    () =>\n      finished.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finished, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools  = useMemo(\n    () =>\n      all .filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const stakedOnlyAl2lPools = useMemo(\n    () =>\n      all2.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all2, accountHasVaultShares],\n  )\n  const stakedOnlyAl3lPools = useMemo(\n    () =>\n      all3.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all3, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength2.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength3.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showallpools = location.pathname.includes('all')\n  const showall2pools = location.pathname.includes('all')\n  const showall3pools = location.pathname.includes('all')\n  const showfinished = location.pathname.includes('finished')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  \n  }\n  if (showallpools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools  : all\n  } \n  if (showfinished) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : finished\n  } \n\n  let chosenPools2\n  if (showall2pools) {\n    chosenPools2 = stakedOnly ? stakedOnlyAl2lPools  : all2\n  } \n  if (showfinished) {\n    chosenPools2 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools3\n  if (showall3pools) {\n    chosenPools3 = stakedOnly ? stakedOnlyAl3lPools  : all3\n  } \n  if (showfinished) {\n    chosenPools3 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n \n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools2 = chosenPools2.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools3 = chosenPools3.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools3 = sortPools(chosenPools3).slice(0, numberOfPoolsVisible)\n  chosenPools2 = sortPools(chosenPools2).slice(0, numberOfPoolsVisible)\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n  chosenPoolsLength2.current = chosenPools2.length\n  chosenPoolsLength3.current = chosenPools3.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n        {chosenPools2.map((pool) =>\n (\n          <PoolCard2 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n         {chosenPools3.map((pool) =>\n (\n          <PoolCard3 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} pools2={chosenPools2} pools3={chosenPools3} account={account} userDataLoaded={userDataLoaded} />\n\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Be2Mining')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Stake one token and immediately get 2 as a reward.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={VÉGE} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (B2Mining)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default FarmPools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency3'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken3'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline3'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal3'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions3'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index4'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices4'\nimport { ONE_BIPS } from '../../../config/constants/index4'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index4'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal4'\nimport SwapModalFooter from './SwapModalFooter4'\nimport SwapModalHeader from './SwapModalHeader4'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency4'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport SwapRoute from './SwapRoute4'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails4'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken4'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index4'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline4'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { useCurrencyBalance } from '../state/wallet/hooks4'\nimport { useWETHContract } from './useContract4'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers4'\nimport AddressInputPanel from './components/AddressInputPanel4'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown4'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee4'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice4'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal4'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index4'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback4'\nimport { useSwapCallback } from '../../hooks/useSwapCallback4'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback4'\nimport { Field } from '../../state/swap/actions4'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks4'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices4'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page4'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function RadioShack() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/radioshack')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n      \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/swap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40}  href=\"/radioshack?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/radioshack?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index4'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index5'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices5'\nimport { ONE_BIPS } from '../../../config/constants/index5'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index5'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal5'\nimport SwapModalFooter from './SwapModalFooter5'\nimport SwapModalHeader from './SwapModalHeader5'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency5'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport SwapRoute from './SwapRoute5'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails5'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken5'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index5'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline5'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { useCurrencyBalance } from '../state/wallet/hooks5'\nimport { useWETHContract } from './useContract5'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers5'\nimport AddressInputPanel from './components/AddressInputPanel5'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown5'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee5'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice5'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal5'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index5'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback5'\nimport { useSwapCallback } from '../../hooks/useSwapCallback5'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback5'\nimport { Field } from '../../state/swap/actions5'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks5'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices5'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page5'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\n  height: 65px;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\n`\n\nexport default function Biswap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/biswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n            \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/biswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/biswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index5'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity4 from './index'\n\nexport function RedirectToAddLiquidity3() {\n  return <Redirect to=\"/addradioliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure3() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addradioliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity4 />\n}\n\nexport function RedirectDuplicateTokenIds3() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addradioliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity4 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity5 from './index'\n\nexport function RedirectToAddLiquidity4() {\n  return <Redirect to=\"/addbiswapliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure4() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addbiswapliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity5 />\n}\n\nexport function RedirectDuplicateTokenIds4() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addbiswapliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity5 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure4() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool4\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeradio/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure4\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure5() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool5\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removebiswap/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure5\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport FarmPools from './views/FarmPools'\nimport ApeSwap from './views/ApeSwap'\nimport RadioShack from './views/RadioShack'\nimport Biswap from './views/Biswap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport {\n  RedirectDuplicateTokenIds3,\n  RedirectOldAddLiquidityPathStructure3,\n  RedirectToAddLiquidity3,\n} from './views/AddLiquidity4/redirects'\nimport {\n  RedirectDuplicateTokenIds4,\n  RedirectOldAddLiquidityPathStructure4,\n  RedirectToAddLiquidity4,\n} from './views/AddLiquidity5/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure4 from './views/RemoveLiquidity4/redirects'\nimport RedirectOldRemoveLiquidityPathStructure5 from './views/RemoveLiquidity5/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst AddLiquidity4 = lazy(() => import('./views/AddLiquidity4'))\nconst AddLiquidity5 = lazy(() => import('./views/AddLiquidity5'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst Liquidity4 = lazy(() => import('./views/Pool4'))\nconst Liquidity5 = lazy(() => import('./views/Pool5'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst PoolFinder4 = lazy(() => import('./views/PoolFinder4'))\nconst PoolFinder5 = lazy(() => import('./views/PoolFinder5'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\nconst RemoveLiquidity4 = lazy(() => import('./views/RemoveLiquidity4'))\nconst RemoveLiquidity5 = lazy(() => import('./views/RemoveLiquidity5'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/be2mining\">\n              <FarmPools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/radioshack\">\n              <RadioShack />\n            </Route>\n            <Route exact strict path=\"/biswap\">\n              <Biswap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/radiofind\">\n              <PoolFinder4 />\n            </Route>\n            <Route exact strict path=\"/biswapfind\">\n              <PoolFinder5 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/radioliquidity\">\n              <Liquidity4 />\n            </Route>\n            <Route exact strict path=\"/biswapliquidity\">\n              <Liquidity5 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/createradio\">\n              <RedirectToAddLiquidity3 />\n            </Route>\n            <Route exact strict path=\"/createbiswap\">\n              <RedirectToAddLiquidity4 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/createradio\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/createbiswap\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure3 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure4 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/createradio/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/createbiswap/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure5 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity5 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/pool4\">\n              <Redirect to=\"/radioliquidity\" />\n            </Route>\n            <Route path=\"/pool5\">\n              <Redirect to=\"/biswapliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}