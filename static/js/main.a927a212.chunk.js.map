{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/formatBalance.ts","components/Layout/Row.tsx","state/mint/actions.ts","utils/addressHelpers.ts","hooks/useActiveWeb3React.ts","components/Layout/Column.tsx","config/constants/tokens.ts","utils/bigNumber.ts","state/swap/actions.ts","components/Balance.tsx","hooks/useTokenBalance.ts","utils/contractHelpers.ts","state/farms/hooks.ts","config/constants/types.ts","hooks/useRefresh.ts","state/multicall/hooks.ts","config/constants/multicall/index.ts","hooks/useContract.ts","state/pools2/hooks.ts","components/SearchModal/types.ts","state/user/actions.ts","utils/index.ts","config/constants/index.ts","config/constants/contracts.ts","views/Pools/helpers.tsx","hooks/useTheme.ts","state/lists/actions.ts","components/Logo/DoubleLogo.tsx","config/constants/lists.ts","components/Card/index.tsx","components/QuestionHelper/index.tsx","utils/multicall.ts","utils/index4.ts","config/constants/index3.ts","config/constants/index4.ts","config/constants/index5.ts","state/user/hooks/index.tsx","utils/index3.ts","hooks/useToast.ts","config/index.ts","state/pools/hooks.ts","utils/index5.ts","components/ConnectWalletButton.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/Tokens.ts","config/constants/pools.ts","utils/wrappedCurrency.ts","state/swap/actions3.ts","state/swap/actions4.ts","state/swap/actions5.ts","state/block/hooks.ts","components/Tags.tsx","utils/wrappedCurrency3.ts","utils/wrappedCurrency4.ts","utils/wrappedCurrency5.ts","config/constants/tokens3.ts","config/constants/tokens4.ts","config/constants/tokens5.ts","hooks/Tokens3.ts","hooks/Tokens4.ts","hooks/Tokens5.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance4.ts","hooks/useApproveCallback4.ts","hooks/useTokenAllowance5.ts","hooks/useApproveCallback5.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/providers.ts","utils/wallet.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","state/lists/hooks.ts","utils/addressHelpers2.ts","utils/addressHelpers4.ts","utils/addressHelpers5.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/Logo/DoubleLogo4.tsx","components/Logo/DoubleLogo5.tsx","utils/prices3.ts","utils/prices.ts","utils/prices4.ts","utils/prices5.ts","config/index3.ts","state/multicall/actions.ts","components/Loader/Dots.tsx","state/lists/hooks3.ts","state/lists/hooks4.ts","state/lists/hooks5.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/Loader/CircleLoader.tsx","utils/isZero.ts","config/constants/farms.ts","hooks/useDebounce.ts","config/abi/erc20.ts","components/Logo/DoubleLogo2.tsx","state/user/hooks/index4.tsx","state/user/hooks/index5.tsx","state/user/hooks/index3.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","state/wallet/hooks4.ts","state/wallet/hooks5.ts","config/constants/endpoints.ts","utils/compoundApyHelpers.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","state/transactions/hooks.tsx","utils/uriToHttp.ts","state/transactions/actions.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/constants/multicall/index4.ts","hooks/useContract4.ts","config/constants/multicall/index5.ts","hooks/useContract5.ts","config/localization/languages.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Logo/CurrencyLogo.tsx","state/swap/hooks.ts","utils/getTokenLogoURL.ts","utils/latinise.ts","state/lottery/helpers.ts","utils/apr2.ts","state/pools2/fetchPools.ts","state/pools2/fetchPoolsUser.ts","state/pools2/fetchVaultPublic.ts","state/pools2/fetchVaultUser.ts","state/pools2/index.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/constants/ifo.ts","hooks/usePreviousValue.ts","state/swap/hooks4.ts","state/swap/hooks5.ts","hooks/useDelayedUnmount.ts","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","hooks/usePairs4.ts","hooks/usePairs5.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Logo/CurrencyLogo4.tsx","components/Logo/CurrencyLogo5.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/transactions/hooks4.tsx","state/transactions/hooks5.tsx","state/transactions/hooks3.tsx","contexts/Localization/helpers.ts","components/Logo/ListLogo.tsx","config/constants/nfts.ts","hooks/useAuth.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","components/Logo/CurrencyLogo2.tsx","hooks/useParsedQueryString.ts","utils/currencyId.ts","utils/currencyId3.ts","utils/currencyId4.ts","utils/currencyId5.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/user/hooks/helpers4.ts","state/user/hooks/helpers5.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","utils/trades4.ts","hooks/Trades4.ts","utils/wallet4.ts","components/TransactionConfirmationModal4/index.tsx","utils/trades5.ts","hooks/Trades5.ts","utils/wallet5.ts","components/TransactionConfirmationModal5/index.tsx","state/profile/hooks.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/web3React.ts","hooks/useLastUpdated.ts","hooks/usePersistState.ts","state/block/index.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel4/NumericalInput.tsx","components/CurrencyInputPanel4/index.tsx","components/CurrencyInputPanel5/NumericalInput.tsx","components/CurrencyInputPanel5/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","components/SearchModal/filtering4.ts","config/index4.ts","components/SearchModal/filtering5.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","hooks/useTotalSupply4.ts","hooks/useTotalSupply5.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens3.ts","state/user/hooks/useUserAddedTokens4.ts","state/user/hooks/useUserAddedTokens5.ts","components/Layout/Container.tsx","utils/getTimePeriods.ts","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav4.tsx","views/Page4.tsx","components/Menu/SubNav5.tsx","views/Page5.tsx","components/Menu/SubNav.tsx","views/Page.tsx","components/PageHeader/PageHeader.tsx","components/Layout/Flex.tsx","components/Loading.tsx","components/SearchInput/SearchInput.tsx","state/application/actions.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","state/pools2/helpers.ts","components/SearchModal/ImportToken3.tsx","utils/maxAmountSpend3.ts","components/SearchModal/ImportToken4.tsx","utils/maxAmountSpend4.ts","components/SearchModal/ImportToken5.tsx","utils/maxAmountSpend5.ts","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","state/burn/actions.ts","utils/achievements.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","components/UnsupportedCurrencyFooter4.tsx","state/mint/hooks4.ts","views/AddLiquidity4/ConfirmAddModalBottom4.tsx","views/AddLiquidity4/PoolPriceBar4.tsx","views/AddLiquidity4/index.tsx","components/UnsupportedCurrencyFooter5.tsx","state/mint/hooks5.ts","views/AddLiquidity5/ConfirmAddModalBottom5.tsx","views/AddLiquidity5/PoolPriceBar5.tsx","views/AddLiquidity5/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","components/App/AppBody.tsx","state/predictions/index.ts","components/App/Settings/TransactionSettings.tsx","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","components/Loader/PageLoader.tsx","state/collectibles/index.ts","state/transactions/actions4.ts","state/transactions/actions5.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","components/PositionCard4/index.tsx","components/PositionCard5/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Select/Select.tsx","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ManageLists3.tsx","components/SearchModal/ManageTokens3.tsx","components/SearchModal/Manage3.tsx","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/ImportRow4.tsx","components/SearchModal/CurrencyList4.tsx","components/SearchModal/sorting4.ts","components/SearchModal/CurrencySearch4.tsx","hooks/useFetchListCallback4.ts","components/SearchModal/ManageLists4.tsx","components/SearchModal/ManageTokens4.tsx","components/SearchModal/Manage4.tsx","components/SearchModal/ImportList4.tsx","components/SearchModal/CurrencySearchModal4.tsx","components/SearchModal/ImportRow5.tsx","components/SearchModal/CurrencyList5.tsx","components/SearchModal/sorting5.ts","components/SearchModal/CurrencySearch5.tsx","hooks/useFetchListCallback5.ts","components/SearchModal/ManageLists5.tsx","components/SearchModal/ManageTokens5.tsx","components/SearchModal/Manage5.tsx","components/SearchModal/ImportList5.tsx","components/SearchModal/CurrencySearchModal5.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","hooks/useTransactionDeadline3.ts","hooks/useCurrentBlockTimestamp3.ts","hooks/useTransactionDeadline4.ts","hooks/useCurrentBlockTimestamp4.ts","hooks/useTransactionDeadline5.ts","hooks/useCurrentBlockTimestamp5.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/FarmPools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/ModalInfo.tsx","views/Pools/components/InfoCard.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","views/FarmPools/helpers.tsx","views/FarmPools/components/PoolCard/AprRow.tsx","views/FarmPools/components/PoolCard/StyledCard.tsx","views/FarmPools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard/CardFooter/index.tsx","views/FarmPools/components/PoolCard/StyledCardHeader.tsx","views/FarmPools/hooks/useApprove.ts","views/FarmPools/components/PoolCard/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard/Modals/PercentageButton.tsx","views/FarmPools/hooks/useStakePool.ts","views/FarmPools/hooks/useUnstakePool.ts","views/FarmPools/components/PoolCard/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard/CardActions/StakeActions.tsx","views/FarmPools/hooks/useHarvestPool.ts","views/FarmPools/components/PoolCard/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard/CardActions/index.tsx","views/FarmPools/components/PoolCard/index.tsx","views/FarmPools/components/PoolCard2/AprRow.tsx","views/FarmPools/components/PoolCard2/StyledCard.tsx","views/FarmPools/components/PoolCard2/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard2/CardFooter/index.tsx","views/FarmPools/components/PoolCard2/StyledCardHeader.tsx","views/FarmPools/components/PoolCard2/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard2/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard2/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard2/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard2/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard2/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard2/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard2/CardActions/index.tsx","views/FarmPools/components/PoolCard2/index.tsx","views/FarmPools/components/PoolCard3/AprRow.tsx","views/FarmPools/components/PoolCard3/StyledCard.tsx","views/FarmPools/components/PoolCard3/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard3/CardFooter/index.tsx","views/FarmPools/components/PoolCard3/StyledCardHeader.tsx","views/FarmPools/components/PoolCard3/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard3/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard3/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard3/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard3/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard3/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard3/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard3/CardActions/index.tsx","views/FarmPools/components/PoolCard3/index.tsx","views/FarmPools/components/PoolCard4/AprRow.tsx","views/FarmPools/components/PoolCard4/StyledCard.tsx","views/FarmPools/components/PoolCard4/CardFooter/ExpandedFooter.tsx","views/FarmPools/components/PoolCard4/CardFooter/index.tsx","views/FarmPools/components/PoolCard4/StyledCardHeader.tsx","views/FarmPools/components/PoolCard4/CardActions/ApprovalAction.tsx","views/FarmPools/components/PoolCard4/Modals/NotEnoughTokensModal.tsx","views/FarmPools/components/PoolCard4/Modals/PercentageButton.tsx","views/FarmPools/components/PoolCard4/Modals/StakeModal.tsx","views/FarmPools/components/PoolCard4/CardActions/StakeActions.tsx","views/FarmPools/components/PoolCard4/Modals/CollectModal.tsx","views/FarmPools/components/PoolCard4/CardActions/HarvestActions.tsx","views/FarmPools/components/PoolCard4/CardActions/index.tsx","views/FarmPools/components/PoolCard4/index.tsx","views/FarmPools/components/PoolTabButtons.tsx","views/FarmPools/components/BountyModal.tsx","views/FarmPools/components/BountyCard.tsx","views/FarmPools/components/HelpButton.tsx","views/FarmPools/components/ModalInfo.tsx","views/FarmPools/components/InfoCard.tsx","views/FarmPools/components/PoolsTable/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable/Apr.tsx","views/FarmPools/components/PoolsTable/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable/ActionPanel/styles.ts","views/FarmPools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/FarmPools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Harvest.tsx","views/FarmPools/components/CakeVaultCard/FeeSummary.tsx","views/FarmPools/components/CakeVaultCard/VaultStakeModal.tsx","views/FarmPools/components/PoolsTable/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable/PoolRow.tsx","views/FarmPools/components/PoolsTable2/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable2/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable2/Apr.tsx","views/FarmPools/components/PoolsTable2/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable2/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable2/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable2/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable2/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable2/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable2/PoolRow.tsx","views/FarmPools/components/PoolsTable3/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable3/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable3/Apr.tsx","views/FarmPools/components/PoolsTable3/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable3/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable3/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable3/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable3/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable3/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable3/PoolRow.tsx","views/FarmPools/components/PoolsTable4/Cells/BaseCell.tsx","views/FarmPools/components/PoolsTable4/Cells/NameCell.tsx","views/FarmPools/components/PoolsTable4/Cells/EarningsCell.tsx","views/FarmPools/components/PoolsTable4/Apr.tsx","views/FarmPools/components/PoolsTable4/Cells/AprCell.tsx","views/FarmPools/components/PoolsTable4/Cells/TotalStakedCell.tsx","views/FarmPools/components/PoolsTable4/Cells/EndsInCell.tsx","views/FarmPools/components/PoolsTable4/Cells/ExpandActionCell.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/styles.ts","views/FarmPools/components/PoolsTable4/ActionPanel/Harvest.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/Stake.tsx","views/FarmPools/components/PoolsTable4/ActionPanel/ActionPanel.tsx","views/FarmPools/components/PoolsTable4/PoolRow.tsx","views/FarmPools/components/PoolsTable/PoolsTable.tsx","views/FarmPools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal3.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/RadioShack/components/AddressInputPanel4.tsx","views/RadioShack/components/styleds.tsx","views/RadioShack/components/FormattedPriceImpact4.tsx","views/RadioShack/components/SwapModalFooter4.tsx","views/RadioShack/components/SwapModalHeader4.tsx","views/RadioShack/components/ConfirmSwapModal4.tsx","views/RadioShack/components/SwapRoute4.tsx","views/RadioShack/components/AdvancedSwapDetails4.tsx","views/RadioShack/components/AdvancedSwapDetailsDropdown4.tsx","views/RadioShack/components/TradePrice4.tsx","views/RadioShack/components/ImportTokenWarningModal4.tsx","views/RadioShack/components/ProgressSteps.tsx","hooks/useSwapCallback4.ts","hooks/useWrapCallback4.ts","views/RadioShack/components/SwapWarningModal/SafemoonWarning.tsx","views/RadioShack/components/SwapWarningModal/BondlyWarning.tsx","views/RadioShack/components/SwapWarningModal/Acknowledgement.tsx","views/RadioShack/components/SwapWarningModal/index.tsx","views/RadioShack/index.tsx","views/RadioShack/components/confirmPriceImpactWithoutFee4.ts","views/Biswap/components/AddressInputPanel5.tsx","views/Biswap/components/styleds.tsx","views/Biswap/components/FormattedPriceImpact5.tsx","views/Biswap/components/SwapModalFooter5.tsx","views/Biswap/components/SwapModalHeader5.tsx","views/Biswap/components/ConfirmSwapModal5.tsx","views/Biswap/components/SwapRoute5.tsx","views/Biswap/components/AdvancedSwapDetails5.tsx","views/Biswap/components/AdvancedSwapDetailsDropdown5.tsx","views/Biswap/components/TradePrice5.tsx","views/Biswap/components/ImportTokenWarningModal5.tsx","views/Biswap/components/ProgressSteps.tsx","hooks/useSwapCallback5.ts","hooks/useWrapCallback5.ts","views/Biswap/components/SwapWarningModal/SafemoonWarning.tsx","views/Biswap/components/SwapWarningModal/BondlyWarning.tsx","views/Biswap/components/SwapWarningModal/Acknowledgement.tsx","views/Biswap/components/SwapWarningModal/index.tsx","views/Biswap/index.tsx","views/Biswap/components/confirmPriceImpactWithoutFee5.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/AddLiquidity4/redirects.tsx","views/AddLiquidity5/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/RemoveLiquidity4/redirects.tsx","views/RemoveLiquidity5/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","getDecimalAmount","amount","decimals","BigNumber","times","BIG_TEN","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","getAddress","address","process","ChainId","MAINNET","getCakeAddress","tokens","cake","getfpsAddress","fps","gettripAddress","trip","getskeletonAddress","skeleton","getbuildAddress","build","getBusdAddress","busd","geLiraAddress","lira","getVIZSLAHVIAddress","lp","getFarm1Address","farm1","getFarm2Address","farm2","getFarm3Address","farm3","getFarm4Address","farm4","getFarm5Address","farm5","getFarm6Address","farm6","getFarm7Address","farm7","getFarm8Address","farm8","getFarm9Address","farm9","getFarm10Address","farm10","getFarm11Address","farm11","getFarm12Address","farm12","getFarm13Address","farm13","getFarm14Address","farm14","getFarm15Address","farm15","getFarm16Address","farm16","getFarm17Address","farm17","getFarm18Address","farm18","getFarm19Address","farm19","getFarm20Address","farm20","getFarm21Address","farm21","getFarm22Address","farm22","getLAMEAAddress","lamea","getHVIBNBAddress","lp2","getVIZSLASWAPLAMEAAddress","lp3","getHVIAddress","hvi","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","wbnb","getethAddress","eth","getetcAddress","etc","getltcAddress","ltc","getbvcAddress","bvc","getbabyvizslaAddress","babyvizsla","getataliraAddress","atalira","getexzoAddress","exzo","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","Column","ColumnCenter","AutoColumn","CAKE","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","bnb","symbol","projectLink","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","lp4","btnty","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","beth","mamzn","mgoogl","mnflx","mtsla","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","vizslaswap","shib","stake","test1","ample","ace","hank","BIG_ZERO","BIG_ONE","BIG_NINE","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FetchStatus","useTotalSupply","slowRefresh","useRefresh","totalSupply","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useTotalSupplyVIZSLAHVI","getVIZSLAHVIContract","useTotalSupplyFarm1","getFarm1Contract","useTotalSupplyFarm2","getFarm2Contract","useTotalSupplyFarm3","getFarm3Contract","useTotalSupplyFarm4","getFarm4Contract","useTotalSupplyFarm5","getFarm5Contract","useTotalSupplyFarm6","getFarm6Contract","useTotalSupplyFarm7","getFarm7Contract","useTotalSupplyFarm8","getFarm8Contract","useTotalSupplyFarm9","getFarm9Contract","useTotalSupplyFarm10","getFarm10Contract","useTotalSupplyFarm11","getFarm11Contract","useTotalSupplyFarm12","getFarm12Contract","useTotalSupplyFarm13","getFarm13Contract","useTotalSupplyFarm14","getFarm14Contract","useTotalSupplyFarm15","getFarm15Contract","useTotalSupplyFarm16","getFarm16Contract","useTotalSupplyFarm17","getFarm17Contract","useTotalSupplyFarm18","getFarm18Contract","useTotalSupplyFarm19","getFarm19Contract","useTotalSupplyFarm20","getFarm20Contract","useTotalSupplyFarm21","getFarm21Contract","useTotalSupplyFarm22","getFarm22Contract","useTotalSupplyHVIBNB","getHVIBNBContract","useTotalSupplyVIZSLASWAPLAMEA","getVIZSLASWAPLAMEAContract","useTotalSupply2","getHVIContract","useBurnedBalance","tokenAddress","setBalance","contract","getBep20Contract","balanceOf","res","fetchBalance","useVizslaLameaLPBalance","useVizslaLPBalance","useLAMEALPBalance","useHVILPBalance","useHVILPBalance2","useWBNBLPBalance","usePool1","usePool2","usePool3","usePool4a","usePool4","usePool5","usePool6","usePool7","usePool8","usePool9","usePool10","usePool11","usePool12","usePool13","usePool14","usePool15","usePool16","usePool17","usePool18","usePool19","usePool20","usePool21","usePool22","usePool23","usePool24","usePool25","usePool26","usePool27","usePool28","usePool29","usePool30","usePool31","usePool32","usePool33","usePool34","usePool35","usePool36","usePool37","usePool38","usePool39","usePool40","usePool41","useFarm1","useFarm2","useFarm3","useFarm4","useFarm5","useFarm6","useFarm7","useFarm8","useFarm9","useFarm10","useFarm11","useFarm12","useFarm13","useFarm14","useFarm15","useFarm16","useFarm17","useFarm18","useFarm19","useFarm20","useFarm21","useFarm22","useMaster1","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","account","useLastUpdated","lastUpdated","setLastUpdated","getBalance","walletBalance","SUCCESS","FAILED","refresh","useTokenBalance","balanceState","setBalanceState","fastRefresh","console","error","prev","getContract","abi","signer","signerOrProvider","Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","id","config","poolsConfig","find","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getFarmAuctionContract","farmAuctionAbi","usePollFarmsData","includeArchive","dispatch","useAppDispatch","pids","farmsConfig","nonArchivedFarms","map","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useSelector","farms","useFarmFromPid","f","useFarmFromLpSymbol","lpSymbol","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","useBusdPriceFromPid","token","busdPrice","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","useMemo","usePriceliraBusd","usePriceLameaBusd","usePriceETHBusd","usePriceETCBusd","usePriceLTCBusd","usePriceATALIRABusd","usePriceEXZOBusd","usePriceBVCBusd","usePriceBABYVIZSLABusd","usePricetripBusd","usePriceskeletonBusd","usePricebuildBusd","usePriceFpsBusd","usePriceHVIBusd","PoolIds","NftType","LotteryStatus","AuctionStatus","RefreshContext","fast","slow","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","multicall","useDispatch","serializedCallKeys","JSON","stringify","filter","c","Boolean","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","MULTICALL_NETWORKS","useIfoV1Contract","getSigner","useIfoV2Contract","useERC20","useERC721","useCake","useBunnyFactory","useProfile","useLotteryV2Contract","useMasterchef","useSousChef","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","useCakeVaultContract","usePredictionsContract","useFarmAuctionContract","useContract","ABI","withSignerIfPossible","useTokenContract","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","useFetchPublicPoolsData","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","CurrencyModalView","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","Percent","JSBI","BigInt","calculateSlippageAmount","slippage","divide","multiply","raw","AddressZero","connectUnchecked","getProviderOrSigner","getRouterContract","_","ROUTER_ADDRESS","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","useTheme","useThemeManager","isDark","theme","StyledThemeContext","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","Card","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","i","multicallv2","requireSuccess","tryAggregate","getRouterContract2","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useToast","toastContext","ToastsContext","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT2","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","addTransaction","transactions","hash","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","currencyId","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","includes","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","isBNB","toUpperCase","stakingToken","earningToken","tokensymbol2","tokensymbol3","tokensymbol4","tokensymbol5","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","tokenPerBlock","sortOrder","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","CoreTag","variant","outline","startIcon","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","useTokenAllowance","ApprovalState","owner","spender","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","RPC_URL","getRpcUrl","providers","JsonRpcProvider","setupNetwork","window","ethereum","request","method","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","mb","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","status","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","as","Link","to","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","getPoolApr","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","Dots","span","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","hexNumberString","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","ERC20_INTERFACE","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","anyLoading","some","callState","useTokenBalances","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","uriToHttp","uri","code","languageList","getNodeUrl","sample","ENS_NAME_REGEX","parseENSAddress","ensAddress","ensPath","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","Latinise","latin_map","τ","Τ","latinise","input","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","usePreviousValue","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","DetailsFooter","invertedContrast","UnsupportedModal","unsupportedTokens","external","small","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","getItem","StyledListLogo","ListLogo","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","search","useLocation","parseArrays","ignoreQueryPrefix","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","textAlign","TransactionSubmittedContent","currencyToAdd","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","tokenIn","tokenOut","useFetchProfile","hasProfile","DEFAULT_META","StyledPage","Container","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","setStateLastUpdated","previousLastUpdated","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","CurrencySearchModal","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","Outer","Inner","PageHeader","FlexLayout","Loading","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","onBlur","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","userSelect","disabled","maxAmountSpend","greaterThan","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","component","endIcon","height","App","toExact","minWidth","marginTop","showUnwrapped","AddLiquidity4","AddLiquidity5","AddLiquidity","BodyWrapper","AppBody","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","isWarning","isSuccess","paddingTop","pl","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","ModalInfo","VIZSLAPRICE0","HVIPRICE","VIZSLAPRICE","WBNBPRICE","ETHPRICE","ETCPRICE","LTCPRICE","LAMEAPRICE","ATALIRAPRICE","EXZOPRICE","BVCPRICE","BABYVIZSLAPRICE","liraprice","POOL4","POOL5","POOL6","POOL7","POOL8","POOL9","POOL10","POOL11","POOL12","POOL13","POOL14","POOL15","POOL16","POOL17","POOL18","POOL19","POOL20","POOL21","POOL22","POOL23","POOL24","POOL25","POOL26","POOL27","POOL28","POOL29","POOL30","POOL31","POOL32","POOL33","POOL34","POOL35","POOL36","POOL37","POOL38","POOL39","MAJDNEM","MAJDNEM2","FULL1","FULL2","MAJDNEM3","FULL4","MAJDNEM4","FULL5","MAJDNEM5","FULL6","MAJDNEM6","FULL7","MAJDNEM7","FULL8","MAJDNEM8","FULL9","MAJDNEM9","FULL10","MAJDNEM10","FULL11","MAJDNEM11","FULL12","MAJDNEM12","FULL13","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","FULL3","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyAllPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","showall","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","InfoCard","vizslalpbalance","cakeSupply2","vizslaprice","hvilpbalance","hviprice","vizslahvisupply","full4","bnblpbalance","bnbprice2","PoolCard2","PoolCard3","vizslalpbalance18","liralpbalance","kombo43","PoolCard4","VÉGE","VÉGE1","PoolRow2","PoolRow3","pools2","pools3","pools4","FarmPools","chosenPoolsLength3","chosenPoolsLength2","chosenPoolsLength4","pool2","all2","all3","all4","finished","stakedOnlyAl2lPools","stakedOnlyAl3lPools","stakedOnlyAl4lPools","chosenPools2","chosenPools3","chosenPools4","showallpools","showall2pools","showall3pools","showall4pools","showfinished","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RadioShack","isTopPosition","Biswap","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectToAddLiquidity3","RedirectOldAddLiquidityPathStructure3","RedirectDuplicateTokenIds3","RedirectToAddLiquidity4","RedirectOldAddLiquidityPathStructure4","RedirectDuplicateTokenIds4","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectOldRemoveLiquidityPathStructure4","RedirectOldRemoveLiquidityPathStructure5","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","Liquidity4","Liquidity5","PoolFinder","PoolFinder2","PoolFinder4","PoolFinder5","RemoveLiquidity","RemoveLiquidity2","RemoveLiquidity4","RemoveLiquidity5","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a927a212.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getfpsAddress = () => {\n  return getAddress(tokens.fps.address)\n}\nexport const gettripAddress = () => {\n  return getAddress(tokens.trip.address)\n}\nexport const getskeletonAddress = () => {\n  return getAddress(tokens.skeleton.address)\n}\nexport const getbuildAddress = () => {\n  return getAddress(tokens.build.address)\n}\nexport const getBusdAddress = () => {\n  return getAddress(tokens.busd.address)\n}\nexport const geLiraAddress = () => {\n  return getAddress(tokens.lira.address)\n}\nexport const getVIZSLAHVIAddress = () => {\n  return getAddress(tokens.lp.address)\n}\nexport const getFarm1Address = () => {\n  return getAddress(tokens.farm1.address)\n}\nexport const getFarm2Address = () => {\n  return getAddress(tokens.farm2.address)\n}\nexport const getFarm3Address = () => {\n  return getAddress(tokens.farm3.address)\n}\nexport const getFarm4Address = () => {\n  return getAddress(tokens.farm4.address)\n}\nexport const getFarm5Address = () => {\n  return getAddress(tokens.farm5.address)\n}\nexport const getFarm6Address = () => {\n  return getAddress(tokens.farm6.address)\n}\nexport const getFarm7Address = () => {\n  return getAddress(tokens.farm7.address)\n}\nexport const getFarm8Address = () => {\n  return getAddress(tokens.farm8.address)\n}\nexport const getFarm9Address = () => {\n  return getAddress(tokens.farm9.address)\n}\nexport const getFarm10Address = () => {\n  return getAddress(tokens.farm10.address)\n}\nexport const getFarm11Address = () => {\n  return getAddress(tokens.farm11.address)\n}\nexport const getFarm12Address = () => {\n  return getAddress(tokens.farm12.address)\n}\nexport const getFarm13Address = () => {\n  return getAddress(tokens.farm13.address)\n}\nexport const getFarm14Address = () => {\n  return getAddress(tokens.farm14.address)\n}\nexport const getFarm15Address = () => {\n  return getAddress(tokens.farm15.address)\n}\nexport const getFarm16Address = () => {\n  return getAddress(tokens.farm16.address)\n}\nexport const getFarm17Address = () => {\n  return getAddress(tokens.farm17.address)\n}\nexport const getFarm18Address = () => {\n  return getAddress(tokens.farm18.address)\n}\nexport const getFarm19Address = () => {\n  return getAddress(tokens.farm19.address)\n}\nexport const getFarm20Address = () => {\n  return getAddress(tokens.farm20.address)\n}\nexport const getFarm21Address = () => {\n  return getAddress(tokens.farm21.address)\n}\nexport const getFarm22Address = () => {\n  return getAddress(tokens.farm22.address)\n}\nexport const getLAMEAAddress = () => {\n  return getAddress(tokens.lamea.address)\n}\nexport const getHVIBNBAddress = () => {\n  return getAddress(tokens.lp2.address)\n}\nexport const getVIZSLASWAPLAMEAAddress = () => {\n  return getAddress(tokens.lp3.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getethAddress = () => {\n  return getAddress(tokens.eth.address)\n}\nexport const getetcAddress = () => {\n  return getAddress(tokens.etc.address)\n}\nexport const getltcAddress = () => {\n  return getAddress(tokens.ltc.address)\n}\nexport const getbvcAddress = () => {\n  return getAddress(tokens.bvc.address)\n}\nexport const getbabyvizslaAddress = () => {\n  return getAddress(tokens.babyvizsla.address)\n}\nexport const getataliraAddress = () => {\n  return getAddress(tokens.atalira.address)\n}\nexport const getexzoAddress = () => {\n  return getAddress(tokens.exzo.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  lp: {\n    symbol: 'HVI + VIZSLASWAP',\n    address: {\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp2: {\n    symbol: 'HVI + WBNB',\n    address: {\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp3: {\n    symbol: 'VIZSLASWAP + LAMEA',\n    address: {\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lp4: {\n    symbol: 'VIZSLASWAP + LIRA',\n    address: {\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm1: {\n    symbol: 'Farm1',\n    address: {\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm2: {\n    symbol: 'Farm2',\n    address: {\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm3: {\n    symbol: 'Farm3',\n    address: {\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm4: {\n    symbol: 'Farm4',\n    address: {\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm5: {\n    symbol: 'Farm5',\n    address: {\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm6: {\n    symbol: 'Farm6',\n    address: {\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm7: {\n    symbol: 'Farm7',\n    address: {\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm8: {\n    symbol: 'Farm8',\n    address: {\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm9: {\n    symbol: 'Farm9',\n    address: {\n      56: '0x189426C386C446Df3549e3B7Af9bF5D1321E30B9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm10: {\n    symbol: 'Farm10',\n    address: {\n      56: '0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm11: {\n    symbol: 'Farm11',\n    address: {\n      56: '0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  lira: {\n    symbol: 'Lira',\n    address: {\n      56: '0xA80a006A48dc7203EB3AA7E0b3816918d242CFC4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lira.financial/',\n  },\n  farm12: {\n    symbol: 'Farm12',\n    address: {\n      56: '0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm13: {\n    symbol: 'Farm13',\n    address: {\n      56: '0x8a9d56706950495cf2CF1799E311f9c68C81D473',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm14: {\n    symbol: 'Farm14',\n    address: {\n      56: '0x48eE61775B6E737a87b38BaC01faC55281ee0B4a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n    farm15: {\n    symbol: 'Farm15',\n    address: {\n      56: '0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm16: {\n    symbol: 'Farm16',\n    address: {\n      56: '0xC7f86B54BA7eE572b466Af28e3100780736c5934',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm17: {\n    symbol: 'Farm17',\n    address: {\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm18: {\n    symbol: 'Farm18',\n    address: {\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n    farm19: {\n    symbol: 'Farm19',\n    address: {\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm20: {\n    symbol: 'Farm20',\n    address: {\n      56: '0x1b0169f8b912f7AD2B5000eB6722A987660bd365',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm21: {\n    symbol: 'Farm21',\n    address: {\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  farm22: {\n    symbol: 'Farm22',\n    address: {\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    trip: {\n      symbol: 'TRIP',\n      address: {\n        56: '0x15a0Ff684918B20487f2a68d6816e694BB05E471',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://crypto-travel.org/',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    stake: {\n      symbol: 'STAKE',\n      address: {\n        56: '0xe55bd75d7cE7bfDe26A347A748d080D3ACdA7FFE',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract, getVIZSLAHVIContract, getHVIBNBContract , getVIZSLASWAPLAMEAContract , getFarm1Contract, getFarm2Contract, getFarm3Contract, getFarm4Contract, getFarm5Contract , getFarm6Contract, getFarm7Contract, getFarm8Contract, getFarm9Contract, getFarm10Contract, getFarm11Contract, getFarm12Contract, getFarm13Contract, getFarm14Contract, getFarm15Contract, getFarm16Contract, getFarm17Contract, getFarm18Contract, getFarm19Contract, getFarm20Contract, getFarm21Contract , getFarm22Contract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLAHVI = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLAHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm1 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm1Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm2Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm3 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm3Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm4 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm4Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm5 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm5Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm6 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm6Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm7 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm7Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm8 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm8Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm9 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm9Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm10 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm10Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm11 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm11Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm12 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm12Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm13 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm13Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm14 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm14Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm15 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm15Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm16 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm16Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm17 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm17Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm18 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm18Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm19 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm19Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm20 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm20Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm21 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm21Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyFarm22 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getFarm22Contract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyHVIBNB = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIBNBContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupplyVIZSLASWAPLAMEA = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getVIZSLASWAPLAMEAContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useVizslaLameaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useVizslaLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useLAMEALPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useHVILPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351b70e02aaf7407d3a33f0032ec733c68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useHVILPBalance2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useWBNBLPBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const usePool1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x96e41f4e0F885121756b84fe966C39ED92047968')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4a = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xcd3f3fE585052731c76a11784b45D7f6fae16C22')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool4 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3FF00B58e432B0895e3fd69634Ec50e3931110c1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool5 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x44c44e691e523378fec15Ba101AE0618fCA21cC4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool6 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x495Cd5Fc0dF972A028AD50c7be23d2350702B228')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool7 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x40f69629aeaC357826188Ce3d63a1720B7D351ab')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool8 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7f206F080306E37446CaA77be250C07F1548f544')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool9 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool10 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool11 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool12 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x89Cf97e3D99FDE78670BB9D87266BA366B626bca')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool13 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool14 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xf142BD28CaCd766c24201bD2FF4513CEc032e882')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool15 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xa05E95D44d746FC833041fCb62103A04850e1851')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool16 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool17 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool18 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xac4a94609dE599AA394E8C15e086eCef866d50cd')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool19 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool20 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool21 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xE94d40FEb04ae087771a73b2D67Aca6757a086B6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool22 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool23 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool24 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool25 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool26 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x78D1d79449da238bA76FB47CAff92De04C468622')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool27 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool28 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool29 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0340fdb81618874936535CA5276294fB84A719Ee')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool30 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool31 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xfd191349e26e939d0c424F5BA1069Da1Ddb07602')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool32 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x4beBa40b480cF3d60caACC23C3a07043AD72880F')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool33 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x59118c750a5c704001574c0693c1790196993c23')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool34 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool35 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xc17c5D59ea8475d6eA987F654247Fba120166303')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool36 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool37 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xb903485C032E93655B5d5CFe4A439018ACb9E211')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool38 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x646086C73D560B7a4581F6229738c88733C92e4B')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool39 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xbCE3aFbc9d57F20fb9068258e7E5dE23199470A4')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool40 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8e50EC840DB5a4A5994B9c2D4A7840474E6e6d5a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const usePool41 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3Bb72c6BF377211B52D67f931692415D97148e09')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm2 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x738156eAE2715776CBF92eD5751F7b8fc99951b7')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm4 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm5 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm6 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm7 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x687351B70e02AAF7407D3a33f0032eC733C68738')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm8 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm9 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x189426C386C446Df3549e3B7Af9bF5D1321E30B9')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm10 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm11 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm12 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm13 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x8a9d56706950495cf2CF1799E311f9c68C81D473')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm14 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x48eE61775B6E737a87b38BaC01faC55281ee0B4a')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm15 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm16 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xC7f86B54BA7eE572b466Af28e3100780736c5934')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm17 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm18 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x7b338aB42d823e50851f3C61d8374D83c4E0F71f')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm19 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0xeb94c1EA54AD6367D414B0B2075950646D0B6266')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm20 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x1b0169f8b912f7AD2B5000eB6722A987660bd365')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm21 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useFarm22 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useMaster1 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x3FF00B58e432B0895e3fd69634Ec50e3931110c1')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getVIZSLAHVIAddress,\n  getHVIBNBAddress,\n  getLotteryV2Address,\n  getFarm1Address,\n  getFarm2Address,\n  getFarm3Address,\n  getFarm4Address,\n  getFarm5Address,\n  getFarm6Address,\n  getFarm7Address,\n  getFarm8Address,\n  getFarm9Address,\n  getFarm10Address,\n  getFarm11Address,\n  getFarm12Address,\n  getFarm13Address,\n  getFarm14Address,\n  getFarm15Address,\n  getFarm16Address,\n  getFarm17Address,\n  getFarm18Address,\n  getFarm19Address,\n  getFarm20Address,\n  getFarm21Address,\n  getFarm22Address,\n  getVIZSLASWAPLAMEAAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getVIZSLAHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLAHVIAddress(), signer)\n}\nexport const getFarm1Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm1Address(), signer)\n}\nexport const getFarm2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm2Address(), signer)\n}\nexport const getFarm3Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm3Address(), signer)\n}\nexport const getFarm4Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm4Address(), signer)\n}\nexport const getFarm5Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm5Address(), signer)\n}\nexport const getFarm6Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm6Address(), signer)\n}\nexport const getFarm7Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm7Address(), signer)\n}\nexport const getFarm8Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm8Address(), signer)\n}\nexport const getFarm9Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm9Address(), signer)\n}\nexport const getFarm10Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm10Address(), signer)\n}\nexport const getFarm11Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm11Address(), signer)\n}\nexport const getFarm12Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm12Address(), signer)\n}\nexport const getFarm13Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm13Address(), signer)\n}\nexport const getFarm14Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm14Address(), signer)\n}\nexport const getFarm15Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm15Address(), signer)\n}\nexport const getFarm16Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm16Address(), signer)\n}\nexport const getFarm17Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm17Address(), signer)\n}\nexport const getFarm18Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm18Address(), signer)\n}\nexport const getFarm19Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm19Address(), signer)\n}\nexport const getFarm20Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm20Address(), signer)\n}\nexport const getFarm21Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm21Address(), signer)\n}\nexport const getFarm22Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getFarm22Address(), signer)\n}\nexport const getHVIBNBContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIBNBAddress(), signer)\n}\nexport const getVIZSLASWAPLAMEAContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getVIZSLASWAPLAMEAAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\nexport const useLpTokenPrice2 = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(10)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceliraBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(37)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\nexport const usePriceLameaBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(19)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETHBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(9)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceETCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(17)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceLTCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(10)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceATALIRABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(21)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceEXZOBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(22)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBVCBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(4)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceBABYVIZSLABusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(6)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePricetripBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(25)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceskeletonBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(12)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePricebuildBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(23)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceFpsBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(11)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\nexport interface PoolConfig2 {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  tokensymbol5: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xd88fdB83a1CFbc34a9eEa0106D1834A25b2BCE4B',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xf413bd4C866A336E26f56516774Ed56a0546b91A',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0x7dD1A967F2FB6C439BAecA357fcD8A9CCd3CB6D3',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x70f317168B0B6638528b6FDFdBcCC8E7BFa3735c',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x38426AaCeE71Be2c135c6D69dC8c318b51c54CAB',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index4'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks4'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens4'\n\nexport const ROUTER_ADDRESS = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\nexport const ROUTER_ADDRESS2 = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens5'\n\nexport const ROUTER_ADDRESS = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\nexport const ROUTER_ADDRESS2 = '0x3a6d8cA21D1CF76F653A67577FA0D27453350dD8'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_LIMIT2 = 500000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index5'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks5'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n      {\n    sousId: 100,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp,\n    number:'100',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL2',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x96e41f4e0F885121756b84fe966C39ED92047968',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.086',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 101,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp2,\n    number:'101',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL3',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x9B114FFeeca7800fD6BF2853663Db509c7b07c1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000006945',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 102,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp3,\n    number:'102',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL4',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x47cE6b2Ec96D1576Da6D1B714C6ffd455E31132a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 103,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lp4,\n    number:'103',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP2',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL5',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xcd3f3fE585052731c76a11784b45D7f6fae16C22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.027',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 37,\n    stakingToken: tokens.lira,\n    earningToken: tokens.lira,\n    number:'37',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xbCE3aFbc9d57F20fb9068258e7E5dE23199470A4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 38,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lira,\n    number:'38',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x8e50EC840DB5a4A5994B9c2D4A7840474E6e6d5a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 39,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lira,\n    number:'39',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3Bb72c6BF377211B52D67f931692415D97148e09',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.3',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 36,\n    stakingToken: tokens.wbnb,\n    earningToken: tokens.vizslaswap,\n    number:'36',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2d8b41A9F502e50C13839A43bc76cDA1d6646bA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 35,\n    stakingToken: tokens.eth,\n    earningToken: tokens.vizslaswap,\n    number:'35',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xfd191349e26e939d0c424F5BA1069Da1Ddb07602',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 34,\n    stakingToken: tokens.etc,\n    earningToken: tokens.vizslaswap,\n    number:'34',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x4beBa40b480cF3d60caACC23C3a07043AD72880F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 33,\n    stakingToken: tokens.ltc,\n    earningToken: tokens.vizslaswap,\n    number:'33',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x59118c750a5c704001574c0693c1790196993c23',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.005',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.38',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 32,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.trip,\n    number:'32',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x40f69629aeaC357826188Ce3d63a1720B7D351ab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.694',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 31,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.btnty,\n    number:'31',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7f206F080306E37446CaA77be250C07F1548f544',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.89',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 28,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.build,\n    number:'28',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xE94d40FEb04ae087771a73b2D67Aca6757a086B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.217',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 29,\n    stakingToken: tokens.atalira,\n    earningToken: tokens.atalira,\n    number:'29',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'ATALIRA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xc17c5D59ea8475d6eA987F654247Fba120166303',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0249',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 24,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.atalira,\n    number:'24',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe8B5c3eD7E3e399C7B6563A6eb981fa0B9CC195A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 30,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.atalira,\n    number:'30',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6Ee2F91786Df82f2B7d69C7DBd270D6F180243e6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 25,\n    stakingToken: tokens.exzo,\n    earningToken: tokens.exzo,\n    number:'25',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'EXZO',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x73629E49dC282ef1Fc7AA7A58722C45BBb3496FC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '11.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 26,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.exzo,\n    number:'26',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xB04284523BbB8c5945C3fcB797A4Af0d8cafb720',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 27,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.exzo,\n    number:'27',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD2E4A090098a7005EA45f4D57DE6aEDc636c0624',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.97',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      tokensymbol5: 'ALL1',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '4%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '370',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: true,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: '',\n    tokensymbol4: '',\n    tokensymbol5: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00115',\n    sortOrder: 200,\n    isFinished: true,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000048612',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002082',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.425',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.222',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    tokensymbol5: 'ALL1',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('apeswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('apeswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('apeswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('apeswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('apeswap/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('radioshack/selectCurrency')\nexport const switchCurrencies = createAction<void>('radioshack/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('radioshack/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('radioshack/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('radioshack/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('biswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('biswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('biswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('biswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('biswap/setRecipient')\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  atalira: {\n    symbol: 'ATALIRA',\n    address: {\n      56: '0x8604d31F3683A22b328CF6F974A34233c3494ccf',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://atalira.net/',\n  },\n  btnty: {\n    symbol: 'BTNTY',\n    address: {\n      56: '0xF15c8d610E02602caAA9959BF5ecfEb8B3D229bE',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bitnity.com',\n  },\n  exzo: {\n    symbol: 'EXZO',\n    address: {\n      56: '0xF8fC63200e181439823251020d691312FDcF5090',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://exzocoin.com',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks4'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens4'\nimport { isAddress } from '../utils/index4'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract4'\nimport { filterTokens } from '../components/SearchModal/filtering4'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks5'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens5'\nimport { isAddress } from '../utils/index5'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract5'\nimport { filterTokens } from '../components/SearchModal/filtering5'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions3'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index4'\nimport useTokenAllowance from './useTokenAllowance4'\nimport { Field } from '../state/swap/actions4'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks4'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices4'\nimport { calculateGasMargin } from '../utils/index4'\nimport { useTokenContract } from './useContract4'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index5'\nimport useTokenAllowance from './useTokenAllowance5'\nimport { Field } from '../state/swap/actions5'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks5'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices5'\nimport { calculateGasMargin } from '../utils/index5'\nimport { useTokenContract } from './useContract5'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens4'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens5'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { Currency } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo4'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo5'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index4'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index4'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index5'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index5'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist3.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist4.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 20,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(RADIOSHACK)',\n    lpSymbol3: 'radioliquidity',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 36,\n    lpSymbol: 'HVI-VIZSLASWAP LP',\n    lpSymbol1:'36',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x687351B70e02AAF7407D3a33f0032eC733C68738',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 27,\n    lpSymbol: 'LAMEA-VIZSLASWAP LP',\n    lpSymbol1:'27',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6140A034d185a0a9Bbb8afD4E3F92BCB0c69c67a',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 38,\n    lpSymbol: 'LIRA-VIZSLASWAP LP',\n    lpSymbol1:'38',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x097D1cc7555Cb3D9325B8c95BCa0F3caa47a7925',\n    },\n    token: tokens.lira,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 37,\n    lpSymbol: 'LIRA-BNB LP',\n    lpSymbol1:'37',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8428786e4B806CD803c47E4d284aB41cBF94B937',\n    },\n    token: tokens.lira,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 28,\n    lpSymbol: 'BVC-VIZSLASWAP LP',\n    lpSymbol1:'28',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x189426C386C446Df3549e3B7Af9bF5D1321E30B9',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 29,\n    lpSymbol: 'BABYVIZSLA-VIZSLASWAP LP',\n    lpSymbol1:'29',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58d30bA21b9Edb7c3526F4539319bEC3A7F23944',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 30,\n    lpSymbol: 'FPS-VIZSLASWAP LP',\n    lpSymbol1:'30',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xAC79F8f638649660b3D7B62aCf40Ef7dD65B35dF',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 31,\n    lpSymbol: 'SKELETON-VIZSLASWAP LP',\n    lpSymbol1:'31',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD91AD40D8ff1F0405ce10230D214eD79fDa73d61',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 32,\n    lpSymbol: 'BUILD-VIZSLASWAP LP',\n    lpSymbol1:'32',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8a9d56706950495cf2CF1799E311f9c68C81D473',\n    },\n    token: tokens.build,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 33,\n    lpSymbol: 'ETH-VIZSLASWAP LP',\n    lpSymbol1:'33',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x48eE61775B6E737a87b38BaC01faC55281ee0B4a',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 34,\n    lpSymbol: 'ATALIRA-VIZSLASWAP LP',\n    lpSymbol1:'34',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xD6d0DF1FF1B26c4Aed6a51fd58030ba6EF06e9f5',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 35,\n    lpSymbol: 'EXZO-VIZSLASWAP LP',\n    lpSymbol1:'35',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC7f86B54BA7eE572b466Af28e3100780736c5934',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.vizslaswap,\n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 21,\n    lpSymbol: 'ATALIRA-BNB LP',\n    lpSymbol1:'21',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x92AB1792235208d119Eee8A420ec264687F4BFC9',\n    },\n    token: tokens.atalira,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 22,\n    lpSymbol: 'EXZO-BNB LP',\n    lpSymbol1:'22',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x31e4286de26215c2e790732Dc8EC78Af36c338a7',\n    },\n    token: tokens.exzo,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 23,\n    lpSymbol: 'BUILD-BNB LP',\n    lpSymbol1:'23',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xEacB9B9c341988d4397F6E1627B2fF32581a2842',\n    },\n    token: tokens.build,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 24,\n    lpSymbol: 'BTNTY-BNB LP',\n    lpSymbol1:'24',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xfF2FFa2B8B59471dD8315c652c4431589DF454ba',\n    },\n    token: tokens.btnty,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 25,\n    lpSymbol: 'TRIP-BNB LP',\n    lpSymbol1:'25',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x109c9Cf64f8AE7Ff01D32597508A9407eBd4dF6f',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 26,\n    lpSymbol: 'TRIP-VIZSLASWAP LP',\n    lpSymbol1:'26',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x1b0169f8b912f7AD2B5000eB6722A987660bd365',\n    },\n    token: tokens.trip,\n    quoteToken: tokens.vizslaswap,\n   }\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers4'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'RLP', 'RadioShack Swap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers5'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'BSW-LP', 'Biswap LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { useMulticallContract } from 'hooks/useContract4'\nimport { isAddress } from 'utils/index4'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens5'\nimport { useMulticallContract } from 'hooks/useContract5'\nimport { isAddress } from 'utils/index5'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT2, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT2,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers4'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index4'\nimport { getContract } from '../utils/index4'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers5'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index5'\nimport { getContract } from '../utils/index5'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr2'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress]  : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'vizslaswap.com', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens4'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades4'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices4'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index4'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens5'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades5'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices5'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index5'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks4'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks5'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions4'\nimport { TransactionDetails } from './reducer4'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions5'\nimport { TransactionDetails } from './reducer5'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0x74C1D85d2f45eDf73D43c8eb70DaaFd7F6207A80',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: '664',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swaplogo-swap-ltc.png',\n    },\n    sortOrder: 999,\n    identifier: '664',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmX3KD68J1FMm3X26TtrAto1L6owh8un7MWFgwJx7dr4Co?filename=Vizsla1.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index4'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades4'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index4'\nimport { PairState, usePairs } from './usePairs4'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nimport { useUnsupportedTokens } from './Tokens4'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet4'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index4'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index5'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades5'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index5'\nimport { PairState, usePairs } from './usePairs5'\nimport { wrappedCurrency } from '../utils/wrappedCurrency5'\n\nimport { useUnsupportedTokens } from './Tokens5'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet5'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index5'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal4'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index4'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal5'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index5'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { isAddress } from '../../utils/index4'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { isAddress } from '../../utils/index5'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useTokenContract } from './useContract4'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useTokenContract } from './useContract5'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers4'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers5'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool4') ||\n    pathname.includes('/createradio') ||\n    pathname.includes('/addradioliquidity') ||\n    pathname.includes('/removeradio') ||\n    pathname.includes('/radiofind') ||\n    pathname.includes('/radioliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool4\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav4'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool5') ||\n    pathname.includes('/createbiswap') ||\n    pathname.includes('/addbiswapliquidity') ||\n    pathname.includes('/removebiswap') ||\n    pathname.includes('/biswapfind') ||\n    pathname.includes('/biswapliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/biswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool5\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav5'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 20px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index4'\nimport { getBscScanLink } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport { ListLogo } from 'components/Logo/index4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist'\nimport { MIN_BNB } from '../config/constants/index4'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index5'\nimport { getBscScanLink } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport { ListLogo } from 'components/Logo/index5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { MIN_BNB } from '../config/constants/index5'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n                 <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs4'\nimport useTotalSupply from 'hooks/useTotalSupply4'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency4'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks4'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index4'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index4'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard4'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index4'\nimport { PairState } from '../../hooks/usePairs4'\nimport { useCurrency } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback4'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks4'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks4'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index4'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency4'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom4'\nimport { currencyId } from '../../utils/currencyId4'\nimport PoolPriceBar from './PoolPriceBar4'\nimport Page from '../Page4'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity4() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addradioliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addradioliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addradioliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addradioliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addradioliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool4\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs5'\nimport useTotalSupply from 'hooks/useTotalSupply5'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency5'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks5'\nimport { useCurrencyBalances } from '../wallet/hooks5'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index5'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index5'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard5'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index5'\nimport { PairState } from '../../hooks/usePairs5'\nimport { useCurrency } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback5'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks5'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks5'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index5'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency5'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom5'\nimport { currencyId } from '../../utils/currencyId5'\nimport PoolPriceBar from './PoolPriceBar5'\nimport Page from '../Page5'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity5() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addbiswapliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addbiswapliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addbiswapliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addbiswapliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addbiswapliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n               <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/add\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool5\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem,ChevronDownIcon, SubMenuItem, SubMenu} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n             <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/addapeliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addbiswapliquidity\" as={Link} color=\"text\">\n             <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/addradioliquidity\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply4'\n\nimport { useTokenBalance } from '../../state/wallet/hooks4'\nimport { currencyId } from '../../utils/currencyId4'\nimport { unwrappedToken } from '../../utils/wrappedCurrency4'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo4'\nimport { DoubleCurrencyLogo } from '../Logo/index4'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index4'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeradio/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addradioliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply5'\n\nimport { useTokenBalance } from '../../state/wallet/hooks5'\nimport { currencyId } from '../../utils/currencyId5'\nimport { unwrappedToken } from '../../utils/wrappedCurrency5'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo5'\nimport { DoubleCurrencyLogo } from '../Logo/index5'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index5'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removebiswap/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addbiswapliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens3'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback2'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks3'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens3'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index3'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens3'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow3'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists3'\nimport ManageTokens from './ManageTokens3'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage3'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo4'\nimport { ListLogo } from 'components/Logo/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens4'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks4'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens4'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index4'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index4'\nimport ImportRow from './ImportRow4'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks4'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens4'\nimport { isAddress } from '../../utils/index4'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList4'\nimport { filterTokens, useSortedTokensByQuery } from './filtering4'\nimport useTokenComparator from './sorting4'\n\nimport ImportRow from './ImportRow4'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback4'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks4'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index4'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens4'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index4'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens4'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow4'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists4'\nimport ManageTokens from './ManageTokens4'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index4'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback4'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch4'\nimport ImportToken from './ImportToken4'\nimport Manage from './Manage4'\nimport ImportList from './ImportList4'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo5'\nimport { ListLogo } from 'components/Logo/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks5'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens5'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency5'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks5'\nimport { useCurrencyBalance } from '../../state/wallet/hooks5'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens5'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index5'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index5'\nimport ImportRow from './ImportRow5'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks5'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens5'\nimport { isAddress } from '../../utils/index5'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList5'\nimport { filterTokens, useSortedTokensByQuery } from './filtering5'\nimport useTokenComparator from './sorting5'\n\nimport ImportRow from './ImportRow5'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback5'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks5'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index5'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens5'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index5'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens5'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index5'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow5'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists5'\nimport ManageTokens from './ManageTokens5'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index5'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback5'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks5'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch5'\nimport ImportToken from './ImportToken5'\nimport Manage from './Manage5'\nimport ImportList from './ImportList5'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract3'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp4'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract4'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp5'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract5'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools/all',\n  },\n  {\n    label: t('Be2Mining'),\n    icon: 'PredictionsIcon',\n    href: '/be2mining/all',\n    status: {\n      text: t('NEW').toLocaleUpperCase(),\n      color: 'warning',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link}  to=\"/pools/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool40, usePool41, usePool39, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceliraBusd, usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd, } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress,geLiraAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress} from 'utils/addressHelpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n  const POOL39 = getBalanceNumber(usePool39(geLiraAddress()))\n  const POOL40 = getBalanceNumber(usePool40(getCakeAddress()))\n  const POOL41 = getBalanceNumber(usePool41(getHVIAddress()))\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21  + POOL40\n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 + POOL41\n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const MAJDNEM3 = POOL30\n  const FULL4 = POOL30 * WBNBPRICE\n  const MAJDNEM4 = POOL31\n  const FULL5 = POOL31 * ETHPRICE\n  const MAJDNEM5 = POOL32\n  const FULL6 = POOL32 * ETCPRICE\n  const MAJDNEM6 = POOL33\n  const FULL7 = POOL33 * LTCPRICE\n  const MAJDNEM7 = POOL34\n  const FULL8 = POOL34 * LAMEAPRICE\n  const MAJDNEM8 = POOL35\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const MAJDNEM9 = POOL36\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const MAJDNEM10 = POOL37\n  const FULL11 = POOL37 * BVCPRICE\n  const MAJDNEM11 = POOL38\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const MAJDNEM12 = POOL39\n  const FULL13 = POOL39 * liraprice\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12 + FULL13\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (Staking Pools)')} onDismiss={onDismiss}>\n  \n  <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL2} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM2 * 1000000000} unit=\" HVI\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL8} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM7} unit=\" LAMEA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL11} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM10} unit=\" BVC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL10} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM9  * 1000000000} unit=\" EXZO\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL9} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM8  * 1000000000} unit=\" ATALIRA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL7} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM6} unit=\" LTC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL5} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM4} unit=\" ETH\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL12} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM11} unit=\" BABYVIZSLA\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL4} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM3} unit=\" WBNB\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL6} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM5} unit=\" ETC\" decimals={0} />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n  <Balance color=\"primary\" value={FULL13} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={MAJDNEM12} unit=\" LIRA\" decimals={0} />\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault  } from 'state/pools/hooks'\nimport { usePool4 , usePool5, usePool6 , usePool7, usePool8 , usePool9, usePool10, usePool11, usePool12, usePool13, usePool14, usePool15, usePool16, usePool17, usePool18 , usePool19, usePool20, usePool21 , usePool22, usePool23, usePool24, usePool25, usePool26, usePool27, usePool29, usePool28, usePool30, usePool31, usePool32, usePool33, usePool34, usePool35, usePool36, usePool37, usePool38, usePool39, usePool40, usePool41} from 'hooks/useTokenBalance'\nimport { usePollFarmsData , usePriceBnbBusd, usePriceCakeBusd , usePriceHVIBusd, usePriceLameaBusd , usePriceETCBusd , usePriceBABYVIZSLABusd , usePriceBVCBusd ,usePriceEXZOBusd , usePriceETHBusd, usePriceATALIRABusd, usePriceLTCBusd,usePriceliraBusd } from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress,geLiraAddress, getethAddress, getLAMEAAddress, getbvcAddress, getbabyvizslaAddress , getltcAddress, getetcAddress, getataliraAddress, getexzoAddress} from 'utils/addressHelpers'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL1')\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const HVIPRICE0 = usePriceHVIBusd()\n  const HVIPRICE = HVIPRICE0.toNumber()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const WBNBPRICE0 = usePriceBnbBusd()\n  const WBNBPRICE = WBNBPRICE0.toNumber()\n  const ETHPPRICE0 = usePriceETHBusd()\n  const ETHPRICE = ETHPPRICE0.toNumber()\n  const ETCPRICE0 = usePriceETCBusd()\n  const ETCPRICE = ETCPRICE0.toNumber()\n  const LTCPRICE0 = usePriceLTCBusd()\n  const LTCPRICE = LTCPRICE0.toNumber()\n  const LAMEAPRICE0 = usePriceLameaBusd()\n  const LAMEAPRICE = LAMEAPRICE0.toNumber()\n  const ATALIRAPRICE0 = usePriceATALIRABusd()\n  const ATALIRAPRICE = ATALIRAPRICE0.toNumber()\n  const EXZOPRICE0 = usePriceEXZOBusd()\n  const EXZOPRICE = EXZOPRICE0.toNumber()\n  const BVCPRICE0 = usePriceBVCBusd()\n  const BVCPRICE = BVCPRICE0.toNumber()\n  const BABYVIZSLAPRICE0 = usePriceBABYVIZSLABusd()\n  const BABYVIZSLAPRICE = BABYVIZSLAPRICE0.toNumber()\n  const liraprice0 = usePriceliraBusd()\nconst liraprice = liraprice0.toNumber()\n  const POOL4 = getBalanceNumber(usePool4(getCakeAddress()))\n  const POOL5 = getBalanceNumber(usePool5(getCakeAddress()))\n  const POOL6 = getBalanceNumber(usePool6(getCakeAddress()))\n  const POOL7 = getBalanceNumber(usePool7(getCakeAddress()))\n  const POOL8 = getBalanceNumber(usePool8(getCakeAddress()))\n  const POOL9 = getBalanceNumber(usePool9(getCakeAddress()))\n  const POOL10 = getBalanceNumber(usePool10(getCakeAddress()))\n  const POOL11 = getBalanceNumber(usePool11(getCakeAddress()))\n  const POOL12 = getBalanceNumber(usePool12(getCakeAddress()))\n  const POOL13 = getBalanceNumber(usePool13(getCakeAddress()))\n  const POOL14 = getBalanceNumber(usePool14(getCakeAddress()))\n  const POOL15 = getBalanceNumber(usePool15(getCakeAddress()))\n  const POOL16 = getBalanceNumber(usePool16(getCakeAddress()))\n  const POOL17 = getBalanceNumber(usePool17(getCakeAddress()))\n  const POOL18 = getBalanceNumber(usePool18(getCakeAddress()))\n  const POOL19 = getBalanceNumber(usePool19(getCakeAddress()))\n  const POOL20 = getBalanceNumber(usePool20(getCakeAddress()))\n  const POOL21 = getBalanceNumber(usePool21(getCakeAddress()))\n  const POOL22 = getBalanceNumber(usePool22(getHVIAddress()))\n  const POOL23 = getBalanceNumber(usePool23(getHVIAddress()))\n  const POOL24 = getBalanceNumber(usePool24(getHVIAddress()))\n  const POOL25 = getBalanceNumber(usePool25(getHVIAddress()))\n  const POOL26 = getBalanceNumber(usePool26(getHVIAddress()))\n  const POOL27 = getBalanceNumber(usePool27(getHVIAddress()))\n  const POOL28 = getBalanceNumber(usePool28(getHVIAddress()))\n  const POOL29 = getBalanceNumber(usePool29(getHVIAddress()))\n  const POOL30 = getBalanceNumber(usePool30(getWbnbAddress()))\n  const POOL31 = getBalanceNumber(usePool31(getethAddress()))\n  const POOL32 = getBalanceNumber(usePool32(getetcAddress()))\n  const POOL33 = getBalanceNumber(usePool33(getltcAddress()))\n  const POOL34 = getBalanceNumber(usePool34(getLAMEAAddress()))\n  const POOL35 = getBalanceNumber(usePool35(getataliraAddress()))\n  const POOL36 = getBalanceNumber(usePool36(getexzoAddress()))\n  const POOL37 = getBalanceNumber(usePool37(getbvcAddress()))\n  const POOL38 = getBalanceNumber(usePool38(getbabyvizslaAddress()))\n  const POOL39 = getBalanceNumber(usePool39(geLiraAddress()))\n  const POOL40 = getBalanceNumber(usePool40(getCakeAddress()))\n  const POOL41 = getBalanceNumber(usePool41(getHVIAddress()))\n\n  const MAJDNEM  = POOL4 + POOL5 + POOL6 + POOL7 + POOL8 + POOL9 + POOL10 + POOL11 + POOL12 + POOL13 + POOL14 + POOL15 + POOL16 + POOL17 + POOL18 + POOL19 + POOL20 + POOL21 + POOL40 \n  const MAJDNEM2 = POOL22 + POOL23 + POOL24 + POOL25 + POOL26 + POOL27 + POOL28 + POOL29 + POOL41\n  const FULL1 = MAJDNEM * VIZSLAPRICE\n  const FULL2 = MAJDNEM2 * HVIPRICE * 1000000000\n  const FULL4 = POOL30 * WBNBPRICE\n  const FULL5 = POOL31 * ETHPRICE\n  const FULL6 = POOL32 * ETCPRICE\n  const FULL7 = POOL33 * LTCPRICE\n  const FULL8 = POOL34 * LAMEAPRICE\n  const FULL9 = POOL35 * ATALIRAPRICE * 1000000000\n  const FULL10 = POOL36 * EXZOPRICE * 1000000000\n  const FULL11 = POOL37 * BVCPRICE\n  const FULL12 = POOL38 * BABYVIZSLAPRICE\n  const FULL13 = POOL39 * liraprice\n  const FULL3 = FULL1 + FULL2  + FULL4 + FULL5 + FULL6 + FULL7 + FULL8 + FULL9 + FULL10 + FULL11 + FULL12 + FULL13\n  \n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools = useMemo(\n    () =>\n      all.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n  const showall = location.pathname.includes('all')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : antiwhalepools\n  } \n  if (showall) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : all\n  } \n\n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={FULL3} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (Staking Pools)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as={Link} width={50} height={35}  to=\"/pools/all\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as={Link} width={50} height={35}  to=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as={Link} width={120} height={35}  to=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000 ) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0')\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({  value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard2: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard2\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard3: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard3\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault  } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n  const { account } = useWeb3React()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n\n\n  \n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n  const totalSupply = useTotalSupply()\n\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n \n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={ earningsPercentageToDisplay * full4 }\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types2'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"md\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types2'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types2'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={5}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types2'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={full4}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types2'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard4: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}    \n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard4\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to=\"/be2mining/all\">\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to=\"/be2mining/finished\">\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3, usePool4a} from 'hooks/useTokenBalance'\nimport Balance from 'components/Balance'\n\ninterface ModalInfoProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst ModalInfo: React.FC<ModalInfoProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const POOL4 = getBalanceNumber(usePool4a(getCakeAddress()))\n  const VÉGE = POOL1 + POOL2 + POOL3 + POOL4\n  const VÉGE1 = VÉGE * VIZSLAPRICE\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Total staked (B2Mining)')} onDismiss={onDismiss}>\n  \n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Balance color=\"textSubtle\" value={VÉGE1} prefix=\"~$\" decimals={0}  />\n        <Balance color=\"textSubtle\" value={VÉGE} unit=\" VIZSLASWAP\" decimals={0} />\n      </Flex>\n    \n    </Modal>\n  )\n}\n\nexport default ModalInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport Balance from 'components/Balance'\nimport ModalInfo from './ModalInfo'\n\nconst StyledCard = styled.div`\n margin-left: 6px ;\n margin-top: 4px ;\n\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<ModalInfo TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      <StyledCard >\n          <Flex flexDirection=\"column\">\n            \n            <Button\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              variant='primary'\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('?')}\n            </Button>\n          </Flex>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { useTotalSupply, useVizslaLPBalance, useHVILPBalance ,useTotalSupplyVIZSLAHVI} from 'hooks/useTokenBalance'\nimport { usePriceCakeBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakeSupply2 = totalSupply ? getBalanceNumber(totalSupply) : 0\n  const mcap = cakePriceBusd.times(cakeSupply2).times(1000000000)\n  const mcap2 = mcap.toNumber()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLAHVI()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n const full3 = full + full2\n const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools2'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 381000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceBnbBusd , usePriceHVIBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useWBNBLPBalance, useHVILPBalance2 ,useTotalSupplyHVIBNB} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const bnblpbalance = getBalanceNumber(useWBNBLPBalance(getWbnbAddress()))\n  const bnbprice = usePriceBnbBusd()\n  const bnbprice2 = bnbprice.toNumber()\n  const hvilpbalance = getBalanceNumber(useHVILPBalance2(getHVIAddress()))\n  const hviPriceBusd = usePriceHVIBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyHVIBNB()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = bnbprice2 * bnblpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2 * 2\n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow2: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow2\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceLameaBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyVIZSLASWAPLAMEA} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const vizslalpbalance = getBalanceNumber(useVizslaLameaLPBalance(getCakeAddress()))\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const hvilpbalance = getBalanceNumber(useLAMEALPBalance(getLAMEAAddress()))\n  const hviPriceBusd = usePriceLameaBusd()\n  const hviprice = hviPriceBusd.toNumber()\n  const vizslahvisupply = useTotalSupplyVIZSLASWAPLAMEA()\n  const vizslahvisupply2 = vizslahvisupply ? getBalanceNumber(vizslahvisupply) : 0\n  const full = vizslaprice * vizslalpbalance \n  const full2 = hviprice * hvilpbalance\n  const full3 = full + full2\n  const full4 = full3 / vizslahvisupply2  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow3: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow3\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {full4 > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { getAprData } from 'views/FarmPools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n \n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay * full4}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport { usePriceliraBusd , usePriceCakeBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress, getLAMEAAddress, geLiraAddress } from 'utils/addressHelpers'\nimport { useTotalSupply, useVizslaLameaLPBalance, useLAMEALPBalance ,useTotalSupplyFarm22 , useFarm22} from 'hooks/useTokenBalance'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n\n  const totalSupply = useTotalSupply()\n  const liraprice0 = usePriceliraBusd()\n  const liraprice = liraprice0.toNumber()\n  const cakePriceBusd = usePriceCakeBusd()\n  const vizslaprice = cakePriceBusd.toNumber()\n  const vizslalpbalance18 = getBalanceNumber(useFarm22(getCakeAddress()))\n  const liralpbalance = getBalanceNumber(useFarm22(geLiraAddress()))\n  \n  const kombo43 = useTotalSupplyFarm22()\n  const kombo44 = kombo43 ? getBalanceNumber(kombo43) : 0\n  \n  const teljes64 = vizslaprice * vizslalpbalance18\n  const teljes65 = liraprice * liralpbalance\n  const teljes66 = teljes64 + teljes65 \n  const full4 = teljes66 / kombo44\n  \n const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n // These will be reassigned later if its Auto CAKE vault\n let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(full4), earningToken.decimals)\n let hasEarnings = earnings.gt(0)\n const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n const isCompoundPool = sousId === 0\n const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={2} value={earningTokenBalance} />\n                {full4 > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={2}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/FarmPools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools2/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow3: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow3\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types2'\nimport PoolRow from './PoolRow'\nimport PoolRow2 from '../PoolsTable2/PoolRow'\nimport PoolRow3 from '../PoolsTable3/PoolRow'\nimport PoolRow4 from '../PoolsTable4/PoolRow'\n\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  pools3: Pool[]\n  pools2: Pool[]\n  pools4: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools,pools2, pools3, pools4, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        {pools2.map((pool) => (\n          <PoolRow2\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n          {pools3.map((pool) => (\n          <PoolRow3\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n             {pools4.map((pool) => (\n          <PoolRow4\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools2/hooks'\nimport { usePriceCakeBusd , usePriceHVIBusd, usePollFarmsData, usePriceLameaBusd, usePriceBnbBusd} from 'state/farms/hooks'\nimport { getAddress, getHVIAddress , getCakeAddress } from 'utils/addressHelpers'\nimport { usePool1 , usePool2, usePool3, usePool4a} from 'hooks/useTokenBalance'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport { getBalanceNumber, formatLocalisedCompactNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport Balance from 'components/Balance'\nimport PoolCard from './components/PoolCard'\nimport PoolCard2 from './components/PoolCard2'\nimport PoolCard3 from './components/PoolCard3'\nimport PoolCard4 from './components/PoolCard4'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport InfoCard from './components/InfoCard'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst FarmPools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const chosenPoolsLength3 = useRef(0)\n  const chosenPoolsLength2 = useRef(0)\n  const chosenPoolsLength4 = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const VIZSLAPRICE0 = usePriceCakeBusd()\n  const VIZSLAPRICE = VIZSLAPRICE0.toNumber()\n  const POOL1 = getBalanceNumber(usePool1(getCakeAddress()))\n  const POOL2 = getBalanceNumber(usePool2(getCakeAddress()))\n  const POOL3 = getBalanceNumber(usePool3(getCakeAddress()))\n  const POOL4 = getBalanceNumber(usePool4a(getCakeAddress()))\n  const EREDMENY1 = VIZSLAPRICE * POOL1\n  const EREDMENY2 = VIZSLAPRICE * POOL2\n  const EREDMENY3 = VIZSLAPRICE * POOL3\n  const EREDMENY4 = VIZSLAPRICE * POOL4\n  const VÉGE = EREDMENY1 + EREDMENY2 + EREDMENY3 + EREDMENY4\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool2) => pool2.sousId === 1000)\n    const cakeAutoVault = { ...cakePool, isAutoVault: false }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const all = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL2')\n  const all2 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL3')\n  const all3 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL4')\n  const all4 = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'ALL5')\n  const finished = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol5  === 'FINISHED2')\n  \n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyfinished = useMemo(\n    () =>\n      finished.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finished, accountHasVaultShares],\n  )\n  const stakedOnlyAllPools  = useMemo(\n    () =>\n      all .filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all, accountHasVaultShares],\n  )\n  const stakedOnlyAl2lPools = useMemo(\n    () =>\n      all2.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all2, accountHasVaultShares],\n  )\n  const stakedOnlyAl3lPools = useMemo(\n    () =>\n      all3.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all3, accountHasVaultShares],\n  )\n  const stakedOnlyAl4lPools = useMemo(\n    () =>\n      all4.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [all4, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength2.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength3.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          if (poolsCurrentlyVisible <= chosenPoolsLength4.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showallpools = location.pathname.includes('all')\n  const showall2pools = location.pathname.includes('all')\n  const showall3pools = location.pathname.includes('all')\n  const showall4pools = location.pathname.includes('all')\n  const showfinished = location.pathname.includes('finished')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  \n  }\n  if (showallpools) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools  : all\n  } \n  if (showfinished) {\n    chosenPools = stakedOnly ? stakedOnlyAllPools : finished\n  } \n\n  let chosenPools2\n  if (showall2pools) {\n    chosenPools2 = stakedOnly ? stakedOnlyAl2lPools  : all2\n  } \n  if (showfinished) {\n    chosenPools2 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools3\n  if (showall3pools) {\n    chosenPools3 = stakedOnly ? stakedOnlyAl3lPools  : all3\n  } \n  if (showfinished) {\n    chosenPools3 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n  let chosenPools4\n  if (showall4pools) {\n    chosenPools4 = stakedOnly ? stakedOnlyAl4lPools  : all4\n  } \n  if (showfinished) {\n    chosenPools4 = stakedOnly ? stakedOnlyAllPools : finished\n  } \n \n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools2 = chosenPools2.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools3 = chosenPools3.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools4 = chosenPools4.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools4 = sortPools(chosenPools4).slice(0, numberOfPoolsVisible)\n  chosenPools3 = sortPools(chosenPools3).slice(0, numberOfPoolsVisible)\n  chosenPools2 = sortPools(chosenPools2).slice(0, numberOfPoolsVisible)\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n  chosenPoolsLength2.current = chosenPools2.length\n  chosenPoolsLength3.current = chosenPools3.length\n  chosenPoolsLength4.current = chosenPools3.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n        {chosenPools2.map((pool) =>\n (\n          <PoolCard2 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n         {chosenPools3.map((pool) =>\n (\n          <PoolCard3 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n       {chosenPools4.map((pool) =>\n (\n          <PoolCard4 key={pool.sousId} pool={pool} account={account} />\n          \n        ),\n\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} pools2={chosenPools2} pools3={chosenPools3} pools4={chosenPools4} account={account} userDataLoaded={userDataLoaded} />\n\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Be2Mining')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Stake one token and immediately get 2 as a reward.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n            <Flex mt=\"5px\">\n            <Balance color=\"primary\" prefix=\"~$\" fontSize=\"27px\" bold value={VÉGE} decimals={0}  />\n            <InfoCard />\n            </Flex>\n            <Text fontSize=\"20px\" bold color=\"secondary\" ml=\"6px\">\n              {t('Total staked (B2Mining)')}\n            </Text>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default FarmPools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency3'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken3'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline3'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal3'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions3'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         ApeSwap</Button>}>     \n         <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index4'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices4'\nimport { ONE_BIPS } from '../../../config/constants/index4'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index4'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal4'\nimport SwapModalFooter from './SwapModalFooter4'\nimport SwapModalHeader from './SwapModalHeader4'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency4'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport SwapRoute from './SwapRoute4'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails4'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken4'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index4'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline4'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { useCurrencyBalance } from '../state/wallet/hooks4'\nimport { useWETHContract } from './useContract4'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers4'\nimport AddressInputPanel from './components/AddressInputPanel4'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown4'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee4'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice4'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal4'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index4'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback4'\nimport { useSwapCallback } from '../../hooks/useSwapCallback4'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback4'\nimport { Field } from '../../state/swap/actions4'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks4'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices4'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page4'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function RadioShack() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/radioshack')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n      \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         RadioShack</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/swap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40}  href=\"/radioshack?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/radioshack?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index4'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index5'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices5'\nimport { ONE_BIPS } from '../../../config/constants/index5'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index5'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal5'\nimport SwapModalFooter from './SwapModalFooter5'\nimport SwapModalHeader from './SwapModalHeader5'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency5'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index5'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices5'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact5'\nimport SwapRoute from './SwapRoute5'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails5'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken5'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index5'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline5'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks5'\nimport { useTransactionAdder } from '../state/transactions/hooks5'\nimport { useCurrencyBalance } from '../state/wallet/hooks5'\nimport { useWETHContract } from './useContract5'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades5'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers5'\nimport AddressInputPanel from './components/AddressInputPanel5'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal5'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel5'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown5'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee5'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice5'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal5'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index5'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens5'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback5'\nimport { useSwapCallback } from '../../hooks/useSwapCallback5'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback5'\nimport { Field } from '../../state/swap/actions5'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks5'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index5'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend5'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices5'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page5'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\nconst GridCell = styled(Flex)<{ isTopPosition: boolean }>`\n  height: 65px;\n  align-items: center;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n\n  ${({ theme, isTopPosition }) => isTopPosition && `background-color: ${theme.colors.warning}2D;`}\n`\n\nexport default function Biswap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/biswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool5') ||\n      pathname.includes('/createbiswap') ||\n      pathname.includes('/addbiswapliquidity') ||\n      pathname.includes('/removebiswap') ||\n      pathname.includes('/biswapfind') ||\n      pathname.includes('/biswapliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n            \n      <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\"  endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         Biswap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem  to=\"/swap\" as={Link} color=\"text\">\n            <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('PancakeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link} color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/biswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/biswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist/dist5'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index5'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, Skeleton, AddIcon,ButtonMenuItem, ButtonMenu, SubMenuItem, SubMenu, Image, ChevronDownIcon} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n            <SubMenu  component={<Button mb=\"15px\" variant=\"tertiary\" endIcon={<ChevronDownIcon/>}  >     \n      <img src=\"/images/routers/1.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n      <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n\n         PancakeSwap</Button>}>     \n            <SubMenuItem   to=\"/apeswap\" as={Link} color=\"text\">\n             <img src=\"/images/routers/2.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('ApeSwap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/biswap\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/5.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('Biswap')}\n            </SubMenuItem>\n            <SubMenuItem   to=\"/radioshack\" as={Link}  color=\"text\">\n            <img src=\"/images/routers/4.png\" alt=\"router\"  height=\"24px\" width=\"24px\" />\n            <img src=\"/images/routers/999.png\" alt=\"space\"  height=\"5px\" width=\"5px\" />\n              {t('RadioShack')}\n            </SubMenuItem>\n        </SubMenu>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n  \n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity4 from './index'\n\nexport function RedirectToAddLiquidity3() {\n  return <Redirect to=\"/addradioliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure3() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addradioliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity4 />\n}\n\nexport function RedirectDuplicateTokenIds3() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addradioliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity4 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity5 from './index'\n\nexport function RedirectToAddLiquidity4() {\n  return <Redirect to=\"/addbiswapliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure4() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addbiswapliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity5 />\n}\n\nexport function RedirectDuplicateTokenIds4() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addbiswapliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity5 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure4() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool4\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeradio/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure4\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure5() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool5\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removebiswap/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure5\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport FarmPools from './views/FarmPools'\nimport ApeSwap from './views/ApeSwap'\nimport RadioShack from './views/RadioShack'\nimport Biswap from './views/Biswap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport {\n  RedirectDuplicateTokenIds3,\n  RedirectOldAddLiquidityPathStructure3,\n  RedirectToAddLiquidity3,\n} from './views/AddLiquidity4/redirects'\nimport {\n  RedirectDuplicateTokenIds4,\n  RedirectOldAddLiquidityPathStructure4,\n  RedirectToAddLiquidity4,\n} from './views/AddLiquidity5/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure4 from './views/RemoveLiquidity4/redirects'\nimport RedirectOldRemoveLiquidityPathStructure5 from './views/RemoveLiquidity5/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst AddLiquidity4 = lazy(() => import('./views/AddLiquidity4'))\nconst AddLiquidity5 = lazy(() => import('./views/AddLiquidity5'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst Liquidity4 = lazy(() => import('./views/Pool4'))\nconst Liquidity5 = lazy(() => import('./views/Pool5'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst PoolFinder4 = lazy(() => import('./views/PoolFinder4'))\nconst PoolFinder5 = lazy(() => import('./views/PoolFinder5'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\nconst RemoveLiquidity4 = lazy(() => import('./views/RemoveLiquidity4'))\nconst RemoveLiquidity5 = lazy(() => import('./views/RemoveLiquidity5'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/be2mining\">\n              <FarmPools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/radioshack\">\n              <RadioShack />\n            </Route>\n            <Route exact strict path=\"/biswap\">\n              <Biswap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/radiofind\">\n              <PoolFinder4 />\n            </Route>\n            <Route exact strict path=\"/biswapfind\">\n              <PoolFinder5 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/radioliquidity\">\n              <Liquidity4 />\n            </Route>\n            <Route exact strict path=\"/biswapliquidity\">\n              <Liquidity5 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/createradio\">\n              <RedirectToAddLiquidity3 />\n            </Route>\n            <Route exact strict path=\"/createbiswap\">\n              <RedirectToAddLiquidity4 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/addbiswapliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/createradio\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/createbiswap\">\n              <AddLiquidity5 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure3 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure4 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/createradio/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/createbiswap/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds4 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure5 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity4 />\n            </Route>\n            <Route exact strict path=\"/removebiswap/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity5 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/pool4\">\n              <Redirect to=\"/radioliquidity\" />\n            </Route>\n            <Route path=\"/pool5\">\n              <Redirect to=\"/biswapliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools/all\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}