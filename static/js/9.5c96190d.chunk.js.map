{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","hooks/useFarmsWithBalance.ts","hooks/useAllEarnings.ts","views/Home/components/CardValueHuf.tsx","views/Home/components/CardForintValue.tsx","views/Home/components/CakeHarvestBalance.tsx","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","views/Home/components/CakeStats.tsx","views/Home/components/HVIStats.tsx","views/Home/components/News.tsx","views/Home/components/TotalValueLockedCard.tsx","hooks/DEBANKAPI1.ts","hooks/BSCAPI1.ts","hooks/BSCAPI2.ts","hooks/DEBANKAPI2.ts","hooks/BSCAPI3.ts","hooks/DEBANKAPI3.ts","hooks/BSCAPI4.ts","hooks/DEBANKAPI4.ts","hooks/BSCAPI5.ts","hooks/DEBANKAPI5.ts","hooks/BSCAPI6.ts","hooks/DEBANKAPI6.ts","hooks/BSCAPI7.ts","hooks/DEBANKAPI7.ts","hooks/BSCAPI8.ts","hooks/DEBANKAPI8.ts","views/Home/components/EarnAPRCard.tsx","views/Home/components/EarnAssetCard.tsx","views/Home/Home.tsx","hooks/useTokenBalance.ts","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","../node_modules/lodash/max.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","fetchBalances","useAllEarnings","balances","setBalance","res","fetchAllBalances","CardValue","decimals","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","CardBusdValue","props","CardValueHuf","Block","styled","div","CakeHarvestBalance","t","useTranslation","earningsSum","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","toNumber","cakePriceBusd","usePriceCakeBusd","earningsBusd","multipliedBy","gt","CardForintValue","CakeWalletBalance","cakeBalance","useTokenBalance","getCakeAddress","busdBalance","getBalanceNumber","StyledFarmStakingCard","Card","CardImage","img","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","farmsWithBalance","masterChefContract","useMasterchef","balancesWithValue","filter","balanceType","harvestAllFarms","useCallback","farmWithBalance","harvest","scale","mb","src","alt","width","height","id","disabled","onClick","count","UnlockButton","StyledCakeStats","Row","Heading","CakeStats","totalSupply","useTotalSupply","burnedBalance","useBurnedBalance","eggPrice","circSupply","minus","fullSupply","times","fullcap","vizprice","csupply","totalSupplyHVI","usePrice2","getHVIAddress","HVIprice","usePriceHVIBusd","HVImarketcap","Circulation","contrast","href","target","StyledTotalValueLockedCard","TotalValueLockedCard","BusePrice","usePriceAPI1","data","setData","fetch","response","json","responseData","console","error","fetchData","useGetStats","data2","useGetStats1","data3","useGetStats2","data4","useGetStats3","data5","useGetStats4","data6","useGetStats5","data7","useGetStats6","data8","useGetStats7","data9","useGetStats8","data10","useGetStats9","data11","useGetStats10","data12","useGetStats11","data13","useGetStats12","data14","useGetStats13","data15","useGetStats14","data16","useGetStats15","tvl","price","toLocaleString","tvl1","result","tvl2","tvl3","tvl4","tvl5","tvl6","tvl7","tvl8","tvl9","tvl10","tvl11","tvl12","tvl13","tvl14","tvl15","CAP5A","CAP5C","CAP5F","CAP5H","CAP5J","CAP5L","CAP5N","full2","plus","decimalPlaces","RainbowLight","keyframes","mediaQueries","lg","CardMidContent","attrs","EarnAPRCard","isFetchingFarmData","setIsFetchingFarmData","farmsLP","useFarms","cakePrice","dispatch","useAppDispatch","fetchFarmsPublicDataAsync","nonArchivedFarms","nonArchivedFarm","fetchFarmData","highestApr","useMemo","aprs","multiplier","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","getFarmApr","poolWeight","maxApr","max","maximumFractionDigits","aprText","split","earnUpTo","InFarms","exact","activeClassName","to","animation","variant","justifyContent","mt","activeNonCakePools","pools","pool","isFinished","earningToken","symbol","includes","assets","orderBy","slice","join","EarnAssetCard","earn","InPools","Hero","Cards","BaseLayout","sm","CTACards","Home","Page","as","FarmStakingCard","News","HVIStats","FetchStatus","slowRefresh","setTotalSupply","cakeContract","getCakeContract","methods","call","supply","fetchTotalSupply","tokenAddress","BIG_ZERO","web3","useWeb3","contract","getBep20Contract","balanceOf","fetchBalance","useGetBnbBalance","useLastUpdated","lastUpdated","setLastUpdated","eth","getBalance","walletBalance","refresh","NOT_FETCHED","SUCCESS","FAILED","fetchStatus","balanceState","setBalanceState","prev","baseExtremum","require","baseGt","identity","module","exports","array"],"mappings":"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","file":"static/js/9.5c96190d.chunk.js","sourcesContent":["import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from './useRefresh'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n\n      setFarmsWithBalances(results)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return farmsWithBalances\n}\n\nexport default useFarmsWithBalance\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from './useRefresh'\n\nconst useAllEarnings = () => {\n  const [balances, setBalance] = useState([])\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchAllBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const res = await multicall(masterChefABI, calls)\n\n      setBalance(res)\n    }\n\n    if (account) {\n      fetchAllBalances()\n    }\n  }, [account, fastRefresh])\n\n  return balances\n}\n\nexport default useAllEarnings\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {countUp}\n      {prefix}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValueHuf, { CardValueProps } from './CardValueHuf'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValueHuf fontSize=\"14px\" lineHeight=\"1.1\" color=\"textDisabled\" prefix=\"HUF\" bold={false} decimals={0} {...props} />\n  )\n  \n}\n\nexport default CardBusdValue\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport useAllEarnings from 'hooks/useAllEarnings'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport styled from 'styled-components'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport CardValue from './CardValue'\nimport CardForintValue from './CardForintValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst Block = styled.div`\n  margin-bottom: 24px;\n`\n\nconst CakeHarvestBalance = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const allEarnings = useAllEarnings()\n  const earningsSum = allEarnings.reduce((accum, earning) => {\n    const earningNumber = new BigNumber(earning)\n    if (earningNumber.eq(0)) {\n      return accum\n    }\n    return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n  }, 0)\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(cakePriceBusd).toNumber()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <Block>\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\n      {cakePriceBusd.gt(0) && <CardBusdValue value={earningsBusd} />}\n      {cakePriceBusd.gt(0) && <CardForintValue value={(357.95) *earningsBusd} />}\n    </Block>\n    \n  )\n}\n\nexport default CakeHarvestBalance\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { BigNumber } from 'bignumber.js'\nimport CardValue from './CardValue'\nimport CardForintValue from './CardForintValue'\nimport CardBusdValue from './CardBusdValue'\n\nconst CakeWalletBalance = () => {\n  const { t } = useTranslation()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const cakePriceBusd = usePriceCakeBusd()\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(cakePriceBusd).toNumber()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\n        {t('Locked')}\n      </Text>\n    )\n  }\n\n  return (\n    <>\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\n      {cakePriceBusd.gt(0) ? <CardBusdValue value={busdBalance} /> : <br />}\n      <CardForintValue value={(363.48) * busdBalance }  /> \n    </>\n  )\n}\n\nexport default CakeWalletBalance\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\nimport { harvest } from 'utils/callHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from './CakeHarvestBalance'\nimport CakeWalletBalance from './CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n background-position: center;\nbackground-repeat: no-repeat;\nbackground-size: cover;\n  min-height: 376px;\n   opacity: 0.92;\n\n    ) ;\n\n `\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 10px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 17px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\n\nconst FarmedStakingCard = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const farmsWithBalance = useFarmsWithBalance()\n  const masterChefContract = useMasterchef()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of balancesWithValue) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvest(masterChefContract, farmWithBalance.pid, account)\n      } catch (error) {\n        // TODO: find a way to handle when the user rejects transaction or it fails\n      }\n    }\n    setPendingTx(false)\n  }, [account, balancesWithValue, masterChefContract])\n\n  return (\n    <StyledFarmStakingCard>\n      <CardBody>\n        <Heading scale=\"xl\" mb=\"15px\" color=\"secondary\">\n          {t('Mining & Staking')}\n        </Heading>\n        <CardImage src=\"/images/tokens/VIZSLASWAP.png\" alt=\"VIZSLASWAP Logo\" width={64} height={64} />\n        <Block>\n          <Label>{t('VIZSLASWAP to Harvest')}:</Label>\n          <CakeHarvestBalance />\n        </Block>\n        <Block>\n          <Label>{t('VIZSLASWAP in Wallet')}:</Label>\n          <CakeWalletBalance />\n        </Block>\n        <Actions>\n          {account ? (\n            <Button\n              id=\"harvest-all\"\n              disabled={balancesWithValue.length <= 0 || pendingTx}\n              onClick={harvestAllFarms}\n              width=\"100%\"\n            >\n              {pendingTx\n                ? t('Collecting VIZSLASWAP')\n                : t('Harvest all (%count%)', {\n                    count: balancesWithValue.length,\n                  })}\n            </Button>\n          ) : (\n            <UnlockButton width=\"100%\" />\n          )}\n        </Actions>\n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default FarmedStakingCard\n","import React from 'react'\nimport { Card, CardBody, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useLpTokenPrice, usePriceCakeBusd } from 'state/hooks'\nimport CardValue from './CardValue'\nimport CardValueHuf from './CardValueHuf'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  opacity: 0.92;\n  max-height: 100%;\n`\nconst CardImage = styled.img`\n  margin-bottom: 10px;\n`\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n const Heading = styled.div`\n font-size: 38px;\n margin-bottom: 20px;\n color: ${({ theme }) => theme.colors.textSubtle};\n font-weight: 900;\n  `\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n   const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = eggPrice.times(circSupply);\n  const fullSupply = totalSupply ? totalSupply.minus(0) : new BigNumber(0);\n  const fullcap = eggPrice.times(fullSupply);\n  const vizprice = eggPrice.times(1000000000000000000);\n  const csupply = fullSupply.minus(burnedBalance);\n\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading>\n                  {t('VIZSLASWAP Stats')}\n\n        </Heading>\n        <CardImage src=\"/images/tokens/VIZSLASWAP.png\" alt=\"VIZSLASWAP Logo\" width={64} height={64} />\n\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Price')}</Text>\n          <CardValue fontSize=\"17px\" value={getBalanceNumber(vizprice)} decimals={3} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Market Cap')}</Text>\n          <CardValue fontSize=\"17px\" value={getBalanceNumber(fullcap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Total Supply')}</Text>\n          {totalSupply && <CardValue fontSize=\"17px\" value={getBalanceNumber(totalSupply)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Circulating Supply')}</Text>\n          {totalSupply && <CardValue fontSize=\"17px\" value={getBalanceNumber(csupply)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Total Burned')}</Text>\n          <CardValue fontSize=\"17px\"  value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n        <Row>\n        <Text fontSize=\"17px\" color='secondary'>{t('VIZSLASWAP/block')}</Text>\n          <CardValue fontSize=\"17px\" decimals={2} value={0.47} />\n        </Row>\n        <Row>\n        <Text fontSize=\"17px\" color='secondary'>{t('Active Pools')}</Text>\n          <CardValue fontSize=\"17px\" decimals={0} value={19} />\n        </Row>\n\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport { Card, CardBody, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { getCakeAddress, getHVIAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useLpTokenPrice, usePrice2, usePriceCakeBusd, usePriceHVIBusd} from 'state/hooks'\nimport CardValue from './CardValue'\n\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  opacity: 0.92;\n  max-height: 100%;\n`\nconst CardImage = styled.img`\nmargin-bottom: 10px;\n\n`\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n const Heading = styled.div`\n font-size: 38px;\n margin-bottom: 20px;\n color: ${({ theme }) => theme.colors.textSubtle};\n font-weight: 900;\n  `\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const totalSupplyHVI = usePrice2()\n  const burnedBalance = useBurnedBalance(getHVIAddress()).times(1000000000)\n   const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const fullSupply = totalSupply ? totalSupply.minus(0) : new BigNumber(0);\n  const fullcap = eggPrice.times(fullSupply);\n  const vizprice = eggPrice.times(fullcap);\n  const egggPrice = usePriceHVIBusd();\n  const HVIprice = egggPrice.times(1000000000000000000)\n  const HVImarketcap = HVIprice.times(10000000000000000000);\n  const Circulation = (totalSupplyHVI).minus(burnedBalance);\n  \n  return (\n    <StyledCakeStats>\n      <CardBody>\n        <Heading>\n                  {t('HVI Stats')}\n\n        </Heading>\n        <CardImage src=\"/images/tokens/HVI.png\" alt=\"VIZSLASWAP Logo\" width={64} height={64} />\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('HVI price')}</Text>\n          <CardValue fontSize=\"17px\" value={getBalanceNumber(HVIprice)} decimals={17} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Market Cap')}</Text>\n          <CardValue fontSize=\"17px\" value={getBalanceNumber(HVImarketcap)} decimals={0} prefix=\"$\" />\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Total Supply')}</Text>\n          {totalSupply && <CardValue fontSize=\"17px\" value={10000000000000000000} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Circulating Supply')}</Text>\n          {totalSupply && <CardValue fontSize=\"17px\" value={getBalanceNumber(Circulation)} decimals={0} />}\n        </Row>\n        <Row>\n          <Text fontSize=\"17px\" color='secondary'>{t('Total Burned')}</Text>\n          <CardValue fontSize=\"17px\" value={getBalanceNumber(burnedBalance)} decimals={0} />\n        </Row>\n\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport { Card, CardBody, Text } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useTranslation } from 'contexts/Localization'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useLpTokenPrice, usePriceCakeBusd } from 'state/hooks'\n \n\n\nconst StyledCakeStats = styled(Card)`\n  opacity: 0.92;\n  font-size: 40px;\n  max-width: 100%;\n height: 100%;\n color: ${({ theme }) => theme.colors.textSubtle};\n font-weight: 900;\n background-color: rgb(0,0,0);\n  margin-bottom: 8px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  font-size: 38px;\n  overflow: scroll;\n  max-width: 100%;\n height: 330px;\n color: ${({ theme }) => theme.colors.textSubtle};\n font-weight: 900;\n bottom: 10px;\n margin-top: 10px;\n`\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.contrast};\n  font-size: 14px;\n  text-align: right;\n`\n const Heading = styled.div`\n font-size: 38px;\n margin-bottom: 20px;\n max-width: 100%;\n height: 100%;\n overflow: scroll;\n color: ${({ theme }) => theme.colors.textSubtle};\n font-weight: 900;\n  `\nconst CakeStats = () => {\n  const { t } = useTranslation()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n   const eggPrice = usePriceCakeBusd();\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const marketCap = eggPrice.times(circSupply);\n\n  return (\n    <StyledCakeStats>\n      <CardBody>\n      {t('Announcements')} \n        <Row>\n        <a href=\"https://twitter.com/HunVizslainu/status/1527966906669580290\" target=\"blank\"> <img src=\"/images/banner22.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1527939001360973824\" target=\"blank\"> <img src=\"/images/banner21.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1527752914353242117\" target=\"blank\"> <img src=\"/images/banner20.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1527554135540879361\" target=\"blank\"> <img src=\"/images/banner19.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1527212830063304706\" target=\"blank\"> <img src=\"/images/banner18.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1526845919043506181\" target=\"blank\"> <img src=\"/images/banner17.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1526649490844827650\" target=\"blank\"> <img src=\"/images/banner16.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525959020162469896\" target=\"blank\"> <img src=\"/images/banner15.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525850216519311366\" target=\"blank\"> <img src=\"/images/banner14.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525840864467210240\" target=\"blank\"> <img src=\"/images/banner13.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525552858661363713\" target=\"blank\"> <img src=\"/images/banner12.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525447385484300288\" target=\"blank\"> <img src=\"/images/banner11.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        <a href=\"https://twitter.com/HunVizslainu/status/1525422887536058370\" target=\"blank\"> <img src=\"/images/banner10.png\" alt=\"hvi\" height=\"auto\" width=\"100%\" /></a>\n        </Row>\n      </CardBody>\n    </StyledCakeStats>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useLpTokenPrice, usePriceAPI1, usePriceBnbBusd, usePriceCakeBusd, usePriceHVIBusd} from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport CardValue from 'views/Home/components/CardValue'\nimport { useGetStats } from 'hooks/DEBANKAPI1'\nimport { useGetStats1 } from 'hooks/BSCAPI1'\nimport { useGetStats2 } from 'hooks/BSCAPI2'\nimport { useGetStats3 } from 'hooks/DEBANKAPI2'\nimport { useGetStats4 } from 'hooks/BSCAPI3'\nimport { useGetStats5 } from 'hooks/DEBANKAPI3'\nimport { useGetStats6 } from 'hooks/BSCAPI4'\nimport { useGetStats7 } from 'hooks/DEBANKAPI4'\nimport { useGetStats8 } from 'hooks/BSCAPI5'\nimport { useGetStats9 } from 'hooks/DEBANKAPI5'\nimport { useGetStats10 } from 'hooks/BSCAPI6'\nimport { useGetStats11 } from 'hooks/DEBANKAPI6'\nimport { useGetStats12 } from 'hooks/BSCAPI7'\nimport { useGetStats13 } from 'hooks/DEBANKAPI7'\nimport { useGetStats14 } from 'hooks/BSCAPI8'\nimport { useGetStats15 } from 'hooks/DEBANKAPI8'\n\nconst StyledTotalValueLockedCard = styled(Card)`\n  align-items: center;\n  flex: 1; \n  opacity: 0.85;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  height: 170px;\n      `\n  \nconst TotalValueLockedCard = () =>  {\n  const { t } = useTranslation()\n  const BusePrice = usePriceAPI1();\n  const data = useGetStats()\n  const data2 = useGetStats1()\n  const data3 = useGetStats2()\n  const data4 = useGetStats3()\n  const data5 = useGetStats4()\n  const data6 = useGetStats5()\n  const data7 = useGetStats6()\n  const data8 = useGetStats7()\n  const data9 = useGetStats8()\n  const data10 = useGetStats9()\n  const data11 = useGetStats10()\n  const data12 = useGetStats11()\n  const data13 = useGetStats12()\n  const data14 = useGetStats13()\n  const data15 = useGetStats14()\n  const data16 = useGetStats15()\n  const tvl = data ? data.price.toLocaleString('en-US')   : null\n  const tvl1 = data2 ? data2.result.toLocaleString('en-US',)   : null\n  const tvl2 = data3 ? data3.result.toLocaleString('en-US', )   : null\n  const tvl3 = data4 ? data4.price.toLocaleString('en-US', )   : null\n  const tvl4 = data5 ? data5.result.toLocaleString('en-US', )   : null\n  const tvl5 = data6 ? data6.price.toLocaleString('en-US',)   : null\n  const tvl6 = data7 ? data7.result.toLocaleString('en-US', )   : null\n  const tvl7 = data8 ? data8.price.toLocaleString('en-US', )   : null\n  const tvl8 = data9 ? data9.result.toLocaleString('en-US', )   : null\n  const tvl9 = data10 ? data10.price.toLocaleString('en-US', )   : null\n  const tvl10 = data11 ? data11.result.toLocaleString('en-US')   : null\n  const tvl11 = data12 ? data12.price.toLocaleString('en-US', )   : null\n  const tvl12 = data13 ? data13.result.toLocaleString('en-US', )   : null\n  const tvl13 = data14 ? data14.price.toLocaleString('en-US', )   : null\n  const tvl14 = data15 ? data15.result.toLocaleString('en-US',)   : null\n  const tvl15 = data16 ? data16.price.toLocaleString('en-US', )   : null\n  const CAP5 = BusePrice.times(tvl)\n  const CAP5A = CAP5.times(tvl1).div(1000000000000000000)\n  const CAP5B = BusePrice.times(tvl2)\n  const CAP5C = CAP5B.times(tvl3).div(1000000000000000000)\n  const CAP5E = BusePrice.times(tvl4)\n  const CAP5F = CAP5E.times(tvl5).div(1000000000000000000)\n  const CAP5G = BusePrice.times(tvl6)\n  const CAP5H = CAP5G.times(tvl7).div(1000000000000000000)\n  const CAP5I = BusePrice.times(tvl8)\n  const CAP5J = CAP5I.times(tvl9).div(1000000000000000000)\n  const CAP5K = BusePrice.times(tvl10)\n  const CAP5L = CAP5K.times(tvl11).div(1000000000000000000)\n  const CAP5M = BusePrice.times(tvl12)\n  const CAP5N = CAP5M.times(tvl13).div(1000000000000000000)\n  const CAP5O = BusePrice.times(tvl14)\n  const CAP5R = CAP5O.times(tvl15).div(1000000000000000000)\n  const full = CAP5A.plus(CAP5C).plus(CAP5F).plus(CAP5H).plus(CAP5J).plus(CAP5L).plus(CAP5N)\n  const full2 = full.decimalPlaces(2).times(2)\n\n  return (\n    <StyledTotalValueLockedCard >\n      <CardBody >\n        <Heading scale=\"lg\" mb=\"0px\" color=\"secondary\">\n          {t('Total Value Locked (TVL)')}\n        </Heading>\n        {data ? (\n          <>\n            <Heading  scale=\"xl\"  >{`$${full2}` } </Heading>\n            <Text color=\"textSubtle\">{t('Across all LPs')}</Text>\n          </>\n        ) : (\n          <Skeleton height={66} />\n        )}\n      </CardBody>\n    </StyledTotalValueLockedCard>\n  )\n}\n\nexport default TotalValueLockedCard\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats = () => {\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data \n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats1 = () => {\n  const [data2, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=NBYG3MAW876XDENZ9EF2NBH482UTTEV5PG')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data2\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats2 = () => {\n  const [data3, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x738156eAE2715776CBF92eD5751F7b8fc99951b7&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=Z6XDXK78A5RHSDYXFAR34RFWBBDNKRIDFH')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data3\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats3 = () => {\n  const [data4, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x738156eAE2715776CBF92eD5751F7b8fc99951b7')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data4\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats4 = () => {\n  const [data5, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x0388cc967e382A1c85161453bc6cEaA70E59E33e&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=CJUH69FWTMZMHW79IWQPUH2Y2IKYANZT21')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data5\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats5 = () => {\n  const [data6, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x0388cc967e382A1c85161453bc6cEaA70E59E33e')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data6\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats6 = () => {\n  const [data7, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=CJUH69FWTMZMHW79IWQPUH2Y2IKYANZT21')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data7\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats7 = () => {\n  const [data8, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data8\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats8 = () => {\n  const [data9, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x7b338aB42d823e50851f3C61d8374D83c4E0F71f&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=7K36W5M328YT6KSTY4EGMJBHYGH51R7ZUQ')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data9\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats9 = () => {\n  const [data10, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x7b338aB42d823e50851f3C61d8374D83c4E0F71f')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data10\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats10 = () => {\n  const [data11, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0xeb94c1EA54AD6367D414B0B2075950646D0B6266&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=7K36W5M328YT6KSTY4EGMJBHYGH51R7ZUQ')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data11\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats11 = () => {\n  const [data12, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0xeb94c1EA54AD6367D414B0B2075950646D0B6266')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data12\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats12 = () => {\n  const [data13, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=A2IJKDT9V2VTFP9CT11XUWHVGNNGK5M6KH')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data13\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats13 = () => {\n  const [data14, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data14\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  result : number\n}\n\nexport const useGetStats14 = () => {\n  const [data15, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.bscscan.com/api?module=account&action=tokenbalance&contractaddress=0x74E4716E431f45807DCF19f284c7aA99F18a4fbc&address=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&tag=latest&apikey=7K36W5M328YT6KSTY4EGMJBHYGH51R7ZUQ')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  \n  return data15\n}\n","import { useEffect, useState } from 'react'\n\n/* eslint-disable camelcase */\nexport interface DeBankTvlResponse {\n  amount : number\n  price : number  \n}\n\nexport const useGetStats15 = () => {\n  const [data16, setData] = useState<DeBankTvlResponse | null>(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://openapi.debank.com/v1/user/token?id=0x3FF00B58e432B0895e3fd69634Ec50e3931110c1&chain_id=bsc&token_id=0x74E4716E431f45807DCF19f284c7aA99F18a4fbc')\n        \n        const responseData: DeBankTvlResponse = await response.json()\n\n        setData(responseData)\n      } catch (error) {\n        console.error('Unable to fetch data:', error)\n      }\n    }\n\n    fetchData()\n  }, [setData])\n\n  return data16\n}\n","import React, { useEffect, useMemo, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon, Skeleton } from '@pancakeswap/uikit'\nimport max from 'lodash/max'\nimport { NavLink } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { useFarms, usePriceCakeBusd } from 'state/hooks'\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\nimport { getFarmApr } from 'utils/apr'\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 100%;\n\t}\n\t50% {\n\t\tbackground-position: 0% 0%;\n\t}\n\t100% {\n\t\tbackground-position: 100% 0%;\n\t}\n`\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground: linear-gradient(\n  240deg,\n  rgb(0,0,0) 0%,\n    rgb(0,0,0) 10%,\n    rgb(0, 0, 0)20%,\n    rgb(13, 36, 34) 30%,\n    rgb(18, 48, 46) 40%,\n    rgb(34,89,84) 50%,\n    rgb(18, 48, 46)60%,\n    rgb(13, 36, 34) 70%,\n    rgb(0, 0, 0) 80%,\n    rgb(0,0,0) 90%,\n    rgb(0,0,0) 100%);\n  );\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background-size: 500% 500%;\n  animation: ${RainbowLight} 2.5s linear infinite;\n  border-radius: 25px;\n  opacity: 0.88;\n  \n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n    \n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\nconst EarnAPRCard = () => {\n  const [isFetchingFarmData, setIsFetchingFarmData] = useState(true)\n  const { t } = useTranslation()\n  const { data: farmsLP } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const dispatch = useAppDispatch()\n\n  // Fetch farm data once to get the max APR\n  useEffect(() => {\n    const fetchFarmData = async () => {\n      try {\n        await dispatch(fetchFarmsPublicDataAsync(nonArchivedFarms.map((nonArchivedFarm) => nonArchivedFarm.pid)))\n      } finally {\n        setIsFetchingFarmData(false)\n      }\n    }\n\n    fetchFarmData()\n  }, [dispatch, setIsFetchingFarmData])\n\n  const highestApr = useMemo(() => {\n    if (cakePrice.gt(0)) {\n      const aprs = farmsLP.map((farm) => {\n        // Filter inactive farms, because their theoretical APR is super high. In practice, it's 0.\n        if (farm.pid !== 0 && farm.multiplier !== '0X' && farm.lpTotalInQuoteToken && farm.quoteToken.busdPrice) {\n          const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n          return getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity)\n        }\n        return null\n      })\n\n      const maxApr = max(aprs)\n      return maxApr?.toLocaleString('en-US', { maximumFractionDigits: 2 })\n    }\n    return null\n  }, [cakePrice, farmsLP])\n\n  const aprText = highestApr || '-'\n  const earnAprText = t('Earn up to %highestApr% APR in Mining', { highestApr: aprText })\n  const [earnUpTo, InFarms] = earnAprText.split(aprText)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/liquiditymining\" id=\"farm-apr-cta\">\n        <CardBody>\n          <Heading color=\"secondary\" scale=\"lg\">\n            {earnUpTo}\n          </Heading>\n          <CardMidContent color=\"text\">\n            {highestApr && !isFetchingFarmData ? (\n              `${highestApr}%`\n            ) : (\n              <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\n            )}\n          </CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"secondary\" scale=\"lg\">\n              {InFarms}\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"secondary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAPRCard\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport orderBy from 'lodash/orderBy'\nimport { Heading, Card, CardBody, Flex, ArrowForwardIcon } from '@pancakeswap/uikit'\nimport { NavLink } from 'react-router-dom'\nimport pools from 'config/constants/pools'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\n\nconst RainbowLight = keyframes`\n\t0% {\n\t\tbackground-position: 0% 100%;\n\t}\n\t50% {\n\t\tbackground-position: 0% 0%;\n\t}\n\t100% {\n\t\tbackground-position: 100% 0%;\n\t}\n`\n\nconst StyledFarmStakingCard = styled(Card)`\nbackground: linear-gradient(\n  240deg,\n  rgb(0,0,0) 0%,\n    rgb(0,0,0) 10%,\n    rgb(0, 0, 0)20%,\n    rgb(13, 36, 34) 30%,\n    rgb(18, 48, 46) 40%,\n    rgb(34,89,84) 50%,\n    rgb(18, 48, 46)60%,\n    rgb(13, 36, 34) 70%,\n    rgb(0, 0, 0) 80%,\n    rgb(0,0,0) 90%,\n    rgb(0,0,0) 100%);\n  );\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  background-size: 500% 500%;\n  animation: ${RainbowLight} 2.5s linear infinite;\n  border-radius: 25px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin: 0;\n    max-width: none;\n  }\n\n  transition: opacity 200ms;\n  &:hover {\n    opacity: 0.65;\n  }\n`\nconst CardMidContent = styled(Heading).attrs({ scale: 'xl' })`\n  line-height: 44px;\n`\n\nconst activeNonCakePools = pools.filter((pool) => !pool.isFinished && !pool.earningToken.symbol.includes('CAKE'))\nconst latestPools: Pool[] = orderBy(activeNonCakePools, ['sortOrder', 'pid'], ['desc', 'desc']).slice(0, 2)\n// Always include CAKE\nconst assets = [latestPools.map((pool) => pool.earningToken.symbol)].join(', ')\n\nconst EarnAssetCard = () => {\n  const { t } = useTranslation()\n  const assetText = t('Earn %assets% in Pools', { assets })\n  const [earn, InPools] = assetText.split(assets)\n\n  return (\n    <StyledFarmStakingCard>\n      <NavLink exact activeClassName=\"active\" to=\"/pools/all\" id=\"pool-cta\">\n        <CardBody>\n          <Heading color=\"secondary\" scale=\"lg\">\n            {earn}\n          </Heading>\n          <CardMidContent color=\"text\">{assets}</CardMidContent>\n          <Flex justifyContent=\"space-between\">\n            <Heading color=\"secondary\" scale=\"lg\">\n              {InPools}\n            </Heading>\n            <ArrowForwardIcon mt={30} color=\"primary\" />\n          </Flex>\n        </CardBody>\n      </NavLink>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default EarnAssetCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, BaseLayout } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Page from 'components/layout/Page'\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport CakeStats from 'views/Home/components/CakeStats'\nimport LotteryCard from 'views/Home/components/LotteryCard'\nimport HVIStats from  'views/Home/components/HVIStats'\nimport News from  'views/Home/components/News'\nimport TotalValueLockedCard from 'views/Home/components/TotalValueLockedCard'\nimport EarnAPRCard from 'views/Home/components/EarnAPRCard'\nimport EarnAssetCard from 'views/Home/components/EarnAssetCard'\n \nconst Hero = styled.div`\nalign-items: center;\nbackground-repeat: no-repeat;\nbackground-position: top center;\nbackground-image: url('images/banner1.jpg');\nbackground-size: 100% 100%;\nopacity: 0.92;\nborder-radius: 25px;\ndisplay: flex;\njustify-content: center;\nflex-direction: column;\nmargin: auto;\nmargin-bottom: 24px;\nmargin-top: 0px;\npadding-top: 115px;\ntext-align: center;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    height: 360px;\n    padding-top: 0;\n        background-position: left center, right center;\n }\n`\n\nconst Cards = styled(BaseLayout)`\n  align-items: stretch;\n  justify-content: stretch;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n    width: 100%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst CTACards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 24px;\n  grid-gap: 24px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 8;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-bottom: 32px;\n    grid-gap: 32px;\n\n    & > div {\n      grid-column: span 4;\n    }\n  }\n`\n\nconst Home: React.FC = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Page>\n      <Hero>\n        <Heading as=\"h1\" scale=\"xl\" mb=\"24px\" color=\"secondary\" >\n          {t('')}\n        </Heading>\n        <Text>{t('')}</Text>\n      </Hero>\n      <div>\n        <Cards>\n          <FarmStakingCard />\n          <News />\n          <CakeStats />\n          <HVIStats />\n         </Cards>\n         <CTACards>\n         <TotalValueLockedCard />\n          <EarnAPRCard />\n          <EarnAssetCard />\n         </CTACards>\n      \n      </div>\n    </Page>\n  )\n}\n\nexport default Home\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const web3 = useWeb3()\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      try {\n        const res = await contract.methods.balanceOf(account).call()\n        setBalanceState({ balance: new BigNumber(res), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n  \n}\n\nexport default CardBusdValue\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nmodule.exports = max;\n"],"sourceRoot":""}