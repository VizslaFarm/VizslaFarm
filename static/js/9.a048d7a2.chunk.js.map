{"version":3,"sources":["views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx","views/Voting/helpers.ts","utils/truncateWalletAddress.ts","views/Voting/config.ts"],"names":["VotingBox","styled","div","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","BreadcrumbLink","Link","primaryBright","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","toFormat","alignItems","justifyContent","textAlign","initialState","verificationHash","BIG_ZERO","useGetVotingPower","block","isActive","useWeb3React","account","useState","votingPower","setVotingPower","isLoading","setIsLoading","useEffect","a","simpleRpcProvider","getBlockNumber","blockNumber","getActivePools","eligiblePools","poolAddresses","map","contractAddress","getAddress","getVotingPower","prevVotingPower","BigNumber","fetchVotingPower","Table","table","text","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","length","tag","size","key","call","BaseLabel","label","Label","SecondaryLabel","FormError","children","FormErrors","errors","mt","error","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","choices","hasMinimumChoices","filter","choice","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","EasyMde","lazy","CreateProposal","name","body","times","startDate","startTime","endDate","endTime","snapshot","state","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","library","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","proposal","JSON","stringify","generatePayloadData","SnapshotCommand","PROPOSAL","payload","start","end","metadata","generateMetaData","signMessage","sig","msg","address","sendSnaphotData","data","ipfsHash","message","console","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","ADMIN_ADDRESS","Container","py","to","onSubmit","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanLink","truncateWalletAddress","endIcon","spin","isEmpty","count","VOTE_THRESHOLD","ConnectWalletButton","isCoreProposal","author","toLowerCase","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","plugins","network","strategies","params","symbol","getCakeAddress","decimals","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","Error","error_description","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","getTotalFromVotes","power","plus","startLength","endLength","substring","PROPOSALS_TO_SHOW","IPFS_GATEWAY"],"mappings":"kPAIaA,EAAYC,IAAOC,IAAV,wNAEA,qBAAGC,MAAkBC,OAAOC,cASrCC,EAAiC,SAACC,GAC7C,OAAO,cAAC,IAAD,aAAKC,GAAG,OAAOC,SAAS,SAAYF,M,8DCbvCG,EAAiBT,YAAOU,IAAPV,CAAH,2CACT,qBAAGE,MAAkBC,OAAOQ,iBAGxBF,O,+CCLTG,E,KAASZ,EAAOC,IAAV,yLAMR,qBAAGC,MAAkBW,aAAaC,MAKvBF,O,kCCbf,yCA8EeG,IA/DiC,SAAC,GAO1C,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAC,EACI,EADJA,iBAEQC,EAAMC,cAAND,EAER,OACE,eAAC,IAAD,CAAYf,GAAG,IAAf,UACE,cAAC,KAAD,CAAMiB,GAAG,IAAIjB,GAAG,OAAOkB,SAAS,OAAOC,MAAM,aAA7C,SACGJ,EACC,qKAGJ,cAAC,KAAD,CAAMI,MAAM,YAAYC,cAAc,YAAYpB,GAAG,MAAMqB,MAAI,EAACH,SAAS,OAAzE,SACGH,EAAE,cAEL,eAAC,IAAD,WACE,cAAC,KAAD,CAAMI,MAAM,YAAZ,SAAyBJ,EAAE,uBAC3B,cAAC,KAAD,CAAMM,MAAI,EAACH,SAAS,OAApB,SACGT,EAAMa,SAAS,QAGpB,cAAC,KAAD,CAAMH,MAAM,YAAYC,cAAc,YAAYpB,GAAG,MAAMqB,MAAI,EAACH,SAAS,OAAzE,SACGH,EAAE,wBAEL,eAAC,IAAD,CAAMQ,WAAW,SAASC,eAAe,gBAAgBxB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAaD,SAAS,OAAlC,SACGH,EAAE,YAEL,cAAC,KAAD,CAAMU,UAAU,QAAhB,SAAyBf,EAAYY,SAAS,QAEhD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBxB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAaD,SAAS,OAAlC,SACGH,EAAE,sBAEL,cAAC,KAAD,CAAMU,UAAU,QAAhB,SAAyBb,EAAgBU,SAAS,QAEpD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBxB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAaD,SAAS,OAAlC,SACGH,EAAE,oBAEL,cAAC,KAAD,CAAMU,UAAU,QAAhB,SAAyBd,EAAiBW,SAAS,QAErD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBxB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAaD,SAAS,OAAlC,SACGH,EAAE,uBAEL,cAAC,KAAD,CAAMU,UAAU,QAAhB,SAAyBZ,EAAaS,SAAS,QAEjD,eAAC,IAAD,CAAMC,WAAW,SAASC,eAAe,gBAAgBxB,GAAG,MAA5D,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAaD,SAAS,OAAlC,SACGH,EAAE,iBAEL,cAAC,KAAD,CAAMU,UAAU,QAAhB,SAAyBX,EAAiBQ,SAAS,a,sJCrDrDI,EAAsB,CAC1BC,iBAAkB,KAClBjB,YAAakB,IACbjB,iBAAkBiB,IAClBhB,gBAAiBgB,IACjBf,aAAce,IACdd,iBAAkBc,IAClBnB,MAAOmB,KAmDMC,IAhDW,SAACC,GAAqE,IAArDC,IAAoD,yDAC7F,EAAoBC,cAAZC,EAAR,EAAQA,QACR,EAAsCC,mBAASR,GAA/C,mBAAOS,EAAP,KAAoBC,EAApB,KACA,EAAkCF,qBAAWD,GAA7C,mBAAOI,EAAP,KAAkBC,EAAlB,KA0CA,OAxCAC,qBAAU,WAmCJN,GAAWF,GAlCO,uCAAG,gDAAAS,EAAA,yDACvBF,GAAa,GADU,cAIDR,EAJC,qCAIeW,IAAkBC,iBAJjC,iCAIfC,EAJe,eAKOC,YAAeD,GALtB,eAKfE,EALe,OAMfC,EAAgBD,EAAcE,KAAI,gBAAGC,EAAH,EAAGA,gBAAH,OAAyBC,YAAWD,MANvD,UAeXE,YAAejB,EAASa,EAAeH,GAf5B,iBAQnBjC,EARmB,EAQnBA,YACAI,EATmB,EASnBA,iBACAF,EAVmB,EAUnBA,gBACAH,EAXmB,EAWnBA,MACAI,EAZmB,EAYnBA,aACAF,EAbmB,EAanBA,iBACAgB,EAdmB,EAcnBA,iBAGEI,GACFK,GAAe,SAACe,GAAD,mBAAC,eACXA,GADU,IAEbxB,mBACAjB,YAAa,IAAI0C,IAAU1C,GAC3BI,iBAAkB,IAAIsC,IAAUtC,GAChCF,gBAAiB,IAAIwC,IAAUxC,GAC/BC,aAAc,IAAIuC,IAAUvC,GAC5BF,iBAAkB,IAAIyC,IAAUzC,GAChCF,MAAO,IAAI2C,IAAU3C,QA1BJ,yBA8BrB6B,GAAa,GA9BQ,2EAAH,oDAmCpBe,KAED,CAACpB,EAASH,EAAOM,EAAgBL,EAAUO,IAEvC,2BAAKH,GAAZ,IAAyBE,gB,6HCrErBiB,EAAQ7D,IAAO8D,MAAV,mJAOE,qBAAG5D,MAAkBC,OAAO4D,QAKnCC,EAAkBhE,IAAOC,IAAV,gIACV,qBAAGC,MAAkBC,OAAO4D,QAiBjCE,EAAQ,SAAC3D,GACb,OAAO,cAAC,IAAD,aAASkB,GAAG,KAAK0C,MAAM,KAAKC,GAAG,QAAW7D,KAuBpC8D,EApB2D,CACxEC,GAAIJ,EACJK,GAAIL,EACJM,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJU,EAAG,SAACrE,GACF,OAAO,cAAC,KAAD,aAAMkB,GAAG,IAAI2C,GAAG,QAAW7D,KAEpCwD,MAAOD,EACPe,GAAI,SAACtE,GACH,OAAO,cAAC0D,EAAD,aAAiBxC,GAAG,MAASlB,KAEtCuE,GAAI,SAACvE,GACH,OAAO,cAAC0D,EAAD,aAAiBxC,GAAG,MAASlB,KAEtCwE,IA7BU9E,IAAO8E,IAAV,iIACE,qBAAG5E,MAAkBC,OAAO4D,SCnBxBgB,IAJuC,SAACzE,GACrD,OAAO,cAAC,IAAD,aAAkB0E,cAAe,CAACC,KAAMC,WAAYd,GAAwB9D,M,qBCNrF,IAAI6E,EAAWC,EAAQ,KACnBC,EAASD,EAAQ,KACjBE,EAAcF,EAAQ,KACtBG,EAAUH,EAAQ,KAClBI,EAAcJ,EAAQ,KACtBK,EAAWL,EAAQ,KACnBM,EAAcN,EAAQ,KACtBO,EAAeP,EAAQ,KAUvBQ,EAHcC,OAAOC,UAGQF,eA2DjCG,EAAOC,QAxBP,SAAiBC,GACf,GAAa,MAATA,EACF,OAAO,EAET,GAAIT,EAAYS,KACXV,EAAQU,IAA0B,iBAATA,GAA4C,mBAAhBA,EAAMC,QAC1DT,EAASQ,IAAUN,EAAaM,IAAUX,EAAYW,IAC1D,OAAQA,EAAME,OAEhB,IAAIC,EAAMf,EAAOY,GACjB,GApDW,gBAoDPG,GAnDO,gBAmDUA,EACnB,OAAQH,EAAMI,KAEhB,GAAIX,EAAYO,GACd,OAAQd,EAASc,GAAOE,OAE1B,IAAK,IAAIG,KAAOL,EACd,GAAIL,EAAeW,KAAKN,EAAOK,GAC7B,OAAO,EAGX,OAAO,I,+TCrEHE,EAAYxG,IAAOyG,MAAV,0GACJ,qBAAGvG,MAAkBC,OAAO4D,QAM1B2C,EAAQ1G,YAAOwG,EAAPxG,CAAH,gDAIL2G,EAAiB3G,YAAOwG,EAAPxG,CAAH,8EAKd4G,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjC,cAAC,KAAD,CAAMnF,MAAM,UAAUnB,GAAG,MAAzB,SACGsG,KAIQC,EAA6C,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3D,OACE,cAAC,IAAD,CAAKC,GAAG,MAAR,SACGD,EAAOzD,KAAI,SAAC2D,GACX,OAAO,cAAC,EAAD,UAAwBA,GAARA,S,+DCIhBC,EA1BuB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,YAAgB9G,EAAY,iBAC7E,EAAkCmC,oBAAS,GAA3C,mBAAO4E,EAAP,KAAkBC,EAAlB,KACA,EAA8B7E,oBAAS,GAAvC,mBAAO8E,EAAP,KAAgBC,EAAhB,KAUA,OACE,eAAC,IAAD,CAAKC,SAAS,WAAWlH,GAAG,OAA5B,UACE,cAAC,KAAD,2BAAWD,GAAX,IAAkBoH,SAVD,SAACC,GACpB,IAAQ1B,EAAU0B,EAAIC,cAAd3B,MAERqB,EAAaC,GAA4B,IAAjBtB,EAAME,QAC9BqB,GAAW,GACXJ,EAAYnB,IAKgCoB,UAAWA,KACpDF,GACC,cAAC,IAAD,CAAKM,SAAS,WAAWI,MAAM,MAAMC,IAAI,MAAMC,OAAQ,GAAvD,SACE,cAAC,KAAD,CAAYC,QAAQ,OAAOC,QAASd,EAApC,SACE,cAAC,IAAD,YCTCe,EAAa,iBAAe,CAAEC,GAAIC,MAAYnC,MAAO,KAoDnDoC,EAlDyB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASZ,EAAe,EAAfA,SAC1CpG,EAAMC,cAAND,EACFiH,EAAoBD,EAAQE,QAAO,SAACC,GAAD,OAAYA,EAAOxC,MAAME,OAAS,KAAGA,QALjD,EAW7B,OACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAS3E,GAAG,KAAK0C,MAAM,KAAvB,SACG5C,EAAE,eAGP,eAAC,IAAD,WACGgH,EAAQhF,KAAI,WAAgBoF,GAAW,IAAxBP,EAAuB,EAAvBA,GAAIlC,EAAmB,EAAnBA,MAclB,OACE,cAAC,EAAD,CAEE/B,MAAM,KACNkD,YAjBoB,SAACuB,GACvB,IAAMC,EAAU,YAAON,GACjBO,EAAcD,EAAWE,WAAU,SAACC,GAAD,OAAeA,EAAUZ,KAAOA,KAEzES,EAAWC,GAAa5C,MAAQ0C,EAEhCjB,EAASkB,IAYPI,YAAa1H,EAAE,qBACf2E,MAAOA,EACPkB,SAAUuB,EAAQ,EAXD,WACnBhB,EAASY,EAAQE,QAAO,SAACS,GAAD,OAAmBA,EAAcd,KAAOA,YAUzBe,GALhCf,MAUX,cAAC,IAAD,CAAQgB,KAAK,SAASlB,QAtCV,WAChBP,EAAS,GAAD,mBAAKY,GAAL,CAAcJ,QAqCwBkB,UAAWb,EAArD,SACGjH,EAAE,uB,2BCzDA+H,GAAqB,SAACC,EAAYC,GAC7C,IAAKC,kBAAQF,KAAUE,kBAAQD,GAC7B,OAAO,KAGT,IAAME,EAAUC,kBAAOJ,EAAM,cACvBK,EAAUD,kBAAOH,EAAM,YAE7B,OAAOK,kBAAS,GAAD,OAAIH,EAAJ,YAAeE,IAAWE,UAAY,K,yCCqCxCC,GAvC2C,SAAC,GAA0B,IAAxBzH,EAAuB,EAAvBA,MAAO0H,EAAgB,EAAhBA,UAC1DzI,EAAMC,cAAND,EACR,EAAsCmB,oBAAS,GAA/C,mBAAOuH,EAAP,KAAoBC,EAApB,KACA,EACE7H,aAAkBC,EAAO2H,GADnBpH,EAAR,EAAQA,UAAW5B,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,iBAAkBC,EAAzD,EAAyDA,gBAAiBC,EAA1E,EAA0EA,aAAcC,EAAxF,EAAwFA,iBAEhFnB,EAAUgK,eAAVhK,MAOR,OACE,cAAC,KAAD,CAAOiK,MAAO7I,EAAE,gBAAiByI,UANb,WACpBE,GAAe,GACfF,KAI2DK,iBAAkBlK,EAAMC,OAAOkK,UAAUC,WAApG,SACE,cAAC,IAAD,CAAK/J,GAAG,OAAOgK,MAAM,QAArB,SACG3H,EACC,cAAC,IAAD,CAAM4H,OAAO,QAAQ1I,WAAW,SAASC,eAAe,SAAxD,SACE,cAAC,KAAD,CAASsE,KAAM,OAGjB,qCACE,cAACtF,GAAA,EAAD,CACEC,MAAOA,EACPC,YAAaA,EACbC,iBAAkBA,EAClBC,gBAAiBA,EACjBC,aAAcA,EACdC,iBAAkBA,IAEpB,cAAC,IAAD,CAAQ2G,QAAQ,YAAYC,QAAS8B,EAAWQ,MAAM,OAAOvD,GAAG,OAAhE,SACG1F,EAAE,mBCCXmJ,GAAUC,gBAAK,kBAAM,yDAqQZC,UAnQQ,WACrB,MAA0BlI,mBAAoB,CAC5CmI,KAAM,GACNC,KAAM,GACNvC,QAASwC,IHhCkB,GGgCKxH,IAAI4E,GACpC6C,UAAW,KACXC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,SAAU,IARZ,mBAAOC,EAAP,KAAcC,EAAd,KAUA,EAAkC5I,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAqC,IAA3E,mBAAO6I,EAAP,KAAoBC,EAApB,KACQjK,EAAMC,cAAND,EACAkB,EAAYD,cAAZC,QACFgJ,EAAeC,cACbC,EAASC,cAATD,KACAE,EAAYC,cAAZD,QACR,EAAqCE,cAA7BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WACtB,GAAoCC,aAAS,cAAC,GAAD,CAAkB5J,MAAO+I,EAAMD,YAArEe,GAAP,qBACQtB,GAA0EQ,EAA1ER,KAAMC,GAAoEO,EAApEP,KAAMvC,GAA8D8C,EAA9D9C,QAASyC,GAAqDK,EAArDL,UAAWC,GAA0CI,EAA1CJ,UAAWC,GAA+BG,EAA/BH,QAASC,GAAsBE,EAAtBF,QAASC,GAAaC,EAAbD,SAC/DgB,GFjDqB,SAACC,EAAqB9K,GACjD,IAAQsJ,EAA0EwB,EAA1ExB,KAAMC,EAAoEuB,EAApEvB,KAAMvC,EAA8D8D,EAA9D9D,QAASyC,EAAqDqB,EAArDrB,UAAWC,EAA0CoB,EAA1CpB,UAAWC,EAA+BmB,EAA/BnB,QAASC,EAAsBkB,EAAtBlB,QAASC,EAAaiB,EAAbjB,SAC/DpE,EAAsC,GAEvC6D,IACH7D,EAAO6D,KAAO,CAACtJ,EAAE,sBAAuB,CAAE+K,MAAO,YAG9CxB,IACH9D,EAAO8D,KAAO,CAACvJ,EAAE,sBAAuB,CAAE+K,MAAO,WAG/C/D,EAAQnC,ODZiB,ICa3BY,EAAOuB,QAAU,CAAChH,EAAE,2CAA4C,CAAEgL,IDbvC,MCgB7B,IAAMC,EAAiBjE,EAAQkE,MAAK,SAAC/D,GAAD,OAAaA,EAAOxC,SDhB3B,ICiBzBqC,EAAQnC,QAA8BoG,IACxCxF,EAAOuB,QAAUmE,MAAMlH,QAAQwB,EAAOuB,SAArB,sBACTvB,EAAOuB,SADE,CACOhH,EAAE,+BACrByF,EAAOuB,QAAU,CAAChH,EAAE,+BAGtBkI,kBAAQuB,KACXhE,EAAOgE,UAAY,CAACzJ,EAAE,gCAGnBkI,kBAAQwB,KACXjE,EAAOiE,UAAY,CAAC1J,EAAE,gCAGnBkI,kBAAQyB,KACXlE,EAAOkE,QAAU,CAAC3J,EAAE,gCAGjBkI,kBAAQ0B,KACXnE,EAAOmE,QAAU,CAAC5J,EAAE,gCAGtB,IAAMoL,EAAqBrD,GAAmB0B,EAAWC,GAazD,OAZyB3B,GAAmB4B,EAASC,GAE9BwB,IACrB3F,EAAOkE,QAAUwB,MAAMlH,QAAQwB,EAAOkE,SAArB,sBACTlE,EAAOkE,SADE,CACO3J,EAAE,2CACrByF,EAAOkE,QAAU,CAAC3J,EAAE,2CAGV,IAAb6J,IACFpE,EAAOoE,SAAW,CAAC7J,EAAE,sBAGhByF,EEHY4F,CAAcvB,EAAO9J,GAElCsL,GAAY,uCAAG,WAAOjF,GAAP,qBAAA5E,EAAA,6DACnB4E,EAAIkF,iBADe,SAIjBhK,GAAa,GACPiK,EAAWC,KAAKC,UAAL,2BACZC,eADY,IAEf9D,KAAM+D,IAAgBC,SACtBC,QAAS,CACPxC,QACAC,QACAM,YACAkC,MAAOhE,GAAmB0B,GAAWC,IACrCsC,IAAKjE,GAAmB4B,GAASC,IACjC5C,QAASA,GACNE,QAAO,SAACC,GAAD,OAAYA,EAAOxC,SAC1B3C,KAAI,SAACmF,GACJ,OAAOA,EAAOxC,SAElBsH,SAAUC,cACVrE,KAAM,oBApBO,SAwBCsE,YAAY7B,EAASpJ,EAASsK,GAxB/B,YAwBXY,EAxBW,gCA2BTC,EAAe,CAAEC,QAASpL,EAASmL,IAAKb,EAAUY,OA3BzC,UA8BIG,YAAgBF,GA9BpB,QA8BTG,EA9BS,OAiCfpC,EAAK,oBAAD,OAAqBoC,EAAKC,WAE9BhC,EAAazK,EAAE,sBAnCA,wBAqCf0K,EAAW1K,EAAE,SAAUA,EAAE,2BArCV,0DAwCjB0K,EAAW1K,EAAE,UAAU,uCAAO0M,WAAP,kCAAkB,KAAO/G,QAChDgH,QAAQhH,MAAR,MACApE,GAAa,GA1CI,0DAAH,sDA8CZqL,GAAc,SAAC5H,EAAaL,GAChCoF,GAAS,SAAC8C,GAAD,mBAAC,eACLA,GADI,kBAEN7H,EAAML,OAITsF,GAAe,SAAC6C,GAAD,mBAAC,eACXA,GADU,kBAEZ9H,GAAM,QAiBL+H,GAAmB,SAAC/H,GAAD,OAAiB,SAACL,GACzCiI,GAAY5H,EAAKL,KAGbqI,GAAUC,mBACd,iBAAO,CACLC,UAAWhM,IAAYiM,KAAgB,GAAK,CAAC,QAAS,aAAc,UAAW,eAAgB,YAEjG,CAACjM,IAYH,OATAM,qBAAU,WACJ0I,EAAe,GACjBH,GAAS,SAAC8C,GAAD,mBAAC,eACLA,GADI,IAEPhD,SAAUK,SAGb,CAACA,EAAcH,IAGhB,eAACqD,EAAA,EAAD,CAAWC,GAAG,OAAd,UACE,cAAC,IAAD,CAAKpO,GAAG,OAAR,SACE,eAAC,IAAD,WACE,cAACE,EAAA,EAAD,CAAgBmO,GAAG,IAAnB,SAAwBtN,EAAE,UAC1B,cAACb,EAAA,EAAD,CAAgBmO,GAAG,UAAnB,SAA8BtN,EAAE,YAChC,cAAC,KAAD,UAAOA,EAAE,0BAGb,sBAAMuN,SAAUjC,GAAhB,SACE,eAAChM,EAAA,EAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKL,GAAG,OAAR,UACE,cAACmG,EAAD,CAAOoI,QAAQ,OAAf,SAAuBxN,EAAE,WACzB,cAAC,KAAD,CAAO6G,GAAG,OAAOyC,KAAK,OAAO3E,MAAO2E,GAAM1G,MAAM,KAAKwD,SA/C5C,SAACC,GACpB,MAAmCA,EAAIC,cAAzBmH,EAAd,EAAQnE,KAAiB3E,EAAzB,EAAyBA,MACzBiI,GAAYa,EAAW9I,IA6CgE+I,UAAQ,IACpF7C,GAAWvB,MAAQU,EAAYV,MAAQ,cAAC,EAAD,CAAY7D,OAAQoF,GAAWvB,UAEzE,eAAC,IAAD,CAAKrK,GAAG,OAAR,UACE,cAACmG,EAAD,CAAOoI,QAAQ,OAAf,SAAuBxN,EAAE,aACzB,cAAC,KAAD,CAAMI,MAAM,aAAanB,GAAG,MAA5B,SACGe,EAAE,6BAEL,cAACmJ,GAAD,CACEtC,GAAG,OACHyC,KAAK,OACLqE,aArDc,SAAChJ,GAC3BiI,GAAY,OAAQjI,IAqDRA,MAAO4E,GACPyD,QAASA,GACTU,UAAQ,IAET7C,GAAWtB,MAAQS,EAAYT,MAAQ,cAAC,EAAD,CAAY9D,OAAQoF,GAAWtB,UAExEA,IACC,cAAC,IAAD,CAAKtK,GAAG,OAAR,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASiB,GAAG,KAAK0C,MAAM,KAAvB,SACG5C,EAAE,eAGP,cAAC,IAAD,CAAUqD,EAAE,IAAIuK,GAAG,OAAnB,SACE,cAACnK,EAAA,EAAD,UAAgB8F,YAKxB,cAAC,EAAD,CAASvC,QAASA,GAASZ,SAtEV,SAACkB,GAC1BsF,GAAY,UAAWtF,MAsEduD,GAAW7D,SAAWgD,EAAYhD,SAAW,cAAC,EAAD,CAAYvB,OAAQoF,GAAW7D,aAE/E,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAS9G,GAAG,KAAK0C,MAAM,KAAvB,SACG5C,EAAE,eAGP,eAAC,IAAD,WACE,eAAC,IAAD,CAAKf,GAAG,OAAR,UACE,cAACoG,EAAD,UAAiBrF,EAAE,gBACnB,cAAC6N,EAAA,EAAD,CACEvE,KAAK,YACLlD,SAAU2G,GAAiB,aAC3Be,SAAUrE,GACVsE,gBAAgB,eAEjBlD,GAAWpB,WAAaO,EAAYP,WAAa,cAAC,EAAD,CAAYhE,OAAQoF,GAAWpB,eAEnF,eAAC,IAAD,CAAKxK,GAAG,OAAR,UACE,cAACoG,EAAD,UAAiBrF,EAAE,gBACnB,cAAC,IAAD,CACEsJ,KAAK,YACLlD,SAAU2G,GAAiB,aAC3Be,SAAUpE,GACVqE,gBAAgB,UAEjBlD,GAAWnB,WAAaM,EAAYN,WAAa,cAAC,EAAD,CAAYjE,OAAQoF,GAAWnB,eAEnF,eAAC,IAAD,CAAKzK,GAAG,OAAR,UACE,cAACoG,EAAD,UAAiBrF,EAAE,cACnB,cAAC6N,EAAA,EAAD,CACEvE,KAAK,UACLlD,SAAU2G,GAAiB,WAC3Be,SAAUnE,GACVoE,gBAAgB,eAEjBlD,GAAWlB,SAAWK,EAAYL,SAAW,cAAC,EAAD,CAAYlE,OAAQoF,GAAWlB,aAE/E,eAAC,IAAD,CAAK1K,GAAG,OAAR,UACE,cAACoG,EAAD,UAAiBrF,EAAE,cACnB,cAAC,IAAD,CACEsJ,KAAK,UACLlD,SAAU2G,GAAiB,WAC3Be,SAAUlE,GACVmE,gBAAgB,UAEjBlD,GAAWjB,SAAWI,EAAYJ,SAAW,cAAC,EAAD,CAAYnE,OAAQoF,GAAWjB,aAE9E1I,GACC,eAAC,IAAD,CAAMV,WAAW,SAASvB,GAAG,MAA7B,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAa4N,GAAG,OAA5B,SACGhO,EAAE,aAEL,cAAC,KAAD,CAAciO,KAAMC,YAAehN,EAAS,WAA5C,SACGiN,YAAsBjN,QAI7B,eAAC,IAAD,CAAMV,WAAW,SAASvB,GAAG,OAA7B,UACE,cAAC,KAAD,CAAMmB,MAAM,aAAa4N,GAAG,OAA5B,SACGhO,EAAE,cAEL,cAAC,KAAD,CAAciO,KAAMC,YAAerE,GAAU,SAA7C,SAAwDA,QAEzD3I,EACC,qCACE,cAAC,IAAD,CACE2G,KAAK,SACLoB,MAAM,OACN3H,UAAWA,EACX8M,QAAS9M,EAAY,cAAC,IAAD,CAAe+M,MAAI,EAACjO,MAAM,iBAAoB,KACnE0H,UAAWwG,IAAQzD,IACnB5L,GAAG,OANL,SAQGe,EAAE,aAEL,eAAC,KAAD,CAAMI,MAAM,UAAUF,GAAG,IAAIjB,GAAG,MAAhC,UACGe,EAAE,gEAAiE,CAAEuO,MAAOC,OAAmB,OAElG,cAAC,IAAD,CAAQ5L,MAAM,KAAKiF,KAAK,SAASnB,QAAQ,OAAOC,QAASiE,GAA2BvH,EAAG,EAAvF,SACGrD,EAAE,2BAIP,cAACyO,EAAA,EAAD,CAAqBxF,MAAM,OAAOpB,KAAK,6B,2cC5R5C6G,EAAiB,SAAClD,GAC7B,OAAOA,EAASmD,OAAOC,gBAAkBzB,IAAcyB,eAG5CC,EAAwB,SAACC,EAAuBC,GAC3D,OAAQA,GACN,KAAKC,IAAaC,UAChB,OAAOH,EAAU5H,QAAO,SAACsE,GAAD,OAAekD,EAAelD,MACxD,KAAKwD,IAAaE,KAChB,OAAOJ,EAAU5H,QAAO,SAACsE,GAAD,OAAckD,EAAelD,MACvD,KAAKwD,IAAaG,IAClB,QACE,OAAOL,IAIAM,EAAyB,SAACN,EAAuBhF,GAC5D,OAAOgF,EAAU5H,QAAO,SAACsE,GAAD,OAAcA,EAAS1B,QAAUA,MAY9CoC,EAAmB,WAC9B,MAAO,CACLmD,QAAS,GACTC,QAAS,GACTC,WAAY,CAAC,CAAEjG,KAAM,OAAQkG,OAAQ,CAAEC,OAAQ,OAAQnD,QAASoD,cAAkBC,SAAU,QAOnFhE,EAAsB,WACjC,MAAO,CACLiE,QAASC,IACTC,WAAYC,KAAKC,MAAQ,KAAKC,UAC9BC,MAAOC,MAOE5D,EAAe,uCAAG,WAAOG,GAAP,mBAAAjL,EAAA,sEACN2O,MAAMC,IAAkB,CAC7CC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBjH,KAAMkC,KAAKC,UAAUgB,KAPM,WACvB+D,EADuB,QAUfC,GAVe,gCAWPD,EAASE,OAXF,aAWrBhL,EAXqB,OAYrB,IAAIiL,MAAJ,OAAUjL,QAAV,IAAUA,OAAV,EAAUA,EAAOkL,mBAZI,wBAeVJ,EAASE,OAfC,eAevBnE,EAfuB,yBAgBtBA,GAhBsB,4CAAH,sDAmBfrK,EAAc,uCAAG,WAAOjB,EAAiBa,EAAyBhB,GAAjD,mBAAAU,EAAA,8DACRV,EADQ,qCACQW,IAAkBC,iBAD1B,iCACtBC,EADsB,cAELwO,MAAM,GAAD,OAAIU,IAAJ,UAAiC,CAC3DR,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBhH,KAAMkC,KAAKC,UAAU,CACnBY,QAASpL,EACTH,MAAOa,EACPG,oBAVwB,cAEtB0O,EAFsB,iBAaTA,EAASE,OAbA,eAatBnE,EAbsB,yBAcrBA,EAAKA,MAdgB,4CAAH,0DAiBduE,EAAuB,SAACC,GACnC,OAAOA,EAAMC,QAAO,SAACC,EAAOC,GAC1B,IAAMC,EAAaD,EAAK3F,SAASxE,QAAQmK,EAAKhK,OAAS,GAEvD,OAAO,2BACF+J,GADL,kBAEGE,EAAaF,EAAME,GAAN,sBAAwBF,EAAME,IAA9B,CAA2CD,IAAQ,CAACA,OAEnE,KAGQE,EAAoB,SAACL,GAChC,OAAOA,EAAMC,QAAO,SAACC,EAAOC,GAAU,IAAD,EAC7BG,EAAQ,IAAIjP,IAAJ,UAAc8O,EAAKlF,gBAAnB,aAAc,EAAe7K,aAC3C,OAAO8P,EAAMK,KAAKD,KACjBzQ,O,iCCvGUsN,IAJe,SAAC7B,GAAqD,IAApCkF,EAAmC,uDAArB,EAAGC,EAAkB,uDAAN,EAC3E,MAAM,GAAN,OAAUnF,EAAQoF,UAAU,EAAGF,GAA/B,cAAiDlF,EAAQoF,UAAUpF,EAAQzH,OAAS4M,M,iCCJtF,4MAAO,IAAME,EAAoB,GACpBxE,EAAgB,6CAChByE,EAAe,+BACf/B,EAAmB,QACnBM,EAAgB,eAChB3B,EAAiB","file":"static/js/9.a048d7a2.chunk.js","sourcesContent":["import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst BreadcrumbLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.primaryBright};\n`\n\nexport default BreadcrumbLink\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: BigNumber\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of CAKE you held at the block detailed below. CAKE held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {total.toFormat(3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto CAKE Pool')}\n        </Text>\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other Syrup Pools')}\n        </Text>\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('CAKE BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: BigNumber\n  cakeVaultBalance: BigNumber\n  cakePoolBalance: BigNumber\n  poolsBalance: BigNumber\n  cakeBnbLpBalance: BigNumber\n  total: BigNumber\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: BIG_ZERO,\n  cakeVaultBalance: BIG_ZERO,\n  cakePoolBalance: BIG_ZERO,\n  poolsBalance: BIG_ZERO,\n  cakeBnbLpBalance: BIG_ZERO,\n  total: BIG_ZERO,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: new BigNumber(cakeBalance),\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\n            cakePoolBalance: new BigNumber(cakePoolBalance),\n            poolsBalance: new BigNumber(poolsBalance),\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\n            total: new BigNumber(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: Table,\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\nimport { Box, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseLabel = styled.label`\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-weight: 600;\n  margin-bottom: 8px;\n`\n\nexport const Label = styled(BaseLabel)`\n  font-size: 20px;\n`\n\nexport const SecondaryLabel = styled(BaseLabel)`\n  font-size: 12px;\n  text-transform: uppercase;\n`\n\nexport const FormError: React.FC = ({ children }) => (\n  <Text color=\"failure\" mb=\"4px\">\n    {children}\n  </Text>\n)\n\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\n  return (\n    <Box mt=\"8px\">\n      {errors.map((error) => {\n        return <FormError key={error}>{error}</FormError>\n      })}\n    </Box>\n  )\n}\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\n\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\n  onTextInput: (value: string) => void\n  onRemove?: () => void\n}\n\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\n  const [isWarning, setIsWarning] = useState(false)\n  const [isDirty, setIsDirty] = useState(false)\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { value } = evt.currentTarget\n\n    setIsWarning(isDirty && value.length === 0)\n    setIsDirty(true)\n    onTextInput(value)\n  }\n\n  return (\n    <Box position=\"relative\" mb=\"16px\">\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\n      {onRemove && (\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\n          <IconButton variant=\"text\" onClick={onRemove}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default Choice\n","import React from 'react'\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\nimport uniqueId from 'lodash/uniqueId'\nimport { useTranslation } from 'contexts/Localization'\nimport Choice from './Choice'\n\nexport interface Choice {\n  id: string\n  value: string\n}\n\ninterface ChoicesProps {\n  choices: Choice[]\n  onChange: (newChoices: Choice[]) => void\n}\n\nexport const MINIMUM_CHOICES = 2\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\n\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\n  const { t } = useTranslation()\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\n\n  const addChoice = () => {\n    onChange([...choices, makeChoice()])\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Choices')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {choices.map(({ id, value }, index) => {\n          const handleTextInput = (newValue: string) => {\n            const newChoices = [...choices]\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\n\n            newChoices[choiceIndex].value = newValue\n\n            onChange(newChoices)\n          }\n\n          const handleRemove = () => {\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\n          }\n\n          return (\n            <Choice\n              key={id}\n              scale=\"lg\"\n              onTextInput={handleTextInput}\n              placeholder={t('Input choice text')}\n              value={value}\n              onRemove={index > 1 ? handleRemove : undefined}\n            />\n          )\n        })}\n\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\n          {t('Add Choice')}\n        </Button>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Choices\n","import { ContextApi } from 'contexts/Localization/types'\nimport { format, parseISO, isValid } from 'date-fns'\nimport { MINIMUM_CHOICES } from './Choices'\nimport { FormState } from './types'\n\nexport const combineDateAndTime = (date: Date, time: Date) => {\n  if (!isValid(date) || !isValid(time)) {\n    return null\n  }\n\n  const dateStr = format(date, 'yyyy-MM-dd')\n  const timeStr = format(time, 'HH:mm:ss')\n\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\n}\n\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\n  const errors: { [key: string]: string[] } = {}\n\n  if (!name) {\n    errors.name = [t('%field% is required', { field: 'Title' })]\n  }\n\n  if (!body) {\n    errors.body = [t('%field% is required', { field: 'Body' })]\n  }\n\n  if (choices.length < MINIMUM_CHOICES) {\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\n  }\n\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\n    errors.choices = Array.isArray(errors.choices)\n      ? [...errors.choices, t('Choices must not be empty')]\n      : (errors.choices = [t('Choices must not be empty')])\n  }\n\n  if (!isValid(startDate)) {\n    errors.startDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(startTime)) {\n    errors.startTime = [t('Please select a valid time')]\n  }\n\n  if (!isValid(endDate)) {\n    errors.endDate = [t('Please select a valid date')]\n  }\n\n  if (!isValid(endTime)) {\n    errors.endTime = [t('Please select a valid time')]\n  }\n\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\n\n  if (endDateTimestamp < startDateTimestamp) {\n    errors.endDate = Array.isArray(errors.endDate)\n      ? [...errors.endDate, t('End date must be after the start date')]\n      : (errors.endDate = [t('End date must be after the start date')])\n  }\n\n  if (snapshot === 0) {\n    errors.snapshot = [t('Invalid snapshot')]\n  }\n\n  return errors\n}\n","import React, { useState } from 'react'\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useGetVotingPower from '../hooks/useGetVotingPower'\nimport DetailsView from './CastVoteModal/DetailsView'\n\ninterface VoteDetailsModalProps extends InjectedModalProps {\n  block: number\n}\n\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\n  const { t } = useTranslation()\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\n    useGetVotingPower(block, modalIsOpen)\n  const { theme } = useTheme()\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  return (\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      <Box mb=\"24px\" width=\"320px\">\n        {isLoading ? (\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\n            <Spinner size={80} />\n          </Flex>\n        ) : (\n          <>\n            <DetailsView\n              total={total}\n              cakeBalance={cakeBalance}\n              cakeVaultBalance={cakeVaultBalance}\n              cakePoolBalance={cakePoolBalance}\n              poolsBalance={poolsBalance}\n              cakeBnbLpBalance={cakeBnbLpBalance}\n            />\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\n              {t('Close')}\n            </Button>\n          </>\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default VoteDetailsModal\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\nimport {\n  AutoRenewIcon,\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Heading,\n  Input,\n  LinkExternal,\n  Text,\n  useModal,\n} from '@pancakeswap/uikit'\nimport { useHistory } from 'react-router'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport isEmpty from 'lodash/isEmpty'\nimport { useInitialBlock } from 'state/block/hooks'\nimport { SnapshotCommand } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\nimport { signMessage } from 'utils/web3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport { DatePicker, TimePicker } from 'components/DatePicker'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport BreadcrumbLink from '../components/BreadcrumbLink'\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\nimport Layout from '../components/Layout'\nimport { FormErrors, Label, SecondaryLabel } from './styles'\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\nimport { combineDateAndTime, getFormErrors } from './helpers'\nimport { FormState } from './types'\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\nimport VoteDetailsModal from '../components/VoteDetailsModal'\n\nconst EasyMde = lazy(() => import('components/EasyMde'))\n\nconst CreateProposal = () => {\n  const [state, setState] = useState<FormState>({\n    name: '',\n    body: '',\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\n    startDate: null,\n    startTime: null,\n    endDate: null,\n    endTime: null,\n    snapshot: 0,\n  })\n  const [isLoading, setIsLoading] = useState(false)\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const initialBlock = useInitialBlock()\n  const { push } = useHistory()\n  const { library } = useWeb3Provider()\n  const { toastSuccess, toastError } = useToast()\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\n  const formErrors = getFormErrors(state, t)\n\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n\n    try {\n      setIsLoading(true)\n      const proposal = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.PROPOSAL,\n        payload: {\n          name,\n          body,\n          snapshot,\n          start: combineDateAndTime(startDate, startTime),\n          end: combineDateAndTime(endDate, endTime),\n          choices: choices\n            .filter((choice) => choice.value)\n            .map((choice) => {\n              return choice.value\n            }),\n          metadata: generateMetaData(),\n          type: 'single-choice',\n        },\n      })\n\n      const sig = await signMessage(library, account, proposal)\n\n      if (sig) {\n        const msg: Message = { address: account, msg: proposal, sig }\n\n        // Save proposal to snapshot\n        const data = await sendSnaphotData(msg)\n\n        // Redirect user to newly created proposal page\n        push(`/voting/proposal/${data.ipfsHash}`)\n\n        toastSuccess(t('Proposal created!'))\n      } else {\n        toastError(t('Error'), t('Unable to sign payload'))\n      }\n    } catch (error) {\n      toastError(t('Error'), error?.message || error?.error)\n      console.error(error)\n      setIsLoading(false)\n    }\n  }\n\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }))\n\n    // Keep track of what fields the user has attempted to edit\n    setFieldsState((prevFieldsState) => ({\n      ...prevFieldsState,\n      [key]: true,\n    }))\n  }\n\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\n    const { name: inputName, value } = evt.currentTarget\n    updateValue(inputName, value)\n  }\n\n  const handleEasyMdeChange = (value: string) => {\n    updateValue('body', value)\n  }\n\n  const handleChoiceChange = (newChoices: Choice[]) => {\n    updateValue('choices', newChoices)\n  }\n\n  const handleDateChange = (key: string) => (value: Date) => {\n    updateValue(key, value)\n  }\n\n  const options = useMemo(\n    () => ({\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\n    }),\n    [account],\n  )\n\n  useEffect(() => {\n    if (initialBlock > 0) {\n      setState((prevState) => ({\n        ...prevState,\n        snapshot: initialBlock,\n      }))\n    }\n  }, [initialBlock, setState])\n\n  return (\n    <Container py=\"40px\">\n      <Box mb=\"48px\">\n        <Breadcrumbs>\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\n          <Text>{t('Make a Proposal')}</Text>\n        </Breadcrumbs>\n      </Box>\n      <form onSubmit={handleSubmit}>\n        <Layout>\n          <Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"name\">{t('Title')}</Label>\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\n            </Box>\n            <Box mb=\"24px\">\n              <Label htmlFor=\"body\">{t('Content')}</Label>\n              <Text color=\"textSubtle\" mb=\"8px\">\n                {t('Tip: write in Markdown!')}\n              </Text>\n              <EasyMde\n                id=\"body\"\n                name=\"body\"\n                onTextChange={handleEasyMdeChange}\n                value={body}\n                options={options}\n                required\n              />\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\n            </Box>\n            {body && (\n              <Box mb=\"24px\">\n                <Card>\n                  <CardHeader>\n                    <Heading as=\"h3\" scale=\"md\">\n                      {t('Preview')}\n                    </Heading>\n                  </CardHeader>\n                  <CardBody p=\"0\" px=\"24px\">\n                    <ReactMarkdown>{body}</ReactMarkdown>\n                  </CardBody>\n                </Card>\n              </Box>\n            )}\n            <Choices choices={choices} onChange={handleChoiceChange} />\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\n          </Box>\n          <Box>\n            <Card>\n              <CardHeader>\n                <Heading as=\"h3\" scale=\"md\">\n                  {t('Actions')}\n                </Heading>\n              </CardHeader>\n              <CardBody>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"startDate\"\n                    onChange={handleDateChange('startDate')}\n                    selected={startDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"startTime\"\n                    onChange={handleDateChange('startTime')}\n                    selected={startTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\n                  <DatePicker\n                    name=\"endDate\"\n                    onChange={handleDateChange('endDate')}\n                    selected={endDate}\n                    placeholderText=\"YYYY/MM/DD\"\n                  />\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\n                </Box>\n                <Box mb=\"24px\">\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\n                  <TimePicker\n                    name=\"endTime\"\n                    onChange={handleDateChange('endTime')}\n                    selected={endTime}\n                    placeholderText=\"00:00\"\n                  />\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\n                </Box>\n                {account && (\n                  <Flex alignItems=\"center\" mb=\"8px\">\n                    <Text color=\"textSubtle\" mr=\"16px\">\n                      {t('Creator')}\n                    </Text>\n                    <LinkExternal href={getBscScanLink(account, 'address')}>\n                      {truncateWalletAddress(account)}\n                    </LinkExternal>\n                  </Flex>\n                )}\n                <Flex alignItems=\"center\" mb=\"16px\">\n                  <Text color=\"textSubtle\" mr=\"16px\">\n                    {t('Snapshot')}\n                  </Text>\n                  <LinkExternal href={getBscScanLink(snapshot, 'block')}>{snapshot}</LinkExternal>\n                </Flex>\n                {account ? (\n                  <>\n                    <Button\n                      type=\"submit\"\n                      width=\"100%\"\n                      isLoading={isLoading}\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n                      disabled={!isEmpty(formErrors)}\n                      mb=\"16px\"\n                    >\n                      {t('Publish')}\n                    </Button>\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\n                    </Text>\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\n                      {t('Check voting power')}\n                    </Button>\n                  </>\n                ) : (\n                  <ConnectWalletButton width=\"100%\" type=\"button\" />\n                )}\n              </CardBody>\n            </Card>\n          </Box>\n        </Layout>\n      </form>\n    </Container>\n  )\n}\n\nexport default CreateProposal\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'CAKE', address: getCakeAddress(), decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANCAKE_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnaphotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    const power = new BigNumber(vote.metadata?.votingPower)\n    return accum.plus(power)\n  }, BIG_ZERO)\n}\n","/**\n * Truncates a wallet's address\n */\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateWalletAddress\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMIN_ADDRESS = '0xa3D2124E4023ea5c74dC749012E0B46E42bDD648'\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANCAKE_SPACE = 'cakevote.eth'\nexport const VOTE_THRESHOLD = 10\n"],"sourceRoot":""}