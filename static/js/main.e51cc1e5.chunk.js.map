{"version":3,"sources":["hooks/useApprove.ts","config/constants/nfts.ts","utils/makeBatchRequest.ts","config/constants/endpoints.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/pools/helpers.ts","config/constants/campaigns.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","utils/formatBalance.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","utils/bigNumber.ts","hooks/usePersistState.ts","config/constants/tokens.ts","utils/achievements.ts","utils/latinise.ts","state/hooks.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","config/index.ts","utils/apr.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","utils/settings.ts","utils/contractHelpers.ts","config/constants/types.ts","components/Balance.tsx","utils/farmHelpers.ts","components/layout/Flex.tsx","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","hooks/useContract.ts","views/Pools/helpers.tsx","state/index.ts","hooks/useWeb3.ts","utils/multicall.ts","utils/web3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","hooks/useToast.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useTheme.ts","config/constants/farms.ts","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","utils/compoundApyHelpers.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx"],"names":["useApprove","lpContract","account","useWeb3React","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","symbol","console","error","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","methods","options","address","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","call","response","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","56","97","identifierKey","MIXIE","Nfts","name","description","images","lg","md","sm","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","map","Promise","resolve","reject","add","request","err","result","execute","all","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","ARCHIVED_NODE","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","priceHelperLps","pid","lpSymbol","lpAddresses","token","tokens","qsd","quoteToken","wbnb","fetchFarm","farm","lpAddress","getAddress","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","profileClear","getItem","walletconnect","close","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","method","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","BASE_BSC_SCAN_URL","registerToken","tokenAddress","tokenImage","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","teams","id","alt","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","teamData","onChainTeamData","Number","LS_KEY","fetchLocale","locale","fetch","json","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","undefined","LanguageProvider","children","codeFromStorage","languages","setState","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","Object","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","toNumber","campaigns","title","badge","campaignMap","campaign","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","toLocaleString","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","getIdentifierKeyFromAddress","nftAddress","nftSource","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","uriDataResponse","ok","uriData","getNftByTokenId","nft","MAINNET_CHAIN_ID","getCakeAddress","vizslaswap","getHVIAddress","hvi","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","pending","association","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","Grid","GridItem","GridHeaderItem","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","ml","num","getRoi","amountEarned","amountInvested","style","maxWidth","justifyContent","textAlign","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","BIG_NINE","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","bnb","projectLink","test","babyvizsla","txl","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","bvc","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","well","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","ZERO","usePollFarmsData","includeArchive","web3","farmToFetch","usePollCoreFarmData","usePollBlockNumber","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","bnbPriceUSD","usePriceHVIBusd","usePriceHVIBusd2","useBlock","block","useInitialBlock","useIsHistoryPaneOpen","predictions","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetRounds","rounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","bets","history","useGetBetByRoundId","roundId","useBetCanClaim","bet","getCanClaim","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","PredictionStatus","INITIAL","HistoryFilter","ALL","fetchBet","getBet","transformBetResponse","fetchRoundBet","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","TESTNET_CHAIN_ID","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","DropDownHeader","shadows","inset","colors","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","ref","label","option","selectedIndex","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","amountInGwei","_web3","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","PoolIds","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","cake","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","multicallv2","tryAggregate","requireSuccess","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","getWeb3WithArchivedNodeProvider","archivedHttpProvider","enterStaking","gas","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","cakeBnbFarm","Token","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","tokensymbol2","withdrawtime","withdrawtime2","CORE","isEvent","toastContext","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","code","languageList","useTheme","StyledThemeContext","isCommunity","ViewMode","_binanceChainListener","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","Menu","currentLang","langs","setLang","links","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","alignItems","RainbowLight","keyframes","StyledCard","Card","isPromoted","card","isDesktop","StyledCardInner","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","flexDirection","small","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","scale","src","ApprovalAction","stakingTokenContract","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","minWidth","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","Row","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","BountyCard","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","iconFile","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","onPresentApyModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","displayBalance","actionTitle","flex","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","openpools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","stakedOnlyLockedPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","showlockedpools","showopenpools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","transformProfileResponse","profileResponse","userId","getUsername","username","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded"],"mappings":"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","file":"static/js/main.e51cc1e5.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n     }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'Your Loyal Friend in Crypto',\n  image: 'https://vizslaswap.com/logo.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('VizslaSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('VizslaSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('VizslaSwap')}`,\n      }\n      case '/lockedpools':\n        return {\n          title: `${t('LockedPools')} | ${t('VizslaSwap')}`,\n        }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '',\n    56: '0x30b6Fd64a46f504D5bb0f2258D6d08CC78A5db34',\n  },\n  lottery: {\n    97: '',\n    56: '0x86B2A344f55727066703D5290d90fE06a72Be2F5',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\n\n  },  \n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F'\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { MAINNET_CHAIN_ID } from 'config'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.vizslaswap.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 1,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 1,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 1,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'VIZSLASWAP',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mr=\"12px\" ml=\"12px\" mb=\"12px\">\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\">\n          <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n            {t(\n              'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n              { freq: compoundFrequency.toLocaleString() },\n            )}\n          </Text>\n          {performanceFee > 0 && (\n            <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\">\n              {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n            </Text>\n          )}\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  vizslaswap: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslaswap.com',\n  },\n  hvi: {\n    symbol: 'HVI',\n    address: {\n      56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://vizslainu.com/',\n  },\n  test: {\n    symbol: 'Test',\n    address: {\n      56: '0x86B2A344f55727066703D5290d90fE06a72Be2F5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://vizslainu.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64c582698b8572aaf765bdc426ac3aefb6b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  bvc: {\n    symbol: 'BVC',\n    address: {\n      56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cryptochiptoken.com',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32eb035b786898c00bb1c64d8c6f8e7a46d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xabae871b7e3b67aeec6b46ae9fe1a91660aadac5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6cd57764fa743756f7a6ce3358cc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5f84ce30dc3cf7909101c69086c50de191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016e85a25aeb13065688cafb43044c2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xbd2949f67dcdc549c6ebe98696449fa79d988a9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xa1434f1fc3f437fa33f7a781e041961c0205b5da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9f882567a62a5560d147d64871776eea72df41d3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xa2120b9e674d3fc3875f415a7df52e382f141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n}\n\nexport default tokens\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport {  Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nconst ZERO = new BigNumber(0)\n\n  \nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, web3, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1, 4]))\n  }, [dispatch, fastRefresh, web3])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n \nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded ,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const pid = 3 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\nexport const usePriceHVIBusd2 = (): BigNumber => {\n  const pid = 8 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n  \n}\n\n\n ","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BunnyCardsIcon } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      Loading\n  </Wrapper>\n)\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://vizslaswap.com'\nexport const BASE_EXCHANGE_URL = 'https://vizslaexchange.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const TESTNET_CHAIN_ID = '97'\nexport const MAINNET_CHAIN_ID = '56'\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n  background-color: #000000\t ;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n  background-color: #000000\t ;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        background-color: #000000\t ;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"secondary\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  if (chainId === TESTNET_CHAIN_ID) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  isEvent?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  tokensymbol2: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  withdrawtime: string\n  withdrawtime2: string\n  sortOrder?: number\n  harvest?: boolean\n  isEvent?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n `\n\nconst Inner = styled(Container)`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  try {\n    const web3 = options.web3 || getWeb3NoAccount()\n    const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  const web3 = options.web3 || getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return {\n      result,\n      data: itf.decodeFunctionResult(calls[i].name, data),\n    }\n  })\n\n  return res\n}\nexport default multicall\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nconst getWeb3WithArchivedNodeProvider = () => {\n  const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\n  return new Web3(archivedHttpProvider)\n}\n\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\nexport default web3NoAccount\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport pools from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport { multicallv2 } from './multicall'\nimport { getWeb3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 1\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), archivedWeb3)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const archivedWeb3 = getWeb3WithArchivedNodeProvider()\n    const masterContract = getMasterchefContract(archivedWeb3)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Returns total staked value of active pools\n */\nexport const getUserStakeInPools = async (account: string, block?: number) => {\n  try {\n    const multicallOptions = {\n      web3: getWeb3WithArchivedNodeProvider(),\n      blockNumber: block,\n      requireSuccess: false,\n    }\n    const eligiblePools = pools\n      .filter((pool) => pool.sousId !== 0)\n      .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n      \n    // Get the ending block is eligible pools\n    const endBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'bonusEndBlock',\n    }))\n    const startBlockCalls = eligiblePools.map((eligiblePool) => ({\n      address: getAddress(eligiblePool.contractAddress),\n      name: 'startBlock',\n    }))\n    const endBlocks = await multicallv2(sousChefABI, endBlockCalls, multicallOptions)\n    const startBlocks = await multicallv2(sousChefABI, startBlockCalls, multicallOptions)\n\n    // Filter out pools that have ended\n    const activePools = eligiblePools.filter((eligiblePool, index) => {\n      const endBlock = new BigNumber(endBlocks[index])\n      const startBlock = new BigNumber(startBlocks[index])\n\n      return startBlock.lte(block) && endBlock.gte(block)\n    })\n\n    // Get the user info of each pool\n    const userInfoCalls = activePools.map((activePool) => ({\n      address: getAddress(activePool.contractAddress),\n      name: 'userInfo',\n      params: [account],\n    }))\n    const userInfos = await multicallv2(sousChefABI, userInfoCalls, multicallOptions)\n\n    return userInfos.reduce((accum: BigNumber, userInfo) => {\n      return accum.plus(new BigNumber(userInfo.amount._hex))\n    }, new BigNumber(0))\n  } catch (error) {\n    console.error('Error fetching staked values:', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '0.000000347',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '380000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '190000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    tokensymbol2: 'OPEN',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '4%',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    isEvent: false,\n    tokenPerBlock: '190000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\n\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\n\nexport const languages = {\n  'en-US': EN,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'secondary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'secondary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n \n\n  body {\n       background-image: url('images/9.png');\n      background-attachment: fixed;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n        }\n  \n  @media only screen and (max-width: 1350px) {\n    body {\n       background-image: url('images/6.png');\n       background-attachment: fixed;\n       background-position: top;\n       background-size: 100%;\n       background-repeat: repeat;\n     }\n  }\n   \n  \n  \n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://vizslaexchange.vizslaswap.com',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://vizslaexchange.vizslaswap.com',\n      },\n    \n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/liquiditymining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools/all',\n  },  \n  {\n    label: t('Whitepaper'),\n    icon: 'MoreIcon',\n    href: 'https://vizslaswap.com/images/VizslaSwap/WhitePaper.pdf' ,\n      },\n     \n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n       \n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip, Text} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}    \n   \n    </Flex>\n\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst RainbowLight = keyframes`\n0% {\n  background-position: 0% 100%;\n}\n50% {\n  background-position: 0% 0%;\n}\n100% {\n  background-position: 100% 0%;\n}\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  animation: ${RainbowLight} 3s linear infinite;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n      background: linear-gradient(\n        45deg,\n          rgb(0,0,0) 0%,\n          rgb(0,0,0) 10%,\n          rgb(0, 0, 0)20%,\n          rgb(13, 36, 34) 30%,\n          rgb(18, 48, 46) 40%,\n          rgb(34,89,84) 50%,\n          rgb(18, 48, 46)60%,\n          rgb(13, 36, 34) 70%,\n          rgb(0, 0, 0) 80%,\n          rgb(0,0,0) 90%,\n          rgb(0,0,0) 100%);\n          background-size: 500% 500%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${RainbowLight} 3s linear infinite;\n    `}\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  png {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, contractAddress, sousId, isAutoVault } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(0)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningTokenSymbol, stakingTokenSymbol, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `vizslaswap-vizslavault.png`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={85} height={85} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n       />\n       \n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPrice !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n     <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2 } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} /> \n          <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })} \n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n    \n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n       />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const { sousId, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2 } = pool\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"VIZSLASWAP\"\n          stakingTokenSymbol=\"VIZSLASWAP\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n     </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 1 : 0} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}/all`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: callFee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(\n    <BountyModal\n      cakeBountyToDisplay={cakeBountyToDisplay}\n      dollarBountyToDisplay={dollarBountyToDisplay}\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\n      callFee={callFee}\n      TooltipComponent={TooltipComponent}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://vizslainu.com/swap/#howto\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, Image, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n  const iconFile = `${earningTokenSymbol}-${stakingTokenSymbol}.png`.toLocaleLowerCase()\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={20} height={20} mr=\"10px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"100px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n                    decimals={2}\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                    prefix=\"~\"\n                  />\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, IconButton, Skeleton, FlexProps } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Flex>\n            <Balance\n              onClick={openRoiModal}\n              fontSize=\"16px\"\n              isDisabled={isFinished}\n              value={isFinished ? 0 : earningsPercentageToDisplay}\n              decimals={2}\n              unit=\"%\"\n            />\n          </Flex>\n        </>\n      ) : (\n        <Skeleton width=\"100px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr\n          pool={pool}\n          performanceFee={isAutoVault ? performanceFee : 0}\n          showIcon={!isXs && !isSm}\n          alignItems=\"flex-start\"\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStakedBalance ? (\n          <Flex height=\"100%\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"100px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n     \n         <Skeleton width=\"0px\" height=\"0px\" /> \n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const displayBalance = hasEarnings ? earningTokenBalance : 0\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={displayBalance} />\n          {hasEarnings ? (\n            <Balance\n              display=\"inline\"\n              fontSize=\"12px\"\n              color={hasEarnings ? 'textSubtle' : 'textDisabled'}\n              decimals={2}\n              value={earningTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          ) : (\n            \n            <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n              0 USD\n            </Text>\n          )}\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n    \n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n    withdrawtime2\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n              \n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n            <Text small  color=\"textDisabled\">\n            {t('Withdrawal Fee: ')}{withdrawtime2}\n              </Text>\n      </ActionContainer>\n      \n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const { sousId, stakingToken, earningToken, totalStaked, endBlock, stakingLimit, isAutoVault } = pool\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 18)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown }\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://poocoin.app/tokens/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('Project site')}\n          </LinkExternal>\n        </Flex>\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.background};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport tokensymbol2 from 'config/constants/pools'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 50px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n\n  const lockedpools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol2  === 'LOCKED')\n  const openpools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol2  === 'OPEN')\n\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n  \n  const stakedOnlyLockedPools = useMemo(\n    () =>\n      openpools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openpools, accountHasVaultShares],\n  )\n  const hasStakeInLockedPools = stakedOnlyLockedPools.length > 0\n\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showlockedpools = location.pathname.includes('lockedpools')\n  const showopenpools = location.pathname.includes('all')\n\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools \n    }\n    if (showopenpools) {\n      chosenPools = stakedOnly ? stakedOnlyLockedPools : openpools\n    } \n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showlockedpools && (\n          <Text fontSize=\"20px\" color=\"white\" pb=\"50px\">\n            {t('COMING SOON.')}\n          </Text>\n        )}\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"white\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\nexport default Pools","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/liquiditymining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n"],"sourceRoot":""}