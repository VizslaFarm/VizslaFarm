{"version":3,"sources":["../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","views/Profile/components/ApproveConfirmButtons.tsx","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useApproveConfirmTransaction.ts","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","state/collectibles/hooks.ts","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","state/teams/hooks.ts","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/formatDistance/index.js","views/Profile/ProfileCreation/UserName.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/components/EditProfileModal/reducer.ts","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/HeaderWrapper.tsx","views/Profile/hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","state/achievements/hooks.ts","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["baseRandom","require","module","exports","array","size","index","length","lastIndex","undefined","rand","value","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","ButtonArrangement","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","initialState","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","BigNumber","MINT_COST","multipliedBy","DEFAULT_TOKEN_DECIMAL","allowance","totalCost","reducer","state","action","type","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","useReducer","dispatch","account","useWeb3React","useEffect","isSubscribed","a","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","actions","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","styled","div","theme","colors","textSubtle","steps","Header","t","useTranslation","useContext","as","scale","color","mb","map","translationKey","WalletNotConnected","ConnectWalletButton","approvalState","confirmState","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","noop","onApproveSuccess","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","tx","wait","status","handleConfirm","useHasCakeBalance","minimumBalance","useTokenBalance","getCakeAddress","balance","gte","Label","label","isDisabled","Body","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","disabled","props","isSuccess","checked","e","target","style","flex","NextStepButton","endIcon","StyledApproveConfirmButtonRow","mediaQueries","md","Button","UIKitButton","iconAttrs","width","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isConfirmDisabled","buttonArrangement","ROW","confirmLabel","confirmId","confirmButtonText","onClick","isLoading","justifyContent","id","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","useState","variationId","setVariationId","cakeContract","useCake","useBunnyFactory","hasMinimumCakeRequired","address","response","currentAllowance","toString","approve","toJSON","mintNFT","fontSize","bold","num","images","Number","useGetCollectibles","useAppDispatch","useSelector","collectibles","data","identifiers","Object","keys","fetchWalletNfts","tokenIds","nftsInWallet","Nfts","Link","RouterLink","primary","NftWrapper","ProfilePicture","library","setIsApproved","setIsApproving","contract","getErc721Contract","getSigner","getPancakeProfileAddress","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","Team","currentTeamId","teams","fetchTeams","useTeams","handleTeamSelection","teamValues","shuffle","team","isJoinable","mr","users","toLocaleString","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","isLastDayOfMonth","dirtyDate","date","endOfDay","endOfMonth","differenceInMonths","sign","difference","Math","abs","differenceInCalendarMonths","getMonth","getDate","setDate","setMonth","isLastMonthNotFull","differenceInMilliseconds","differenceInSeconds","floor","ceil","cloneObject","dirtyObject","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","options","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","round","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","ExistingUserState","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","toastSuccess","createProfile","fetchProfile","title","Views","profileApiUrl","process","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","useWeb3Provider","IDLE","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","message","setMessage","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","checkUsernameValidity","debounce","fetch","res","ok","json","error","method","headers","body","JSON","stringify","username","dateCreated","parseISO","created_at","Date","NEW","fetchUser","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","handleClick","getCakeBack","maxWidth","HeaderWrapper","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","BIG_ZERO","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","calls","multicallv2","profileABI","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","flexDirection","minimum","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","handleDeactivateProfile","pauseProfile","getBalanceNumber","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","key","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","cardBorder","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","handleCollectPoints","getPoints","px","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","ComingSoon","p","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","SecondaryCard","tertiary","defaultProps","StatBox","Icon","icon","subtitle","textTransform","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","usePersistState","localStorageKey","usernameVisibilityToggled","setUsernameVisibility","VisibilityOff","VisibilityOn","replace","href","getBscScanLink","external","outline","PrizeIcon","Profile","fetchAchievements","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/6.54febece.chunk.js","sourcesContent":["var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronRightIcon, Button as UIKitButton, AutoRenewIcon, ChevronDownIcon, Box, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport enum ButtonArrangement {\n  ROW = 'row',\n  SEQUENTIAL = 'sequential',\n}\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n  buttonArrangement?: ButtonArrangement\n  confirmLabel?: string\n  confirmId?: string\n}\n\nconst StyledApproveConfirmButtonRow = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n  buttonArrangement = ButtonArrangement.ROW,\n  confirmLabel,\n  confirmId,\n}) => {\n  const { t } = useTranslation()\n  const confirmButtonText = confirmLabel ?? t('Confirm')\n\n  const ApproveConfirmRow = () => {\n    return (\n      <StyledApproveConfirmButtonRow>\n        <Box>\n          <Button\n            disabled={isApproveDisabled}\n            onClick={onApprove}\n            endIcon={isApproving ? spinnerIcon : undefined}\n            isLoading={isApproving}\n          >\n            {isApproving ? t('Enabling') : t('Enable')}\n          </Button>\n        </Box>\n        <Flex justifyContent=\"center\">\n          <ChevronRight />\n          <ChevronBottom />\n        </Flex>\n        <Box>\n          <Button\n            id={confirmId}\n            onClick={onConfirm}\n            disabled={isConfirmDisabled}\n            isLoading={isConfirming}\n            endIcon={isConfirming ? spinnerIcon : undefined}\n          >\n            {isConfirming ? t('Confirming') : confirmButtonText}\n          </Button>\n        </Box>\n      </StyledApproveConfirmButtonRow>\n    )\n  }\n\n  const ApproveConfirmSequential = () => {\n    return (\n      <>\n        {isApproveDisabled ? (\n          <Box>\n            <Button\n              id={confirmId}\n              onClick={onConfirm}\n              disabled={isConfirmDisabled}\n              isLoading={isConfirming}\n              endIcon={isConfirming ? spinnerIcon : undefined}\n            >\n              {isConfirming ? t('Confirming') : confirmButtonText}\n            </Button>\n          </Box>\n        ) : (\n          <Box>\n            <Button onClick={onApprove} endIcon={isApproving ? spinnerIcon : undefined} isLoading={isApproving}>\n              {isApproving ? t('Enabling') : t('Enable')}\n            </Button>\n          </Box>\n        )}\n      </>\n    )\n  }\n\n  return buttonArrangement === ButtonArrangement.ROW ? ApproveConfirmRow() : ApproveConfirmSequential()\n}\n\nexport default ApproveConfirmButtons\n","export const MINT_COST = 1\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['sleepy', 'dollop', 'twinkle', '664', 'sunny']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n  allowance: new BigNumber(allowance).multipliedBy(DEFAULT_TOKEN_DECIMAL),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWeb3React()\n\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.canMint(account)\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = ['Get Starter Collectible', 'Set Profile Picture', 'Join Team', 'Set Name']\n\nconst Header: React.FC = () => {\n  const { t } = useTranslation()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {t('Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" scale=\"lg\" mb=\"8px\">\n        {t('Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {t('Total cost: 1.5 BVC')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map((translationKey, index) => {\n          return (\n            <Text key={translationKey} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {t(translationKey)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\n\nconst WalletNotConnected = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      <Heading scale=\"xl\" mb=\"8px\">\n        {t('Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {t('Please connect your wallet to continue')}\n      </Text>\n      <ConnectWalletButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt' }\n  | { type: 'approve_error' }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt' }\n  | { type: 'confirm_error' }\n\ninterface State {\n  approvalState: LoadingState\n  confirmState: LoadingState\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  confirmState: 'idle',\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n      }\n    default:\n      return state\n  }\n}\n\ninterface ApproveConfirmTransaction {\n  onApprove: () => ethers.providers.TransactionResponse\n  onConfirm: () => ethers.providers.TransactionResponse\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n  onApproveSuccess?: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n  onApproveSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    handleApprove: async () => {\n      try {\n        const tx = await onApprove()\n        dispatch({ type: 'approve_sending' })\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'approve_receipt' })\n          onApproveSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'approve_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n    handleConfirm: async () => {\n      dispatch({ type: 'confirm_sending' })\n      try {\n        const tx = await onConfirm()\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          dispatch({ type: 'confirm_receipt' })\n          onSuccess(state)\n        }\n      } catch (error) {\n        dispatch({ type: 'confirm_error' })\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","import BigNumber from 'bignumber.js/bignumber'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <Card isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </Card>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const { t } = useTranslation()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        // TODO: Move this to a helper, this check will be probably be used many times\n        try {\n          const response = await cakeContract.allowance(account, bunnyFactoryContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(bunnyFactoryContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return bunnyFactoryContract.mintNFT(variationId)\n      },\n      onSuccess: () => actions.nextStep(),\n    })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 1 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{t('Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{t('This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {t('You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {t('Cost: %num% CAKE', { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {t('A minimum of %num% CAKE is required', { num: MINT_COST })}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport Nfts from 'config/constants/nfts'\nimport { State } from '../types'\nimport { fetchWalletNfts } from './index'\n\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport useToast from 'hooks/useToast'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const { library } = useWeb3React()\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n\n  const { t } = useTranslation()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const { toastError } = useToast()\n\n  const handleApprove = async () => {\n    const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n    const tx = await contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsApproving(false)\n      setIsApproved(true)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {t('We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {t(\n            'You need a Pancake Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 2 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {t('Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {t('See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t(\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n            id=\"approveStarterCollectible\"\n          >\n            {t('Enable')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/teams/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const { t } = useTranslation()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 3 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {t('Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { Team } from 'config/constants/types'\nimport { State, TeamsState } from '../types'\nimport { fetchTeam, fetchTeams } from '.'\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport debounce from 'lodash/debounce'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(DEFAULT_TOKEN_DECIMAL)\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.IDLE)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const checkUsernameValidity = debounce(async (value: string) => {\n    try {\n      setIsLoading(true)\n      const res = await fetch(`${profileApiUrl}/api/users/valid/${value}`)\n\n      if (res.ok) {\n        setIsValid(true)\n        setMessage('')\n      } else {\n        const data = await res.json()\n        setIsValid(false)\n        setMessage(data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, 200)\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n    checkUsernameValidity(value)\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n        }),\n      })\n\n      if (response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(t('Error'), data?.error?.message)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  // Perform an initial check to see if the wallet has already created a username\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch(`${profileApiUrl}/api/users/${account}`)\n        const data = await response.json()\n\n        if (response.ok) {\n          const dateCreated = formatDistance(parseISO(data.created_at), new Date())\n          setMessage(t('Created %dateCreated% ago', { dateCreated }))\n\n          actions.setUserName(data.username)\n          setExistingUserState(ExistingUserState.CREATED)\n          setIsValid(true)\n        } else {\n          setExistingUserState(ExistingUserState.NEW)\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Unable to verify username'))\n      }\n    }\n\n    if (account) {\n      fetchUser()\n    }\n  }, [account, setExistingUserState, setIsValid, setMessage, actions, toastError, t])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {t('Step %num%', { num: 4 })}\n      </Text>\n      <Heading as=\"h3\" scale=\"xl\" mb=\"24px\">\n        {t('Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {t('This name will be shown in team leaderboards and search results as long as your profile is active.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" scale=\"lg\" mb=\"8px\">\n            {t('Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t(\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={t('Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {t(\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">{t('I understand that people can view my wallet if they know my username')}</Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {t('Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button\n        onClick={onPresentConfirmProfileCreation}\n        disabled={!isValid || !isUserCreated}\n        id=\"completeProfileCreation\"\n      >\n        {t('Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {t('A minimum of %num% CAKE is required', { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onRequiresApproval: async () => {\n        try {\n          const response = await cakeContract.allowance(account, profileContract.address)\n          const currentAllowance = new BigNumber(response.toString())\n          return currentAllowance.gte(minimumCakeRequired)\n        } catch (error) {\n          return false\n        }\n      },\n      onApprove: () => {\n        return cakeContract.approve(profileContract.address, allowance.toJSON())\n      },\n      onConfirm: () => {\n        return profileContract.createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        await dispatch(fetchProfile(account))\n        onDismiss()\n        toastSuccess(t('Profile created!'))\n      },\n    })\n\n  return (\n    <Modal title={t('Complete Profile')} onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {t('Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{t('Cost')}</Text>\n        <Text>{t('%num% CAKE', { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import React, { useContext } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { t } = useTranslation()\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>{t('Loading...')}</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/Layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useToast from 'hooks/useToast'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWeb3React()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.canClaim(account)\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { t } = useTranslation()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = async () => {\n    const tx = await claimRefundContract.getCakeBack()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Success!'))\n      onSuccess()\n      onDismiss()\n    } else {\n      setIsConfirming(false)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }\n\n  return (\n    <Modal title={t('Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{t('Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t(\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">{t('To make it up to you, we’ll refund you the full 4 CAKE it cost to make your bunny.')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {t('We’re also preparing an all-new collectible for you to claim (for free!) in the near future.')}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {t(\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {t('Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import { useEffect, useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { multicallv2 } from 'utils/multicall'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\n\nconst useGetProfileCosts = () => {\n  const { t } = useTranslation()\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: BIG_ZERO,\n    numberCakeToRegister: BIG_ZERO,\n    numberCakeToUpdate: BIG_ZERO,\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const calls = ['numberCakeToReactivate', 'numberCakeToRegister', 'numberCakeToUpdate'].map((method) => ({\n          address: getPancakeProfileAddress(),\n          name: method,\n        }))\n        const [[numberCakeToReactivate], [numberCakeToRegister], [numberCakeToUpdate]] = await multicallv2(\n          profileABI,\n          calls,\n        )\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate.toString()),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister.toString()),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate.toString()),\n        })\n      } catch (error) {\n        toastError(t('Error'), t('Could not retrieve CAKE costs for profile'))\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError, t])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/profile/hooks'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.allowance(account, getPancakeProfileAddress())\n      const currentAllowance = new BigNumber(response.toString())\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            t('%minimum% CAKE required to change profile pic', { minimum: getFullDisplayBalance(minimumCakeRequired) })}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {t('Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {t('Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {t('Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile } from 'state/profile/hooks'\nimport { fetchProfile } from 'state/profile'\nimport useToast from 'hooks/useToast'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const { t } = useTranslation()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = async () => {\n    const tx = await pancakeProfileContract.pauseProfile()\n    setIsConfirming(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess(t('Profile Paused!'))\n      onDismiss()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsConfirming(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {t('This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t(\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Cost to reactivate in the future: %cost% CAKE', { cost: getBalanceNumber(numberCakeToReactivate) })}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{t('I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {t('Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useToast from 'hooks/useToast'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const { t } = useTranslation()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const profileContract = useProfileContract()\n  const { account, library } = useWeb3React()\n  const { toastSuccess } = useToast()\n  const { isApproving, isApproved, isConfirmed, isConfirming, handleApprove, handleConfirm } =\n    useApproveConfirmTransaction({\n      onApprove: () => {\n        const contract = getErc721Contract(selectedNft.nftAddress, library.getSigner())\n        return contract.approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      },\n      onConfirm: () => {\n        if (!profile.isActive) {\n          return profileContract.reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n        }\n\n        return profileContract.updateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n      },\n      onSuccess: async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess(t('Profile Updated!'))\n\n        onDismiss()\n      },\n    })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {t('Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {t('Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {t('Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {t('Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { useProfile } from 'state/profile/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'views/Profile/hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const { t } = useTranslation()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n    setIsApproving(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      goToChange()\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsApproving(false)\n    }\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>{profile.isActive ? t('Cost to update:') : t('Cost to reactivate:')}</Text>\n        <Text>{getFullDisplayBalance(cost)} VIZSLASWAP</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {t('Enable')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {t('Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: 'Edit Profile',\n  [Views.CHANGE]: 'Change Profile Pic',\n  [Views.REMOVE]: 'Remove Profile Pic',\n  [Views.APPROVE]: 'Enable CAKE',\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const { t } = useTranslation()\n  const translationKey = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={t(translationKey)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, PresentWonIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const { t } = useTranslation()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" scale=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {t('Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" scale=\"lg\" mb=\"16px\">\n            {t('Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{t('Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<PresentWonIcon />}>\n            {t('You’ve got a gift to claim!')}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const { t } = useTranslation()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {t(key, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const { t } = useTranslation()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { key, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {t(key, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAchievements } from 'state/achievements/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const { t } = useTranslation()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n            {t('No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, AchievementState } from '../types'\nimport { fetchAchievements } from '.'\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const { t } = useTranslation()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{t('%num% points', { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap/uikit'\nimport { Achievement } from 'state/types'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const { t } = useTranslation()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = async () => {\n    const tx = await pointCenterContract.getPoints(achievement.address)\n    setIsCollecting(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      setIsCollecting(false)\n      onCollectSuccess(achievement)\n      toastSuccess(t('Points Collected!'))\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setIsCollecting(false)\n    }\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {t('Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap/uikit'\nimport { useProfile } from 'state/profile/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport { useTranslation } from 'contexts/Localization'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading scale=\"lg\">{t('%num% Points to Collect', { num: totalPointsToCollect })}</Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" scale=\"md\" color=\"textDisabled\">\n        {children || t('Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import { useTranslation } from 'contexts/Localization'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{t('Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {t('Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {t('Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Achievements')}\n              </Heading>\n              <Text as=\"p\">{t('Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading scale=\"lg\" mb=\"8px\">\n                {t('Task Center')}\n              </Heading>\n              <Text as=\"p\">{t('Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">{t('Collecting points for these tasks makes them available again.')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport { useGetCollectibles } from 'state/collectibles/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const { t } = useTranslation()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" scale=\"md\" mb=\"8px\">\n        {t('Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {t('Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.')}\n      </Text>\n      <Text as=\"p\">\n        {t('NFTs in this user’s wallet that aren’t approved Pancake Collectibles won’t be shown here.')}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {t('No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{t('See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" scale=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n  VisibilityOn,\n  VisibilityOff,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useProfile } from 'state/profile/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { getBscScanLink } from 'utils'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWeb3React()\n  const { profile } = useProfile()\n  const [usernameVisibilityToggled, setUsernameVisibility] = usePersistState(false, {\n    localStorageKey: 'username_visibility_toggled',\n  })\n  const { t } = useTranslation()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  const toggleUsernameVisibility = () => {\n    setUsernameVisibility(!usernameVisibilityToggled)\n  }\n\n  const { username, team, isActive, points } = profile\n\n  const Icon = usernameVisibilityToggled ? VisibilityOff : VisibilityOn\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Flex alignItems=\"center\">\n                  <Username>@{usernameVisibilityToggled ? username : username.replace(/./g, '*')}</Username>\n                  <Icon ml=\"4px\" onClick={toggleUsernameVisibility} cursor=\"pointer\" />\n                </Flex>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={getBscScanLink(account, 'address')} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {t('Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {t('Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={points} subtitle={t('Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" scale=\"md\" mb=\"16px\">\n                {t('Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core/core/core'\nimport Page from 'components/Layout/Page'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { useProfile } from 'state/profile/hooks'\nimport { useFetchAchievements } from 'state/achievements/hooks'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWeb3React()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}