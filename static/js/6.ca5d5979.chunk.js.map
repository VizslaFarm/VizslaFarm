{"version":3,"sources":["views/Vote2/StyledComponents2.tsx","views/Vote2/Gift.tsx","views/Profile/EmojiPicker.js","views/Profile/StyledComponents.tsx","views/Profile/ChatAppStyles.ts","views/Profile/index.tsx"],"names":["Container","styled","Box","DepositList","ul","ArrowButton","Button","HeaderContainer","div","Title","h2","ImageGrid","span","InfoText","Text","VizslaSwap","account","useWeb3React","useState","tokenContract","setTokenContract","vizslaSwapContract","setVizslaSwapContract","contractAddress","approved","setApproved","showDropdown","setShowDropdown","loadingIndex","setLoadingIndex","deposits","setDeposits","currentPage","setCurrentPage","depositOptions","useMemo","amount","ethers","utils","parseUnits","label","color","useEffect","a","provider","providers","Web3Provider","window","ethereum","signer","getSigner","Contract","tokenABI","GiftABI","error","console","initializeContracts","maxAmount","allowance","gte","checkApprovalStatus","i","promises","currentIndex","push","getDepositDetails","then","deposit","id","catch","Promise","all","fetchedDeposits","validDeposits","filter","sortedDeposits","reverse","map","user","timestamp","transactionId","fetchDeposits","approve","index","tx","wait","makeDeposit","alert","handleButtonClick","alignItems","justifyContent","onClick","style","display","gridTemplateColumns","gap","marginBottom","option","disabled","background","padding","fontSize","margin","textAlign","toString","formatUnits","Date","toLocaleString","marginTop","prev","Math","max","length","styles","emojiPicker","flexWrap","border","borderRadius","backgroundColor","emojiButton","cursor","EmojiPicker","setNewMessage","newMessage","emoji","role","tabIndex","onKeyDown","e","key","runningLightAnimation","keyframes","hoverEffect","activeEffect","borderGlow","ChatBox","Input","input","theme","colors","failure","text","align","primary","isActive","TopListTitle","container","flexDirection","width","maxWidth","position","overflow","fileButton","marginLeft","chatBox","height","overflowY","messageContainer","emojiFileContainer","avatar","marginRight","message","flex","inputContainer","searchButton","sendButton","sentImage","maxHeight","fileInput","previewContainer","previewText","previewImage","topListBox","topList","listStyle","topListImage","inputRow","fileContainer","boxShadow","paginationButton","lastCollectedInfo","collectButton","supabase","createClient","process","Profile","messages","setMessages","cooldown","setCooldown","lastCollector","setLastCollector","lastCollectedAmount","setLastCollectedAmount","chatBoxRef","useRef","location","useLocation","setTopList","setTop10Addresses","names","setNames","userNumbers","setUserNumbers","isSearching","setIsSearching","searchQuery","setSearchQuery","emojiPickerVisible","setEmojiPickerVisible","image","setImage","giftBalance","setGiftBalance","contract","setContract","contract2","setContract2","giftContract","setGiftContract","t","useTranslation","giftAddress","fileInputRef","contractABI","NumberPurchaseABI","TokenABI","fetchGiftBalance","balanceOf","balance","formattedBalance","parseFloat","fetchLastCollectedData","formattedAmount","interval","setInterval","clearInterval","collectTokens","collect","current","scrollTop","scrollHeight","from","select","order","ascending","data","calculateTopList","fetchMessages","channel","on","event","schema","table","payload","new","prevMessages","updatedMessages","subscribe","removeChannel","userList","usersFromMessages","msg","sender","usersFromTopList","Array","Set","newNames","newNumbers","eq","single","existingData","fetchError","code","name","number","getName","userPurchases","userPurchase","userNumber","toNumber","insert","log","fetchUserData","timer","setTimeout","clearTimeout","pathname","handleSend","trim","userMessageCount","Map","forEach","set","get","sortedTopList","entries","sort","b","top10","slice","handlePageChange","page","getSenderName","substring","getSenderStyle","findIndex","getSenderImage","formattedNumber","padStart","formatTimestamp","date","timeString","toLocaleTimeString","navigator","language","hour","minute","second","hour12","dateString","toLocaleDateString","month","day","startIndex","endIndex","totalPages","ceil","filteredTopList","toLowerCase","includes","filteredMessages","FarmsPoolsRowLoader","activeIndex","scale","variant","to","as","Link","mt","ref","src","alt","type","value","onChange","target","placeholder","click","accept","files","file","size","reader","FileReader","onload","result","readAsDataURL","Gift","bold","count","pageNumbers","startPage","getPageNumbers","pageNumber","ConnectWalletButton"],"mappings":"u9pBAGMA,EAAYC,YAAOC,IAAPD,CAAH,4RAYTE,EAAcF,IAAOG,GAAV,sZAwBXC,EAAcJ,YAAOK,IAAPL,CAAH,ifA0BXM,EAAkBN,IAAOO,IAAV,sHAOfC,EAAQR,IAAOS,GAAV,0FAkBLC,GAZYV,IAAOW,KAAV,qIAQCX,IAAOO,IAAV,iDAIKP,IAAOO,IAAV,kJAgDTK,GAzCYZ,IAAOO,IAAV,kQAiBMP,YAAOK,IAAPL,CAAH,odAwBDA,YAAOa,KAAPb,CAAH,sE,GAKIA,YAAOa,KAAPb,CAAH,qE,yBC2EAc,EAlNI,WACjB,IAAQC,EAAYC,yBAAZD,QACR,EAA0CE,mBAAS,MAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoDF,mBAAS,MAA7D,mBAAOG,EAAP,KAA2BC,EAA3B,KAGMC,EAAkB,6CAExB,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAwCP,oBAAS,GAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwCT,mBAAwB,MAAhE,mBAAOU,EAAP,KAAqBC,EAArB,KACA,EAAgCX,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAsCb,mBAAS,GAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KAEMC,EAAiBC,mBAAQ,iBAAM,CACnC,CACEC,OAAQC,SAAOC,MAAMC,WAAW,MAAO,IACvCC,MAAO,8BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,MAAO,IACvCC,MAAO,8BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,OAAQ,IACxCC,MAAO,+BACPC,MAAO,qDAET,CACEL,OAAQC,SAAOC,MAAMC,WAAW,OAAQ,IACxCC,MAAO,+BACPC,MAAO,wDAER,IAEHC,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,sDAC1B,GAAI3B,EACF,IACQ4B,EAAW,IAAIP,SAAOQ,UAAUC,aAAaC,OAAOC,UACpDC,EAASL,EAASM,YAExB9B,EAAiB,IAAIiB,SAAOc,SAvCP,6CAuCsCC,EAAUH,IACrE3B,EAAsB,IAAIe,SAAOc,SAAS5B,EAAiB8B,EAASJ,IACpE,MAAOK,GACPC,QAAQD,MAAM,kCAAmCA,GAT3B,2CAAH,qDAczBE,KACC,CAACxC,IAEJ0B,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,0DACtBxB,IAAiBH,EADK,iCAGhByC,EAAYpB,SAAOC,MAAMC,WAAW,OAAQ,IAH5B,SAIEpB,EAAcuC,UAAU1C,EAASO,GAJnC,OAIhBmC,EAJgB,OAKtBjC,EAAYiC,EAAUC,IAAIF,IALJ,gDAOtBF,QAAQD,MAAM,4BAAd,MAPsB,yDAAH,qDAYzBM,KACC,CAAC5C,EAASG,IAEbuB,qBAAU,WAsCJhB,GArCe,uCAAG,sCAAAiB,EAAA,0DAChBtB,EADgB,0BAGZwC,EAAkB,EAAd7B,EACF8B,EAAW,GAJD,aAOd,IAAMC,EAAeF,EAUrB,GATAC,EAASE,KACP3C,EAAmB4C,kBAAkBF,GAClCG,MAAK,SAAAC,GAAO,kCAAUA,GAAV,IAAmBC,GAAIL,OACnCM,OAAM,SAAAf,GAEL,OADAC,QAAQD,MAAM,+BAAgCA,GACvC,WAGbO,GACuB,EAAd7B,EAAkB,EAAG,eAjBhB,mHAoBcsC,QAAQC,IAAIT,GApB1B,QAoBVU,EApBU,OAqBVC,EAAgBD,EAAgBE,QAAO,SAAAP,GAAO,OAAgB,OAAZA,KAElDQ,EAAiBF,EAAcG,UAErC7C,EAAY4C,EAAeE,KAAI,SAACV,GAAD,MAAc,CAC3CW,KAAMX,EAAQ,GACd/B,OAAQ+B,EAAQ,GAChBY,UAAWZ,EAAQ,GACnBa,cAAeb,EAAQC,QA7BT,kDAgChBb,QAAQD,MAAM,2BAAd,MAhCgB,0DAAH,oDAsCjB2B,KAED,CAACjD,EAAaX,EAAoBK,IAErC,IAAMwD,EAAO,uCAAG,WAAOC,GAAP,eAAAxC,EAAA,0DACVxB,IAAiBH,EADP,0CAGOG,EAAc+D,QAAQ3D,EAAiBW,EAAeiD,GAAO/C,QAHpE,cAGJgD,EAHI,OAIVvD,EAAgBsD,GAJN,SAKJC,EAAGC,OALC,wBAMclE,EAAcuC,UAAU1C,EAASO,GAN/C,eAOIoC,IAAIzB,EAAeiD,GAAO/C,SACtCX,GAAY,GARJ,kDAWV8B,QAAQD,MAAM,mBAAd,MAXU,yBAaVzB,EAAgB,MAbN,6EAAH,sDAkBPsC,EAAO,uCAAG,WAAOgB,GAAP,eAAAxC,EAAA,0DACVtB,EADU,iCAGVQ,EAAgBsD,GAHN,SAIO9D,EAAmBiE,YAAYH,EAAQ,GAJ9C,cAIJC,EAJI,gBAKJA,EAAGC,OALC,OAMVE,MAAM,uBACN5D,GAAgB,GAPN,kDASV4B,QAAQD,MAAM,kBAAd,MATU,yBAWVzB,EAAgB,MAXN,6EAAH,sDAgBP2D,EAAiB,uCAAG,WAAOL,GAAP,SAAAxC,EAAA,yDACnBnB,EADmB,gCAEhB0D,EAAQC,GAFQ,6CAIhBhB,EAAQgB,GAJQ,2CAAH,sDAQvB,OACE,cAAC,IAAD,CAAMM,WAAW,QAAQC,eAAe,QAAxC,SACE,eAAC1F,EAAD,WACE,cAACO,EAAD,CAAiBoF,QAAS,kBAAMhE,GAAiBD,IAAjD,SACE,cAACb,EAAD,uCAGDa,GACC,qCACE,cAACf,EAAD,CAAWiF,MAAO,CAAEC,QAAS,OAAQC,oBAAqB,UAAWC,IAAK,OAAQC,aAAc,QAAhG,SACG9D,EAAe2C,KAAI,SAACoB,EAAQd,GAAT,OAClB,cAAC,IAAD,CAEEe,SAA2B,OAAjBtE,EACV+D,QAAS,kBAAMH,EAAkBL,IACjCS,MAAO,CACLO,WAAYF,EAAOxD,MACnB2D,QAAS,OACTC,SAAU,OACVC,OAAQ,QACRC,UAAW,UATf,SAYG3E,IAAiBuD,EAAQ,gBAAkB3D,EAAWyE,EAAOzD,MAAQ,WAXjEyD,EAAO7D,OAAOoE,iBAgBzB,cAAC/F,EAAD,CAAOmF,MAAO,CAAEW,UAAW,UAA3B,6BACA,cAACpG,EAAD,UACG2B,EAAS+C,KAAI,SAACV,GAAD,OACZ,+BACE,2CADF,IAC0BA,EAAQW,KADlC,IACwC,uBACtC,6CAFF,IAE4BzC,SAAOC,MAAMmE,YAAYtC,EAAQ/B,OAAQ,IAFrE,eAEqF,uBACnF,gDAHF,IAG+B,IAAIsE,KAAyB,IAApBvC,EAAQY,WAAkB4B,mBAHzDxC,EAAQa,oBAQrB,sBAAKY,MAAO,CAAEC,QAAS,OAAQH,eAAgB,gBAAiBkB,UAAW,QAA3E,UACE,cAACvG,EAAD,CAAasF,QAAS,kBAAM1D,GAAe,SAAC4E,GAAD,OAAUC,KAAKC,IAAIF,EAAO,EAAG,OAAKX,SAA0B,IAAhBlE,EAAvF,6BAGA,cAAC3B,EAAD,CAAasF,QAAS,kBAAM1D,GAAe,SAAC4E,GAAD,OAAUA,EAAO,MAAIX,SAAUpE,EAASkF,OAAS,EAA5F,qCCpLRC,EAAS,CACbC,YAAa,CACXN,UAAW,OACXf,QAAS,OACTH,eAAgB,SAChByB,SAAU,OACVf,QAAS,OACTgB,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB7E,MAAO,QAET8E,YAAa,CACXlB,SAAU,OACVC,OAAQ,MACRkB,OAAQ,YAIGC,EA5CK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WAGpC,OACE,qBAAK/B,MAAOqB,EAAOC,YAAnB,SAHa,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBAI1PrC,KAAI,SAAC+C,GAAD,OACV,sBAEEC,KAAK,SACLC,SAAU,EACVnC,QAAS,kBAAM+B,EAAc,GAAD,OAAIC,GAAJ,OAAiBC,KAC7CG,UAAW,SAACC,GACI,UAAVA,EAAEC,KACJP,EAAc,GAAD,OAAIC,GAAJ,OAAiBC,KAGlChC,MAAOqB,EAAOM,YAVhB,SAYGK,GAXIA,SCNTM,GAAwBC,YAAH,wVAWrBC,GAAcD,YAAH,6NAUXE,GAAeF,YAAH,2NAUZG,GAAaH,YAAH,iQAcVI,GAAUtI,IAAOO,IAAV,uTAYE8H,IAETE,GAAQvI,IAAOwI,MAAV,o1BACA,gBAAGnF,EAAH,EAAGA,MAAOoF,EAAV,EAAUA,MAAV,OAAuBpF,EAAQoF,EAAMC,OAAOC,QAAUF,EAAMC,OAAOE,QAS/D,qBAAGxC,UAA2B,UAC7B,qBAAGyC,OAAqB,UAsB3B,qBAAGJ,MAAkBC,OAAOI,WAG1B,qBAAGC,SAA2BX,GAAeD,MAG3C,qBAAGY,SAA2BX,GAAeD,KAI7CC,IACO,qBAAGK,MAAkBC,OAAOxC,cAI9CnG,GAAYC,IAAOO,IAAV,oMASTC,GAAQR,YAAOa,KAAPb,CAAH,8PAOMiI,IAEXe,GAAehJ,YAAOa,KAAPb,CAAH,uVAMDiI,I,4CC6DFjB,GAhMkC,CAC/CiC,UAAW,CACTrD,QAAS,OACTsD,cAAe,SACf1D,WAAY,SACZ2D,MAAO,OACPC,SAAU,SACV/C,OAAQ,SACRF,QAAS,OACTiB,aAAc,OACd5E,MAAO,UACP6G,SAAU,WACVC,SAAU,UAEZC,WAAY,CACVC,WAAY,MACZrD,QAAS,MACTkB,gBAAiB,UACjB7E,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdG,OAAQ,UACRnB,SAAU,QAEZqD,QAAS,CACPN,MAAO,OACPO,OAAQ,QACRC,UAAW,SACX5D,aAAc,OACdI,QAAS,OACTgB,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB7E,MAAO,OACP0G,cAAe,kBAEjBU,iBAAkB,CAChBhE,QAAS,OACTJ,WAAY,SACZW,QAAS,SAEX0D,mBAAoB,CAClBjE,QAAS,OACTJ,WAAY,SACZmB,UAAW,QAEbmD,OAAQ,CACNX,MAAO,OACPO,OAAQ,OACRK,YAAa,OACb3C,aAAc,OAEhB4C,QAAS,CACPC,KAAM,GAERC,eAAgB,CACdtE,QAAS,OACTJ,WAAY,UAEdgD,MAAO,CACLW,MAAO,OACPhD,QAAS,OACTJ,aAAc,OACdqB,aAAc,MACdC,gBAAiB,OACjB7E,MAAO,QAET2H,aAAc,CACZX,WAAY,MACZrD,QAAS,MACTkB,gBAAiB,UACjB7E,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEVD,YAAa,CACXkC,WAAY,MACZrD,QAAS,MACTkB,gBAAiB,UACjB7E,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEV6C,WAAY,CACVZ,WAAY,MACZrD,QAAS,MACTkB,gBAAiB,UACjB7E,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdG,OAAQ,WAEV8C,UAAW,CACTjB,SAAU,QACVkB,UAAW,QACXZ,OAAQ,OACRP,MAAO,OACPxC,UAAW,OACXS,aAAc,OAEhBmD,UAAW,CACT/H,MAAO,OACP+E,OAAQ,UACR4B,MAAO,OACP9B,gBAAiB,OACjBD,aAAc,MACdjB,QAAS,OACTgB,OAAQ,QAEVqD,iBAAkB,CAChB5E,QAAS,OACTJ,WAAY,SACZmB,UAAW,QAEb8D,YAAa,CACXV,YAAa,OACbvH,MAAO,QAETkI,aAAc,CACZtB,SAAU,QACVkB,UAAW,QACXlD,aAAc,OAEhBuD,WAAY,CACVxB,MAAO,OACPvD,QAAS,QACTJ,WAAY,SACZC,eAAgB,SAChBU,QAAS,OACTgB,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB7E,MAAO,OACPmE,UAAW,OACXL,UAAW,UAEbsE,QAAS,CACPC,UAAW,OACXjF,QAAS,QACTO,QAAS,IACTE,OAAQ,SACR8C,MAAO,QAET2B,aAAc,CACZ3B,MAAO,OACPO,OAAQ,OACRtC,aAAc,MACd2C,YAAa,QAEfgB,SAAU,CACRnF,QAAS,QACTuD,MAAO,OACPpD,aAAc,QAEhBiF,cAAe,CACbxF,WAAY,OACZ2D,MAAO,OACPxC,UAAW,OACXR,QAAS,OACTgB,OAAQ,oBACRC,aAAc,MACdC,gBAAiB,OACjB4D,UAAW,gCAEbnG,UAAW,CACTc,QAAS,QACTQ,SAAU,QACV5D,MAAO,OACPmE,UAAW,OAEbuE,iBAAkB,CAChB7E,OAAQ,MACRgB,gBAAiB,OACjB7E,MAAO,QAET2I,kBAAmB,CACjB/E,SAAU,MACVE,UAAW,QACX9D,MAAO,QAET4I,cAAe,CACbzE,UAAW,OACXR,QAAS,OACT3D,MAAO,OACP2E,OAAQ,OACRC,aAAc,MACdG,OAAQ,Y,UC3KN8D,GAAWC,YAFGC,2CACAA,oNAqjBLC,UAljBW,WACxB,IAAQzK,EAAYC,yBAAZD,QACR,EAAgCE,mBAAS,IAAzC,mBAAOwK,EAAP,KAAiBC,EAAjB,KACA,EAAoCzK,mBAAS,IAA7C,mBAAOyG,EAAP,KAAmBD,EAAnB,KACA,EAAgCxG,mBAAS,GAAzC,mBAAO0K,EAAP,KAAiBC,EAAjB,KACA,EAA0C3K,mBAAS,MAAnD,mBAAO4K,EAAP,KAAsBC,EAAtB,KACA,EAAsD7K,mBAAS,MAA/D,mBAAO8K,EAAP,KAA4BC,EAA5B,KACMC,EAAaC,iBAAO,MACpBC,EAAWC,cACjB,EAA8BnL,mBAAS,IAAvC,mBAAO2J,EAAP,KAAgByB,EAAhB,KACA,EAA4CpL,mBAAS,IAArD,mBAAuBqL,GAAvB,WACA,EAAsCrL,mBAAS,GAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAA0Bf,mBAAS,IAAnC,mBAAOsL,EAAP,KAAcC,EAAd,KACA,EAAsCvL,mBAAS,IAA/C,oBAAOwL,GAAP,MAAoBC,GAApB,MACA,GAAsCzL,oBAAS,GAA/C,qBAAO0L,GAAP,MAAoBC,GAApB,MACA,GAAsC3L,mBAAS,IAA/C,qBAAO4L,GAAP,MAAoBC,GAApB,MACA,GAAoD7L,oBAAS,GAA7D,qBAAO8L,GAAP,MAA2BC,GAA3B,MACA,GAA0B/L,mBAAS,MAAnC,qBAAOgM,GAAP,MAAcC,GAAd,MACA,GAAsCjM,mBAAS,GAA/C,qBAAOkM,GAAP,MAAoBC,GAApB,MACA,GAAgCnM,mBAAiC,MAAjE,qBAAOoM,GAAP,MAAiBC,GAAjB,MACA,GAAkCrM,mBAAiC,MAAnE,qBAAOsM,GAAP,MAAkBC,GAAlB,MACA,GAAwCvM,mBAAiC,MAAzE,qBAAOwM,GAAP,MAAqBC,GAArB,MACA,GAA0CzM,mBAAiC,MAA3E,qBAAOC,GAAP,MAAsBC,GAAtB,MAEQwM,GAAMC,cAAND,EAGFE,GAAc,6CAEdC,GAAe5B,iBAAO,MAE5BzJ,qBAAU,YACiB,uCAAG,8BAAAC,EAAA,sDAC1B,GAAI3B,EACF,IACQ4B,EAAW,IAAIP,SAAOQ,UAAUC,aAAcC,OAAeC,UAC7DC,EAASL,EAASM,YAExBqK,GAAY,IAAIlL,SAAOc,SAbP,6CAaiC6K,GAAa/K,IAC9DwK,GAAa,IAAIpL,SAAOc,SAbP,6CAakC8K,GAAmBhL,IACtE0K,GAAgB,IAAItL,SAAOc,SAAS2K,GAAazK,GAASJ,IAC1D7B,GAAiB,IAAIiB,SAAOc,SAbP,6CAasC+K,GAAUjL,IACrE,MAAOK,GACPC,QAAQD,MAAM,kCAAmCA,GAX3B,2CAAH,qDAgBzBE,KACC,CAACxC,IAEJ0B,qBAAU,WACR,IAAMyL,EAAgB,uCAAG,8BAAAxL,EAAA,yDAClBxB,GADkB,0EAICA,GAAciN,UAAUN,IAJzB,OAIfO,EAJe,OAKfC,EAAmBjM,SAAOC,MAAMmE,YAAY4H,EAAS,IAC3DhB,GAAekB,WAAWD,IANL,kDAQrB/K,QAAQD,MAAM,wCAAd,MARqB,0DAAH,qDAYhBkL,EAAsB,uCAAG,gCAAA7L,EAAA,yDACxB+K,GADwB,0EAICA,GAAa5B,gBAJd,cAIrBA,EAJqB,gBAKO4B,GAAa1B,sBALpB,OAKrBA,EALqB,OAMrByC,EAAkBpM,SAAOC,MAAMmE,YAAYuF,EAAqB,IACtED,EAAiBD,GACjBG,EAAuBsC,WAAWE,IARP,kDAU3BlL,QAAQD,MAAM,sCAAd,MAV2B,0DAAH,qDAe5B6K,IACAK,IAGA,IAAME,EAAWC,aAAY,WAC3BR,IACAK,MACC,KAGH,OAAO,kBAAMI,cAAcF,MAC1B,CAACvN,GAAeuM,KAInB,IAAMmB,GAAa,uCAAG,kCAAAlM,EAAA,+EAED+K,GAAaoB,UAFZ,cAEZ1J,EAFY,gBAGZA,EAAGC,OAHS,cAIlBE,MAAM,kCAJY,SAKUmI,GAAa5B,gBALvB,cAKZA,EALY,iBAMgB4B,GAAa1B,sBAN7B,QAMZA,EANY,OAOZyC,EAAkBpM,SAAOC,MAAMmE,YAAYuF,EAAqB,IACtED,EAAiBD,GACjBG,EAAuBsC,WAAWE,IAThB,kDAWlBlL,QAAQD,MAAM,2BAAd,MACAiC,MAAM,4BAZY,0DAAH,qDAgBnB7C,qBAAU,WACJwJ,EAAW6C,UACb7C,EAAW6C,QAAQC,UAAY9C,EAAW6C,QAAQE,gBAEnD,CAACjO,EAAS0K,IAEbhJ,qBAAU,YACW,uCAAG,gCAAAC,EAAA,sEACU2I,GAC3B4D,KAAK,YACLC,OAAO,KACPC,MAAM,YAAa,CAAEC,WAAW,IAJf,gBACZC,EADY,EACZA,MAAMhM,EADM,EACNA,OAMZC,QAAQD,MAAM,2BAA4BA,IAE1CqI,EAAY2D,GACZC,GAAiBD,IAVC,2CAAH,qDAcnBE,KACC,IAEH9M,qBAAU,WACR,IAAM+M,EAAUnE,GACbmE,QAAQ,mBACRC,GAAG,mBAAoB,CAAEC,MAAO,SAAUC,OAAQ,SAAUC,MAAO,aAAc,SAAAC,GAChF,IAAMnI,EAAamI,EAAQC,IAC3BpE,GAAY,SAAAqE,GACV,IAAMC,EAAe,sBAAOD,GAAP,CAAqBrI,IAE1C,OADA4H,GAAiBU,GACVA,QAGVC,YAEH,OAAO,WACL5E,GAAS6E,cAAcV,MAExB,IAEH,IAAMW,GAAWjO,mBAAQ,WACvB,IAAMkO,EAAoB3E,EAAS7G,KAAI,SAAAyL,GAAG,OAAIA,EAAIC,UAC5CC,EAAmB3F,EAAQhG,KAAI,0CACrC,OAAO4L,MAAMvB,KAAK,IAAIwB,IAAJ,sBAAYL,GAAZ,YAAkCG,QACnD,CAAC9E,EAAUb,IAEdnI,qBAAU,WACH1B,GAA+B,IAApBoP,GAASpJ,QAEN,uCAAG,8BAAArE,EAAA,6DACdgO,EAAW,GACXC,EAAa,GAFC,SAIdtM,QAAQC,IAAI6L,GAASvL,IAAT,uCAAa,WAAOC,GAAP,6BAAAnC,EAAA,+EAE6B2I,GACrD4D,KAAK,aACLC,OAAO,KACP0B,GAAG,UAAW/L,GACdgM,SANwB,mBAEbC,EAFa,EAEnBzB,OAA2B0B,EAFR,EAEC1N,QAMU,aAApB0N,EAAWC,KARF,uBASzB1N,QAAQD,MAAR,gDAAuDwB,EAAvD,KAAgEkM,GATvC,8BAavBD,EAbuB,iBAczBJ,EAAS7L,GAAQiM,EAAaG,KAC9BN,EAAW9L,GAAQiM,EAAaI,OAfP,yCAiBN7D,GAAS8D,QAAQtM,GAjBX,eAiBnBoM,EAjBmB,iBAkBE1D,GAAU6D,cAAcvM,GAlB1B,eAkBnBwM,EAlBmB,OAmBnBC,EAAaD,EAAaH,OAAOK,WAEvCb,EAAS7L,GAAQoM,EACjBN,EAAW9L,GAAQyM,EAtBM,UAwBDjG,GAAS4D,KAAK,aAAauC,OAAO,CAAC,CAAEzQ,QAAS8D,EAAMoM,OAAMC,OAAQI,KAxBjE,kBAwBjBjO,EAxBiB,EAwBjBA,OAENC,QAAQD,MAAR,+CAAsDwB,EAAtD,KAA+DxB,GAE/DC,QAAQmO,IAAR,6CAAkD5M,EAAlD,kBA5BuB,0DAgC3BvB,QAAQD,MAAR,kCAAyCwB,EAAzC,WAhC2B,0DAAb,wDAJE,OAwCpB2H,EAASkE,GACThE,GAAeiE,GAzCK,2CAAH,oDA4CnBe,KACC,CAAC3Q,EAASoP,GAAU9C,GAAUE,KAEjC9K,qBAAU,WACR,GAAIkJ,EAAW,EAAG,CAChB,IAAMgG,EAAQC,YAAW,kBAAMhG,EAAYD,EAAW,KAAI,KAC1D,OAAO,kBAAMkG,aAAaF,OAG3B,CAAChG,IAEJ,IA4JwBmG,GAlIlBC,GAAU,uCAAG,gCAAArP,EAAA,2DACbiJ,EAAW,IAAM5K,EADJ,oDAGZ2G,EAAWsK,QAAW/E,GAHV,wDAKXjD,EAAU,CACdpB,KAAMlB,EACN4I,OAAQvP,EACRkM,UARe,SAWa5B,GAC3B4D,KAAK,YACLuC,OAAO,CAACxH,IAbM,kBAWTqF,MAAMhM,EAXG,EAWHA,QAKZC,QAAQD,MAAM,yBAA0BA,GACxCiC,MAAM,2BAAD,OAA4BjC,EAAM2G,YAEvCvC,EAAc,IACdyF,GAAS,MACTtB,EAAY,KArBG,4CAAH,qDAyBV0D,GAAmB,SAAC7D,GACxB,IAAMwG,EAAmB,IAAIC,IAE7BzG,EAAS0G,SAAQ,SAAC9B,GACZA,EAAIzH,MAA4B,KAApByH,EAAIzH,KAAKoJ,QACvBC,EAAiBG,IAAI/B,EAAIC,QAAS2B,EAAiBI,IAAIhC,EAAIC,SAAW,GAAK,MAI/E,IAAMgC,EAAgB9B,MAAMvB,KAAKgD,EAAiBM,WAAWC,MAAK,SAAC9P,EAAG+P,GAAJ,OAAUA,EAAE,GAAK/P,EAAE,MACrF2J,EAAWiG,GAEX,IAAMI,EAAQJ,EAAcK,MAAM,EAAG,IAAI/N,KAAI,0CAC7C0H,EAAkBoG,IAGdE,GAAmB,SAACC,GACxB7Q,EAAe6Q,IAGXC,GAAgB,SAACxC,GACrB,OAAKA,EAIU,+CAAXA,EACK,QAGF/D,EAAM+D,IAAN,UAAoBA,EAAOyC,UAAU,EAAG,GAAxC,cAAgDzC,EAAOyC,UAAUzC,EAAOvJ,OAAS,IAP/E,WAULiM,GAAiB,SAAC1C,GACtB,GAAe,+CAAXA,EACF,MAAO,CAAE9N,MAAO,QAElB,IAAM0C,EAAQ0F,EAAQqI,WAAU,yCAAqB3C,KACrD,GAAIpL,GAAS,EAAG,CACd,GAAIA,EAAQ,GACV,MAAO,CAAE1C,MAAO,WAElB,GAAI0C,EAAQ,IACV,MAAO,CAAE1C,MAAO,WAElB,GAAI0C,EAAQ,IACV,MAAO,CAAE1C,MAAO,WAGpB,MAAO,CAAEA,MAAO,SAGZ0Q,GAAiB,SAAC5C,GACtB,IAGM6C,EAHA7B,EAAa7E,GAAY6D,GAE/B,OAAIgB,GAKA6B,EAFE7B,EAAa,GAEGA,EAAW/K,WAAW6M,SAAS,EAAG,KAGlC9B,EAAW/K,WAAW6M,SAAS,EAAG,KAGhD,gBAAN,OAAuBD,EAAvB,SAGK,wBAIHE,GAAkB,SAACvO,GACvB,IAAMwO,EAAO,IAAI7M,KAAK3B,GAChByO,EAAaD,EAAKE,mBAAmBC,UAAUC,SAAU,CAC7DC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,QAAQ,IAEJC,EAAaT,EAAKU,mBAAmBP,UAAUC,SAAU,CAC7DO,MAAO,OACPC,IAAK,YAEP,MAAM,GAAN,OAAUX,EAAV,aAAyBQ,IAGrBI,GA3Ue,IA2UDpS,EAAc,GAC5BqS,GAAWD,GA5UI,GA+UfE,IAFezJ,EAAQ+H,MAAMwB,GAAYC,IAE5BvN,KAAKyN,KAAK1J,EAAQ7D,OA/UhB,KAuWfwN,GAAkB3J,EAAQnG,QAAO,YAAa,IAAXI,EAAU,oBACjD,OAAKgI,KACYiG,GAAcjO,GACf2P,cAAcC,SAAS5H,GAAY2H,gBAAkB3P,EAAK2P,cAAcC,SAAS5H,GAAY2H,mBAGzGE,GAAmBjJ,EAAShH,QAAO,SAAC4L,GAAD,OACvCA,EAAIzH,MAAQyH,EAAIzH,KAAK4L,cAAcC,SAAS5H,GAAY2H,kBAG1D,OACE,eAAC,GAAD,WAEgB,cAACG,GAAA,EAAD,IACV,cAAC,GAAD,yBACA,cAAC,IAAD,CAAMnP,WAAW,SAASC,eAAe,SAAzC,SACE,eAAC,IAAD,CAAYmP,aA1BE9C,GA0B0B3F,EAAS2F,SAxBvDA,GAAS2C,SAAS,uBAClB3C,GAAS2C,SAAS,0BAEX,EAEF,GAmB6DI,MAAM,KAAKC,QAAQ,SAA/E,UACE,cAAC,IAAD,CAAgB3Q,GAAG,gBAAgB4Q,GAAG,QAAQC,GAAIC,IAAlD,SACGtH,GAAE,YAEL,cAAC,IAAD,CAAgBxJ,GAAG,gBAAgB4Q,GAAG,eAAeC,GAAIC,IAAMC,GAAG,MAAlE,SACGvH,GAAE,aAEL,cAAC,IAAD,CAAgBxJ,GAAG,gBAAgB4Q,GAAG,YAAYC,GAAIC,IAAMC,GAAG,MAA/D,SACGvH,GAAE,mBAIR5M,EACH,qCACE,eAACuH,GAAD,CAAS6M,IAAKlJ,EAAd,UACGyI,GAAiB3N,OAAS,EACzB2N,GACGjQ,QAAO,SAAC4L,GAAD,OAAS,IAAI5J,KAAK4J,EAAIvL,cAC7BF,KAAI,SAACyL,GAAD,OACH,sBAAkB1K,MAAOqB,GAAO4C,iBAAhC,UACE,qBAAKwL,IAAKlC,GAAe7C,EAAIC,QAAS+E,IAAI,SAAS1P,MAAOqB,GAAO8C,SACjE,sBAAKnE,MAAOqB,GAAOgD,QAAnB,UACE,oBAAGrE,MAAOqN,GAAe3C,EAAIC,QAA7B,UAAuCwC,GAAczC,EAAIC,QAAzD,OADF,IAC0ED,EAAIzH,KAC3EyH,EAAIpD,OAAS,qBAAKmI,IAAK/E,EAAIpD,MAAOoI,IAAI,OAAO1P,MAAOqB,GAAOqD,YAC5D,sBAAM1E,MAAOqB,GAAOlC,UAApB,SAAgCuO,GAAgBhD,EAAIvL,kBAL9CuL,EAAIlM,OAUlB,qBAAKwB,MAAOqB,GAAOgD,QAAnB,8BAEDmD,GAAc,KACb,mCACV,cAAC,IAAD,CAAM3H,WAAW,OAAOC,eAAe,OAAvC,SACF,cAAC,IAAD,CAAQqP,QAAQ,OAAOpP,QAASkJ,GAAhC,SACE,eAAC,IAAD,CAAM1F,cAAc,SAApB,UACE,eAAC,KAAD,uBAAgBiE,GAAhB,8BACA,cAAC,KAAD,CAAM/G,SAAS,OAAO5D,MAAM,WAA5B,+DAaI,sBAAKmD,MAAOqB,GAAO+D,SAAnB,UACE,eAAC,IAAD,CAAMvF,WAAW,SAASC,eAAe,SAAzC,UACE,cAAC8C,GAAD,CACE+M,KAAK,OACLC,MAAO5I,GAAcE,GAAcnF,EACnC8N,SAAU7I,GAxOQ,SAAC5E,GAC/B+E,GAAe/E,EAAE0N,OAAOF,QAuOsC,SAACxN,GAAD,OAAON,EAAcM,EAAE0N,OAAOF,QAChFzN,UAAW,SAACC,GACI,UAAVA,EAAEC,KAAoB2E,IAA4B,IAAbhB,GACvCoG,MAGJpM,MAAOqB,GAAOwB,MACdkN,YAAa/I,GAAc,uBAA0BhB,EAAW,EAAX,oBAA4BA,EAA5B,KAA0C,iBAC/F1F,SAAU0F,EAAW,IAAMgB,KAE7B,cAAC,IAAD,CAAQjH,QAASqM,GAAYpM,MAAOqB,GAAOoD,WAAYnE,SAAU0F,EAAW,EAA5E,kBAGA,cAAC,IAAD,CAAQjG,QAAS,kBAAMsH,IAAuBD,KAAqBpH,MAAOqB,GAAOM,YAAjF,0BAGA,cAAC,IAAD,CAAQ5B,QA7PK,WACvBkH,IAAgBD,IAChBG,GAAe,KA2P8BnH,MAAOqB,GAAOmD,aAAjD,SACGwC,GAAc,IAAM,iBAEvB,cAAC,IAAD,CACEjH,QAAS,kBAAMoI,GAAagB,QAAQ6G,SACpChQ,MAAOqB,GAAOuC,WAFhB,6BAOD0D,IACC,sBAAKtH,MAAOqB,GAAOwD,iBAAnB,UACE,cAAC,KAAD,CAAM7E,MAAOqB,GAAOyD,YAApB,6BACA,qBAAK2K,IAAKnI,GAAOoI,IAAI,UAAU1P,MAAOqB,GAAO0D,qBAKnD,uBACE4K,KAAK,OACLM,OAAO,UACPT,IAAKrH,GACLnI,MAAO,CAAEC,QAAS,QAClB4P,SA3QgB,SAACzN,GACzB,GAAIA,EAAE0N,OAAOI,OAAS9N,EAAE0N,OAAOI,MAAM,GAAI,CACvC,IAAMC,EAAO/N,EAAE0N,OAAOI,MAAM,GAE5B,GAAIC,EAAKC,KAAO,QAEd,YADAzQ,MAAM,yCAIR,IAAM0Q,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACnO,GACfmF,GAASnF,EAAE0N,OAAOU,SAEpBH,EAAOI,cAAcN,OAiQhB/I,IACC,cAAC,EAAD,CACEtF,cAAeA,EACfC,WAAYA,IAGhB,cAAC,IAAD,CAAMlC,WAAW,QAAQC,eAAe,QAAxC,SACE,cAAC4Q,EAAD,MAEF,cAAC,IAAD,CAAM7Q,WAAW,QAAQC,eAAe,QAAxC,SACGoG,GAAiBE,GAChB,sBAAKpG,MAAOqB,GAAOmE,kBAAnB,UACE,cAAC,KAAD,CAAMmL,MAAI,EAAClQ,SAAS,OAApB,qCACA,cAAC,KAAD,CAAMkQ,MAAI,EAAClQ,SAAS,OAApB,SAA4ByF,IAC5B,eAAC,KAAD,CAAMyK,MAAI,EAAClQ,SAAS,OAApB,qBAAoC2F,EAApC,sBAIN,sBAAKpG,MAAOqB,GAAO2D,WAAnB,UACE,cAAC3B,GAAD,uBACA,cAACT,GAAD,CACE+M,KAAK,OACLC,MAAO1I,GACP2I,SAAU,SAACzN,GAAD,OAAO+E,GAAe/E,EAAE0N,OAAOF,QACzC5P,MAAOqB,GAAOwB,MACdkN,YAAY,8BAEd,oBAAI/P,MAAOqB,GAAO4D,QAAlB,SACG2J,GAAgB5B,MAAMwB,GAAYC,IAAUxP,KAAI,WAAgBM,GAAhB,uBAAEL,EAAF,KAAQ0R,EAAR,YAC/C,qBAAe5Q,MAAOqN,GAAenO,GAArC,UACE,qBAAKuQ,IAAKlC,GAAerO,GAAOwQ,IAAI,WAAW1P,MAAOqB,GAAO8D,eAC5DqJ,GAAajP,EAAQ,EAFxB,KAE6B4N,GAAcjO,GACzC,uBACCA,EAJH,KAIW0R,EAJX,cAAS1R,QAQb,gCACG9C,EAAc,GACb,cAAC,IAAD,CAAQ2D,QAAS,kBAAMkN,GAAiB7Q,EAAc,IAAI4D,MAAOqB,GAAOkE,iBAAxE,sBA9KS,WAKrB,IAJA,IAAMsL,EAAc,GAEdC,EAAY1U,EAET6B,EAAI,EAAGA,EAHO,GAGe6S,EAAY7S,GAAKyQ,GAAYzQ,IACjE4S,EAAYzS,KAAK0S,EAAY7S,GAG/B,OAAO4S,EAyKIE,GAAiB9R,KAAI,SAAC+R,GAAD,OACpB,cAAC,IAAD,CAEEjR,QAAS,kBAAMkN,GAAiB+D,IAChChR,MAAOqB,GAAOkE,iBAHhB,SAKGyL,GAJIA,MAOR5U,EAAcsS,IACb,cAAC,IAAD,CAAQ3O,QAAS,kBAAMkN,GAAiB7Q,EAAc,IAAI4D,MAAOqB,GAAOkE,iBAAxE,2BAQR,cAAC0L,EAAA,EAAD","file":"static/js/6.ca5d5979.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst Container = styled(Box)`\r\n  max-width: 350px;\r\n    align-items: right;\r\n  margin: 10px auto;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  justify-content: right;\r\n  border-radius: 12px;\r\n  background-color: #000;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  color: #fff;\r\n`;\r\nconst DepositList = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  margin-top: 20px;\r\n  background-color: #1e1e1e;\r\n  border-radius: 8px;\r\n    font-size: 0.9rem;\r\n\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  color: #e5e5e5;\r\n\r\n  li {\r\n    padding: 15px;\r\n    border-bottom: 1px solid #333;\r\n    \r\n    &:last-child {\r\n      border-bottom: none;\r\n    }\r\n\r\n    strong {\r\n      color: #62d5a3;\r\n    }\r\n  }\r\n`;\r\nconst ArrowButton = styled(Button)`\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  font-weight: bold;\r\n  padding: 10px 20px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #3aa47b;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 0;\r\n  font-size: 1.2rem;\r\n  color: #62d5a3;\r\n`;\r\n\r\nconst ArrowIcon = styled.span`\r\n  margin-left: 10px;\r\n  font-size: 1.5rem;\r\n  color: #62d5a3;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst ImageItem = styled.div`\r\n  text-align: center;\r\n\r\n  img {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  }\r\n\r\n  p {\r\n    color: #e5e5e5;\r\n    font-size: 0.9rem;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  width: 100%;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  background-color: #62d5a3;\r\n  color: #1e1e1e;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n\r\n  &:hover {\r\n    background-color: #4abf88;\r\n    transform: translateY(-2px);\r\n  }\r\n\r\n  &:active {\r\n    background-color: #3aa47b;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst InfoText = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\n\r\nconst InfoText2 = styled(Text)`\r\n  font-size: 1.2rem;\r\n  color: #e5e5e5;\r\n`;\r\nexport { Container, HeaderContainer, Title, ArrowIcon, Content, ImageGrid, ImageItem, StyledButton, InfoText,InfoText2, DepositList, ArrowButton };\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { useWeb3React } from '@web3-react/core/core/core';\r\nimport { Button, Flex } from '@pancakeswap/uikit';\r\nimport { Container, HeaderContainer, Title, ImageGrid, DepositList, ArrowButton, InfoText } from './StyledComponents2';\r\nimport tokenABI from './TokenABI.json';\r\nimport GiftABI from './GiftABI.json';\r\n\r\nconst VizslaSwap = () => {\r\n  const { account } = useWeb3React();\r\n  const [tokenContract, setTokenContract] = useState(null);\r\n  const [vizslaSwapContract, setVizslaSwapContract] = useState(null);\r\n\r\n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\r\n  const contractAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';\r\n\r\n  const [approved, setApproved] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [loadingIndex, setLoadingIndex] = useState<number | null>(null);\r\n  const [deposits, setDeposits] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const depositOptions = useMemo(() => [\r\n    {\r\n      amount: ethers.utils.parseUnits('200', 18),\r\n      label: '200 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #62D5A3 0%, #38A169 100%)', // Zöld gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('500', 18),\r\n      label: '500 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #CD7F32 0%, #8C4A00 100%)', // Bronz gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('1000', 18),\r\n      label: '1000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #6E6E6E 0%, #4B4B4B 100%)', // Ezüst gradiens\r\n    },\r\n    {\r\n      amount: ethers.utils.parseUnits('5000', 18),\r\n      label: '5000 VIZSLASWAP 🎁',\r\n      color: 'linear-gradient(135deg, #B8860B 0%, #8B7500 100%)', // Arany gradiens\r\n    },\r\n  ], []);\r\n\r\n  useEffect(() => {\r\n    const initializeContracts = async () => {\r\n      if (account) {\r\n        try {\r\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n          const signer = provider.getSigner();\r\n\r\n          setTokenContract(new ethers.Contract(tokenContractAddress, tokenABI, signer));\r\n          setVizslaSwapContract(new ethers.Contract(contractAddress, GiftABI, signer));\r\n        } catch (error) {\r\n          console.error('Failed to initialize contracts:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeContracts();\r\n  }, [account]);\r\n\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      if (tokenContract && account) {\r\n        try {\r\n          const maxAmount = ethers.utils.parseUnits('5000', 18);\r\n          const allowance = await tokenContract.allowance(account, contractAddress);\r\n          setApproved(allowance.gte(maxAmount));\r\n        } catch (error) {\r\n          console.error('Error checking allowance:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    checkApprovalStatus();\r\n  }, [account, tokenContract]);\r\n\r\n  useEffect(() => {\r\n    const fetchDeposits = async () => {\r\n      if (vizslaSwapContract) {\r\n        try {\r\n          let i = currentPage * 5;\r\n          const promises = [];\r\n\r\n          while (true) {\r\n            const currentIndex = i;\r\n            promises.push(\r\n              vizslaSwapContract.getDepositDetails(currentIndex)\r\n                .then(deposit => ({ ...deposit, id: currentIndex }))\r\n                .catch(error => {\r\n                  console.error('Stopping fetch due to error:', error);\r\n                  return null;\r\n                })\r\n            );\r\n            i++;\r\n            if (i >= currentPage * 5 + 5) break;\r\n          }\r\n\r\n          const fetchedDeposits = await Promise.all(promises);\r\n          const validDeposits = fetchedDeposits.filter(deposit => deposit !== null);\r\n\r\n          const sortedDeposits = validDeposits.reverse();\r\n\r\n          setDeposits(sortedDeposits.map((deposit) => ({\r\n            user: deposit[0],\r\n            amount: deposit[1],\r\n            timestamp: deposit[2],\r\n            transactionId: deposit.id,\r\n          })));\r\n        } catch (error) {\r\n          console.error('Error fetching deposits:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (showDropdown) {\r\n      fetchDeposits();\r\n    }\r\n  }, [currentPage, vizslaSwapContract, showDropdown]);\r\n\r\n  const approve = async (index: number) => {\r\n    if (tokenContract && account) {\r\n      try {\r\n        const tx = await tokenContract.approve(contractAddress, depositOptions[index].amount);\r\n        setLoadingIndex(index);\r\n        await tx.wait();\r\n        const allowance = await tokenContract.allowance(account, contractAddress);\r\n        if (allowance.gte(depositOptions[index].amount)) {\r\n          setApproved(true);\r\n        }\r\n      } catch (error) {\r\n        console.error('Approval failed:', error);\r\n      } finally {\r\n        setLoadingIndex(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deposit = async (index: number) => {\r\n    if (vizslaSwapContract) {\r\n      try {\r\n        setLoadingIndex(index);\r\n        const tx = await vizslaSwapContract.makeDeposit(index + 1);\r\n        await tx.wait();\r\n        alert('Deposit successful!');\r\n        setShowDropdown(false);\r\n      } catch (error) {\r\n        console.error('Deposit failed:', error);\r\n      } finally {\r\n        setLoadingIndex(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleButtonClick = async (index: number) => {\r\n    if (!approved) {\r\n      await approve(index);\r\n    } else {\r\n      await deposit(index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex alignItems=\"right\" justifyContent=\"right\">\r\n      <Container>\r\n        <HeaderContainer onClick={() => setShowDropdown(!showDropdown)}>\r\n          <InfoText>Send Gift 🎁</InfoText>\r\n        </HeaderContainer>\r\n\r\n        {showDropdown && (\r\n          <>\r\n            <ImageGrid style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', marginBottom: '20px' }}>\r\n              {depositOptions.map((option, index) => (\r\n                <Button\r\n                  key={option.amount.toString()}\r\n                  disabled={loadingIndex !== null}\r\n                  onClick={() => handleButtonClick(index)}\r\n                  style={{\r\n                    background: option.color,\r\n                    padding: '10px',\r\n                    fontSize: '12px',\r\n                    margin: '5px 0',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  {loadingIndex === index ? 'Processing...' : approved ? option.label : 'Approve'}\r\n                </Button>\r\n              ))}\r\n            </ImageGrid>\r\n\r\n            <Title style={{ textAlign: 'center' }}>Recent Deposits</Title>\r\n            <DepositList>\r\n              {deposits.map((deposit) => (\r\n                <li key={deposit.transactionId}>\r\n                  <strong>User:</strong> {deposit.user} <br />\r\n                  <strong>Amount:</strong> {ethers.utils.formatUnits(deposit.amount, 18)} VIZSLASWAP <br />\r\n                  <strong>Timestamp:</strong> {new Date(deposit.timestamp * 1000).toLocaleString()}\r\n                </li>\r\n              ))}\r\n            </DepositList>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\r\n              <ArrowButton onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 0))} disabled={currentPage === 0}>\r\n                &larr; Previous\r\n              </ArrowButton>\r\n              <ArrowButton onClick={() => setCurrentPage((prev) => prev + 1)} disabled={deposits.length < 5}>\r\n                Next &rarr;\r\n              </ArrowButton>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default VizslaSwap;\r\n","import React from 'react';\r\n\r\nconst EmojiPicker = ({ setNewMessage, newMessage }) => {\r\n  const emojis = ['😊', '😂', '😢', '😍', '😎', '🎉', '🎁', '😜', '🤔', '😇', '🙃', '😅', '🤣', '🤩', '😡', '🥳', '🤯', '😱', '🤗', '😏', '😴', '🤤', '😷', '🤒', '🤕', '🤮', '🤑', '😈', '👻', '💩', '😺', '👀', '💪', '🙏', '👏', '🙌', '👐', '✌️', '👍', '👎', '👊', '🤟'];\r\n\r\n  return (\r\n    <div style={styles.emojiPicker}>\r\n      {emojis.map((emoji) => (\r\n        <span\r\n          key={emoji}\r\n          role=\"button\"\r\n          tabIndex={0}\r\n          onClick={() => setNewMessage(`${newMessage}${emoji}`)} // Only append emoji, no send\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setNewMessage(`${newMessage}${emoji}`);\r\n            }\r\n          }}\r\n          style={styles.emojiButton}\r\n        >\r\n          {emoji}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  emojiPicker: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  emojiButton: {\r\n    fontSize: '24px',\r\n    margin: '5px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { Box, Button, Text } from '@pancakeswap/uikit';\r\n\r\nconst runningLightAnimation = keyframes`\r\n  0% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n  50% {\r\n    text-shadow: 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3, 0 0 12.5px #62d5a3;\r\n  }\r\n  100% {\r\n    text-shadow: 0 0 2.5px #62d5a3, 0 0 5px #62d5a3, 0 0 7.5px #62d5a3, 0 0 10px #62d5a3;\r\n  }\r\n`;\r\nconst hoverEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(255, 255, 255, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(255, 255, 255, 0.7);\r\n  }\r\n`;\r\nconst activeEffect = keyframes`\r\n  0% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 5px rgba(83, 178, 140, 0.3);\r\n  }\r\n  100% {\r\n    transform: translateX(0);\r\n    box-shadow: 0 0 15px rgba(83, 178, 140, 0.7);\r\n  }\r\n`;\r\nconst borderGlow = keyframes`\r\n  0% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n  50% {\r\n    border-color: #4abf88;\r\n    box-shadow: 0 0 15px #4abf88;\r\n  }\r\n  100% {\r\n    border-color: #62d5a3;\r\n    box-shadow: 0 0 5px #62d5a3;\r\n  }\r\n`;\r\nconst ChatBox = styled.div`\r\n  width: 100%;\r\n  height: 300px;\r\n    margin-top: 20px;\r\n  overflow-y: scroll;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  border: 2px solid #5a9f98;\r\n  border-radius: 8px;\r\n  background-color: #000;\r\n  color: #fff;\r\n  flex-direction: column-reverse;\r\n  animation: ${borderGlow} 2s infinite;\r\n`;\r\nconst Input = styled.input<{ error?: boolean; fontSize?: string; align?: string; isActive?: boolean }>`\r\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\r\n  width: 0;\r\n  position: relative;\r\n  font-weight: 500;\r\n  max-width: 400px\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  background-color: transparent;\r\n  font-size: ${({ fontSize }) => fontSize || '16px'};\r\n  text-align: ${({ align }) => align || 'left'};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  padding: 0px;\r\n  -webkit-appearance: textfield;\r\n  transition: all 0.3s ease;\r\n\r\n  ::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  [type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n\r\n  &:hover {\r\n    animation: ${({ isActive }) => (isActive ? activeEffect : hoverEffect)} 0.5s forwards;\r\n  }\r\n\r\n  &:focus {\r\n    animation: ${activeEffect} 0.5s forwards;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 20px auto;\r\n   border-radius: 15px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\r\n  overflow: hidden;\r\n  color: #fff;\r\n`;\r\nconst Title = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n  font-size: 50px;\r\n    margin-top: -20px;\r\n  font-weight: bold; /* Make the text thicker */\r\n  margin-bottom: 20px;\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\nconst TopListTitle = styled(Text)`\r\n  text-align: center;\r\n  color: #fff;\r\n    margin-top: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n  font-size: 28px;\r\n  margin-bottom: 20px; // Ugyanaz a távolság a toplistától, mint a chatboxtól\r\n    animation: ${runningLightAnimation} 2s infinite; /* Alkalmazzuk az animációt */\r\n`;\r\n\r\nexport { runningLightAnimation, hoverEffect,activeEffect,borderGlow,ChatBox,Input,Container,Title,TopListTitle };\r\n","// ChatAppStyles.ts\r\nimport { CSSProperties } from 'react';\r\n\r\nconst styles: { [key: string]: CSSProperties } = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxWidth: '1200px',\r\n    margin: '0 auto',\r\n    padding: '20px',\r\n    borderRadius: '15px',\r\n    color: '#e5e5e5',\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  fileButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontSize: '20px',\r\n  },\r\n  chatBox: {\r\n    width: '100%',\r\n    height: '300px',\r\n    overflowY: 'scroll',\r\n    marginBottom: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    flexDirection: 'column-reverse',\r\n  },\r\n  messageContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '5px 0',\r\n  },\r\n  emojiFileContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  avatar: {\r\n    width: '45px',\r\n    height: '45px',\r\n    marginRight: '10px',\r\n    borderRadius: '25%',\r\n  },\r\n  message: {\r\n    flex: 1,\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    marginBottom: '10px',\r\n    borderRadius: '4px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n  },\r\n  searchButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  emojiButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sendButton: {\r\n    marginLeft: '5px',\r\n    padding: '8px',\r\n    backgroundColor: '#5a9f98',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  sentImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    height: 'auto',\r\n    width: 'auto',\r\n    marginTop: '10px',\r\n    borderRadius: '8px',\r\n  },\r\n  fileInput: {\r\n    color: '#fff',\r\n    cursor: 'pointer',\r\n    width: '100%',\r\n    backgroundColor: '#000',\r\n    borderRadius: '4px',\r\n    padding: '10px',\r\n    border: 'none',\r\n  },\r\n  previewContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  previewText: {\r\n    marginRight: '10px',\r\n    color: '#fff',\r\n  },\r\n  previewImage: {\r\n    maxWidth: '100px',\r\n    maxHeight: '100px',\r\n    borderRadius: '8px',\r\n  },\r\n  topListBox: {\r\n    width: '100%',\r\n    display: 'block',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    color: '#fff',\r\n    marginTop: '40px',\r\n    textAlign: 'center',\r\n  },\r\n  topList: {\r\n    listStyle: 'none',\r\n    display: 'block',\r\n    padding: '0',\r\n    margin: '10px 0',\r\n    width: '100%',\r\n  },\r\n  topListImage: {\r\n    width: '40px',\r\n    height: '40px',\r\n    borderRadius: '25%',\r\n    marginRight: '10px',\r\n  },\r\n  inputRow: {\r\n    display: 'block',\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n  },\r\n  fileContainer: {\r\n    alignItems: 'left',\r\n    width: '100%',\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    border: '2px solid #5a9f98',\r\n    borderRadius: '8px',\r\n    backgroundColor: '#000',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  },\r\n  timestamp: {\r\n    display: 'block',\r\n    fontSize: '0.8em',\r\n    color: '#aaa',\r\n    marginTop: '5px',\r\n  },\r\n  paginationButton: {\r\n    margin: '5px',\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n  },\r\n  lastCollectedInfo: {\r\n    fontSize: '8px',\r\n    textAlign: 'right',\r\n    color: '#fff',\r\n  },\r\n  collectButton: {\r\n    marginTop: '10px',\r\n    padding: '10px',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default styles;\r\n","import React, { useEffect, useRef, useState, useMemo } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core/core/core';\nimport { useTranslation } from 'contexts/Localization';\nimport { ButtonMenu, ButtonMenuItem, Button, Flex, Text } from '@pancakeswap/uikit';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { ethers } from 'ethers'; \nimport { createClient } from '@supabase/supabase-js';\nimport Gift from '../Vote2/Gift';\nimport EmojiPicker from './EmojiPicker';\nimport { ChatBox, Input, Container, Title, TopListTitle } from './StyledComponents';\nimport NumberPurchaseABI from './NumberPurchaseABI.json';\nimport contractABI from './contractABI.json';\nimport GiftABI from './GiftABI.json';\nimport TokenABI from './TokenABI.json';\nimport styles from './ChatAppStyles';\nimport FarmsPoolsRowLoader from '../Home/components/FarmsPoolsRowLoader';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY;\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\nconst Profile: React.FC = () => {\n  const { account } = useWeb3React()\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(''); \n  const [cooldown, setCooldown] = useState(0);\n  const [lastCollector, setLastCollector] = useState(null);\n  const [lastCollectedAmount, setLastCollectedAmount] = useState(null);\n  const chatBoxRef = useRef(null);\n  const location = useLocation();\n  const [topList, setTopList] = useState([]);\n  const [top10Addresses, setTop10Addresses] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [names, setNames] = useState({});\n  const [userNumbers, setUserNumbers] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [emojiPickerVisible, setEmojiPickerVisible] = useState(false);\n  const [image, setImage] = useState(null);\n  const [giftBalance, setGiftBalance] = useState(0);\n  const [contract, setContract] = useState<ethers.Contract | null>(null);\n  const [contract2, setContract2] = useState<ethers.Contract | null>(null);\n  const [giftContract, setGiftContract] = useState<ethers.Contract | null>(null);\n  const [tokenContract, setTokenContract] = useState<ethers.Contract | null>(null);\n  const itemsPerPage = 25;\n  const { t } = useTranslation();\n  const contractAddress = '0x674e3eDc898Aa4b486Bd2E5aa2D1C8653677F471';  \n  const contractAddress2 = '0xBE8C7E554C89e064ED7229952036c3678cd10180';\n  const giftAddress = '0xC8B19e19f52CE07bf9c4745caA4aAC87ab199cDD';  \n  const tokenContractAddress = '0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF';\n  const fileInputRef = useRef(null);\n   \n  useEffect(() => {\n    const initializeContracts = async () => {\n      if (account) {\n        try {\n          const provider = new ethers.providers.Web3Provider((window as any).ethereum);\n          const signer = provider.getSigner();\n      \n          setContract(new ethers.Contract(contractAddress, contractABI, signer));\n          setContract2(new ethers.Contract(contractAddress2, NumberPurchaseABI, signer));\n          setGiftContract(new ethers.Contract(giftAddress, GiftABI, signer));\n          setTokenContract(new ethers.Contract(tokenContractAddress, TokenABI, signer));\n        } catch (error) {\n          console.error('Failed to initialize contracts:', error);\n        }\n      }\n    };\n  \n    initializeContracts();\n  }, [account]);\n  \n  useEffect(() => {\n    const fetchGiftBalance = async () => {\n      if (!tokenContract) return;  // Ellenőrizd, hogy a szerződés létezik-e\n  \n      try {\n        const balance = await tokenContract.balanceOf(giftAddress);\n        const formattedBalance = ethers.utils.formatUnits(balance, 18);\n        setGiftBalance(parseFloat(formattedBalance));\n      } catch (error) {\n        console.error('Error fetching Gift contract balance:', error);\n      }\n    };\n  \n    const fetchLastCollectedData = async () => {\n      if (!giftContract) return;  // Ellenőrizd, hogy a szerződés létezik-e\n  \n      try {\n        const lastCollector = await giftContract.lastCollector();\n        const lastCollectedAmount = await giftContract.lastCollectedAmount();\n        const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n        setLastCollector(lastCollector);\n        setLastCollectedAmount(parseFloat(formattedAmount));\n      } catch (error) {\n        console.error('Error fetching last collected data:', error);\n      }\n    };\n  \n    // Azonnali első lekérdezés\n    fetchGiftBalance();\n    fetchLastCollectedData();\n  \n    // Ismételt lekérdezés 5 másodpercenként\n    const interval = setInterval(() => {\n      fetchGiftBalance();\n      fetchLastCollectedData();\n    }, 5000);\n  \n    // Tisztítás az unmountnál\n    return () => clearInterval(interval);\n  }, [tokenContract, giftContract]);\n  \n  \n\n  const collectTokens = async () => {\n    try {\n      const tx = await giftContract.collect();\n      await tx.wait();\n      alert('Tokens collected successfully!');\n      const lastCollector = await giftContract.lastCollector();\n      const lastCollectedAmount = await giftContract.lastCollectedAmount();\n      const formattedAmount = ethers.utils.formatUnits(lastCollectedAmount, 18);\n      setLastCollector(lastCollector);\n      setLastCollectedAmount(parseFloat(formattedAmount));\n    } catch (error) {\n      console.error('Error collecting tokens:', error);\n      alert('Failed to collect tokens');\n    }\n  };\n\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [account, messages]); \n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const { data, error } = await supabase\n        .from('messages')\n        .select('*')\n        .order('timestamp', { ascending: true });\n    \n      if (error) {\n        console.error('Error fetching messages:', error);\n      } else {\n        setMessages(data);\n        calculateTopList(data);\n      }\n    };\n    \n    fetchMessages();\n  }, []);\n\n  useEffect(() => {\n    const channel = supabase\n      .channel('public:messages')\n      .on('postgres_changes', { event: 'INSERT', schema: 'public', table: 'messages' }, payload => {\n        const newMessage = payload.new;\n        setMessages(prevMessages => {\n          const updatedMessages = [...prevMessages, newMessage];\n          calculateTopList(updatedMessages);\n          return updatedMessages;\n        });\n      })\n      .subscribe();\n    \n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n  \n  const userList = useMemo(() => {\n    const usersFromMessages = messages.map(msg => msg.sender);\n    const usersFromTopList = topList.map(([user]) => user);\n    return Array.from(new Set([...usersFromMessages, ...usersFromTopList])); // Egyedi felhasználók összegyűjtése\n  }, [messages, topList]);\n\n  useEffect(() => {\n    if (!account || userList.length === 0) return;\n    \n    const fetchUserData = async () => {\n      const newNames = {};\n      const newNumbers = {};\n    \n      await Promise.all(userList.map(async (user) => {\n        try {\n          const { data: existingData, error: fetchError } = await supabase\n            .from('user_data')\n            .select('*')\n            .eq('account', user)\n            .single();\n    \n          if (fetchError && fetchError.code !== 'PGRST116') {\n            console.error(`Error fetching data from Supabase for ${user}:`, fetchError);\n            return;\n          }\n    \n          if (existingData) {\n            newNames[user] = existingData.name;\n            newNumbers[user] = existingData.number;\n          } else {\n            const name = await contract.getName(user);\n            const userPurchase = await contract2.userPurchases(user);\n            const userNumber = userPurchase.number.toNumber();\n    \n            newNames[user] = name;\n            newNumbers[user] = userNumber;\n    \n            const { error } = await supabase.from('user_data').insert([{ account: user, name, number: userNumber }]);\n            if (error) {\n              console.error(`Error inserting data to Supabase for ${user}:`, error);\n            } else {\n              console.log(`User data inserted to Supabase for ${user} successfully`);\n            }\n          }\n        } catch (error) {\n          console.error(`Error fetching data for ${user}:`, error);\n        }\n      }));\n    \n      setNames(newNames);\n      setUserNumbers(newNumbers);\n    };\n    \n    fetchUserData();\n  }, [account, userList, contract, contract2]);\n    \n  useEffect(() => {\n    if (cooldown > 0) {\n      const timer = setTimeout(() => setCooldown(cooldown - 1), 1000);\n      return () => clearTimeout(timer);\n    }\n    return undefined; // Hozzáadunk egy visszatérési értéket akkor is, ha cooldown <= 0\n  }, [cooldown]);\n  \n  const toggleSearchMode = () => {\n    setIsSearching(!isSearching);\n    setSearchQuery('');\n  };\n\n  const handleSearchInputChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n    \n      if (file.size > 1048576) {\n        alert('The file size must be less than 1 MB.');\n        return;\n      }\n    \n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setImage(e.target.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleSend = async () => {\n    if (cooldown > 0 || !account) return;  // Ellenőrizd, hogy van-e bejelentkezett felhasználó\n    \n    if (!newMessage.trim() && !image) return;\n    \n    const message = {\n      text: newMessage,\n      sender: account,\n      image,\n    };\n    \n    const { data, error } = await supabase\n      .from('messages')\n      .insert([message]);\n    \n    if (error) {\n      console.error('Error sending message:', error);\n      alert(`Failed to send message: ${error.message}`);\n    } else {\n      setNewMessage('');\n      setImage(null);\n      setCooldown(20);\n    }\n  };\n\n  const calculateTopList = (messages) => {\n    const userMessageCount = new Map();\n    \n    messages.forEach((msg) => {\n      if (msg.text && msg.text.trim() !== '') {\n        userMessageCount.set(msg.sender, (userMessageCount.get(msg.sender) || 0) + 1);\n      }\n    });\n    \n    const sortedTopList = Array.from(userMessageCount.entries()).sort((a, b) => b[1] - a[1]);\n    setTopList(sortedTopList);\n    \n    const top10 = sortedTopList.slice(0, 25).map(([user]) => user);\n    setTop10Addresses(top10);\n  };\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const getSenderName = (sender) => {\n    if (!sender) {\n      return 'Unknown';\n    }\n    \n    if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n      return 'Admin';\n    }\n    \n    return names[sender] || `${sender.substring(0, 5)}...${sender.substring(sender.length - 5)}`;\n  };\n  \n  const getSenderStyle = (sender) => {\n    if (sender === '0xEa9C8f2D9d91cF44206F0d869b9cc39897a13Ae1') {\n      return { color: 'gold' };\n    }\n    const index = topList.findIndex(([user]) => user === sender);\n    if (index >= 0) {\n      if (index < 25) {\n        return { color: '#ffdc73' };\n      }\n      if (index < 100) {\n        return { color: '#E5E4E2' };\n      }\n      if (index < 250) {\n        return { color: '#cd7f32' };\n      }\n    }\n    return { color: '#fff' };\n  };\n\n  const getSenderImage = (sender) => {\n    const userNumber = userNumbers[sender];\n    \n    if (userNumber) {\n      let formattedNumber;\n  \n      if (userNumber < 10) {\n        // Kétjegyűre formázzuk, ha a szám kisebb, mint 10\n        formattedNumber = userNumber.toString().padStart(2, '0');\n      } else {\n        // Háromjegyűre formázzuk, ha a szám 10 vagy nagyobb\n        formattedNumber = userNumber.toString().padStart(3, '0');\n      }\n  \n      return `images/pixel/${formattedNumber}.jpg`;\n    }\n  \n    return 'images/pixel/200.png';  // Alapértelmezett kép, ha nincs szám\n  };\n  \n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp); // Eredeti UTC idő\n    const timeString = date.toLocaleTimeString(navigator.language, {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: false,\n    });\n    const dateString = date.toLocaleDateString(navigator.language, {\n      month: 'long',     // Hónap neve\n      day: 'numeric',    // Nap\n    });\n    return `${timeString}, ${dateString}`;\n  };\n  \n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const currentItems = topList.slice(startIndex, endIndex);\n\n  const totalPages = Math.ceil(topList.length / itemsPerPage);\n\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPageNumbers = 3;\n    const startPage = currentPage;\n\n    for (let i = 0; i < maxPageNumbers && startPage + i <= totalPages; i++) {\n      pageNumbers.push(startPage + i);\n    }\n\n    return pageNumbers;\n  };\n  \n  const getActiveIndex = (pathname) => {\n    if (\n      pathname.includes('/lockedstaking/all') ||\n      pathname.includes('/lockedstaking/history')\n    ) {\n      return 1;\n    }\n    return 0;\n  };\n\n  const filteredTopList = topList.filter(([user]) => {\n    if (!searchQuery) return true;\n    const userName = getSenderName(user);\n    return userName.toLowerCase().includes(searchQuery.toLowerCase()) || user.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n\n  const filteredMessages = messages.filter((msg) =>\n    msg.text && msg.text.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <Container>\n  \n                    <FarmsPoolsRowLoader />\n          <Title>VizslaChat</Title>\n          <Flex alignItems=\"center\" justifyContent=\"center\" >\n            <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/chat\" as={Link}>\n                {t('Public')}\n              </ButtonMenuItem>\n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/privatechat\" as={Link} mt=\"4px\">\n                {t('Private')}\n              </ButtonMenuItem> \n              <ButtonMenuItem id=\"swap-nav-link\" to=\"/settings\" as={Link} mt=\"4px\">\n                {t('Settings')}\n              </ButtonMenuItem> \n            </ButtonMenu>\n          </Flex>\n          {account ? (\n        <>\n          <ChatBox ref={chatBoxRef}>\n            {filteredMessages.length > 0 ? (\n              filteredMessages\n                .filter((msg) => new Date(msg.timestamp))\n                .map((msg) => (\n                  <div key={msg.id} style={styles.messageContainer}>\n                    <img src={getSenderImage(msg.sender)} alt=\"sender\" style={styles.avatar} />\n                    <div style={styles.message}>\n                      <b style={getSenderStyle(msg.sender)}>{getSenderName(msg.sender)}:</b> {msg.text}\n                      {msg.image && <img src={msg.image} alt=\"sent\" style={styles.sentImage} />}\n                      <span style={styles.timestamp}>{formatTimestamp(msg.timestamp)}</span>\n                    </div>\n                  </div>\n                ))\n            ) : (\n              <div style={styles.message}>No messages yet.</div>\n            )}\n            {giftBalance > 199 && (\n              <>\n    <Flex alignItems=\"left\" justifyContent=\"left\">\n  <Button variant='gold' onClick={collectTokens}>\n    <Flex flexDirection=\"column\">\n      <Text>Collect: {giftBalance} VIZSLASWAP 🎉</Text>\n      <Text fontSize=\"11px\" color=\"gray.500\" >\n        Only for users with a profile picture\n      </Text>\n    </Flex>\n  </Button>\n</Flex>\n\n\n\n              </>\n            )}\n          </ChatBox>\n  \n          <div style={styles.inputRow}>\n            <Flex alignItems=\"center\" justifyContent=\"center\">\n              <Input\n                type=\"text\"\n                value={isSearching ? searchQuery : newMessage}\n                onChange={isSearching ? handleSearchInputChange : (e) => setNewMessage(e.target.value)}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter' && !isSearching && cooldown === 0) {\n                    handleSend();\n                  }\n                }}\n                style={styles.input}\n                placeholder={isSearching ? 'Search in chatbox...' : (cooldown > 0 ? `Cooldown: ${cooldown}s` : 'Type a message')}\n                disabled={cooldown > 0 && !isSearching}\n              />\n              <Button onClick={handleSend} style={styles.sendButton} disabled={cooldown > 0}>\n                Send\n              </Button>\n              <Button onClick={() => setEmojiPickerVisible(!emojiPickerVisible)} style={styles.emojiButton}>\n                😊\n              </Button>\n              <Button onClick={toggleSearchMode} style={styles.searchButton}>\n                {isSearching ? 'X' : '🔍'}\n              </Button>\n              <Button \n                onClick={() => fileInputRef.current.click()} \n                style={styles.fileButton}>\n                📤\n              </Button>\n            </Flex>\n  \n            {image && (\n              <div style={styles.previewContainer}> \n                <Text style={styles.previewText}>Image selected:</Text>\n                <img src={image} alt=\"Preview\" style={styles.previewImage} />\n              </div>\n            )}\n          </div>\n  \n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n            onChange={handleImageChange}\n          />\n\n          {emojiPickerVisible && (\n            <EmojiPicker \n              setNewMessage={setNewMessage} \n              newMessage={newMessage} \n            />\n          )}\n          <Flex alignItems=\"right\" justifyContent=\"right\">\n            <Gift />\n          </Flex>\n          <Flex alignItems=\"right\" justifyContent=\"right\">\n            {lastCollector && lastCollectedAmount && (\n              <div style={styles.lastCollectedInfo}>\n                <Text bold fontSize='13px'>Last gift collected by:</Text>\n                <Text bold fontSize='13px'>{lastCollector}</Text>\n                <Text bold fontSize='13px'>Amount: {lastCollectedAmount} VIZSLASWAP</Text>\n              </div>\n            )}\n          </Flex>\n          <div style={styles.topListBox}>\n            <TopListTitle>Top List</TopListTitle>\n            <Input\n              type=\"text\"\n              value={searchQuery}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              style={styles.input}\n              placeholder=\"Search by name or address\"\n            />\n            <ul style={styles.topList}>\n              {filteredTopList.slice(startIndex, endIndex).map(([user, count], index) => (\n                <li key={user} style={getSenderStyle(user)}>\n                  <img src={getSenderImage(user)} alt=\"position\" style={styles.topListImage} />\n                  {startIndex + index + 1}. {getSenderName(user)}\n                  <br />\n                  {user}: {count} messages\n                </li>\n              ))}\n            </ul>\n            <div>\n              {currentPage > 1 && (\n                <Button onClick={() => handlePageChange(currentPage - 1)} style={styles.paginationButton}>\n                  Previous\n                </Button>\n              )}\n              {getPageNumbers().map((pageNumber) => (\n                <Button\n                  key={pageNumber}\n                  onClick={() => handlePageChange(pageNumber)}\n                  style={styles.paginationButton}\n                >\n                  {pageNumber}\n                </Button>\n              ))}\n              {currentPage < totalPages && (\n                <Button onClick={() => handlePageChange(currentPage + 1)} style={styles.paginationButton}>\n                  Next\n                </Button>\n              )}\n            </div>\n          </div>\n        </>\n      ) : (\n        <ConnectWalletButton />\n      )}\n    </Container>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}