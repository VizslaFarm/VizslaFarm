{"version":3,"sources":["components/Layout/Row.tsx","state/mint/actions.ts","hooks/useActiveWeb3React.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Column.tsx","state/swap/actions.ts","config/constants/tokens.ts","utils/addressHelpers.ts","utils/bigNumber.ts","utils/formatBalance.ts","state/multicall/hooks.ts","config/constants/index.ts","config/constants/types.ts","utils/index.ts","state/user/actions.ts","components/SearchModal/types.ts","config/constants/multicall/index.ts","hooks/useContract.ts","config/constants/contracts.ts","utils/contractHelpers.ts","components/Logo/DoubleLogo.tsx","config/constants/index3.ts","config/constants/index4.ts","utils/index4.ts","utils/index3.ts","config/constants/lists.ts","state/lists/actions.ts","components/Balance.tsx","state/user/hooks/index.tsx","components/Card/index.tsx","components/QuestionHelper/index.tsx","utils/multicall.ts","state/pools/hooks.ts","hooks/Tokens.ts","utils/wrappedCurrency.ts","state/swap/actions3.ts","state/swap/actions4.ts","utils/wrappedCurrency3.ts","utils/wrappedCurrency4.ts","config/constants/tokens3.ts","config/constants/tokens4.ts","hooks/Tokens3.ts","hooks/Tokens4.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance4.ts","hooks/useApproveCallback4.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","config/index.ts","views/Pools/helpers.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTheme.ts","state/lists/hooks.ts","utils/addressHelpers2.ts","utils/addressHelpers4.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","components/Logo/DoubleLogo4.tsx","components/ConnectWalletButton.tsx","config/constants/pools.ts","utils/providers.ts","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/prices3.ts","utils/prices.ts","utils/prices4.ts","state/multicall/actions.ts","state/farms/hooks.ts","state/lists/hooks3.ts","state/lists/hooks4.ts","hooks/useToast.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/Logo/DoubleLogo2.tsx","state/user/hooks/index4.tsx","components/Loader/Dots.tsx","state/user/hooks/index3.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","state/wallet/hooks4.ts","config/constants/endpoints.ts","utils/isZero.ts","config/index3.ts","components/Loader/CircleLoader.tsx","hooks/useRefresh.ts","config/constants/farms.ts","hooks/useDebounce.ts","state/transactions/hooks.tsx","state/transactions/actions.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/constants/multicall/index4.ts","hooks/useContract4.ts","config/localization/languages.ts","config/abi/erc20.ts","components/Logo/CurrencyLogo.tsx","utils/uriToHttp.ts","state/swap/hooks.ts","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/swap/hooks4.ts","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","hooks/usePairs4.ts","utils/getRpcUrl.ts","utils/ENS/parseENSAddress.ts","components/Logo/CurrencyLogo4.tsx","hooks/useTokenBalance.ts","state/transactions/hooks4.tsx","state/transactions/hooks3.tsx","utils/getTokenLogoURL.ts","contexts/Localization/helpers.ts","state/block/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","config/constants/ifo.ts","hooks/usePreviousValue.ts","utils/wallet.ts","config/constants/nfts.ts","hooks/useAuth.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/Logo/CurrencyLogo2.tsx","utils/currencyId.ts","utils/currencyId3.ts","utils/currencyId4.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/user/hooks/helpers4.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","config/index4.ts","utils/wallet4.ts","components/TransactionConfirmationModal4/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","utils/trades4.ts","hooks/Trades4.ts","state/profile/hooks.ts","components/Tags.tsx","components/Logo/ListLogo.tsx","utils/web3React.ts","state/block/index.ts","hooks/useFetchListCallback.ts","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useParsedQueryString.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel4/NumericalInput.tsx","components/CurrencyInputPanel4/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","components/SearchModal/filtering4.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","hooks/useTotalSupply4.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens3.ts","state/user/hooks/useUserAddedTokens4.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav4.tsx","views/Page4.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","state/application/actions.ts","utils/contenthashToUri.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/SearchModal/ImportToken3.tsx","utils/maxAmountSpend3.ts","components/SearchModal/ImportToken4.tsx","utils/maxAmountSpend4.ts","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","state/burn/actions.ts","hooks/usePersistState.ts","utils/achievements.ts","utils/latinise.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","components/UnsupportedCurrencyFooter4.tsx","state/mint/hooks4.ts","views/AddLiquidity4/ConfirmAddModalBottom4.tsx","views/AddLiquidity4/PoolPriceBar4.tsx","views/AddLiquidity4/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","components/App/AppBody.tsx","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/App/Settings/TransactionSettings.tsx","components/Loader/PageLoader.tsx","state/collectibles/index.ts","state/transactions/actions4.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","components/PositionCard4/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ManageLists3.tsx","components/SearchModal/ManageTokens3.tsx","components/SearchModal/Manage3.tsx","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/ImportRow4.tsx","components/SearchModal/CurrencyList4.tsx","components/SearchModal/sorting4.ts","components/SearchModal/CurrencySearch4.tsx","hooks/useFetchListCallback4.ts","components/SearchModal/ManageLists4.tsx","components/SearchModal/ManageTokens4.tsx","components/SearchModal/Manage4.tsx","components/SearchModal/ImportList4.tsx","components/SearchModal/CurrencySearchModal4.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useTransactionDeadline3.ts","hooks/useCurrentBlockTimestamp3.ts","hooks/useTransactionDeadline4.ts","hooks/useCurrentBlockTimestamp4.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal3.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/RadioShack/components/AddressInputPanel4.tsx","views/RadioShack/components/styleds.tsx","views/RadioShack/components/FormattedPriceImpact4.tsx","views/RadioShack/components/SwapModalFooter4.tsx","views/RadioShack/components/SwapModalHeader4.tsx","views/RadioShack/components/ConfirmSwapModal4.tsx","views/RadioShack/components/SwapRoute4.tsx","views/RadioShack/components/AdvancedSwapDetails4.tsx","views/RadioShack/components/AdvancedSwapDetailsDropdown4.tsx","views/RadioShack/components/TradePrice4.tsx","views/RadioShack/components/ImportTokenWarningModal4.tsx","views/RadioShack/components/ProgressSteps.tsx","hooks/useSwapCallback4.ts","hooks/useWrapCallback4.ts","views/RadioShack/components/SwapWarningModal/SafemoonWarning.tsx","views/RadioShack/components/SwapWarningModal/BondlyWarning.tsx","views/RadioShack/components/SwapWarningModal/Acknowledgement.tsx","views/RadioShack/components/SwapWarningModal/index.tsx","views/RadioShack/index.tsx","views/RadioShack/components/confirmPriceImpactWithoutFee4.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/AddLiquidity4/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/RemoveLiquidity4/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","useState","simpleRpcProvider","provider","setprovider","useEffect","current","parseInt","process","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Column","ColumnCenter","AutoColumn","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","CAKE","ChainId","MAINNET","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","tokens","bnb","symbol","projectLink","cake","address","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","build","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","shib","lamea","test1","ample","skeleton","hvi","bvc","ace","etc","hank","fps","getAddress","getCakeAddress","getHVIAddress","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","useSelector","multicall","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","filter","c","Boolean","map","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","error","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","ROUTER_ADDRESS","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","CurrencyModalView","MULTICALL_NETWORKS","useIfoV1Contract","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLotteryV2Contract","getLotteryV2Contract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useFarmAuctionContract","getFarmAuctionContract","useContract","withSignerIfPossible","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","sousChef","abi","signer","signerOrProvider","bep20Abi","erc721Abi","ifoV1Abi","ifoV2Abi","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","contractAddress","getSouschefV2Contract","sousChefV2","cakeAbi","getHVIContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","farmAuctionAbi","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","getRouterContract2","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","res","i","multicallv2","requireSuccess","tryAggregate","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useTheme","StyledThemeContext","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","tokensymbol2","tokensymbol3","tokensymbol4","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","sortOrder","RPC_URL","getRpcUrl","providers","JsonRpcProvider","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","usePriceHVIBusd","useToast","toastContext","ToastsContext","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","variant","mb","window","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","allTransactions","useAllTransactions","sortedRecentTransactions","isTransactionRecent","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","to","Dots","span","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","hexNumberString","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","RefreshContext","fast","slow","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","code","languageList","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","uriToHttp","uri","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","nodes","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply2","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","usePreviousValue","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","registerToken","image","tokenAdded","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","DetailsFooter","invertedContrast","UnsupportedModal","unsupportedTokens","external","small","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","textAlign","TransactionSubmittedContent","currencyToAdd","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","tokenIn","tokenOut","useFetchProfile","hasProfile","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","StyledListLogo","ListLogo","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","blockSlice","useFetchListCallback","useWeb3Provider","ensResolver","resolveENSContentHash","sendDispatch","nanoid","getTokenList","tokenListValidator","Ajv","allErrors","compile","schema","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","search","useLocation","parseArrays","ignoreQueryPrefix","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","CurrencySearchModal","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","setStateLastUpdated","previousLastUpdated","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","userSelect","disabled","maxAmountSpend","greaterThan","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","AddLiquidity4","AddLiquidity","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","BodyWrapper","AppBody","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","onBlur","e","isWarning","isSuccess","paddingTop","pl","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","endIcon","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RadioShack","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectToAddLiquidity3","RedirectOldAddLiquidityPathStructure3","RedirectDuplicateTokenIds3","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectOldRemoveLiquidityPathStructure4","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","Liquidity4","PoolFinder","PoolFinder2","PoolFinder4","RemoveLiquidity","RemoveLiquidity2","RemoveLiquidity4","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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GAAI,YACJnE,KAAM,MACNw5B,MAAO,UACPorB,MAAO,iBAET,CACEzgD,GAAI,YACJnE,KAAM,MACNw5B,MAAO,SACPorB,MAAO,kBAET,CACEzgD,GAAI,YACJnE,KAAM,MACNw5B,MAAO,QACPorB,MAAO,eAET,CACEzgD,GAAI,YACJnE,KAAM,MACNw5B,MAAO,QACPorB,MAAO,iBAET,CACEzgD,GAAI,YACJnE,KAAM,MACNw5B,MAAO,QACPorB,MAAO,eAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,wBACPorB,MAAO,4BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,uBACPorB,MAAO,2BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,uBACPorB,MAAO,2BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,uBACPorB,MAAO,2BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,2BACPorB,MAAO,+BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,0BACPorB,MAAO,8BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,6BACPorB,MAAO,iCAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,0BACPorB,MAAO,8BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,yBACPorB,MAAO,6BAET,CACEzgD,GAAI,YACJnE,KAAM,aACNw5B,MAAO,6BACPorB,MAAO,iCAET,CACEzgD,GAAI,YACJnE,KAAM,gBACNw5B,MAAO,eACP0a,YAAa,qDAC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","file":"static/js/main.b4d9caf6.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens4'\n\nexport const ROUTER_ADDRESS = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\nexport const ROUTER_ADDRESS2 = '0x5bc3ED94919af03279c8613cB807ab667cE5De99'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index4'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks4'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('apeswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('apeswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('apeswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('apeswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('apeswap/setRecipient')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('radioshack/selectCurrency')\nexport const switchCurrencies = createAction<void>('radioshack/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('radioshack/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('radioshack/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('radioshack/setRecipient')\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  build: {\n    symbol: 'BUILD',\n    address: {\n      56: '0x83b27De2Fca046FA63a11C7Ce7743DE33Ec58822',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://app.radioshack.org/swap',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks4'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens4'\nimport { isAddress } from '../utils/index4'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract4'\nimport { filterTokens } from '../components/SearchModal/filtering4'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions3'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index4'\nimport useTokenAllowance from './useTokenAllowance4'\nimport { Field } from '../state/swap/actions4'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks4'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices4'\nimport { calculateGasMargin } from '../utils/index4'\nimport { useTokenContract } from './useContract4'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens4'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { Currency } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo4'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.69',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '0%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '14',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00461',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000053125',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002776',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index4'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index4'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist3.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Pair, Token } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers4'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'RLP', 'RadioShack Swap LP Token')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens4'\nimport { useMulticallContract } from 'hooks/useContract4'\nimport { isAddress } from 'utils/index4'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 20,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(RADIOSHACK)',\n    lpSymbol3: 'radioliquidity',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xC0f5FAAc9CF6bdE571aFAd1915eF183D8996CDb8',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n\n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers4'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index4'\nimport { getContract } from '../utils/index4'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens4'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades4'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices4'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index4'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks4'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions4'\nimport { TransactionDetails } from './reducer4'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index4'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet4'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index4'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk/dist/dist'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index4'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades4'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index4'\nimport { PairState, usePairs } from './usePairs4'\nimport { wrappedCurrency } from '../utils/wrappedCurrency4'\n\nimport { useUnsupportedTokens } from './Tokens4'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index4'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal4'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index4'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { isAddress } from '../../utils/index4'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useTokenContract } from './useContract4'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers4'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool4') ||\n    pathname.includes('/createradio') ||\n    pathname.includes('/addradioliquidity') ||\n    pathname.includes('/removeradio') ||\n    pathname.includes('/radiofind') ||\n    pathname.includes('/radioliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool4\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav4'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index4'\nimport { getBscScanLink } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport { ListLogo } from 'components/Logo/index4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk/dist/dist'\nimport { MIN_BNB } from '../config/constants/index4'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenuItem, ButtonMenu } from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n             <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addradioliquidity\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs4'\nimport useTotalSupply from 'hooks/useTotalSupply4'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency4'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks4'\nimport { useCurrencyBalances } from '../wallet/hooks4'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index4'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenuItem, ButtonMenu } from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index4'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard4'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index4'\nimport { PairState } from '../../hooks/usePairs4'\nimport { useCurrency } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback4'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks4'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks4'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index4'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency4'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom4'\nimport { currencyId } from '../../utils/currencyId4'\nimport PoolPriceBar from './PoolPriceBar4'\nimport Page from '../Page4'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity4() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 2\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addradioliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addradioliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addradioliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addradioliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addradioliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n             <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addradioliquidity\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n       <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addradioliquidity\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply4'\n\nimport { useTokenBalance } from '../../state/wallet/hooks4'\nimport { currencyId } from '../../utils/currencyId4'\nimport { unwrappedToken } from '../../utils/wrappedCurrency4'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo4'\nimport { DoubleCurrencyLogo } from '../Logo/index4'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index4'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeradio/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addradioliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens3'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback2'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks3'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens3'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index3'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens3'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow3'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists3'\nimport ManageTokens from './ManageTokens3'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage3'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo4'\nimport { ListLogo } from 'components/Logo/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks4'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens4'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency4'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks4'\nimport { useCurrencyBalance } from '../../state/wallet/hooks4'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens4'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index4'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index4'\nimport ImportRow from './ImportRow4'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks4'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens4'\nimport { isAddress } from '../../utils/index4'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList4'\nimport { filterTokens, useSortedTokensByQuery } from './filtering4'\nimport useTokenComparator from './sorting4'\n\nimport ImportRow from './ImportRow4'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk/dist/dist'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback4'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks4'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo/index4'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens4'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index4'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens4'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index4'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow4'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists4'\nimport ManageTokens from './ManageTokens4'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo/index4'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback4'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks4'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk/dist/dist'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch4'\nimport ImportToken from './ImportToken4'\nimport Manage from './Manage4'\nimport ImportList from './ImportList4'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract3'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp4'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract4'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : antiwhalepools\n  } \n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as=\"a\" width={50} height={35}  href=\"/pools\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as=\"a\"width={50} height={35}  href=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency3'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken3'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline3'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon,ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal3'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions3'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n        <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index4'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices4'\nimport { ONE_BIPS } from '../../../config/constants/index4'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index4'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal4'\nimport SwapModalFooter from './SwapModalFooter4'\nimport SwapModalHeader from './SwapModalHeader4'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency4'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index4'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices4'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact4'\nimport SwapRoute from './SwapRoute4'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails4'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk/dist/dist'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk/dist/dist'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken4'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index4'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline4'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk/dist/dist'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks4'\nimport { useTransactionAdder } from '../state/transactions/hooks4'\nimport { useCurrencyBalance } from '../state/wallet/hooks4'\nimport { useWETHContract } from './useContract4'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk/dist/dist'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon,ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades4'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers4'\nimport AddressInputPanel from './components/AddressInputPanel4'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal4'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel4'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown4'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee4'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice4'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal4'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index4'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens4'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback4'\nimport { useSwapCallback } from '../../hooks/useSwapCallback4'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback4'\nimport { Field } from '../../state/swap/actions4'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks4'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index4'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend4'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices4'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page4'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function RadioShack() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/radioshack')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool4') ||\n      pathname.includes('/createradio') ||\n      pathname.includes('/addradioliquidity') ||\n      pathname.includes('/removeradio') ||\n      pathname.includes('/radiofind') ||\n      pathname.includes('/radioliquidity')\n    ) {\n      return 0\n    }\n    return 2\n  }\n  \n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n        <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk/dist/dist'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index4'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon, ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n          <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/radioshack\" as={Link}>\n          {t('RadioShack')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity4 from './index'\n\nexport function RedirectToAddLiquidity3() {\n  return <Redirect to=\"/addradioiquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure3() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addradioliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity4 />\n}\n\nexport function RedirectDuplicateTokenIds3() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addradioliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity4 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure4() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool4\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeradio/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure4\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport ApeSwap from './views/ApeSwap'\nimport RadioShack from './views/RadioShack'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport {\n  RedirectDuplicateTokenIds3,\n  RedirectOldAddLiquidityPathStructure3,\n  RedirectToAddLiquidity3,\n} from './views/AddLiquidity4/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure4 from './views/RemoveLiquidity4/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst AddLiquidity4 = lazy(() => import('./views/AddLiquidity4'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst Liquidity4 = lazy(() => import('./views/Pool4'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst PoolFinder4 = lazy(() => import('./views/PoolFinder4'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\nconst RemoveLiquidity4 = lazy(() => import('./views/RemoveLiquidity4'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/radioshack\">\n              <RadioShack />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/radiofind\">\n              <PoolFinder4 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/radioliquidity\">\n              <Liquidity4 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/createradio\">\n              <RedirectToAddLiquidity3 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/addradioliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/createradio\">\n              <AddLiquidity4 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure3 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/createradio/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds3 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure4 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n            <Route exact strict path=\"/removeradio/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity4 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/pool4\">\n              <Redirect to=\"/radioliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}