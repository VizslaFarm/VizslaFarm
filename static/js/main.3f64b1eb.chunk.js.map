{"version":3,"sources":["contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","components/Layout/Row.tsx","state/mint/actions.ts","hooks/useActiveWeb3React.ts","components/Layout/Column.tsx","state/swap/actions.ts","config/constants/tokens.ts","utils/addressHelpers.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/index.ts","config/constants/types.ts","utils/index.ts","config/constants/multicall/index.ts","hooks/useContract.ts","state/multicall/hooks.ts","utils/contractHelpers.ts","config/constants/index3.ts","utils/index3.ts","components/Balance.tsx","state/user/actions.ts","components/Logo/DoubleLogo.tsx","components/SearchModal/types.ts","utils/multicall.ts","state/user/hooks/index.tsx","state/pools/hooks.ts","config/constants/lists.ts","config/constants/contracts.ts","hooks/Tokens.ts","state/lists/actions.ts","state/swap/actions3.ts","utils/wrappedCurrency.ts","components/QuestionHelper/index.tsx","utils/wrappedCurrency3.ts","config/constants/tokens3.ts","hooks/Tokens3.ts","hooks/useTokenAllowance3.ts","hooks/useApproveCallback3.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","state/types.ts","components/Card/index.tsx","config/index.ts","views/Pools/helpers.tsx","state/application/reducer.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","state/lists/hooks.ts","utils/addressHelpers2.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/prices3.ts","utils/prices.ts","state/multicall/actions.ts","state/farms/hooks.ts","hooks/useTheme.ts","config/constants/pools.ts","state/lists/hooks3.ts","hooks/useToast.ts","utils/providers.ts","state/predictions/helpers.ts","state/predictions/queries.ts","components/ConnectWalletButton.tsx","components/Logo/DoubleLogo2.tsx","state/user/hooks/index3.tsx","state/wallet/hooks3.ts","state/wallet/hooks.ts","config/constants/endpoints.ts","hooks/useRefresh.ts","state/transactions/hooks.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","state/transactions/actions.ts","config/constants/multicall/index3.ts","hooks/useContract3.ts","config/localization/languages.ts","components/App/Settings/SettingsModal.tsx","components/App/Settings/index.tsx","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","config/constants/farms.ts","hooks/useDebounce.ts","components/Logo/CurrencyLogo.tsx","utils/isZero.ts","state/swap/hooks.ts","utils/compoundApyHelpers.ts","state/lottery/helpers.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","components/Loader/Dots.tsx","components/Loader/CircleLoader.tsx","hooks/usePairs3.ts","hooks/usePairs.ts","state/swap/hooks3.ts","utils/uriToHttp.ts","hooks/useTokenBalance.ts","state/transactions/hooks3.tsx","contexts/Localization/helpers.ts","config/index3.ts","state/block/hooks.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","utils/wallet.ts","config/constants/nfts.ts","hooks/useAuth.ts","utils/getRpcUrl.ts","config/abi/erc20.ts","utils/ENS/parseENSAddress.ts","components/Logo/CurrencyLogo2.tsx","utils/currencyId.ts","utils/currencyId3.ts","state/application/hooks.ts","state/user/hooks/helpers.ts","state/user/hooks/helpers3.ts","state/teams/index.tsx","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","utils/trades3.ts","hooks/Trades3.ts","utils/wallet3.ts","components/TransactionConfirmationModal3/index.tsx","utils/trades.ts","hooks/Trades.ts","state/profile/hooks.ts","hooks/usePreviousValue.ts","components/Tags.tsx","config/constants/ifo.ts","utils/web3React.ts","state/block/index.ts","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","hooks/useFetchListCallback.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel3/NumericalInput.tsx","components/CurrencyInputPanel3/index.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","components/SearchModal/filtering.ts","config/constants/campaigns.ts","components/SearchModal/filtering3.ts","utils/getTokenLogoURL.ts","config/constants/teams.ts","hooks/useTotalSupply.ts","hooks/useTotalSupply3.ts","state/user/hooks/useUserAddedTokens.ts","state/teams/helpers.ts","state/user/hooks/useUserAddedTokens3.ts","components/Layout/Container.tsx","config/constants/meta.ts","components/Layout/Page.tsx","utils/collectibles.ts","components/Menu/SubNav2.tsx","views/Page2.tsx","components/Menu/SubNav.tsx","views/Page.tsx","hooks/useLastUpdated.ts","components/Logo/ListLogo.tsx","state/application/actions.ts","utils/getTokenList.ts","utils/contenthashToUri.ts","utils/ENS/resolveENSContentHash.ts","state/pools/helpers.ts","contexts/RefreshContext.tsx","components/SearchModal/ImportToken3.tsx","hooks/useParsedQueryString.ts","utils/maxAmountSpend3.ts","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","state/burn/actions.ts","hooks/usePersistState.ts","utils/achievements.ts","utils/latinise.ts","components/UnsupportedCurrencyFooter3.tsx","state/mint/hooks3.ts","views/AddLiquidity2/ConfirmAddModalBottom2.tsx","views/AddLiquidity2/PoolPriceBar3.tsx","views/AddLiquidity2/index.tsx","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/predictions/index.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","utils/getTimePeriods.ts","components/App/AppBody.tsx","components/Loader/PageLoader.tsx","state/collectibles/index.ts","components/PositionCard/index.tsx","components/PositionCard3/index.tsx","state/voting/helpers.ts","state/voting/index.tsx","utils/apr.ts","state/lottery/getUserTicketsData.ts","routerHistory.ts","components/App/Settings/TransactionSettings.tsx","state/transactions/actions3.ts","state/achievements/helpers.ts","state/achievements/index.ts","components/PageHeader/PageHeader.tsx","utils/farmHelpers.ts","state/lottery/getLotteriesData.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","hooks/useDelayedUnmount.ts","components/SearchModal/ImportRow3.tsx","components/SearchModal/CurrencyList3.tsx","components/SearchModal/sorting3.ts","components/SearchModal/CurrencySearch3.tsx","hooks/useFetchListCallback2.ts","components/SearchModal/ManageLists3.tsx","components/SearchModal/ManageTokens3.tsx","components/SearchModal/Manage3.tsx","components/SearchModal/ImportList2.tsx","components/SearchModal/CurrencySearchModal3.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","components/SearchInput/SearchInput.tsx","hooks/useTransactionDeadline3.ts","hooks/useCurrentBlockTimestamp3.ts","hooks/useIsWindowVisible.ts","state/application/updater.ts","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","views/Home/hooks/useFarmsWithBalance.tsx","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","views/Pools/components/ToggleView/ToggleView.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","components/ApyCalculatorModal/index.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/ApeSwap/components/AddressInputPanel3.tsx","views/ApeSwap/components/styleds.tsx","views/ApeSwap/components/FormattedPriceImpact3.tsx","views/ApeSwap/components/SwapModalFooter3.tsx","views/ApeSwap/components/SwapModalHeader3.tsx","views/ApeSwap/components/ConfirmSwapModal3.tsx","hooks/useLast.ts","views/ApeSwap/components/SwapRoute3.tsx","views/ApeSwap/components/AdvancedSwapDetails3.tsx","views/ApeSwap/components/AdvancedSwapDetailsDropdown3.tsx","views/ApeSwap/components/TradePrice3.tsx","views/ApeSwap/components/ImportTokenWarningModal3.tsx","views/ApeSwap/components/ProgressSteps.tsx","hooks/useSwapCallback3.ts","hooks/useWrapCallback3.ts","views/ApeSwap/components/SwapWarningModal/SafemoonWarning.tsx","views/ApeSwap/components/SwapWarningModal/BondlyWarning.tsx","views/ApeSwap/components/SwapWarningModal/Acknowledgement.tsx","views/ApeSwap/components/SwapWarningModal/index.tsx","views/ApeSwap/index.tsx","views/ApeSwap/components/confirmPriceImpactWithoutFee3.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/AddLiquidity2/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/RemoveLiquidity2/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","createContext","undefined","LanguageProvider","children","useState","codeFromStorage","getLanguageCodeFromLS","languages","state","setState","useEffect","a","enLocale","get","fetchLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","localStorage","setItem","LS_KEY","translate","useCallback","key","data","translatedText","match","interpolatedText","Object","keys","forEach","dataKey","templateKey","RegExp","replace","toString","Provider","value","t","useTranslation","languageContext","useContext","Error","Row","styled","Box","width","align","justify","padding","border","borderRadius","RowBetween","AutoRow","div","gap","RowFixed","Field","typeInput","createAction","resetMintState","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","useRef","simpleRpcProvider","provider","setprovider","current","parseInt","process","Column","ColumnCenter","AutoColumn","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","CAKE","ChainId","MAINNET","Token","TESTNET","BUSD","WBNB","DAI","USDT","BTCB","UST","ETH","USDC","tokens","bnb","symbol","projectLink","cake","address","decimals","babycake","bmon","hero","wsg","mcrn","revv","skill","if","sps","chess","titan","harmony","mask","dvi","adx","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","safemoon","axs","c98","babyvizsla","vizslaswap","shib","lamea","test1","ample","skeleton","hvi","bvc","ace","etc","hank","fps","getAddress","getCakeAddress","getHVIAddress","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getWbnbAddress","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","getCakeVaultAddress","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","getFarmAuctionAddress","farmAuction","BIG_ZERO","BigNumber","BIG_ONE","BIG_NINE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","split","leftSide","ROUTER_ADDRESS","ROUTER_ADDRESS2","BASES_TO_CHECK_TRADES_AGAINST","WETH","ADDITIONAL_BASES","CUSTOM_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","PoolIds","PoolCategory","NftType","LotteryStatus","AuctionStatus","isAddress","getBscScanLink","type","BASE_BSC_SCAN_URLS","shortenAddress","chars","parsed","substring","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","account","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","_","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","MULTICALL_NETWORKS","useIfoV1Contract","useMemo","getIfoV1Contract","useIfoV2Contract","getIfoV2Contract","useERC20","getBep20Contract","useERC721","getErc721Contract","useCake","getCakeContract","useBunnyFactory","getBunnyFactoryContract","useProfile","getProfileContract","useLotteryV2Contract","getLotteryV2Contract","useMasterchef","getMasterchefContract","useSousChef","id","getSouschefContract","usePointCenterIfoContract","getPointCenterIfoContract","useClaimRefundContract","getClaimRefundContract","useTradingCompetitionContract","getTradingCompetitionContract","useEasterNftContract","getEasterNftContract","useCakeVaultContract","getCakeVaultContract","usePredictionsContract","getPredictionsContract","useFarmAuctionContract","getFarmAuctionContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","MULTICALL_ABI","isMethodArg","x","indexOf","isValidMethodArgs","Array","isArray","every","xi","INVALID_RESULT","valid","blockNumber","NEVER_RELOAD","blocksPerFetch","Infinity","useCallsData","calls","callResults","useSelector","multicall","dispatch","useDispatch","serializedCallKeys","JSON","stringify","filter","c","map","toCallKey","sort","callKeys","parse","length","parseCallKey","addMulticallListeners","removeMulticallListeners","call","result","INVALID_CALL_STATE","loading","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","encodeFunctionData","useBlockNumber","useMultipleContractSingleData","useSingleCallResult","abi","signer","signerOrProvider","bep20Abi","erc721Abi","ifoV1Abi","ifoV2Abi","config","poolsConfig","find","pool","sousId","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","cakeAbi","getHVIContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","lotteryV2Abi","claimRefundAbi","tradingCompetitionAbi","easterNftAbi","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","farmAuctionAbi","getRouterContract2","Balance","color","isDisabled","unit","prefix","onClick","props","previousValue","start","end","duration","separator","FarmStakedOnly","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","toggleTheme","updateUserFarmStakedOnly","Wrapper","margin","DoubleCurrencyLogo","currency0","currency1","size","CurrencyLogo","style","marginRight","CurrencyModalView","multi","itf","utils","Interface","calldata","toLowerCase","name","params","aggregate","returnData","res","i","multicallv2","requireSuccess","tryAggregate","useAudioModeManager","audioPlay","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","isDark","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","isActive","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","serializeToken","useRemoveUserAddedToken","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","base","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","useFetchPublicPoolsData","useAppDispatch","slowRefresh","useRefresh","getBlockNumber","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fastRefresh","fetchPoolsUserDataAsync","pools","userDataLoaded","transformPool","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userData","isLoading","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","UNSUPPORTED_LIST_URLS","DEFAULT_LIST_OF_LISTS","DEFAULT_ACTIVE_LIST_URLS","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","includes","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","values","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbolBytes32","useCurrency","currencyId","isBNB","toUpperCase","fetchTokenList","pending","fulfilled","rejected","addList","removeList","enableList","disableList","acceptListUpdate","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","QuestionWrapper","QuestionHelper","text","useTooltip","placement","trigger","targetRef","tooltip","tooltipVisible","ref","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","then","response","summary","approval","useApproveCallbackFromTrade","allowedSlippage","computeSlippageAdjustedAmounts","INPUT","BetPosition","PredictionStatus","HistoryFilter","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Card","theme","colors","background","LightCard","backgroundAlt","LightGreyCard","cardBorder","GreyCard","dropdown","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BLOCKS_PER_YEAR","CAKE_PER_YEAR","BASE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","AUCTION_BIDDERS_TO_FETCH","RECLAIM_AUCTIONS_TO_FETCH","AUCTION_WHITELISTED_BIDDERS_TO_FETCH","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","apr","isHighValueToken","Math","round","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand365D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","getRoi","amountEarned","amountInvested","getCakeVaultEarnings","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","createReducer","builder","addCase","updateBlockNumber","action","payload","updateVersion","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","timestamp","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","now","transactions","hash","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","typedValue","OUTPUT","recipient","field","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","byUrl","listUrl","activeListUrls","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","push","errorMessage","u","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","reducer","achievements","achievementsReducer","block","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","voting","votingReducer","lottery","lotteryReducer","application","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","sortByListPriority","urlA","urlB","first","Number","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","logoURI","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","slice","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","index","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","Promise","all","stakingLimits","accum","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","method","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","cakeVaultContract","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","prices","getTokenPricesFromFarm","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","parseFloat","tokenPerBlock","setPoolsPublicData","stakingLimitData","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","createAsyncThunk","publicVaultInfo","vaultFees","PoolsSlice","createSlice","reducers","livePoolsData","livePoolData","userPoolData","findIndex","extraReducers","actions","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","usePollFarmsData","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","pid","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","usePollCoreFarmData","useFarms","useFarmFromPid","f","useFarmUser","farm","tokenBalance","earnings","useLpTokenPrice","lpSymbol","farmTokenPriceInUsd","busdPrice","useBusdPriceFromPid","lpTokenPrice","lpTotalSupply","lpTotalInQuoteToken","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","usePriceBnbBusd","bnbBusdFarm","quoteToken","usePriceCakeBusd","cakePriceBusdAsString","usePriceHVIBusd","useTheme","StyledThemeContext","tokensymbol2","tokensymbol3","tokensymbol4","withdrawtime","withdrawtime2","withdrawtime3","withdrawtime4","CORE","harvest","sortOrder","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","JsonRpcProvider","Result","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","position","BULL","BEAR","claimed","claimedHash","totalBets","totalBNB","transformRoundResponse","roundResponse","positionResponse","epoch","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","bets","getRoundResult","currentEpoch","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getBetHistory","where","skip","request","GRAPH_API_PREDICTION","gql","getLedgerData","epochs","ledgerCalls","getClaimStatuses","claimableCalls","claimableResponses","ledgerResponses","claimableResponse","claimable","getPredictionData","staticCalls","intervalBlocks","minBetAmount","paused","bufferBlocks","rewardRate","status","PAUSED","getRoundsData","makeFutureRoundResponse","rewardBaseCalAmount","rewardAmount","oracleCalled","makeRoundData","rounds","makeLedgerData","ledgers","ledgerResponse","eq","serializePredictionsLedgerResponse","serializePredictionsRoundsResponse","parseBigNumberObj","ConnectWalletButton","useAuth","login","logout","onPresentConnectModal","useWalletModal","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","some","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","GRAPH_API_PROFILE","GRAPH_API_LOTTERY","SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","SNAPSHOT_API","SNAPSHOT_HUB_API","RefreshContext","fast","slow","useAllTransactions","isTransactionRecent","allTransactions","useENS","nameOrAddress","validated","reverseLookup","debouncedAddress","useDebounce","ensNodeArgument","namehash","substr","registrarContract","resolverAddress","resolverAddressResult","resolverContract","isZero","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","code","languageList","SettingsModal","onDismiss","showConfirmExpertModal","setShowConfirmExpertModal","setUserslippageTolerance","ttl","setTtl","toggleExpertMode","singleHopOnly","setSingleHopOnly","onChangeRecipient","useSwapActionHandlers","title","onBack","maxWidth","variant","mb","window","prompt","bold","fontSize","TransactionSettings","rawSlippage","setRawSlippage","setDeadline","mt","ml","checked","onChange","SettingsTab","useModal","onPresentSettingsModal","show","TransactionState","primary","IconWrapper","failure","Transaction","href","CircleLoader","newTransactionsFirst","b","renderTransactions","flexDirection","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","justifyContent","scale","Transactions","onPresentTransactionsModal","AppHeaderContainer","Flex","AppHeader","subtitle","helper","backTo","noConfig","alignItems","mr","as","Link","to","lpSymbol1","lpSymbol2","lpSymbol3","lpAddresses","isEvent","isCommunity","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","StyledLogo","Logo","uriLocations","useHttpLocations","srcs","getTokenLogoURL","alt","hexNumberString","useSwapState","onCurrencySelection","onSwitchTokens","onUserInput","tryParseAmount","typedValueParsed","parseUnits","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","path","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","useParsedQueryString","setResult","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","priceHelperLps","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","tokenDecimals","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","info","totalAllocPoint","allocPoint","poolWeight","tokenPriceVsQuote","multiplier","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","tokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","isArchivedPid","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getUsername","fetch","ok","json","username","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","nft","Cookies","avatar","images","sm","domain","secure","expires","isInitialized","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","Dots","span","rotate","keyframes","StyledSVG","svg","stroke","rest","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","uriToHttp","uri","FetchStatus","useTotalSupply","totalSupply","setTotalSupply","cakeContract","supply","fetchTotalSupply","useTotalSupply2","useBurnedBalance","setBalance","balanceOf","fetchBalance","useGetBnbBalance","NOT_FETCHED","fetchStatus","setFetchStatus","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","SUCCESS","FAILED","refresh","balanceState","setBalanceState","prev","getItem","usePollBlockNumber","interval","setInterval","setBlock","clearInterval","useBlock","useInitialBlock","initialBlock","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","lte","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","image","tokenAdded","IPFS_GATEWAY","nftSources","PANCAKE","identifierKey","MIXIE","Nfts","description","lg","md","ipfs","identifier","variationId","video","webm","mp4","blur","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","small","textAlign","TransactionSubmittedContent","currencyToAdd","external","isMetaMask","asset","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","content","handleDismiss","headerBackground","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","useFetchProfile","hasProfile","usePreviousValue","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","cakeBnbLpToken","ifos","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","blockSlice","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","useFetchListCallback","useWeb3Provider","ensResolver","resolveENSContentHash","sendDispatch","nanoid","getTokenList","DetailsFooter","invertedContrast","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","src","onError","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","toastWarning","WARNING","ToastListener","onRemove","StyledInput","input","textSubtle","inputRegex","Input","React","placeholder","event","nextUserInput","target","inputMode","autoComplete","autoCorrect","pattern","minLength","maxLength","spellCheck","InputRow","selected","CurrencySelectButton","Button","attrs","LabelRow","InputPanel","hideInput","Container","shadows","inset","CurrencyInputPanel","onMax","showMaxButton","label","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","selectedCurrencyBalance","translatedLabel","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","display","cursor","className","val","CurrencySearchModal","ens","resolvedContentHash","contenthash","useENSContentHash","contenthashToUri","search","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","startsWith","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","campaigns","badge","campaignMap","campaign","textColor","users","serializedTokensMap","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","px","DEFAULT_META","StyledPage","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","join","property","Page","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","getAddressByType","getTokenUriData","tokenURI","uriDataResponse","uriData","StyledNav","nav","Nav","location","activeIndex","xs","flexGrow","SubNav","setStateLastUpdated","previousLastUpdated","StyledListLogo","ListLogo","tokenListValidator","Ajv","allErrors","compile","schema","parsedENS","contentHashUri","translatedUri","isLast","validationErrors","errors","dataPath","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","transformUserData","quoteTokenAddress","toLocaleLowerCase","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridTemplateRows","gridGap","userSelect","disabled","parseArrays","ignoreQueryPrefix","maxAmountSpend","greaterThan","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getAchievementTitle","getAchievementDescription","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","campaignMeta","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","price","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity2","useParams","currencyIdA","currencyIdB","history","useHistory","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","priceOf","quote","currencyAAmount","currencyBAmount","Price","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","isValid","setAttemptingTxn","txHash","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","my","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onPresentAddLiquidityModal","App","toExact","minWidth","marginTop","showUnwrapped","AddLiquidity","BLOCK_PADDING","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","currentRoundStartBlockNumber","lastOraclePrice","claimableStatuses","initializePredictions","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","newestRound","maxBy","futureRound","futureRounds","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","graphRound","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","currentRound","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","days","hours","minutes","floor","BodyWrapper","AppBody","PageLoader","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","association","FixedHeightRow","MinimalPositionCard","showMore","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","role","FullPositionCard","getProposals","ACTIVE","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","headers","body","statusText","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","votingSlice","_inValid","IDLE","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","createBrowserHistory","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","RiskyLow","RiskyHigh","InvalidInput","flexWrap","gridTemplateColumns","onBlur","e","isWarning","isSuccess","paddingTop","pl","getUserPointIncreaseEvents","getAchievements","pointIncreaseEvents","userPoint","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","Outer","Inner","PageHeader","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","nodeRoundsWithGraphData","nodeRoundData","graphRoundData","graphResponseRound","lastCombinedDataRound","lastCombinedDataRoundIndex","remainingSubgraphRounds","splice","getGraphLotteries","idsForNodesCall","mergedData","FlexLayout","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","css","boxShadow","DropDownList","ul","ListItem","li","Select","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","stopPropagation","offsetWidth","offsetHeight","handleClickOutside","option","selectedIndex","Loading","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","TokenSection","dim","CheckIcon","CheckmarkCircleIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","opacity","currencyKey","StyledBalanceText","Text","FixedContentRow","MenuItem","CurrencyRow","onSelect","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","ellipsis","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","inputRef","focus","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","active","tertiary","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","flex","textTransform","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","textOverflow","overflow","marginLeft","Footer","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","StyledButtonMenu","ButtonMenu","Manage","showLists","setShowLists","onItemClick","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","ModalContainer","StyledModalBody","ModalBody","modalView","prevView","usePrevious","manage","DatePicker","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","card","primaryBright","secondary","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","InputWrapper","SearchInput","onChangeCallback","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","VISIBILITY_STATE_SUPPORTED","isWindowVisible","visibilityState","useIsWindowVisible","focused","setFocused","listener","Updater","windowVisible","blockNumberCallback","on","removeListener","debouncedState","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","min","ms","random","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","items","maxChunkSize","numChunks","ceil","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","lastBlockNumber","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","_binanceChainListener","defineProperty","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","GlobalStyle","createGlobalStyle","icon","toLocaleUpperCase","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","masterChefABI","rawResults","farmsWithBalances","balanceType","totalEarned","earning","earningNumber","fetchBalances","Address","Tooltip","isTooltipDisplayed","contrast","CopyAddress","setIsTooltipDisplayed","displayTooltip","readOnly","navigator","clipboard","permissions","writeText","queryCommandSupported","ele","createElement","appendChild","select","execCommand","removeChild","WalletInfo","hasLowBnbBalance","pendingTx","setPendingTx","cakeBalance","farmEarningsSum","cakePriceBusd","earningsBusd","numFarmsToCollect","count","preText","toCollectText","earningsBusd2","harvestAllFarms","farmWithBalance","fontWeight","lineHeight","endIcon","spin","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","orderBy","minHeight","ViewMode","LOW_BNB_BALANCE","ModalHeader","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","fullWidth","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","UserMenu","onPresentTransactionModal","avatarSrc","Menu","userMenu","currentLang","langs","setLang","links","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","fallback","Component","EasterEgg","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","Grid","GridItem","GridHeaderItem","BulletList","ApyCalculatorModal","displayApr","linkLabel","linkHref","earningTokenSymbol","isFarm","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","freq","fee","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","StyledCard","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","gradients","radii","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","StyledButton","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","StyledLink","StakeModal","isBnbPool","isRemovingStake","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","currencyValue","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","useMatchBreakpoints","isXs","isSm","hasVaultShares","showStakedTag","showSubtitle","iconFile","HelpIconWrapper","EarningsCell","labelText","Apr","showIcon","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","isXl","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","sortOption","setSortOption","chosenPoolsLength","accountHasVaultShares","cakePool","vizslapools","hvipools","antiwhalepools","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","chosenPools","showFinishedPools","showvizslapools","showhvipools","showantiwhalepools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","SwapWarningTokens","ContainerRow","InputContainer","textDisabled","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","warning","StyledBalanceMaxMini","button","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","default","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","MessageContainer","Message","SwapWarningModal","swapCurrency","preventClickHandler","preventDefault","querySelectorAll","el","SWAP_WARNING","SwapWarningTokensConfig","component","Label","ImageWrapper","ApeSwap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","warningTokenAddress","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","Swap","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectToAddLiquidity2","RedirectOldAddLiquidityPathStructure2","RedirectDuplicateTokenIds2","RedirectOldRemoveLiquidityPathStructure","RedirectOldRemoveLiquidityPathStructure2","RedirectPathToSwapOnly","RedirectToSwap","Home","lazy","Listing","Partnership","Farms","FarmAuction","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","Voting","Proposal","CreateProposal","Liquidity","Liquidity2","PoolFinder","PoolFinder2","RemoveLiquidity","RemoveLiquidity2","Global","exact","strict","iterations","ThemeProviderWrapper","dark","light","Providers","Updaters","Blocklist","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f64b1eb.chunk.js","sourcesContent":["import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import { ChainId, Token } from '@pancakeswap/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    lamea: {\n      symbol: 'LAMEA',\n      address: {\n        56: '0xaa44051bdd76E251aab66dbbE82A97343B4D7DA3',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    test1: {\n      symbol: 'test',\n      address: {\n        56: '0x6e281f90c6D1b5E5A01FB6f14C428afF69c04C3F',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://www.lameafinance.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","import { ChainId } from '@pancakeswap/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { SerializedBigNumber } from 'state/types'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js'\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpSymbol1: string\n  lpSymbol2: string\n  lpSymbol3: string\n  lpAddresses: Address\n  isEvent?: boolean\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  tokensymbol2: string\n  number: string\n  tokensymbol3: string\n  tokensymbol4: string\n  withdrawtime: string\n  withdrawtime2: string\n  withdrawtime3: string\n  withdrawtime4: string\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: SerializedBigNumber\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  farmStartBlock: number\n  farmStartDate: Date\n  farmEndBlock: number\n  farmEndDate: Date\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants'\nimport { BASE_BSC_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [fragment, contract, results, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const latestBlockNumber = useBlockNumber()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, latestBlockNumber)\n  }, [result, contract, fragment, latestBlockNumber])\n}\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getHVIAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getCakeAddress(), signer)\n}\nexport const getHVIContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, getHVIAddress(), signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { ChainId, JSBI, Percent, Token, WETH } from '@pancakeswap2/sdk'\nimport { BUSD, DAI, USDT, BTCB, CAKE, WBNB, UST, ETH, USDC } from './tokens3'\n\nexport const ROUTER_ADDRESS = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\nexport const ROUTER_ADDRESS2 = '0xcF0feBd3f17CEf5b47b0cD257aCf6025c5BFf3b7'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], CAKE[ChainId.MAINNET], BUSD[ChainId.MAINNET], USDT, BTCB, UST, ETH, USDC],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [BUSD[ChainId.MAINNET], CAKE[ChainId.MAINNET], BTCB],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [WETH[ChainId.MAINNET], DAI, BUSD[ChainId.MAINNET], USDT],\n  [ChainId.TESTNET]: [WETH[ChainId.TESTNET], CAKE[ChainId.TESTNET], BUSD[ChainId.TESTNET]],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [\n    [CAKE[ChainId.MAINNET], WBNB],\n    [BUSD[ChainId.MAINNET], USDT],\n    [DAI, USDT],\n  ],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@pancakeswap2/sdk'\nimport { ROUTER_ADDRESS , ROUTER_ADDRESS2 } from '../config/constants/index3'\nimport { BASE_BSC_SCAN_URLS } from '../config/index3'\nimport { TokenAddressMap } from '../state/lists/hooks3'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getBscScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_BSC_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\nexport function shortenAddress(address: string, chars = 4): string {\n  const parsed = isAddress(address)\n  if (!parsed) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function getRouterContract2(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS2, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n}\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\n","import { Currency } from '@pancakeswap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  try {\n    const multi = getMulticallContract()\n    const itf = new ethers.utils.Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { Pair, Token } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Cake-LP', 'Pancake LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, Pool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n","const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\nconst PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  PANCAKE_TOP100,\n  PANCAKE_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","export default {\n  masterChef: {\n    97: '',\n    56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lotteryV2: {\n    97: '0x5790c3534F30437641541a0FA04C992799602998',\n    56: '0x6F4b625814fAD4e0cedC6044ce042A2E4D2046e6',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0x1Cb956fb2A963084BBa550a59De6B4a897973534',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  bunnySpecialCakeVault: {\n    56: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    97: '',\n  },\n  bunnySpecialPrediction: {\n    56: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    97: '',\n  },\n  farmAuction: {\n    56: '0xb92Ab7c1edcb273AbA24b0656cEb3681654805D2',\n    97: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('apeswap/selectCurrency')\nexport const switchCurrencies = createAction<void>('apeswap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('apeswap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('apeswap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('apeswap/setRecipient')\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement: 'right-end', trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@pancakeswap2/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import { ChainId, Token } from '@pancakeswap2/sdk'\n\nexport const CAKE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    18,\n    'CAKE',\n    'PancakeSwap Token',\n  ),\n}\nexport const BUSD: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n  [ChainId.TESTNET]: new Token(\n    ChainId.TESTNET,\n    '0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee',\n    18,\n    'BUSD',\n    'Binance USD',\n  ),\n}\n\nexport const WBNB = new Token(ChainId.MAINNET, '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', 18, 'WBNB', 'Wrapped BNB')\nexport const DAI = new Token(ChainId.MAINNET, '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3', 18, 'DAI', 'Dai Stablecoin')\nexport const USDT = new Token(ChainId.MAINNET, '0x55d398326f99059fF775485246999027B3197955', 18, 'USDT', 'Tether USD')\nexport const BTCB = new Token(ChainId.MAINNET, '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c', 18, 'BTCB', 'Binance BTC')\nexport const UST = new Token(\n  ChainId.MAINNET,\n  '0x23396cF899Ca06c4472205fC903bDB4de249D6fC',\n  18,\n  'UST',\n  'Wrapped UST Token',\n)\nexport const ETH = new Token(\n  ChainId.MAINNET,\n  '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  18,\n  'ETH',\n  'Binance-Peg Ethereum Token',\n)\nexport const USDC = new Token(\n  ChainId.MAINNET,\n  '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  18,\n  'USDC',\n  'Binance-Peg USD Coin',\n)\n\nconst tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'VIZSLASWAP',\n    address: {\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  babycake: {\n    symbol: 'BABYCAKE',\n    address: {\n      56: '0xdB8D30b74bf098aF214e862C90E647bbB1fcC58c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://babycake.app/',\n  },\n  bmon: {\n    symbol: 'BMON',\n    address: {\n      56: '0x08ba0619b1e7A582E0BCe5BBE9843322C954C340',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://binamon.org/',\n  },\n  hero: {\n    symbol: 'HERO',\n    address: {\n      56: '0xD40bEDb44C081D2935eebA6eF5a3c8A31A1bBE13',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://metahero.io/',\n  },\n  wsg: {\n    symbol: 'WSG',\n    address: {\n      56: '0xA58950F05FeA2277d2608748412bf9F802eA4901',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wsg.gg/',\n  },\n  mcrn: {\n    symbol: 'MCRN',\n    address: {\n      56: '0xacb2d47827C9813AE26De80965845D80935afd0B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.macaronswap.finance/',\n  },\n  revv: {\n    symbol: 'REVV',\n    address: {\n      56: '0x833f307ac507d47309fd8cdd1f835bef8d702a93',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://revvmotorsport.com/',\n  },\n  skill: {\n    symbol: 'SKILL',\n    address: {\n      56: '0x154A9F9cbd3449AD22FDaE23044319D6eF2a1Fab',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cryptoblades.io/',\n  },\n  if: {\n    symbol: 'IF',\n    address: {\n      56: '0xB0e1fc65C1a741b4662B813eB787d369b8614Af1',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://impossible.finance/',\n  },\n  sps: {\n    symbol: 'SPS',\n    address: {\n      56: '0x1633b7157e7638C4d6593436111Bf125Ee74703F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://splinterlands.com',\n  },\n  chess: {\n    symbol: 'CHESS',\n    address: {\n      56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tranchess.com/',\n  },\n  titan: {\n    symbol: 'TITAN',\n    address: {\n      56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://titanswap.org',\n  },\n  harmony: {\n    symbol: 'ONE',\n    address: {\n      56: '0x03fF0ff224f904be3118461335064bB48Df47938',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.harmony.one/',\n  },\n  mask: {\n    symbol: 'MASK',\n    address: {\n      56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mask.io/',\n  },\n  dvi: {\n    symbol: 'DVI',\n    address: {\n      56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dvision.network/',\n  },\n  adx: {\n    symbol: 'ADX',\n    address: {\n      56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.adex.network',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0xf8a4ce3ec23dc726fcb9127f75075e62e615a242',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n  safemoon: {\n    symbol: 'SAFEMOON',\n    address: {\n      56: '0x8076C74C5e3F5852037F31Ff0093Eeb8c8ADd8D3',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://safemoon.net/',\n  },\n  axs: {\n    symbol: 'AXS',\n    address: {\n      56: '0x715D400F88C167884bbCc41C5FeA407ed4D2f8A0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://axieinfinity.com/',\n  },\n  c98: {\n    symbol: 'c98',\n    address: {\n      56: '0xaec945e04baf28b135fa7c640f624f8d90f1c3a6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://coin98.com/',\n  },\n  babyvizsla: {\n    symbol: 'BABYVIZSLA',\n    address: {\n      56: '0xfB19F247F1f22Cef1F0384535C779c664632cB6F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.babyvizsla.com/',\n  },\n    vizslaswap: {\n      symbol: 'VIZSLASWAP',\n      address: {\n        56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://vizslaswap.com',\n    },\n    shib: {\n      symbol: 'SHIB',\n      address: {\n        56: '0x2859e4544C4bB03966803b044A93563Bd2D0DD4D',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://shibatoken.com/',\n    },\n    ample: {\n      symbol: 'AMPLE',\n      address: {\n        56: '0x335F6e0E804B70A96bf9eB8AF31588942e9B2515',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ampleswap.com/',\n    },\n    skeleton: {\n      symbol: 'Skeleton',\n      address: {\n        56: '0xb0688E82D162Df5288A0D986DfFd4CF80AFb7897',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://defiskeletons.com',\n    },\n    hvi: {\n      symbol: 'HVI',\n      address: {\n        56: '0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://vizslainu.com/',\n    },\n    bvc: {\n      symbol: 'BVC',\n      address: {\n        56: '0x2dEA12c4f08074032a9997F0a199b04aF0fC0392',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://cryptochiptoken.com',\n    },\n    ace: {\n      symbol: 'ACE',\n      address: {\n        56: '0xFAaA87943bFca6D97434bE3d26C589647FEA4375',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://theacetoken.com/',\n    },\n    etc: {\n      symbol: 'ETC',\n      address: {\n        56: '0x3d6545b08693daE087E957cb1180ee38B9e3c25E',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://ethereumclassic.org/',\n    },\n    hank: {\n      symbol: 'HANK',\n      address: {\n        56: '0x6533CC9BBa0582720659F1E8f2B1C71ADc63C2CF',\n        97: '',\n      },\n      decimals: 9,\n      projectLink: 'https://hankinu.finance/',\n    },\n    fps: {\n      symbol: 'FPS',\n      address: {\n        56: '0x213503534d927424A5cdf6d580E9Fd408be9337a',\n        97: '',\n      },\n      decimals: 18,\n      projectLink: 'https://metaplayers.gg',\n    },\n}\n\nexport default tokens\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks3'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens3'\nimport { isAddress } from '../utils/index3'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract3'\nimport { filterTokens } from '../components/SearchModal/filtering3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'BNB'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants/index3'\nimport useTokenAllowance from './useTokenAllowance3'\nimport { Field } from '../state/swap/actions3'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks3'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices3'\nimport { calculateGasMargin } from '../utils/index3'\nimport { useTokenContract } from './useContract3'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.raw.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number | null\n  endBlock: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n}\n\nexport interface NodeRound {\n  epoch: number\n  startBlock: number\n  lockBlock: number\n  endBlock: number\n  lockPrice: ethers.BigNumber\n  closePrice: ethers.BigNumber\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  rewardRate: number\n  lastOraclePrice: string\n  history: HistoryData\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { createReducer } from '@reduxjs/toolkit'\nimport { updateBlockNumber } from './actions'\n\nexport interface ApplicationState {\n  readonly blockNumber: { readonly [chainId: number]: number }\n}\n\nconst initialState: ApplicationState = {\n  blockNumber: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder.addCase(updateBlockNumber, (state, action) => {\n    const { chainId, blockNumber } = action.payload\n    if (typeof state.blockNumber[chainId] !== 'number') {\n      state.blockNumber[chainId] = blockNumber\n    } else {\n      state.blockNumber[chainId] = Math.max(blockNumber, state.blockNumber[chainId])\n    }\n  }),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserSingleHopOnly,\n  muteAudio,\n  unmuteAudio,\n  toggleTheme,\n  updateUserFarmStakedOnly,\n  FarmStakedOnly,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport application from './application/reducer'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n\n    // Exchange\n    application,\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { ChainId, Token } from '@pancakeswap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { ChainId } from '@pancakeswap2/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens3'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getHVIAddress = () => {\n  return getAddress(tokens.hvi.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants/index3'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index3'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { CurrencyAmount, Fraction, JSBI, Percent, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, Farm, FarmsState } from '../types'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([1,4, 2]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(2)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\nexport const usePriceHVIBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(5)\n\n  const cakePriceBusdAsString = cakeBnbFarm.token.busdPrice\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n\n\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.vizslaswap,\n    number:'0',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '6%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x3FF00B58e432B0895e3fd69634Ec50e3931110c1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05',\n    sortOrder: 1,\n    isFinished: false,\n   },\n   {\n    sousId: 10,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.vizslaswap,\n    number:'10',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xD24bffa1a9e3632A10CF07037aCf34bFe468Ff30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 14,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hvi,\n    number:'14',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x44c44e691e523378fec15Ba101AE0618fCA21cC4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3500000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 21,\n    stakingToken: tokens.lamea,\n    earningToken: tokens.lamea,\n    number:'21',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'LAMEA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xaddf3F4CC56bDF78851D77206108c5Ca346Aa0ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.69',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 22,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.lamea,\n    number:'22',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x495Cd5Fc0dF972A028AD50c7be23d2350702B228',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 23,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.lamea,\n    number:'23',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x7027A5F70a93fDB1A6488f49db6f3e543E4881B7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.52',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 20,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.etc,\n    number:'20',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x78D1d79449da238bA76FB47CAff92De04C468622',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000037128',\n    sortOrder: 200,\n    isFinished: false,\n    },\n    {\n      sousId: 19,\n      stakingToken: tokens.vizslaswap,\n      earningToken: tokens.etc,\n      number:'19',\n      tokensymbol2: 'OPEN',\n      tokensymbol3: 'VIZSLASWAP',\n      tokensymbol4: 'ANTIWHALE',\n      withdrawtime: 'WITHDRAWAL FEE',\n      withdrawtime2: '0%',\n      withdrawtime3: '',\n      withdrawtime4: '',\n      contractAddress: {\n        97: '',\n        56: '0xd4B328Ee8a6801ac9e93175C6dB55b70B08aef5E',\n      },\n      poolCategory: PoolCategory.CORE,\n      harvest: true,\n      tokenPerBlock: '0.0000037128',\n      sortOrder: 200,\n      isFinished: false,\n      },\n   {\n    sousId: 18,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ace,\n    number:'18',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x89Cf97e3D99FDE78670BB9D87266BA366B626bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '14',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 17,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.hank,\n    number:'17',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1b9A506c8801518Bc3A74fe835accC097Ab9Bd1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3472000',\n    sortOrder: 200,\n    isFinished: false,\n    },\n   {\n    sousId: 16,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.shib,\n    number:'16',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xebcF793c2cF3aeD607Fd64e71ac6BEdAAf7F915A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '8.68',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 15,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.skeleton,\n    number:'15',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: 'ANTIWHALE',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x2e00A1BabB39047461b47DF2ce3Bc04e8Fa16C58',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00461',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 11,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.ltc,\n    number:'11',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xf142BD28CaCd766c24201bD2FF4513CEc032e882',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000053125',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 5,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.eth,\n    number:'5',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xa05E95D44d746FC833041fCb62103A04850e1851',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0000002776',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 1,\n    stakingToken: tokens.bvc,\n    earningToken: tokens.bvc,\n    number:'1',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BVC',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xb903485C032E93655B5d5CFe4A439018ACb9E211',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 2,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.bvc,\n    number:'2',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xceaBfaA080d55E7375E836eEfc005cAF26CacFDb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 3,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.bvc,\n    number:'3',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe1445b4Bdd342d45C4DcAe52D4DDD1F30601C393',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 4,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.hvi,\n    number:'4',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xe78Bf25A181A9b60Aef08a9F5e2079CB745234cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '7000000000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 7,\n    stakingToken: tokens.babyvizsla,\n    earningToken: tokens.babyvizsla,\n    number:'7',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'BABYVIZSLA',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x646086C73D560B7a4581F6229738c88733C92e4B',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 8,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.babyvizsla,\n    number:'8',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x6688B8f6D2c0aEdeADf8c84d2aCDC87C2E1f02A9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 9,\n    stakingToken: tokens.hvi,\n    earningToken: tokens.babyvizsla,\n    number:'9',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'HVI',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0x0340fdb81618874936535CA5276294fB84A719Ee',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '152000',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   {\n    sousId: 12,\n    stakingToken: tokens.vizslaswap,\n    earningToken: tokens.fps,\n    number:'12',\n    tokensymbol2: 'OPEN',\n    tokensymbol3: 'VIZSLASWAP',\n    tokensymbol4: '',\n    withdrawtime: 'WITHDRAWAL FEE',\n    withdrawtime2: '0%',\n    withdrawtime3: '',\n    withdrawtime4: '',\n    contractAddress: {\n      97: '',\n      56: '0xac4a94609dE599AA394E8C15e086eCef866d50cd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 200,\n    isFinished: false,\n   },\n   \n]\n\nexport default pools\n","import { ChainId, Token } from '@pancakeswap2/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist2.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\n\nexport default null\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\n// V2 REFACTOR\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\n  // This can be removed in Predictions V2\n  const ledgerResponses = await getLedgerData(account, epochs)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const { amount, claimed } = ledgerResponses[index]\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable && amount.gt(0) && !claimed,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\n    (method) => ({\n      address,\n      name: method,\n    }),\n  )\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    rewardRate: rewardRate.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startBlock,\n    lockBlock: null,\n    endBlock: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startBlock,\n    lockBlock,\n    endBlock,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardAmount,\n    rewardBaseCalAmount,\n    oracleCalled,\n  } = response\n\n  return {\n    epoch: epoch.toNumber(),\n    startBlock: startBlock.toNumber(),\n    lockBlock: lockBlock.toNumber(),\n    endBlock: endBlock.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    oracleCalled,\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { Currency } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo2'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import { Pair, Token } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n} from '../actions'\nimport { deserializeToken, serializeToken } from './helpers3'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'APE-LP', 'ApeSwapFinance LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens3'\nimport { useMulticallContract } from 'hooks/useContract3'\nimport { isAddress } from 'utils/index3'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { ChainId } from '@pancakeswap2/sdk'\nimport MULTICALL_ABI from './abi.json'\n\nconst MULTICALL_NETWORKS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb',\n  [ChainId.TESTNET]: '0x301907b5835a2d723Fe3e9E8C5Bc5375d5c1236A',\n}\n\nexport { MULTICALL_ABI, MULTICALL_NETWORKS }\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n} from 'utils/contractHelpers3'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@pancakeswap2/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport { MULTICALL_ABI, MULTICALL_NETWORKS } from '../config/constants/multicall/index3'\nimport { getContract } from '../utils/index3'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnceted or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId && MULTICALL_NETWORKS[chainId], MULTICALL_ABI, false)\n}\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import React, { useState } from 'react'\nimport { Button, Text, PancakeToggle, Flex, Message, Modal, ModalBody, InjectedModalProps } from '@pancakeswap/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserTransactionTTL,\n  useUserSlippageTolerance,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport { AutoColumn } from '../../Layout/Column'\nimport QuestionHelper from '../../QuestionHelper'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\nimport TransactionSettings from './TransactionSettings'\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [userSlippageTolerance, setUserslippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n\n  if (showConfirmExpertModal) {\n    return (\n      <Modal\n        title={t('Are you sure?')}\n        onBack={() => setShowConfirmExpertModal(false)}\n        onDismiss={onDismiss}\n        style={{ maxWidth: '420px' }}\n      >\n        <ModalBody>\n          <Message variant=\"warning\" mb=\"24px\">\n            <Text>\n              {t(\n                \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n              )}\n            </Text>\n          </Message>\n          <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n          <Button\n            variant=\"danger\"\n            id=\"confirm-expert-mode\"\n            onClick={() => {\n              // eslint-disable-next-line no-alert\n              if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n                toggleExpertMode()\n                setShowConfirmExpertModal(false)\n              }\n            }}\n          >\n            {t('Turn On Expert Mode')}\n          </Button>\n        </ModalBody>\n      </Modal>\n    )\n  }\n\n  return (\n    <Modal title={t('Settings')}  onDismiss={onDismiss}>\n      <ModalBody>\n        <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n          <Text bold fontSize=\"20px\">\n            {t('Transaction Settings')}\n          </Text>\n          <TransactionSettings\n            rawSlippage={userSlippageTolerance}\n            setRawSlippage={setUserslippageTolerance}\n            deadline={ttl}\n            setDeadline={setTtl}\n          />\n          <Text bold fontSize=\"20px\" mt=\"32px\">\n            {t('Interface Settings')}\n          </Text>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Toggle Expert Mode')}</Text>\n              <QuestionHelper\n                text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n                ml=\"4px\"\n              />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-expert-mode-button\"\n              checked={expertMode}\n              onChange={\n                expertMode\n                  ? () => {\n                      onChangeRecipient(null)\n                      toggleExpertMode()\n                    }\n                  : () => setShowConfirmExpertModal(true)\n              }\n            />\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <Text fontSize=\"14px\">{t('Disable Multihops')}</Text>\n              <QuestionHelper text={t('Restricts swaps to direct pairs only.')} ml=\"4px\" />\n            </RowFixed>\n            <PancakeToggle\n              id=\"toggle-disable-multihop-button\"\n              checked={singleHopOnly}\n              onChange={() => {\n                setSingleHopOnly(!singleHopOnly)\n              }}\n            />\n          </RowBetween>\n        </AutoColumn>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Button, TuneIcon, NotificationDot, useModal } from '@pancakeswap/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport SettingsModal from './SettingsModal'\n\nexport default function SettingsTab() {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <NotificationDot show={expertMode}>\n      <Button variant=\"text\" p={0} onClick={onPresentSettingsModal} id=\"open-settings-dialog-button\">\n        <TuneIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </NotificationDot>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getBscScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')}  onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from '@pancakeswap/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"primary\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon } from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport Settings from './Settings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  return (\n    <AppHeaderContainer>\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\">\n          <Heading as=\"h2\" mb=\"8px\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex>\n          <Settings />\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n   {\n    pid: 0,\n    lpSymbol: 'VIZSLASWAP',\n    lpSymbol1:'0',\n    lpSymbol2: '',\n    lpSymbol3: '',\n    lpAddresses: {\n      97: '',\n      56: '0xadaae082237cb1772c9e079db95c117e6dd0c5af',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol1:'1',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8d3cF6F026f1c8021BD3B0F74263D4D51208917F',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 18,\n    lpSymbol: 'VIZSLASWAP-BNB LP',\n    lpSymbol2: '(APESWAP)',\n    lpSymbol3: 'apeliquidity',\n    lpSymbol1:'1',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x51C1EbAFCCcF4A8e811E1fFE164731C874417AC3',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 8,\n    lpSymbol: 'VIZSLASWAP-BUSD LP',\n    lpSymbol1:'8',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x738156eAE2715776CBF92eD5751F7b8fc99951b7',\n    },\n    token: tokens.vizslaswap,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 3,\n    lpSymbol: 'HVI-BNB LP',\n    lpSymbol1:'3',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x0388cc967e382A1c85161453bc6cEaA70E59E33e',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 5,\n    lpSymbol: 'HVI-BUSD LP',\n    lpSymbol1:'5',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: true,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x8F71caaB0e4A0eB8615aBfA6A12996cC3d37e988',\n    },\n    token: tokens.hvi,\n    quoteToken: tokens.busd,\n   \n   },\n   {\n    pid: 19,\n    lpSymbol: 'LAMEA-BNB LP',\n    lpSymbol1:'19',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x20a9b426c8C7ccbddF8e9d8950966DE192Ce393b',\n    },\n    token: tokens.lamea,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 4,\n    lpSymbol: 'BVC-BNB LP',\n    lpSymbol1:'4',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x7b338aB42d823e50851f3C61d8374D83c4E0F71f',\n    },\n    token: tokens.bvc,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 6,\n    lpSymbol: 'BABYVIZSLA-BNB LP',\n    lpSymbol1:'6',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xeb94c1EA54AD6367D414B0B2075950646D0B6266',\n    },\n    token: tokens.babyvizsla,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpSymbol1:'2',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n   \n   },\n   {\n    pid: 9,\n    lpSymbol: 'ETH-BNB LP',\n    lpSymbol1:'9',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 10,\n    lpSymbol: 'LTC-BNB LP',\n    lpSymbol1:'10',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 11,\n    lpSymbol: 'FPS-BUSD LP',\n    lpSymbol1:'11',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x91F1Ae54D0c028C5f4dD428231935b408e331682',\n    },\n    token: tokens.fps,\n    quoteToken: tokens.busd,\n   },\n   {\n    pid: 12,\n    lpSymbol: 'SKELETON-BNB LP',\n    lpSymbol1:'12',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0xB44c8314c5AFEbADE2d895Ea2079452a602619c6',\n    },\n    token: tokens.skeleton,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 13,\n    lpSymbol: 'AMPLE-BNB LP',\n    lpSymbol1:'13',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x057f4e9cDcDD09cde25Fa3DcAaF4166eB02F4F0e',\n    },\n    token: tokens.ample,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 14,\n    lpSymbol: 'SHIB-BNB LP',\n    lpSymbol1:'14',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x6b7b3523a6660a5fcE3c28E1536CC8dd8D57f7E0',\n    },\n    token: tokens.shib,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 15,\n    lpSymbol: 'HANK-BNB LP',\n    lpSymbol1:'15',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x16B84784B13183c55e57C9F586697a369eBCF367',\n    },\n    token: tokens.hank,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 16,\n    lpSymbol: 'ACE-BNB LP',\n    lpSymbol1:'16',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x2f9916c808b3F7687d51880aeda629F61051e4Ef',\n    },\n    token: tokens.ace,\n    quoteToken: tokens.wbnb,\n   },\n   {\n    pid: 17,\n    lpSymbol: 'ETC-BNB LP',\n    lpSymbol1:'17',\n    lpSymbol2: '(PANCAKESWAP)',\n    lpSymbol3: '',\n    isEvent: false,\n    isCommunity: false,\n    lpAddresses: {\n      97: '',\n      56: '0x4d2d10B785BF000Dfd19e92cE2D2aE79E119b956',\n    },\n    token: tokens.etc,\n    quoteToken: tokens.wbnb,\n   },\n  \n   \n  \n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n   \n]\n\nexport default farms\n\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpSymbol1: '?',\n    lpSymbol2: '?',\n    lpSymbol3: '?',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { TokenAmount, Pair, Currency } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@pancakeswap2/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens3'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades3'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices3'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks/index3'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'BNB' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f', // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a', // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'BNB') return 'BNB'\n    if (valid === false) return 'BNB'\n  }\n  return 'BNB' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract, getHVIContract} from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\nexport const useTotalSupply2 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getHVIContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(new BigNumber(walletBalance.toString()))\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions3'\nimport { TransactionDetails } from './reducer3'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import { ChainId } from '@pancakeswap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\nexport const BASE_BSC_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://bscscan.com',\n  [ChainId.TESTNET]: 'https://testnet.bscscan.com',\n}\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 9 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeDataRow.tsx = 19 (40 - Amount sent to burn pool)\nexport const CAKE_PER_BLOCK = new BigNumber(4)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://www.vizslaswap.com'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_BSC_SCAN_URL = BASE_BSC_SCAN_URLS[ChainId.MAINNET]\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 2000000\nexport const DEFAULT_GAS_PRICE = 5\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ethers, Contract } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  if (pid === 0) {\n    const tx = await await masterChefContract.leaveStaking('0', options)\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\n\n","/* eslint-disable import/prefer-default-export */\nimport BigNumber from 'bignumber.js'\nimport pools from 'config/constants/pools'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport multicall from '../multicall'\nimport { simpleRpcProvider } from '../providers'\nimport { getAddress } from '../addressHelpers'\n\n/**\n * Returns the total number of pools that were active at a given block\n */\nexport const getActivePools = async (block?: number) => {\n  const eligiblePools = pools\n    .filter((pool) => pool.sousId !== 0)\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'startBlock',\n  }))\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\n    address: getAddress(contractAddress),\n    name: 'bonusEndBlock',\n  }))\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\n\n  return eligiblePools.reduce((accum, poolCheck, index) => {\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\n\n    if (!startBlock || !endBlock) {\n      return accum\n    }\n\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\n      return accum\n    }\n\n    return [...accum, poolCheck]\n  }, [])\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\n/**\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\n * https://gateway.pinata.cloud\n */\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Claire',\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\n    images: {\n      lg: 'claire-lg.png',\n      md: 'claire-md.png',\n      sm: 'claire-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\n    },\n    sortOrder: 999,\n    identifier: 'claire',\n    type: NftType.PANCAKE,\n    variationId: 17,\n  },\n  {\n    name: 'Syrup Soak',\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\n    images: {\n      lg: 'soak-lg.png',\n      md: 'soak-md.png',\n      sm: 'soak-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'syrup-soak',\n    type: NftType.PANCAKE,\n    variationId: 16,\n  },\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { BinanceIcon } from '@pancakeswap/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks3'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <BinanceIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","import { Currency, ETHER, Token } from '@pancakeswap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { Currency, ETHER, Token } from '@pancakeswap2/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'BNB'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","import { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../index'\n\nexport function useBlockNumber(): number | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1])\n}\n\nexport default useBlockNumber\n","import { Token } from '@pancakeswap/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { Token } from '@pancakeswap2/sdk'\nimport { SerializedToken } from '../actions'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n  )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","export const TICKET_LIMIT_PER_REQUEST = 2500\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap2/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index3'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades3'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap2/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants/index3'\nimport { PairState, usePairs } from './usePairs3'\nimport { wrappedCurrency } from '../utils/wrappedCurrency3'\n\nimport { useUnsupportedTokens } from './Tokens3'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config/index3'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@pancakeswap2/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from '@pancakeswap/uikit'\nimport { registerToken } from 'utils/wallet3'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getBscScanLink } from '../../utils/index3'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getBscScanLink(hash, 'transaction', chainId)}>\n              {t('View on BscScan')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"background\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { Trade, Percent, currencyEquals } from '@pancakeswap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@pancakeswap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from '@pancakeswap/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils/index3'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap2/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal3'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo/index2'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@pancakeswap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: rgb(3,48,55);\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto CAKE Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { isAddress } from '../../utils/index3'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","const getTokenLogoURL = (address: string) =>\n  `/images/tokens/${address}.png`\n\nexport default getTokenLogoURL\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useTokenContract } from './useContract3'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@pancakeswap2/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers3'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'VizslaSwap',\n  description:\n    'VizslaSwap is the decentralized exchange of the Hungarian Vizsla Inu (HVI) Ecosystem. Buy, Trade HVI or Partner tokens and stake them for best yields. All at one place. VizslaSwap – the simplest way to join the Vizsla Ecosystem.',\n  image: 'https://lotery.cryptochiptoken.com/images/hero.jpg',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('Vizslaswap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/mining':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('VizslaSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool2') ||\n    pathname.includes('/createape') ||\n    pathname.includes('/addapeliquidity') ||\n    pathname.includes('/removeape') ||\n    pathname.includes('/apefind') ||\n    pathname.includes('/apeliquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool2\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav2'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from '@pancakeswap/uikit'\nimport SubNav from 'components/Menu/SubNav'\n\nconst StyledPage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <StyledPage {...props}>\n      <SubNav />\n      {children}\n      <Flex flexGrow={1} />\n    </StyledPage>\n  )\n}\n\nexport default Page\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\n\nexport default updateBlockNumber\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks/index3'\nimport { getBscScanLink } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport { ListLogo } from 'components/Logo/index2'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap2/sdk'\nimport { MIN_BNB } from '../config/constants/index3'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from '@pancakeswap/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getBscScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a BEP20 token on BSC with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address\n          ? `${token.address.substring(0, 6)}...${token.address.substring(token.address.length - 4)}`\n          : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getBscScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on BscScan')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@pancakeswap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\n    return {\n      address: getPointCenterIfoAddress(),\n      name: 'checkClaimStatus',\n      params: [account, address],\n    }\n  })\n\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\n    | [boolean][]\n    | null\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\n      if (claimStatusArr === null) {\n        return accum\n      }\n\n      const [claimStatus] = claimStatusArr\n\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getBscScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap2/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs3'\nimport useTotalSupply from 'hooks/useTotalSupply3'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency3'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks3'\nimport { useCurrencyBalances } from '../wallet/hooks3'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants/index3'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap2/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenuItem, ButtonMenu } from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link, useLocation } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { DoubleCurrencyLogo } from '../../components/Logo/index2'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard3'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS2 } from '../../config/constants/index3'\nimport { PairState } from '../../hooks/usePairs3'\nimport { useCurrency } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback3'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks3'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks3'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks/index3'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract2 } from '../../utils/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency3'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom2'\nimport { currencyId } from '../../utils/currencyId3'\nimport PoolPriceBar from './PoolPriceBar3'\nimport Page from '../Page2'\n\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\nexport default function AddLiquidity2() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS2)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS2)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract2(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/addapeliquidity/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/addapeliquidity/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/addapeliquidity/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/addapeliquidity/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/addapeliquidity/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool2\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n             <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@pancakeswap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Button, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport styled from 'styled-components'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@pancakeswap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal, ButtonMenu, ButtonMenuItem} from '@pancakeswap/uikit'\nimport { useHistory, useParams, Link , useLocation} from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\nconst StyledNav = styled.nav`\n  margin-top: 40px;\n`\n\nexport default function AddLiquidity() {\n\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  const history = useHistory()\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  const location = useLocation()\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'BNB'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n       <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/add\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/addapeliquidity\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n} from './helpers'\n\nconst PAST_ROUND_COUNT = 5\nconst FUTURE_ROUND_COUNT = 2\n\n// The estimated time it takes to broadcast\nexport const BLOCK_PADDING = 3\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 20,\n  minBetAmount: '1000000000000000',\n  rewardRate: 97,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  ledgers: {},\n  claimableStatuses: {},\n}\n\n// Thunks\n// V2 REFACTOR\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalBlocks'\n  | 'bufferBlocks'\n  | 'minBetAmount'\n  | 'rewardRate'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n// END V2 REFACTOR\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\n      const { account, betId } = action.payload\n\n      if (state.history[account]) {\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\n\n        if (betIndex >= 0) {\n          state.history[account][betIndex].claimed = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalBlocks = intervalBlocks\n      state.bufferBlocks = bufferBlocks\n      state.minBetAmount = minBetAmount\n      state.rewardRate = rewardRate\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\n        action.payload\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\n      const futureRounds: ReduxNodeRound[] = []\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(\n          makeFutureRoundResponse(\n            currentEpoch + i,\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\n          ),\n        )\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        bufferBlocks,\n        intervalBlocks,\n        rewardRate,\n        currentRoundStartBlockNumber,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = bets\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markBetHistoryAsCollected,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  //   Else if there is a graph response - merge with node data where node data is more accurate\n  const mergedResponse = userGraphData.map((graphRound, index) => {\n    const nodeRound = lotteryNodeData[index]\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\n    if (nodeRound) {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      // if isLoading === true, there has been a node error - return graphRound\n      if (!nodeRound.isLoading) {\n        return {\n          endTime: nodeRound.endTime,\n          status: nodeRound.status,\n          lotteryId: nodeRound.lotteryId.toString(),\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n          totalTickets: graphRound.totalTickets,\n          tickets: ticketDataForRound.userTickets,\n        }\n      }\n      return graphRound\n    }\n    return graphRound\n  })\n  return mergedResponse\n}\n\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase() },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status,\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LightGreyCard } from 'components/Card'\n\nexport const BodyWrapper = styled(LightGreyCard)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { LogoIcon } from '@pancakeswap/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <LogoIcon />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@pancakeswap2/sdk'\nimport {\n  Button,\n  Text,\n  ChevronUpIcon,\n  ChevronDownIcon,\n  Card,\n  CardBody,\n  Flex,\n  CardProps,\n  AddIcon,\n} from '@pancakeswap/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply3'\n\nimport { useTokenBalance } from '../../state/wallet/hooks3'\nimport { currencyId } from '../../utils/currencyId3'\nimport { unwrappedToken } from '../../utils/wrappedCurrency3'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo2'\nimport { DoubleCurrencyLogo } from '../Logo/index2'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants/index3'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <span role=\"img\" aria-label=\"pancake-icon\">\n              🥞\n            </span>{' '}\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/removeape/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/addapeliquidity/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Grid } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport QuestionHelper from '../../QuestionHelper'\nimport { AutoColumn } from '../../Layout/Column'\nimport { RowBetween, RowFixed } from '../../Layout/Row'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nexport interface SlippageTabsProps {\n  rawSlippage: number\n  setRawSlippage: (rawSlippage: number) => void\n  deadline: number\n  setDeadline: (deadline: number) => void\n}\n\nexport default function SlippageTabs({ rawSlippage, setRawSlippage, deadline, setDeadline }: SlippageTabsProps) {\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (rawSlippage / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (deadline / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && rawSlippage < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && rawSlippage > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  function parseCustomSlippage(value: string) {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setRawSlippage(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  function parseCustomDeadline(value: string) {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setDeadline(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if the price changes unfavorably by more than this percentage.')}\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Flex flexWrap={['wrap', 'wrap', 'nowrap']}>\n          <Grid gridTemplateColumns=\"1fr 1fr 1fr\" gridGap=\"8px\" mb={['8px', '8px', 0]} mr={[0, 0, '8px']}>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(10)\n              }}\n              variant={rawSlippage === 10 ? 'primary' : 'tertiary'}\n            >\n              0.1%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(50)\n              }}\n              variant={rawSlippage === 50 ? 'primary' : 'tertiary'}\n            >\n              0.5%\n            </Button>\n            <Button\n              onClick={() => {\n                setSlippageInput('')\n                setRawSlippage(100)\n              }}\n              variant={rawSlippage === 100 ? 'primary' : 'tertiary'}\n            >\n              1%\n            </Button>\n          </Grid>\n          <RowBetween>\n            <Input\n              scale=\"lg\"\n              placeholder={(rawSlippage / 100).toFixed(2)}\n              value={slippageInput}\n              onBlur={() => {\n                parseCustomSlippage((rawSlippage / 100).toFixed(2))\n              }}\n              onChange={(e) => parseCustomSlippage(e.target.value)}\n              isWarning={!slippageInputIsValid}\n              isSuccess={![10, 50, 100].includes(rawSlippage)}\n            />\n            <Text color=\"primary\" bold ml=\"8px\">\n              %\n            </Text>\n          </RowBetween>\n        </Flex>\n        {!!slippageError && (\n          <RowBetween\n            style={{\n              fontSize: '14px',\n              paddingTop: '7px',\n              color: slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E',\n            }}\n          >\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </RowBetween>\n        )}\n      </AutoColumn>\n\n      <AutoColumn gap=\"sm\">\n        <RowFixed>\n          <Text fontSize=\"14px\">{t('Transaction deadline')}</Text>\n          <QuestionHelper text={t('Your transaction will revert if it is pending for more than this long.')} ml=\"4px\" />\n        </RowFixed>\n        <RowFixed>\n          <Input\n            color={deadlineError ? 'red' : undefined}\n            onBlur={() => {\n              parseCustomDeadline((deadline / 60).toString())\n            }}\n            placeholder={(deadline / 60).toString()}\n            value={deadlineInput}\n            onChange={(e) => parseCustomDeadline(e.target.value)}\n          />\n          <Text pl=\"8px\" fontSize=\"14px\">\n            {t('minutes')}\n          </Text>\n        </RowFixed>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    if (!campaignMap.has(userPoint.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks3'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens3'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency3'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks3'\nimport { useCurrencyBalance } from '../../state/wallet/hooks3'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens3'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo/index2'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils/index3'\nimport ImportRow from './ImportRow3'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks3'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap2/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens3'\nimport { isAddress } from '../../utils/index3'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList3'\nimport { filterTokens, useSortedTokensByQuery } from './filtering3'\nimport useTokenComparator from './sorting3'\n\nimport ImportRow from './ImportRow3'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n        \n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@pancakeswap2/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback2'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks3'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens3'\nimport { useRemoveUserAddedToken } from 'state/user/hooks/index3'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens3'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils/index3'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow3'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists3'\nimport ManageTokens from './ManageTokens3'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback2'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks3'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap2/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch3'\nimport ImportToken from './ImportToken3'\nimport Manage from './Manage3'\nimport ImportList from './ImportList2'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // gloabls\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@pancakeswap/sdk'\nimport { Text, Input, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from '@pancakeswap/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getBscScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local lisr\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getBscScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getBscScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(true)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from '@pancakeswap/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@pancakeswap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n  Flex,\n} from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n \n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\nimport { Input, InputProps } from '@pancakeswap/uikit'\n\nimport 'react-datepicker/dist/react-datepicker.css'\n\nexport interface DatePickerProps extends ReactDatePickerProps {\n  inputProps?: InputProps\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\n  return (\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\n  )\n}\n\nexport default DatePicker\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport DatePicker, { DatePickerProps } from './DatePicker'\n\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\n  const { t } = useTranslation()\n\n  return (\n    <DatePicker\n      showTimeSelect\n      showTimeSelectOnly\n      timeIntervals={15}\n      timeCaption={t('Time')}\n      dateFormat=\"ppp\"\n      {...props}\n    />\n  )\n}\n\nexport default TimePicker\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp3'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract3'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  return !VISIBILITY_STATE_SUPPORTED || document.visibilityState !== 'hidden'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible(): boolean {\n  const [focused, setFocused] = useState<boolean>(isWindowVisible())\n  const listener = useCallback(() => {\n    setFocused(isWindowVisible())\n  }, [setFocused])\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    document.addEventListener('visibilitychange', listener)\n    return () => {\n      document.removeEventListener('visibilitychange', listener)\n    }\n  }, [listener])\n\n  return focused\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { updateBlockNumber } from './actions'\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch()\n\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((prev) => {\n        if (chainId === prev.chainId) {\n          if (typeof prev.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, prev.blockNumber) }\n        }\n        return prev\n      })\n    },\n    [chainId, setState],\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  return null\n}\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== latestBlockNumber) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, latestBlockNumber), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: latestBlockNumber }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', latestBlockNumber)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: latestBlockNumber,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, latestBlockNumber])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from '@pancakeswap/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { useBlockNumber } from '../application/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  lastBlockNumber: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = lastBlockNumber - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const lastBlockNumber = useBlockNumber()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !lastBlockNumber) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(lastBlockNumber, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getBscScanLink(hash, 'transaction', chainId)}>\n                      View on BscScan\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: lastBlockNumber }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, lastBlockNumber, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = new BigNumber('2000000000') // 2 Gwei\n\nconst ModalHeader = styled(UIKitModalHeader)`\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.background};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n    body {\n      background-image: url('images/9.png');\n     background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    \n       }\n    \n    @media only screen and (max-width: 1350px) {\n    body {\n      background-image: url('images/6.png');\n      background-attachment: fixed;\n      background-position: top;\n      background-size: 100%;\n      background-repeat: repeat;\n    }\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/pool',\n      },\n    ],\n  },\n  {\n    label: t('Liquidity Mining'),\n    icon: 'FarmIcon',\n    href: '/mining',\n  },\n  {\n    label: t('Staking Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: 'https://lottery.cryptochiptoken.com/',\n    status: {\n      text: t('Win').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('Partnership'),\n    icon: 'NftIcon',\n    href: '/partnership',    \n      },\n  {\n    label: t('WhitePaper'),\n    icon: 'MoreIcon',\n    href: '/whitepaper',    \n      },\n    ]\n  \n\nexport default config\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport { farmsConfig } from 'config/constants'\nimport { FarmConfig } from 'config/constants/types'\nimport useRefresh from 'hooks/useRefresh'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\n\nexport interface FarmWithBalance extends FarmConfig {\n  balance: BigNumber\n}\n\nconst useFarmsWithBalance = () => {\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\n  const [earningsSum, setEarningsSum] = useState<number>(null)\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalances = async () => {\n      const calls = farmsConfig.map((farm) => ({\n        address: getMasterChefAddress(),\n        name: 'pendingCake',\n        params: [farm.pid, account],\n      }))\n\n      const rawResults = await multicall(masterChefABI, calls)\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\n        const earningNumber = new BigNumber(earning.balance)\n        if (earningNumber.eq(0)) {\n          return accum\n        }\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\n      }, 0)\n\n      setFarmsWithStakedBalance(farmsWithBalances)\n      setEarningsSum(totalEarned)\n    }\n\n    if (account) {\n      fetchBalances()\n    }\n  }, [account, fastRefresh])\n\n  return { farmsWithStakedBalance, earningsSum }\n}\n\nexport default useFarmsWithBalance\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React, { useState, useCallback } from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Text, Skeleton, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport useToast from 'hooks/useToast'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { harvestFarm } from 'utils/calls'\nimport Balance from 'components/Balance'\nimport BigNumber from 'bignumber.js'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { balance } = useGetBnbBalance()\n  const { balance: cakeBalance } = useTokenBalance(getCakeAddress())\n  const { logout } = useAuth()\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\n\n  const masterChefContract = useMasterchef()\n  const cakePriceBusd = usePriceCakeBusd()\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\n  const numFarmsToCollect = farmsWithStakedBalance.length\n  \n  const earningsText = t('%earningsBusd% Collect from %count% %farms%', {\n    earningsBusd: earningsBusd.toString(),\n    count: numFarmsToCollect > 0 ? numFarmsToCollect : '',\n    farms: numFarmsToCollect === 0 || numFarmsToCollect > 1 ? 'farms' : 'farm',\n  })\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\n  const earningsBusd2 = earningsBusd.div(cakePriceBusd)\n  \n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of farmsWithStakedBalance) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'VIZSLASWAP' }),\n        )\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('BNB Balance Low')}</Text>\n            <Text as=\"p\">{t('You need BNB for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('BNB Balance')}</Text>\n        <Text>{getFullDisplayBalance(balance, 18, 6)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('VIZSLASWAP Balance')}</Text>\n        <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n      </Flex>\n      \n      <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n      <Text  color=\"textSubtle\">\n              {toCollectText}\n            </Text>     \n            {preText && (\n              <Text  color=\"textSubtle\">\n                {preText}\n              </Text>\n            )}\n             {earningsBusd && !earningsBusd.isNaN() ? (\n              <Balance\n                decimals={earningsBusd.gt(0) ? 2 : 0}\n                fontSize=\"18px\"\n                bold\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\n                lineHeight=\"1\"\n                value={earningsBusd.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n              </Flex>\n              <Flex alignItems=\"center\" justifyContent=\"space-between\"  mb=\"24px\">\n        <Text color=\"textSubtle\">{t('Collect in VIZSLASWAP')}</Text>\n        {earningsBusd2 && !earningsBusd2.isNaN() ? (\n              <Balance\n                decimals={earningsBusd2.gt(0) ? 3 : 0}\n                fontSize=\"18px\"\n                bold\n                lineHeight=\"1\"\n                value={earningsBusd2.toNumber()}\n              />\n              ) : (\n                <Skeleton width={96} height={24} my=\"2px\" />\n              )}\n      </Flex>\n                 <Button\n              width={['100%', null, null, 'auto']}\n              id=\"harvest-all\"\n              mb=\"2px\"\n              isLoading={pendingTx}\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n              disabled={pendingTx}\n              onClick={harvestAllFarms}\n            >\n              <Text color=\"invertedContrast\" bold>\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\n              </Text>\n            </Button>\n \n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getBscScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getBscScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from '@pancakeswap/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Flex,\n  LogoutIcon,\n  useModal,\n  UserMenu as UIKitUserMenu,\n  UserMenuDivider,\n  UserMenuItem,\n} from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd} from 'state/farms/hooks'\nimport { useProfile } from 'state/profile/hooks'\nimport config from './config'\nimport UserMenu from './UserMenu'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Box>\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('APR (incl. LP rewards)')}\n            </Text>\n            <Text small>{displayApr}%</Text>\n          </Flex>\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\n            <Text small color=\"textSubtle\">\n              {t('Base APR (yield only)')}\n            </Text>\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n          </Flex>\n        </Box>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s VIZSLASWAP is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from '@pancakeswap/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'primary' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n    background: #ffffff00;\n  `\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  number: string\n}> = ({ earningTokenSymbol, stakingTokenSymbol, number, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `00.png`\n    : `${number}.png`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'CAKE' && stakingTokenSymbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Flex flexDirection=\"column\">\n        <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n          {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n        </Heading>\n        <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n      </Flex>\n      <Image src={`/images/pools/${poolImageSrc}`} alt={number} width={85} height={85} />\n    </Flex>\n  </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\n        const currentAllowance = new BigNumber(response.toString())\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract) => {\n  const tx = await sousChefContract.emergencyWithdraw()\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n     >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href=\"/swap\">\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit('0', options)\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake VIZSLASWAP into pool.')}</Text>\n      <Text>{t('Harvest: collect VIZSLASWAP and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon} from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport styled from 'styled-components'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { number, sousId, stakingToken, earningToken, isFinished, userData,withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4} = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n  \n  const Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 0px;\n`\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        number= {number}\n        isStaking={accountHasStakedBalance}\n        earningTokenSymbol={earningToken.symbol}\n        stakingTokenSymbol={stakingToken.symbol}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee')\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small textTransform=\"lowercase\">\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new VIZSLASWAP in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst callOptions = {\n  gasLimit: 380000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href=\"/swap\" variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent VIZSLASWAP profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\nconst Row = styled.div`\nalign-items: center;\ndisplay: flex;\nfont-size: 14px;\njustify-content: space-between;\nmargin-bottom: 0px;\n`\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const { number, stakingToken, earningToken, isFinished, userData, withdrawtime, withdrawtime2, withdrawtime3, withdrawtime4 } = pool\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        number={number}\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningTokenSymbol=\"VIZSLASWAP\"\n        stakingTokenSymbol=\"VIZSLASWAP\"\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n        <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime2}\n           </Text>\n           </Row> \n           <Row>   \n          <Text textAlign=\"left\" color='contrast'>   \n          {withdrawtime3}\n          </Text>\n          <Text textAlign=\"left\" color='contrast'>   \n           {withdrawtime4}\n           </Text>\n           </Row> \n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await cakeVaultContract.harvest({ gasLimit: 1300000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(t('Bounty collected!'), t('VIZSLASWAP bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" VIZSLASWAP\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" VIZSLASWAP\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto VIZSLASWAP Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto VIZSLASWAP pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto VIZSLASWAP Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://www.youtube.com/watch?v=-Zo-FcmELCU\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints, Image } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { number, sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n  const iconFile = `${number}.png`.toLocaleLowerCase()\n\n\n  if (isAutoVault) {\n    title = t('Auto VIZSLASWAP')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual VIZSLASWAP')\n    subtitle = `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n       <Image src={`/images/pools/${iconFile}`} alt=\"icon\" width={25} height={25} mr=\"5px\" />\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent VIZSLASWAP profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" VIZSLASWAP\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${getAddress(stakingToken.address)}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanLink } from 'utils'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished,withdrawtime2 } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          { t('Withdrawal fee')}\n        </Text>\n        <Text fontSize=\"18px\" width=\"80px\" color=\"white\" textAlign=\"left\">\n        {withdrawtime2}\n        </Text>\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent VIZSLASWAP profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getBscScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: rgb(0,47,46);\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} VIZSLASWAP ${t('Stake').toLocaleLowerCase()} VIZSLASWAP`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid rgb(0,47,46);\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text, Button} from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { useFetchPublicPoolsData, usePools, useFetchCakeVault, useCakeVault } from 'state/pools/hooks'\nimport { usePollFarmsData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\ndisplay: flex;\nwidth: 100%;\nalign-items: center;\nposition: relative;\n\njustify-content: space-between;\nflex-direction: column;\nmargin-bottom: 35px;\nbackground-color: rgb(19,47,46) ;\nborder-radius: 25px;\n\n${({ theme }) => theme.mediaQueries.sm} {\n  flex-direction: row;\n    flex-wrap: wrap;\n    padding: 20px 32px;\n    margin-bottom: 50;\n}\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_pool_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  const vizslapools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'VIZSLASWAP')\n  const hvipools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol3  === 'HVI')\n  const antiwhalepools = pools.filter((pool) => pool.sousId !== -1 && pool.tokensymbol4  === 'ANTIWHALE')\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n          if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n            return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n          }\n          return poolsCurrentlyVisible\n        })\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n  const showvizslapools = location.pathname.includes('vizslapools')\n  const showhvipools = location.pathname.includes('hvipools')\n  const showantiwhalepools = location.pathname.includes('antiwhalepools')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n  if (showvizslapools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : vizslapools\n  } \n  if (showhvipools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : hvipools\n  } \n  if (showantiwhalepools) {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : antiwhalepools\n  } \n\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Staking Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"35px\" flex=\"1\" height=\"fit-content\" >\n        <Button as=\"a\" width={50} height={35}  href=\"/pools\"  variant=\"secondary\" mr={10}>\n        {t('ALL')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/vizslapools\" variant=\"secondary\" mr={10}>\n        {t('VIZSLASWAP')}\n      </Button>\n      <Button as=\"a\"width={50} height={35}  href=\"/pools/hvipools\" variant=\"secondary\" mr={10}>\n        {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={120} height={35}  href=\"/pools/antiwhalepools\" variant=\"secondary\" mr={10}>\n        {t('ANTIWHALE')}\n      </Button>\n      </Flex>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import tokens from 'config/constants/tokens'\nimport { Address } from './types'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningToken {\n  symbol: string\n  address: Address\n}\n\ninterface WarningTokenList {\n  [key: string]: WarningToken\n}\n\nconst SwapWarningTokens = <WarningTokenList>{\n  safemoon,\n  bondly,\n}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils/index3'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap2/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices3'\nimport { ONE_BIPS } from '../../../config/constants/index3'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo/index2'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap2/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal3'\nimport SwapModalFooter from './SwapModalFooter3'\nimport SwapModalHeader from './SwapModalHeader3'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap2/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency3'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap2/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks/index3'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices3'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact3'\nimport SwapRoute from './SwapRoute3'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails3'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap2/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap2/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken3'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants/index3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { calculateGasMargin, getRouterContract2, isAddress, shortenAddress } from '../utils/index3'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline3'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract2(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        ttl: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          ttl: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap2/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks3'\nimport { useTransactionAdder } from '../state/transactions/hooks3'\nimport { useCurrencyBalance } from '../state/wallet/hooks3'\nimport { useWETHContract } from './useContract3'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap2/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon,ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades3'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers2'\nimport AddressInputPanel from './components/AddressInputPanel3'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal3'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel3'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown3'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee3'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice3'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal3'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants/index3'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens3'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback3'\nimport { useSwapCallback } from '../../hooks/useSwapCallback3'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback3'\nimport { Field } from '../../state/swap/actions3'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks3'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks/index3'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend3'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices3'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page2'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function ApeSwap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/apeswap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool2') ||\n      pathname.includes('/createape') ||\n      pathname.includes('/addapeliquidity') ||\n      pathname.includes('/removeape') ||\n      pathname.includes('/apefind') ||\n      pathname.includes('/apeliquidity')\n    ) {\n      return 0\n    }\n    return 1\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/apeswap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/apeswap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n        <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap2/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants/index3'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getBscScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getBscScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on BscScan')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address or ENS name')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from '@pancakeswap/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@pancakeswap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { isAddress, shortenAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to{' '}\n            <b title={recipient}>{isAddress(recipient) ? shortenAddress(recipient) : recipient}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@pancakeswap/sdk'\nimport { InjectedModalProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@pancakeswap/sdk'\nimport { Text, Flex, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@pancakeswap/sdk'\nimport { Text } from '@pancakeswap/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@pancakeswap/sdk'\nimport { Text, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@pancakeswap/sdk'\nimport { Modal, InjectedModalProps } from '@pancakeswap/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress, shortenAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? shortenAddress(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@pancakeswap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.deposit({ value: `0x${inputAmount.raw.toString(16)}` })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} BNB to WBNB` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient BNB balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await wethContract.withdraw(`0x${inputAmount.raw.toString(16)}`)\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WBNB to BNB` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WBNB balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from '@pancakeswap/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from '@pancakeswap/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from '@pancakeswap/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [getAddress(SwapWarningTokensConfig.safemoon.address)]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [getAddress(SwapWarningTokensConfig.bondly.address)]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.background}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@pancakeswap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal, Flex, MinusIcon, AddIcon, ButtonMenuItem, ButtonMenu} from '@pancakeswap/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport { useHistory } from 'react-router'\nimport { getAddress } from 'utils/addressHelpers'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\nconst ImageWrapper = styled.div`\nflex: none;\nmargin: 0 auto;\n${({ theme }) => theme.mediaQueries.md} {\n  flex: none;\n  margin: 0 auto;\n}\n`\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n`\n\nexport default function Swap() {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      const warningTokenAddress = getAddress(warningTokenData.address)\n      return swapCurrency.address === warningTokenAddress\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n  const getActiveIndex = (pathname: string): number => {\n    if (\n      pathname.includes('/pool') ||\n      pathname.includes('/create') ||\n      pathname.includes('/add') ||\n      pathname.includes('/remove') ||\n      pathname.includes('/find') ||\n      pathname.includes('/liquidity')\n    ) {\n      return 1\n    }\n    return 0\n  }\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n               <Flex alignItems=\"center\" justifyContent=\"space-between\" >\n                              <AddIcon color=\"primary\" width=\"17px\" />\n\n                  <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"15px\" >\n      <Button as=\"a\" width={72}  height={40} href=\"/swap?outputCurrency=0xDE619A9E0eEeAA9F8CD39522Ed788234837F3B26\" variant=\"secondary\" mr={10}>\n      <ImageWrapper>\n        <img src=\"/images/pixel/P1.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('HVI')}\n      </Button>\n      <Button as=\"a\" width={147}  height={40} href=\"/swap?outputCurrency=0xaDAaE082237cB1772c9e079dB95c117E6Dd0C5aF\" variant=\"secondary\" >\n      <ImageWrapper>\n        <img src=\"/images/pixel/LogoDark.png\" alt=\"ifo bunny\" width=\"27px\" height=\"27px\"/>\n      </ImageWrapper>\n      {t('VIZSLASWAP')}\n      </Button>\n      </Flex>\n      </Flex>\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n          <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('PancakeSwap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/apeswap\" as={Link}>\n          {t('ApeSwap')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n      </StyledNav>\n    </Page>\n  )\n}\n","import { Percent } from '@pancakeswap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity />\n}\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\nimport AddLiquidity2 from './index'\n\nexport function RedirectToAddLiquidity2() {\n  return <Redirect to=\"/addapeliquidity/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|BNB)-(0x[a-fA-F0-9]{40}|BNB)$/\nexport function RedirectOldAddLiquidityPathStructure2() {\n  const { currencyIdA } = useParams<{ currencyIdA: string }>()\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/addapeliquidity/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity2 />\n}\n\nexport function RedirectDuplicateTokenIds2() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string }>()\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/addapeliquidity/${currencyIdA}`} />\n  }\n  return <AddLiquidity2 />\n}\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, useParams } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure2() {\n  const { tokens } = useParams<{ tokens: string }>()\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool2\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/removeape/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure2\n","import React from 'react'\nimport { Redirect, useLocation, useParams } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly() {\n  const location = useLocation()\n    return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap() {\n  const location = useLocation()\n  const { search } = location\n  const { outputCurrency } = useParams<{ outputCurrency: string }>()\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport ApeSwap from './views/ApeSwap'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport {\n  RedirectDuplicateTokenIds2,\n  RedirectOldAddLiquidityPathStructure2,\n  RedirectToAddLiquidity2,\n} from './views/AddLiquidity2/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure2 from './views/RemoveLiquidity2/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Listing = lazy(() => import('./views/Listing'))\nconst Partnership = lazy(() => import('./views/Partnership'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\nconst Voting = lazy(() => import('./views/Voting'))\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst AddLiquidity2 = lazy(() => import('./views/AddLiquidity2'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst Liquidity2 = lazy(() => import('./views/Pool2'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst PoolFinder2 = lazy(() => import('./views/PoolFinder2'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst RemoveLiquidity2 = lazy(() => import('./views/RemoveLiquidity2'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route>\n            <Route exact path=\"/whitepaper\">\n              <Listing />\n            </Route>\n            <Route exact path=\"/partnership\">\n              <Partnership />\n            </Route>\n            <Route path=\"/mining\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\">\n              <Swap />\n            </Route>\n            <Route exact strict path=\"/apeswap\">\n              <ApeSwap />\n            </Route>\n            <Route exact strict path=\"/swap/:outputCurrency\">\n              <RedirectToSwap />\n            </Route>\n            <Route exact strict path=\"/send\">\n              <RedirectPathToSwapOnly />\n            </Route>\n            <Route exact strict path=\"/find\">\n              <PoolFinder />\n            </Route>\n            <Route exact strict path=\"/apefind\">\n              <PoolFinder2 />\n            </Route>\n            <Route exact strict path=\"/liquidity\">\n              <Liquidity />\n            </Route>\n            <Route exact strict path=\"/apeliquidity\">\n              <Liquidity2 />\n            </Route>\n            <Route exact strict path=\"/create\">\n              <RedirectToAddLiquidity />\n            </Route>\n            <Route exact strict path=\"/createape\">\n              <RedirectToAddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/addapeliquidity\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure />\n            </Route>\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/addapeliquidity/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact path=\"/create\">\n              <AddLiquidity />\n            </Route>\n            <Route exact path=\"/createape\">\n              <AddLiquidity2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA\">\n              <RedirectOldAddLiquidityPathStructure2 />\n            </Route>\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds />\n            </Route>\n            <Route exact path=\"/createape/:currencyIdA/:currencyIdB\">\n              <RedirectDuplicateTokenIds2 />\n            </Route>\n            <Route exact strict path=\"/remove/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure />\n            </Route>\n            <Route exact strict path=\"/removeape/:tokens\">\n              <RedirectOldRemoveLiquidityPathStructure2 />\n            </Route>\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity />\n            </Route>\n            <Route exact strict path=\"/removeape/:currencyIdA/:currencyIdB\">\n              <RemoveLiquidity2 />\n            </Route>\n\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/pool2\">\n              <Redirect to=\"/apeliquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ApplicationUpdater from './state/application/updater'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <ApplicationUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}